import {
  require_react_dom
} from "./chunk-XH46QHGM.js";
import {
  __commonJS,
  __toESM,
  require_react
} from "./chunk-QX2FIG4R.js";

// node_modules/.pnpm/use-sync-external-store@1.2.0_react@18.2.0/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js
var require_use_sync_external_store_shim_development = __commonJS({
  "node_modules/.pnpm/use-sync-external-store@1.2.0_react@18.2.0/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var React = require_react();
        var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function error(format) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format, args);
            }
          }
        }
        function printWarning(level, format, args) {
          {
            var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame.getStackAddendum();
            if (stack !== "") {
              format += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        function is(x, y) {
          return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;
        }
        var objectIs = typeof Object.is === "function" ? Object.is : is;
        var useState = React.useState, useEffect = React.useEffect, useLayoutEffect = React.useLayoutEffect, useDebugValue = React.useDebugValue;
        var didWarnOld18Alpha = false;
        var didWarnUncachedGetSnapshot = false;
        function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
          {
            if (!didWarnOld18Alpha) {
              if (React.startTransition !== void 0) {
                didWarnOld18Alpha = true;
                error("You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release.");
              }
            }
          }
          var value = getSnapshot();
          {
            if (!didWarnUncachedGetSnapshot) {
              var cachedValue = getSnapshot();
              if (!objectIs(value, cachedValue)) {
                error("The result of getSnapshot should be cached to avoid an infinite loop");
                didWarnUncachedGetSnapshot = true;
              }
            }
          }
          var _useState = useState({
            inst: {
              value,
              getSnapshot
            }
          }), inst = _useState[0].inst, forceUpdate = _useState[1];
          useLayoutEffect(function() {
            inst.value = value;
            inst.getSnapshot = getSnapshot;
            if (checkIfSnapshotChanged(inst)) {
              forceUpdate({
                inst
              });
            }
          }, [subscribe, value, getSnapshot]);
          useEffect(function() {
            if (checkIfSnapshotChanged(inst)) {
              forceUpdate({
                inst
              });
            }
            var handleStoreChange = function() {
              if (checkIfSnapshotChanged(inst)) {
                forceUpdate({
                  inst
                });
              }
            };
            return subscribe(handleStoreChange);
          }, [subscribe]);
          useDebugValue(value);
          return value;
        }
        function checkIfSnapshotChanged(inst) {
          var latestGetSnapshot = inst.getSnapshot;
          var prevValue = inst.value;
          try {
            var nextValue = latestGetSnapshot();
            return !objectIs(prevValue, nextValue);
          } catch (error2) {
            return true;
          }
        }
        function useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {
          return getSnapshot();
        }
        var canUseDOM = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
        var isServerEnvironment = !canUseDOM;
        var shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;
        var useSyncExternalStore$2 = React.useSyncExternalStore !== void 0 ? React.useSyncExternalStore : shim;
        exports.useSyncExternalStore = useSyncExternalStore$2;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/.pnpm/use-sync-external-store@1.2.0_react@18.2.0/node_modules/use-sync-external-store/shim/index.js
var require_shim = __commonJS({
  "node_modules/.pnpm/use-sync-external-store@1.2.0_react@18.2.0/node_modules/use-sync-external-store/shim/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_use_sync_external_store_shim_development();
    }
  }
});

// node_modules/.pnpm/@react-stately+utils@3.7.0_react@18.2.0/node_modules/@react-stately/utils/dist/module.js
var import_react = __toESM(require_react());
function $458b0a5536c1a7cf$export$40bfa8c7b0832715(value, defaultValue, onChange) {
  let [stateValue, setStateValue] = (0, import_react.useState)(value || defaultValue);
  let isControlledRef = (0, import_react.useRef)(value !== void 0);
  let isControlled = value !== void 0;
  (0, import_react.useEffect)(() => {
    let wasControlled = isControlledRef.current;
    if (wasControlled !== isControlled)
      console.warn(`WARN: A component changed from ${wasControlled ? "controlled" : "uncontrolled"} to ${isControlled ? "controlled" : "uncontrolled"}.`);
    isControlledRef.current = isControlled;
  }, [
    isControlled
  ]);
  let currentValue = isControlled ? value : stateValue;
  let setValue = (0, import_react.useCallback)((value2, ...args) => {
    let onChangeCaller = (value3, ...onChangeArgs) => {
      if (onChange) {
        if (!Object.is(currentValue, value3))
          onChange(value3, ...onChangeArgs);
      }
      if (!isControlled)
        currentValue = value3;
    };
    if (typeof value2 === "function") {
      console.warn("We can not support a function callback. See Github Issues for details https://github.com/adobe/react-spectrum/issues/2320");
      let updateFunction = (oldValue, ...functionArgs) => {
        let interceptedValue = value2(isControlled ? currentValue : oldValue, ...functionArgs);
        onChangeCaller(interceptedValue, ...args);
        if (!isControlled)
          return interceptedValue;
        return oldValue;
      };
      setStateValue(updateFunction);
    } else {
      if (!isControlled)
        setStateValue(value2);
      onChangeCaller(value2, ...args);
    }
  }, [
    isControlled,
    currentValue,
    onChange
  ]);
  return [
    currentValue,
    setValue
  ];
}
function $9446cca9a3875146$export$7d15b64cf5a3a4c4(value, min = -Infinity, max = Infinity) {
  let newValue = Math.min(Math.max(value, min), max);
  return newValue;
}
function $9446cca9a3875146$export$cb6e0bb50bc19463(value, min, max, step) {
  let remainder = (value - (isNaN(min) ? 0 : min)) % step;
  let snappedValue = Math.abs(remainder) * 2 >= step ? value + Math.sign(remainder) * (step - Math.abs(remainder)) : value - remainder;
  if (!isNaN(min)) {
    if (snappedValue < min)
      snappedValue = min;
    else if (!isNaN(max) && snappedValue > max)
      snappedValue = min + Math.floor((max - min) / step) * step;
  } else if (!isNaN(max) && snappedValue > max)
    snappedValue = Math.floor(max / step) * step;
  let string = step.toString();
  let index = string.indexOf(".");
  let precision = index >= 0 ? string.length - index : 0;
  if (precision > 0) {
    let pow = Math.pow(10, precision);
    snappedValue = Math.round(snappedValue * pow) / pow;
  }
  return snappedValue;
}

// node_modules/.pnpm/@react-aria+utils@3.19.0_react@18.2.0/node_modules/@react-aria/utils/dist/module.js
var import_react3 = __toESM(require_react());

// node_modules/.pnpm/@react-aria+ssr@3.7.1_react@18.2.0/node_modules/@react-aria/ssr/dist/module.js
var import_react2 = __toESM(require_react());
var $b5e257d569688ac6$var$defaultContext = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0,
  isSSR: false
};
var $b5e257d569688ac6$var$SSRContext = (0, import_react2.default).createContext($b5e257d569688ac6$var$defaultContext);
function $b5e257d569688ac6$var$LegacySSRProvider(props) {
  let cur = (0, import_react2.useContext)($b5e257d569688ac6$var$SSRContext);
  let counter = $b5e257d569688ac6$var$useCounter(cur === $b5e257d569688ac6$var$defaultContext);
  let [isSSR, setIsSSR] = (0, import_react2.useState)(true);
  let value = (0, import_react2.useMemo)(() => ({
    // If this is the first SSRProvider, start with an empty string prefix, otherwise
    // append and increment the counter.
    prefix: cur === $b5e257d569688ac6$var$defaultContext ? "" : `${cur.prefix}-${counter}`,
    current: 0,
    isSSR
  }), [
    cur,
    counter,
    isSSR
  ]);
  if (typeof document !== "undefined")
    (0, import_react2.useLayoutEffect)(() => {
      setIsSSR(false);
    }, []);
  return (0, import_react2.default).createElement($b5e257d569688ac6$var$SSRContext.Provider, {
    value
  }, props.children);
}
var $b5e257d569688ac6$var$warnedAboutSSRProvider = false;
function $b5e257d569688ac6$export$9f8ac96af4b1b2ae(props) {
  if (typeof (0, import_react2.default)["useId"] === "function") {
    if (!$b5e257d569688ac6$var$warnedAboutSSRProvider) {
      console.warn("In React 18, SSRProvider is not necessary and is a noop. You can remove it from your app.");
      $b5e257d569688ac6$var$warnedAboutSSRProvider = true;
    }
    return (0, import_react2.default).createElement((0, import_react2.default).Fragment, null, props.children);
  }
  return (0, import_react2.default).createElement($b5e257d569688ac6$var$LegacySSRProvider, props);
}
var $b5e257d569688ac6$var$canUseDOM = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);
var $b5e257d569688ac6$var$componentIds = /* @__PURE__ */ new WeakMap();
function $b5e257d569688ac6$var$useCounter(isDisabled = false) {
  let ctx = (0, import_react2.useContext)($b5e257d569688ac6$var$SSRContext);
  let ref = (0, import_react2.useRef)(null);
  if (ref.current === null && !isDisabled) {
    var _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner;
    let currentOwner = (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = (0, import_react2.default).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === void 0 ? void 0 : (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner = _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner === void 0 ? void 0 : _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner.current;
    if (currentOwner) {
      let prevComponentValue = $b5e257d569688ac6$var$componentIds.get(currentOwner);
      if (prevComponentValue == null)
        $b5e257d569688ac6$var$componentIds.set(currentOwner, {
          id: ctx.current,
          state: currentOwner.memoizedState
        });
      else if (currentOwner.memoizedState !== prevComponentValue.state) {
        ctx.current = prevComponentValue.id;
        $b5e257d569688ac6$var$componentIds.delete(currentOwner);
      }
    }
    ref.current = ++ctx.current;
  }
  return ref.current;
}
function $b5e257d569688ac6$var$useLegacySSRSafeId(defaultId) {
  let ctx = (0, import_react2.useContext)($b5e257d569688ac6$var$SSRContext);
  if (ctx === $b5e257d569688ac6$var$defaultContext && !$b5e257d569688ac6$var$canUseDOM)
    console.warn("When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.");
  let counter = $b5e257d569688ac6$var$useCounter(!!defaultId);
  let prefix = ctx === $b5e257d569688ac6$var$defaultContext && false ? "react-aria" : `react-aria${ctx.prefix}`;
  return defaultId || `${prefix}-${counter}`;
}
function $b5e257d569688ac6$var$useModernSSRSafeId(defaultId) {
  let id = (0, import_react2.default).useId();
  let [didSSR] = (0, import_react2.useState)($b5e257d569688ac6$export$535bd6ca7f90a273());
  let prefix = didSSR || false ? "react-aria" : `react-aria${$b5e257d569688ac6$var$defaultContext.prefix}`;
  return defaultId || `${prefix}-${id}`;
}
var $b5e257d569688ac6$export$619500959fc48b26 = typeof (0, import_react2.default)["useId"] === "function" ? $b5e257d569688ac6$var$useModernSSRSafeId : $b5e257d569688ac6$var$useLegacySSRSafeId;
function $b5e257d569688ac6$var$getSnapshot() {
  return false;
}
function $b5e257d569688ac6$var$getServerSnapshot() {
  return true;
}
function $b5e257d569688ac6$var$subscribe(onStoreChange) {
  return () => {
  };
}
function $b5e257d569688ac6$export$535bd6ca7f90a273() {
  if (typeof (0, import_react2.default)["useSyncExternalStore"] === "function")
    return (0, import_react2.default)["useSyncExternalStore"]($b5e257d569688ac6$var$subscribe, $b5e257d569688ac6$var$getSnapshot, $b5e257d569688ac6$var$getServerSnapshot);
  let cur = (0, import_react2.useContext)($b5e257d569688ac6$var$SSRContext);
  return cur.isSSR;
}

// node_modules/.pnpm/clsx@1.2.1/node_modules/clsx/dist/clsx.m.js
function r(e) {
  var t, f, n = "";
  if ("string" == typeof e || "number" == typeof e)
    n += e;
  else if ("object" == typeof e)
    if (Array.isArray(e))
      for (t = 0; t < e.length; t++)
        e[t] && (f = r(e[t])) && (n && (n += " "), n += f);
    else
      for (t in e)
        e[t] && (n && (n += " "), n += t);
  return n;
}
function clsx() {
  for (var e, t, f = 0, n = ""; f < arguments.length; )
    (e = arguments[f++]) && (t = r(e)) && (n && (n += " "), n += t);
  return n;
}
var clsx_m_default = clsx;

// node_modules/.pnpm/@react-aria+utils@3.19.0_react@18.2.0/node_modules/@react-aria/utils/dist/module.js
var $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c = typeof document !== "undefined" ? (0, import_react3.default).useLayoutEffect : () => {
};
function $1dbecbe27a04f9af$export$14d238f342723f25(defaultValue) {
  let [value, setValue] = (0, import_react3.useState)(defaultValue);
  let valueRef = (0, import_react3.useRef)(value);
  let effect = (0, import_react3.useRef)(null);
  let nextIter = (0, import_react3.useCallback)(() => {
    let newValue = effect.current.next();
    while (!newValue.done && valueRef.current === newValue.value)
      newValue = effect.current.next();
    if (newValue.done) {
      effect.current = null;
      return;
    }
    setValue(newValue.value);
    valueRef.current = newValue.value;
  }, [
    setValue,
    valueRef,
    effect
  ]);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (effect.current)
      nextIter();
  });
  let queue = (0, import_react3.useCallback)((fn) => {
    effect.current = fn(valueRef.current);
    nextIter();
  }, [
    nextIter,
    effect,
    valueRef
  ]);
  return [
    value,
    queue
  ];
}
var $bdb11010cef70236$var$idsUpdaterMap = /* @__PURE__ */ new Map();
function $bdb11010cef70236$export$f680877a34711e37(defaultId) {
  let [value, setValue] = (0, import_react3.useState)(defaultId);
  let nextId = (0, import_react3.useRef)(null);
  let res = (0, $b5e257d569688ac6$export$619500959fc48b26)(value);
  let updateValue = (0, import_react3.useCallback)((val) => {
    nextId.current = val;
  }, []);
  $bdb11010cef70236$var$idsUpdaterMap.set(res, updateValue);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    let r2 = res;
    return () => {
      $bdb11010cef70236$var$idsUpdaterMap.delete(r2);
    };
  }, [
    res
  ]);
  (0, import_react3.useEffect)(() => {
    let newId = nextId.current;
    if (newId) {
      nextId.current = null;
      setValue(newId);
    }
  });
  return res;
}
function $bdb11010cef70236$export$cd8c9cb68f842629(idA, idB) {
  if (idA === idB)
    return idA;
  let setIdA = $bdb11010cef70236$var$idsUpdaterMap.get(idA);
  if (setIdA) {
    setIdA(idB);
    return idB;
  }
  let setIdB = $bdb11010cef70236$var$idsUpdaterMap.get(idB);
  if (setIdB) {
    setIdB(idA);
    return idA;
  }
  return idB;
}
function $bdb11010cef70236$export$b4cc09c592e8fdb8(depArray = []) {
  let id = $bdb11010cef70236$export$f680877a34711e37();
  let [resolvedId, setResolvedId] = (0, $1dbecbe27a04f9af$export$14d238f342723f25)(id);
  let updateId = (0, import_react3.useCallback)(() => {
    setResolvedId(function* () {
      yield id;
      yield document.getElementById(id) ? id : void 0;
    });
  }, [
    id,
    setResolvedId
  ]);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(updateId, [
    id,
    updateId,
    ...depArray
  ]);
  return resolvedId;
}
function $ff5963eb1fccf552$export$e08e3b67e392101e(...callbacks) {
  return (...args) => {
    for (let callback of callbacks)
      if (typeof callback === "function")
        callback(...args);
  };
}
function $3ef42575df84b30b$export$9d1611c77c2fe928(...args) {
  let result = {
    ...args[0]
  };
  for (let i = 1; i < args.length; i++) {
    let props = args[i];
    for (let key in props) {
      let a = result[key];
      let b = props[key];
      if (typeof a === "function" && typeof b === "function" && // This is a lot faster than a regex.
      key[0] === "o" && key[1] === "n" && key.charCodeAt(2) >= /* 'A' */
      65 && key.charCodeAt(2) <= /* 'Z' */
      90)
        result[key] = (0, $ff5963eb1fccf552$export$e08e3b67e392101e)(a, b);
      else if ((key === "className" || key === "UNSAFE_className") && typeof a === "string" && typeof b === "string")
        result[key] = (0, clsx_m_default)(a, b);
      else if (key === "id" && a && b)
        result.id = (0, $bdb11010cef70236$export$cd8c9cb68f842629)(a, b);
      else
        result[key] = b !== void 0 ? b : a;
    }
  }
  return result;
}
function $5dc95899b306f630$export$c9058316764c140e(...refs) {
  if (refs.length === 1)
    return refs[0];
  return (value) => {
    for (let ref of refs) {
      if (typeof ref === "function")
        ref(value);
      else if (ref != null)
        ref.current = value;
    }
  };
}
var $65484d02dcb7eb3e$var$DOMPropNames = /* @__PURE__ */ new Set([
  "id"
]);
var $65484d02dcb7eb3e$var$labelablePropNames = /* @__PURE__ */ new Set([
  "aria-label",
  "aria-labelledby",
  "aria-describedby",
  "aria-details"
]);
var $65484d02dcb7eb3e$var$propRe = /^(data-.*)$/;
function $65484d02dcb7eb3e$export$457c3d6518dd4c6f(props, opts = {}) {
  let { labelable, propNames } = opts;
  let filteredProps = {};
  for (const prop in props)
    if (Object.prototype.hasOwnProperty.call(props, prop) && ($65484d02dcb7eb3e$var$DOMPropNames.has(prop) || labelable && $65484d02dcb7eb3e$var$labelablePropNames.has(prop) || (propNames === null || propNames === void 0 ? void 0 : propNames.has(prop)) || $65484d02dcb7eb3e$var$propRe.test(prop)))
      filteredProps[prop] = props[prop];
  return filteredProps;
}
function $7215afc6de606d6b$export$de79e2c695e052f3(element) {
  if ($7215afc6de606d6b$var$supportsPreventScroll())
    element.focus({
      preventScroll: true
    });
  else {
    let scrollableElements = $7215afc6de606d6b$var$getScrollableElements(element);
    element.focus();
    $7215afc6de606d6b$var$restoreScrollPosition(scrollableElements);
  }
}
var $7215afc6de606d6b$var$supportsPreventScrollCached = null;
function $7215afc6de606d6b$var$supportsPreventScroll() {
  if ($7215afc6de606d6b$var$supportsPreventScrollCached == null) {
    $7215afc6de606d6b$var$supportsPreventScrollCached = false;
    try {
      var focusElem = document.createElement("div");
      focusElem.focus({
        get preventScroll() {
          $7215afc6de606d6b$var$supportsPreventScrollCached = true;
          return true;
        }
      });
    } catch (e) {
    }
  }
  return $7215afc6de606d6b$var$supportsPreventScrollCached;
}
function $7215afc6de606d6b$var$getScrollableElements(element) {
  var parent = element.parentNode;
  var scrollableElements = [];
  var rootScrollingElement = document.scrollingElement || document.documentElement;
  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth)
      scrollableElements.push({
        element: parent,
        scrollTop: parent.scrollTop,
        scrollLeft: parent.scrollLeft
      });
    parent = parent.parentNode;
  }
  if (rootScrollingElement instanceof HTMLElement)
    scrollableElements.push({
      element: rootScrollingElement,
      scrollTop: rootScrollingElement.scrollTop,
      scrollLeft: rootScrollingElement.scrollLeft
    });
  return scrollableElements;
}
function $7215afc6de606d6b$var$restoreScrollPosition(scrollableElements) {
  for (let { element, scrollTop, scrollLeft } of scrollableElements) {
    element.scrollTop = scrollTop;
    element.scrollLeft = scrollLeft;
  }
}
var $bbed8b41f857bcc0$var$transitionsByElement = /* @__PURE__ */ new Map();
var $bbed8b41f857bcc0$var$transitionCallbacks = /* @__PURE__ */ new Set();
function $bbed8b41f857bcc0$var$setupGlobalEvents() {
  if (typeof window === "undefined")
    return;
  let onTransitionStart = (e) => {
    let transitions = $bbed8b41f857bcc0$var$transitionsByElement.get(e.target);
    if (!transitions) {
      transitions = /* @__PURE__ */ new Set();
      $bbed8b41f857bcc0$var$transitionsByElement.set(e.target, transitions);
      e.target.addEventListener("transitioncancel", onTransitionEnd);
    }
    transitions.add(e.propertyName);
  };
  let onTransitionEnd = (e) => {
    let properties = $bbed8b41f857bcc0$var$transitionsByElement.get(e.target);
    if (!properties)
      return;
    properties.delete(e.propertyName);
    if (properties.size === 0) {
      e.target.removeEventListener("transitioncancel", onTransitionEnd);
      $bbed8b41f857bcc0$var$transitionsByElement.delete(e.target);
    }
    if ($bbed8b41f857bcc0$var$transitionsByElement.size === 0) {
      for (let cb of $bbed8b41f857bcc0$var$transitionCallbacks)
        cb();
      $bbed8b41f857bcc0$var$transitionCallbacks.clear();
    }
  };
  document.body.addEventListener("transitionrun", onTransitionStart);
  document.body.addEventListener("transitionend", onTransitionEnd);
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $bbed8b41f857bcc0$var$setupGlobalEvents();
  else
    document.addEventListener("DOMContentLoaded", $bbed8b41f857bcc0$var$setupGlobalEvents);
}
function $bbed8b41f857bcc0$export$24490316f764c430(fn) {
  requestAnimationFrame(() => {
    if ($bbed8b41f857bcc0$var$transitionsByElement.size === 0)
      fn();
    else
      $bbed8b41f857bcc0$var$transitionCallbacks.add(fn);
  });
}
function $03deb23ff14920c4$export$4eaf04e54aa8eed6() {
  let globalListeners = (0, import_react3.useRef)(/* @__PURE__ */ new Map());
  let addGlobalListener = (0, import_react3.useCallback)((eventTarget, type, listener, options) => {
    let fn = (options === null || options === void 0 ? void 0 : options.once) ? (...args) => {
      globalListeners.current.delete(listener);
      listener(...args);
    } : listener;
    globalListeners.current.set(listener, {
      type,
      eventTarget,
      fn,
      options
    });
    eventTarget.addEventListener(type, listener, options);
  }, []);
  let removeGlobalListener = (0, import_react3.useCallback)((eventTarget, type, listener, options) => {
    var _globalListeners_current_get;
    let fn = ((_globalListeners_current_get = globalListeners.current.get(listener)) === null || _globalListeners_current_get === void 0 ? void 0 : _globalListeners_current_get.fn) || listener;
    eventTarget.removeEventListener(type, fn, options);
    globalListeners.current.delete(listener);
  }, []);
  let removeAllGlobalListeners = (0, import_react3.useCallback)(() => {
    globalListeners.current.forEach((value, key) => {
      removeGlobalListener(value.eventTarget, value.type, key, value.options);
    });
  }, [
    removeGlobalListener
  ]);
  (0, import_react3.useEffect)(() => {
    return removeAllGlobalListeners;
  }, [
    removeAllGlobalListeners
  ]);
  return {
    addGlobalListener,
    removeGlobalListener,
    removeAllGlobalListeners
  };
}
function $313b98861ee5dd6c$export$d6875122194c7b44(props, defaultLabel) {
  let { id, "aria-label": label, "aria-labelledby": labelledBy } = props;
  id = (0, $bdb11010cef70236$export$f680877a34711e37)(id);
  if (labelledBy && label) {
    let ids = /* @__PURE__ */ new Set([
      id,
      ...labelledBy.trim().split(/\s+/)
    ]);
    labelledBy = [
      ...ids
    ].join(" ");
  } else if (labelledBy)
    labelledBy = labelledBy.trim().split(/\s+/).join(" ");
  if (!label && !labelledBy && defaultLabel)
    label = defaultLabel;
  return {
    id,
    "aria-label": label,
    "aria-labelledby": labelledBy
  };
}
function $df56164dff5785e2$export$4338b53315abf666(forwardedRef) {
  const objRef = (0, import_react3.useRef)();
  return (0, import_react3.useMemo)(() => ({
    get current() {
      return objRef.current;
    },
    set current(value) {
      objRef.current = value;
      if (typeof forwardedRef === "function")
        forwardedRef(value);
      else if (forwardedRef)
        forwardedRef.current = value;
    }
  }), [
    forwardedRef
  ]);
}
function $4f58c5f72bcf79f7$export$496315a1608d9602(effect, dependencies) {
  const isInitialMount = (0, import_react3.useRef)(true);
  const lastDeps = (0, import_react3.useRef)(null);
  (0, import_react3.useEffect)(() => {
    isInitialMount.current = true;
    return () => {
      isInitialMount.current = false;
    };
  }, []);
  (0, import_react3.useEffect)(() => {
    if (isInitialMount.current)
      isInitialMount.current = false;
    else if (!lastDeps.current || dependencies.some((dep, i) => !Object.is(dep, lastDeps[i])))
      effect();
    lastDeps.current = dependencies;
  }, dependencies);
}
function $9daab02d461809db$var$hasResizeObserver() {
  return typeof window.ResizeObserver !== "undefined";
}
function $9daab02d461809db$export$683480f191c0e3ea(options) {
  const { ref, onResize } = options;
  (0, import_react3.useEffect)(() => {
    let element = ref === null || ref === void 0 ? void 0 : ref.current;
    if (!element)
      return;
    if (!$9daab02d461809db$var$hasResizeObserver()) {
      window.addEventListener("resize", onResize, false);
      return () => {
        window.removeEventListener("resize", onResize, false);
      };
    } else {
      const resizeObserverInstance = new window.ResizeObserver((entries) => {
        if (!entries.length)
          return;
        onResize();
      });
      resizeObserverInstance.observe(element);
      return () => {
        if (element)
          resizeObserverInstance.unobserve(element);
      };
    }
  }, [
    onResize,
    ref
  ]);
}
function $e7801be82b4b2a53$export$4debdb1a3f0fa79e(context, ref) {
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (context && context.ref && ref) {
      context.ref.current = ref.current;
      return () => {
        context.ref.current = null;
      };
    }
  }, [
    context,
    ref
  ]);
}
function $62d8ded9296f3872$export$cfa2225e87938781(node) {
  if ($62d8ded9296f3872$export$2bb74740c4e19def(node))
    node = node.parentElement;
  while (node && !$62d8ded9296f3872$export$2bb74740c4e19def(node))
    node = node.parentElement;
  return node || document.scrollingElement || document.documentElement;
}
function $62d8ded9296f3872$export$2bb74740c4e19def(node) {
  let style = window.getComputedStyle(node);
  return /(auto|scroll)/.test(style.overflow + style.overflowX + style.overflowY);
}
var $5df64b3807dc15ee$var$visualViewport = typeof document !== "undefined" && window.visualViewport;
function $5df64b3807dc15ee$export$d699905dd57c73ca() {
  let [size, setSize] = (0, import_react3.useState)(() => $5df64b3807dc15ee$var$getViewportSize());
  (0, import_react3.useEffect)(() => {
    let onResize = () => {
      setSize((size2) => {
        let newSize = $5df64b3807dc15ee$var$getViewportSize();
        if (newSize.width === size2.width && newSize.height === size2.height)
          return size2;
        return newSize;
      });
    };
    if (!$5df64b3807dc15ee$var$visualViewport)
      window.addEventListener("resize", onResize);
    else
      $5df64b3807dc15ee$var$visualViewport.addEventListener("resize", onResize);
    return () => {
      if (!$5df64b3807dc15ee$var$visualViewport)
        window.removeEventListener("resize", onResize);
      else
        $5df64b3807dc15ee$var$visualViewport.removeEventListener("resize", onResize);
    };
  }, []);
  return size;
}
function $5df64b3807dc15ee$var$getViewportSize() {
  return {
    width: ($5df64b3807dc15ee$var$visualViewport === null || $5df64b3807dc15ee$var$visualViewport === void 0 ? void 0 : $5df64b3807dc15ee$var$visualViewport.width) || window.innerWidth,
    height: ($5df64b3807dc15ee$var$visualViewport === null || $5df64b3807dc15ee$var$visualViewport === void 0 ? void 0 : $5df64b3807dc15ee$var$visualViewport.height) || window.innerHeight
  };
}
var $ef06256079686ba0$var$descriptionId = 0;
var $ef06256079686ba0$var$descriptionNodes = /* @__PURE__ */ new Map();
function $ef06256079686ba0$export$f8aeda7b10753fa1(description) {
  let [id, setId] = (0, import_react3.useState)(void 0);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (!description)
      return;
    let desc = $ef06256079686ba0$var$descriptionNodes.get(description);
    if (!desc) {
      let id2 = `react-aria-description-${$ef06256079686ba0$var$descriptionId++}`;
      setId(id2);
      let node = document.createElement("div");
      node.id = id2;
      node.style.display = "none";
      node.textContent = description;
      document.body.appendChild(node);
      desc = {
        refCount: 0,
        element: node
      };
      $ef06256079686ba0$var$descriptionNodes.set(description, desc);
    } else
      setId(desc.element.id);
    desc.refCount++;
    return () => {
      if (--desc.refCount === 0) {
        desc.element.remove();
        $ef06256079686ba0$var$descriptionNodes.delete(description);
      }
    };
  }, [
    description
  ]);
  return {
    "aria-describedby": description ? id : void 0
  };
}
function $c87311424ea30a05$var$testUserAgent(re) {
  var _window_navigator_userAgentData;
  if (typeof window === "undefined" || window.navigator == null)
    return false;
  return ((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.brands.some((brand) => re.test(brand.brand))) || re.test(window.navigator.userAgent);
}
function $c87311424ea30a05$var$testPlatform(re) {
  var _window_navigator_userAgentData;
  return typeof window !== "undefined" && window.navigator != null ? re.test(((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.platform) || window.navigator.platform) : false;
}
function $c87311424ea30a05$export$9ac100e40613ea10() {
  return $c87311424ea30a05$var$testPlatform(/^Mac/i);
}
function $c87311424ea30a05$export$186c6964ca17d99() {
  return $c87311424ea30a05$var$testPlatform(/^iPhone/i);
}
function $c87311424ea30a05$export$7bef049ce92e4224() {
  return $c87311424ea30a05$var$testPlatform(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
  $c87311424ea30a05$export$9ac100e40613ea10() && navigator.maxTouchPoints > 1;
}
function $c87311424ea30a05$export$fedb369cb70207f1() {
  return $c87311424ea30a05$export$186c6964ca17d99() || $c87311424ea30a05$export$7bef049ce92e4224();
}
function $c87311424ea30a05$export$e1865c3bedcd822b() {
  return $c87311424ea30a05$export$9ac100e40613ea10() || $c87311424ea30a05$export$fedb369cb70207f1();
}
function $c87311424ea30a05$export$78551043582a6a98() {
  return $c87311424ea30a05$var$testUserAgent(/AppleWebKit/i) && !$c87311424ea30a05$export$6446a186d09e379e();
}
function $c87311424ea30a05$export$6446a186d09e379e() {
  return $c87311424ea30a05$var$testUserAgent(/Chrome/i);
}
function $c87311424ea30a05$export$a11b0059900ceec8() {
  return $c87311424ea30a05$var$testUserAgent(/Android/i);
}
function $8ae05eaa5c114e9c$export$7f54fc3180508a52(fn) {
  const ref = (0, import_react3.useRef)(null);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    ref.current = fn;
  }, [
    fn
  ]);
  return (0, import_react3.useCallback)((...args) => {
    const f = ref.current;
    return f(...args);
  }, []);
}
function $e9faafb641e167db$export$90fc3a17d93f704c(ref, event, handler, options) {
  let handleEvent = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)(handler);
  let isDisabled = handler == null;
  (0, import_react3.useEffect)(() => {
    if (isDisabled)
      return;
    let element = ref.current;
    element.addEventListener(event, handleEvent, options);
    return () => {
      element.removeEventListener(event, handleEvent, options);
    };
  }, [
    ref,
    event,
    options,
    isDisabled,
    handleEvent
  ]);
}
function $2f04cbc44ee30ce0$export$53a0910f038337bd(scrollView, element) {
  let offsetX = $2f04cbc44ee30ce0$var$relativeOffset(scrollView, element, "left");
  let offsetY = $2f04cbc44ee30ce0$var$relativeOffset(scrollView, element, "top");
  let width = element.offsetWidth;
  let height = element.offsetHeight;
  let x = scrollView.scrollLeft;
  let y = scrollView.scrollTop;
  let { borderTopWidth, borderLeftWidth } = getComputedStyle(scrollView);
  let borderAdjustedX = scrollView.scrollLeft + parseInt(borderLeftWidth, 10);
  let borderAdjustedY = scrollView.scrollTop + parseInt(borderTopWidth, 10);
  let maxX = borderAdjustedX + scrollView.clientWidth;
  let maxY = borderAdjustedY + scrollView.clientHeight;
  if (offsetX <= x)
    x = offsetX - parseInt(borderLeftWidth, 10);
  else if (offsetX + width > maxX)
    x += offsetX + width - maxX;
  if (offsetY <= borderAdjustedY)
    y = offsetY - parseInt(borderTopWidth, 10);
  else if (offsetY + height > maxY)
    y += offsetY + height - maxY;
  scrollView.scrollLeft = x;
  scrollView.scrollTop = y;
}
function $2f04cbc44ee30ce0$var$relativeOffset(ancestor, child, axis) {
  const prop = axis === "left" ? "offsetLeft" : "offsetTop";
  let sum = 0;
  while (child.offsetParent) {
    sum += child[prop];
    if (child.offsetParent === ancestor)
      break;
    else if (child.offsetParent.contains(ancestor)) {
      sum -= ancestor[prop];
      break;
    }
    child = child.offsetParent;
  }
  return sum;
}
function $2f04cbc44ee30ce0$export$c826860796309d1b(targetElement, opts) {
  if (document.contains(targetElement)) {
    let root = document.scrollingElement || document.documentElement;
    let isScrollPrevented = window.getComputedStyle(root).overflow === "hidden";
    if (!isScrollPrevented) {
      var _targetElement_scrollIntoView;
      let { left: originalLeft, top: originalTop } = targetElement.getBoundingClientRect();
      targetElement === null || targetElement === void 0 ? void 0 : (_targetElement_scrollIntoView = targetElement.scrollIntoView) === null || _targetElement_scrollIntoView === void 0 ? void 0 : _targetElement_scrollIntoView.call(targetElement, {
        block: "nearest"
      });
      let { left: newLeft, top: newTop } = targetElement.getBoundingClientRect();
      if (Math.abs(originalLeft - newLeft) > 1 || Math.abs(originalTop - newTop) > 1) {
        var _opts_containingElement, _opts_containingElement_scrollIntoView, _targetElement_scrollIntoView1;
        opts === null || opts === void 0 ? void 0 : (_opts_containingElement = opts.containingElement) === null || _opts_containingElement === void 0 ? void 0 : (_opts_containingElement_scrollIntoView = _opts_containingElement.scrollIntoView) === null || _opts_containingElement_scrollIntoView === void 0 ? void 0 : _opts_containingElement_scrollIntoView.call(_opts_containingElement, {
          block: "center",
          inline: "center"
        });
        (_targetElement_scrollIntoView1 = targetElement.scrollIntoView) === null || _targetElement_scrollIntoView1 === void 0 ? void 0 : _targetElement_scrollIntoView1.call(targetElement, {
          block: "nearest"
        });
      }
    } else {
      let scrollParent = (0, $62d8ded9296f3872$export$cfa2225e87938781)(targetElement);
      while (targetElement && scrollParent && targetElement !== root && scrollParent !== root) {
        $2f04cbc44ee30ce0$export$53a0910f038337bd(scrollParent, targetElement);
        targetElement = scrollParent;
        scrollParent = (0, $62d8ded9296f3872$export$cfa2225e87938781)(targetElement);
      }
    }
  }
}
function $6a7db85432448f7f$export$60278871457622de(event) {
  if (event.mozInputSource === 0 && event.isTrusted)
    return true;
  if ((0, $c87311424ea30a05$export$a11b0059900ceec8)() && event.pointerType)
    return event.type === "click" && event.buttons === 1;
  return event.detail === 0 && !event.pointerType;
}
function $6a7db85432448f7f$export$29bf1b5f2c56cf63(event) {
  return event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === "mouse";
}
function $5a387cc49350e6db$export$722debc0e56fea39(value, isEqual) {
  let lastValue = (0, import_react3.useRef)(null);
  if (value && lastValue.current && isEqual(value, lastValue.current))
    value = lastValue.current;
  lastValue.current = value;
  return value;
}
function $99facab73266f662$export$5add1d006293d136(ref, initialValue, onReset) {
  let resetValue = (0, import_react3.useRef)(initialValue);
  let handleReset = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)(() => {
    if (onReset)
      onReset(resetValue.current);
  });
  (0, import_react3.useEffect)(() => {
    var _ref_current;
    let form = ref === null || ref === void 0 ? void 0 : (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.form;
    form === null || form === void 0 ? void 0 : form.addEventListener("reset", handleReset);
    return () => {
      form === null || form === void 0 ? void 0 : form.removeEventListener("reset", handleReset);
    };
  }, [
    ref,
    handleReset
  ]);
}

// node_modules/.pnpm/@react-aria+focus@3.14.0_react@18.2.0/node_modules/@react-aria/focus/dist/module.js
var import_react5 = __toESM(require_react());

// node_modules/.pnpm/@react-aria+interactions@3.17.0_react@18.2.0/node_modules/@react-aria/interactions/dist/module.js
var import_react4 = __toESM(require_react());

// node_modules/.pnpm/@swc+helpers@0.5.1/node_modules/@swc/helpers/esm/_class_apply_descriptor_get.js
function _class_apply_descriptor_get(receiver, descriptor) {
  if (descriptor.get)
    return descriptor.get.call(receiver);
  return descriptor.value;
}

// node_modules/.pnpm/@swc+helpers@0.5.1/node_modules/@swc/helpers/esm/_class_extract_field_descriptor.js
function _class_extract_field_descriptor(receiver, privateMap, action) {
  if (!privateMap.has(receiver))
    throw new TypeError("attempted to " + action + " private field on non-instance");
  return privateMap.get(receiver);
}

// node_modules/.pnpm/@swc+helpers@0.5.1/node_modules/@swc/helpers/esm/_class_private_field_get.js
function _class_private_field_get(receiver, privateMap) {
  var descriptor = _class_extract_field_descriptor(receiver, privateMap, "get");
  return _class_apply_descriptor_get(receiver, descriptor);
}

// node_modules/.pnpm/@swc+helpers@0.5.1/node_modules/@swc/helpers/esm/_check_private_redeclaration.js
function _check_private_redeclaration(obj, privateCollection) {
  if (privateCollection.has(obj)) {
    throw new TypeError("Cannot initialize the same private elements twice on an object");
  }
}

// node_modules/.pnpm/@swc+helpers@0.5.1/node_modules/@swc/helpers/esm/_class_private_field_init.js
function _class_private_field_init(obj, privateMap, value) {
  _check_private_redeclaration(obj, privateMap);
  privateMap.set(obj, value);
}

// node_modules/.pnpm/@swc+helpers@0.5.1/node_modules/@swc/helpers/esm/_class_apply_descriptor_set.js
function _class_apply_descriptor_set(receiver, descriptor, value) {
  if (descriptor.set)
    descriptor.set.call(receiver, value);
  else {
    if (!descriptor.writable) {
      throw new TypeError("attempted to set read only private field");
    }
    descriptor.value = value;
  }
}

// node_modules/.pnpm/@swc+helpers@0.5.1/node_modules/@swc/helpers/esm/_class_private_field_set.js
function _class_private_field_set(receiver, privateMap, value) {
  var descriptor = _class_extract_field_descriptor(receiver, privateMap, "set");
  _class_apply_descriptor_set(receiver, descriptor, value);
  return value;
}

// node_modules/.pnpm/@react-aria+interactions@3.17.0_react@18.2.0/node_modules/@react-aria/interactions/dist/module.js
var $14c0b72509d70225$var$state = "default";
var $14c0b72509d70225$var$savedUserSelect = "";
var $14c0b72509d70225$var$modifiedElementMap = /* @__PURE__ */ new WeakMap();
function $14c0b72509d70225$export$16a4697467175487(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f1)()) {
    if ($14c0b72509d70225$var$state === "default") {
      $14c0b72509d70225$var$savedUserSelect = document.documentElement.style.webkitUserSelect;
      document.documentElement.style.webkitUserSelect = "none";
    }
    $14c0b72509d70225$var$state = "disabled";
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    $14c0b72509d70225$var$modifiedElementMap.set(target, target.style.userSelect);
    target.style.userSelect = "none";
  }
}
function $14c0b72509d70225$export$b0d6fa1ab32e3295(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f1)()) {
    if ($14c0b72509d70225$var$state !== "disabled")
      return;
    $14c0b72509d70225$var$state = "restoring";
    setTimeout(() => {
      (0, $bbed8b41f857bcc0$export$24490316f764c430)(() => {
        if ($14c0b72509d70225$var$state === "restoring") {
          if (document.documentElement.style.webkitUserSelect === "none")
            document.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect || "";
          $14c0b72509d70225$var$savedUserSelect = "";
          $14c0b72509d70225$var$state = "default";
        }
      });
    }, 300);
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    if (target && $14c0b72509d70225$var$modifiedElementMap.has(target)) {
      let targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap.get(target);
      if (target.style.userSelect === "none")
        target.style.userSelect = targetOldUserSelect;
      if (target.getAttribute("style") === "")
        target.removeAttribute("style");
      $14c0b72509d70225$var$modifiedElementMap.delete(target);
    }
  }
}
var $ae1eeba8b9eafd08$export$5165eccb35aaadb5 = (0, import_react4.default).createContext(null);
$ae1eeba8b9eafd08$export$5165eccb35aaadb5.displayName = "PressResponderContext";
function $f6c31cce2adf654f$var$usePressResponderContext(props) {
  let context = (0, import_react4.useContext)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5));
  if (context) {
    let { register, ...contextProps } = context;
    props = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(contextProps, props);
    register();
  }
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e)(context, props.ref);
  return props;
}
var $f6c31cce2adf654f$var$_shouldStopPropagation = /* @__PURE__ */ new WeakMap();
var $f6c31cce2adf654f$var$PressEvent = class {
  continuePropagation() {
    (0, _class_private_field_set)(this, $f6c31cce2adf654f$var$_shouldStopPropagation, false);
  }
  get shouldStopPropagation() {
    return (0, _class_private_field_get)(this, $f6c31cce2adf654f$var$_shouldStopPropagation);
  }
  constructor(type, pointerType, originalEvent) {
    (0, _class_private_field_init)(this, $f6c31cce2adf654f$var$_shouldStopPropagation, {
      writable: true,
      value: void 0
    });
    (0, _class_private_field_set)(this, $f6c31cce2adf654f$var$_shouldStopPropagation, true);
    this.type = type;
    this.pointerType = pointerType;
    this.target = originalEvent.currentTarget;
    this.shiftKey = originalEvent.shiftKey;
    this.metaKey = originalEvent.metaKey;
    this.ctrlKey = originalEvent.ctrlKey;
    this.altKey = originalEvent.altKey;
  }
};
function $f6c31cce2adf654f$export$45712eceda6fad21(props) {
  let {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    isPressed: isPressedProp,
    preventFocusOnPress,
    shouldCancelOnPointerExit,
    allowTextSelectionOnPress,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ref: _,
    ...domProps
  } = $f6c31cce2adf654f$var$usePressResponderContext(props);
  let [isPressed, setPressed] = (0, import_react4.useState)(false);
  let ref = (0, import_react4.useRef)({
    isPressed: false,
    ignoreEmulatedMouseEvents: false,
    ignoreClickAfterPress: false,
    didFirePressStart: false,
    activePointerId: null,
    target: null,
    isOverTarget: false,
    pointerType: null
  });
  let { addGlobalListener, removeAllGlobalListeners } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  let triggerPressStart = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((originalEvent, pointerType) => {
    let state = ref.current;
    if (isDisabled || state.didFirePressStart)
      return;
    let shouldStopPropagation = true;
    if (onPressStart) {
      let event = new $f6c31cce2adf654f$var$PressEvent("pressstart", pointerType, originalEvent);
      onPressStart(event);
      shouldStopPropagation = event.shouldStopPropagation;
    }
    if (onPressChange)
      onPressChange(true);
    state.didFirePressStart = true;
    setPressed(true);
    return shouldStopPropagation;
  });
  let triggerPressEnd = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((originalEvent, pointerType, wasPressed = true) => {
    let state = ref.current;
    if (!state.didFirePressStart)
      return;
    state.ignoreClickAfterPress = true;
    state.didFirePressStart = false;
    let shouldStopPropagation = true;
    if (onPressEnd) {
      let event = new $f6c31cce2adf654f$var$PressEvent("pressend", pointerType, originalEvent);
      onPressEnd(event);
      shouldStopPropagation = event.shouldStopPropagation;
    }
    if (onPressChange)
      onPressChange(false);
    setPressed(false);
    if (onPress && wasPressed && !isDisabled) {
      let event = new $f6c31cce2adf654f$var$PressEvent("press", pointerType, originalEvent);
      onPress(event);
      shouldStopPropagation && (shouldStopPropagation = event.shouldStopPropagation);
    }
    return shouldStopPropagation;
  });
  let triggerPressUp = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((originalEvent, pointerType) => {
    if (isDisabled)
      return;
    if (onPressUp) {
      let event = new $f6c31cce2adf654f$var$PressEvent("pressup", pointerType, originalEvent);
      onPressUp(event);
      return event.shouldStopPropagation;
    }
    return true;
  });
  let cancel = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    let state = ref.current;
    if (state.isPressed) {
      if (state.isOverTarget)
        triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);
      state.isPressed = false;
      state.isOverTarget = false;
      state.activePointerId = null;
      state.pointerType = null;
      removeAllGlobalListeners();
      if (!allowTextSelectionOnPress)
        (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);
    }
  });
  let cancelOnPointerExit = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (shouldCancelOnPointerExit)
      cancel(e);
  });
  let pressProps = (0, import_react4.useMemo)(() => {
    let state = ref.current;
    let pressProps2 = {
      onKeyDown(e) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && e.currentTarget.contains(e.target)) {
          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e.target, e.key))
            e.preventDefault();
          let shouldStopPropagation = true;
          if (!state.isPressed && !e.repeat) {
            state.target = e.currentTarget;
            state.isPressed = true;
            shouldStopPropagation = triggerPressStart(e, "keyboard");
            addGlobalListener(document, "keyup", onKeyUp, false);
          }
          if (shouldStopPropagation)
            e.stopPropagation();
        } else if (e.key === "Enter" && $f6c31cce2adf654f$var$isHTMLAnchorLink(e.currentTarget))
          e.stopPropagation();
      },
      onKeyUp(e) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e.nativeEvent, e.currentTarget) && !e.repeat && e.currentTarget.contains(e.target))
          triggerPressUp($f6c31cce2adf654f$var$createEvent(state.target, e), "keyboard");
      },
      onClick(e) {
        if (e && !e.currentTarget.contains(e.target))
          return;
        if (e && e.button === 0) {
          let shouldStopPropagation = true;
          if (isDisabled)
            e.preventDefault();
          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === "virtual" || (0, $6a7db85432448f7f$export$60278871457622de)(e.nativeEvent))) {
            if (!isDisabled && !preventFocusOnPress)
              (0, $7215afc6de606d6b$export$de79e2c695e052f3)(e.currentTarget);
            let stopPressStart = triggerPressStart(e, "virtual");
            let stopPressUp = triggerPressUp(e, "virtual");
            let stopPressEnd = triggerPressEnd(e, "virtual");
            shouldStopPropagation = stopPressStart && stopPressUp && stopPressEnd;
          }
          state.ignoreEmulatedMouseEvents = false;
          state.ignoreClickAfterPress = false;
          if (shouldStopPropagation)
            e.stopPropagation();
        }
      }
    };
    let onKeyUp = (e) => {
      if (state.isPressed && $f6c31cce2adf654f$var$isValidKeyboardEvent(e, state.target)) {
        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e.target, e.key))
          e.preventDefault();
        state.isPressed = false;
        let target = e.target;
        let shouldStopPropagation = triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), "keyboard", state.target.contains(target));
        removeAllGlobalListeners();
        if (shouldStopPropagation)
          e.stopPropagation();
        if (state.target instanceof HTMLElement && state.target.contains(target) && ($f6c31cce2adf654f$var$isHTMLAnchorLink(state.target) || state.target.getAttribute("role") === "link"))
          state.target.click();
      }
    };
    if (typeof PointerEvent !== "undefined") {
      pressProps2.onPointerDown = (e) => {
        if (e.button !== 0 || !e.currentTarget.contains(e.target))
          return;
        if ((0, $6a7db85432448f7f$export$29bf1b5f2c56cf63)(e.nativeEvent)) {
          state.pointerType = "virtual";
          return;
        }
        if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget))
          e.preventDefault();
        state.pointerType = e.pointerType;
        let shouldStopPropagation = true;
        if (!state.isPressed) {
          state.isPressed = true;
          state.isOverTarget = true;
          state.activePointerId = e.pointerId;
          state.target = e.currentTarget;
          if (!isDisabled && !preventFocusOnPress)
            (0, $7215afc6de606d6b$export$de79e2c695e052f3)(e.currentTarget);
          if (!allowTextSelectionOnPress)
            (0, $14c0b72509d70225$export$16a4697467175487)(state.target);
          shouldStopPropagation = triggerPressStart(e, state.pointerType);
          addGlobalListener(document, "pointermove", onPointerMove, false);
          addGlobalListener(document, "pointerup", onPointerUp, false);
          addGlobalListener(document, "pointercancel", onPointerCancel, false);
        }
        if (shouldStopPropagation)
          e.stopPropagation();
      };
      pressProps2.onMouseDown = (e) => {
        if (!e.currentTarget.contains(e.target))
          return;
        if (e.button === 0) {
          if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget))
            e.preventDefault();
          e.stopPropagation();
        }
      };
      pressProps2.onPointerUp = (e) => {
        if (!e.currentTarget.contains(e.target) || state.pointerType === "virtual")
          return;
        if (e.button === 0 && $f6c31cce2adf654f$var$isOverTarget(e, e.currentTarget))
          triggerPressUp(e, state.pointerType || e.pointerType);
      };
      let onPointerMove = (e) => {
        if (e.pointerId !== state.activePointerId)
          return;
        if ($f6c31cce2adf654f$var$isOverTarget(e, state.target)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);
          cancelOnPointerExit(e);
        }
      };
      let onPointerUp = (e) => {
        if (e.pointerId === state.activePointerId && state.isPressed && e.button === 0) {
          if ($f6c31cce2adf654f$var$isOverTarget(e, state.target))
            triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);
          else if (state.isOverTarget)
            triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);
          state.isPressed = false;
          state.isOverTarget = false;
          state.activePointerId = null;
          state.pointerType = null;
          removeAllGlobalListeners();
          if (!allowTextSelectionOnPress)
            (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);
        }
      };
      let onPointerCancel = (e) => {
        cancel(e);
      };
      pressProps2.onDragStart = (e) => {
        if (!e.currentTarget.contains(e.target))
          return;
        cancel(e);
      };
    } else {
      pressProps2.onMouseDown = (e) => {
        if (e.button !== 0 || !e.currentTarget.contains(e.target))
          return;
        if ($f6c31cce2adf654f$var$shouldPreventDefault(e.currentTarget))
          e.preventDefault();
        if (state.ignoreEmulatedMouseEvents) {
          e.stopPropagation();
          return;
        }
        state.isPressed = true;
        state.isOverTarget = true;
        state.target = e.currentTarget;
        state.pointerType = (0, $6a7db85432448f7f$export$60278871457622de)(e.nativeEvent) ? "virtual" : "mouse";
        if (!isDisabled && !preventFocusOnPress)
          (0, $7215afc6de606d6b$export$de79e2c695e052f3)(e.currentTarget);
        let shouldStopPropagation = triggerPressStart(e, state.pointerType);
        if (shouldStopPropagation)
          e.stopPropagation();
        addGlobalListener(document, "mouseup", onMouseUp, false);
      };
      pressProps2.onMouseEnter = (e) => {
        if (!e.currentTarget.contains(e.target))
          return;
        let shouldStopPropagation = true;
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = true;
          shouldStopPropagation = triggerPressStart(e, state.pointerType);
        }
        if (shouldStopPropagation)
          e.stopPropagation();
      };
      pressProps2.onMouseLeave = (e) => {
        if (!e.currentTarget.contains(e.target))
          return;
        let shouldStopPropagation = true;
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = false;
          shouldStopPropagation = triggerPressEnd(e, state.pointerType, false);
          cancelOnPointerExit(e);
        }
        if (shouldStopPropagation)
          e.stopPropagation();
      };
      pressProps2.onMouseUp = (e) => {
        if (!e.currentTarget.contains(e.target))
          return;
        if (!state.ignoreEmulatedMouseEvents && e.button === 0)
          triggerPressUp(e, state.pointerType);
      };
      let onMouseUp = (e) => {
        if (e.button !== 0)
          return;
        state.isPressed = false;
        removeAllGlobalListeners();
        if (state.ignoreEmulatedMouseEvents) {
          state.ignoreEmulatedMouseEvents = false;
          return;
        }
        if ($f6c31cce2adf654f$var$isOverTarget(e, state.target))
          triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType);
        else if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e), state.pointerType, false);
        state.isOverTarget = false;
      };
      pressProps2.onTouchStart = (e) => {
        if (!e.currentTarget.contains(e.target))
          return;
        let touch = $f6c31cce2adf654f$var$getTouchFromEvent(e.nativeEvent);
        if (!touch)
          return;
        state.activePointerId = touch.identifier;
        state.ignoreEmulatedMouseEvents = true;
        state.isOverTarget = true;
        state.isPressed = true;
        state.target = e.currentTarget;
        state.pointerType = "touch";
        if (!isDisabled && !preventFocusOnPress)
          (0, $7215afc6de606d6b$export$de79e2c695e052f3)(e.currentTarget);
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$16a4697467175487)(state.target);
        let shouldStopPropagation = triggerPressStart(e, state.pointerType);
        if (shouldStopPropagation)
          e.stopPropagation();
        addGlobalListener(window, "scroll", onScroll, true);
      };
      pressProps2.onTouchMove = (e) => {
        if (!e.currentTarget.contains(e.target))
          return;
        if (!state.isPressed) {
          e.stopPropagation();
          return;
        }
        let touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);
        let shouldStopPropagation = true;
        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            shouldStopPropagation = triggerPressStart(e, state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          shouldStopPropagation = triggerPressEnd(e, state.pointerType, false);
          cancelOnPointerExit(e);
        }
        if (shouldStopPropagation)
          e.stopPropagation();
      };
      pressProps2.onTouchEnd = (e) => {
        if (!e.currentTarget.contains(e.target))
          return;
        if (!state.isPressed) {
          e.stopPropagation();
          return;
        }
        let touch = $f6c31cce2adf654f$var$getTouchById(e.nativeEvent, state.activePointerId);
        let shouldStopPropagation = true;
        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e.currentTarget)) {
          triggerPressUp(e, state.pointerType);
          shouldStopPropagation = triggerPressEnd(e, state.pointerType);
        } else if (state.isOverTarget)
          shouldStopPropagation = triggerPressEnd(e, state.pointerType, false);
        if (shouldStopPropagation)
          e.stopPropagation();
        state.isPressed = false;
        state.activePointerId = null;
        state.isOverTarget = false;
        state.ignoreEmulatedMouseEvents = true;
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);
        removeAllGlobalListeners();
      };
      pressProps2.onTouchCancel = (e) => {
        if (!e.currentTarget.contains(e.target))
          return;
        e.stopPropagation();
        if (state.isPressed)
          cancel(e);
      };
      let onScroll = (e) => {
        if (state.isPressed && e.target.contains(state.target))
          cancel({
            currentTarget: state.target,
            shiftKey: false,
            ctrlKey: false,
            metaKey: false,
            altKey: false
          });
      };
      pressProps2.onDragStart = (e) => {
        if (!e.currentTarget.contains(e.target))
          return;
        cancel(e);
      };
    }
    return pressProps2;
  }, [
    addGlobalListener,
    isDisabled,
    preventFocusOnPress,
    removeAllGlobalListeners,
    allowTextSelectionOnPress,
    cancel,
    cancelOnPointerExit,
    triggerPressEnd,
    triggerPressStart,
    triggerPressUp
  ]);
  (0, import_react4.useEffect)(() => {
    return () => {
      if (!allowTextSelectionOnPress)
        (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(ref.current.target);
    };
  }, [
    allowTextSelectionOnPress
  ]);
  return {
    isPressed: isPressedProp || isPressed,
    pressProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, pressProps)
  };
}
function $f6c31cce2adf654f$var$isHTMLAnchorLink(target) {
  return target.tagName === "A" && target.hasAttribute("href");
}
function $f6c31cce2adf654f$var$isValidKeyboardEvent(event, currentTarget) {
  const { key, code } = event;
  const element = currentTarget;
  const role = element.getAttribute("role");
  return (key === "Enter" || key === " " || key === "Spacebar" || code === "Space") && !(element instanceof HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey(element, key) || element instanceof HTMLTextAreaElement || element.isContentEditable) && // A link with a valid href should be handled natively,
  // unless it also has role='button' and was triggered using Space.
  (!$f6c31cce2adf654f$var$isHTMLAnchorLink(element) || role === "button" && key !== "Enter") && // An element with role='link' should only trigger with Enter key
  !(role === "link" && key !== "Enter");
}
function $f6c31cce2adf654f$var$getTouchFromEvent(event) {
  const { targetTouches } = event;
  if (targetTouches.length > 0)
    return targetTouches[0];
  return null;
}
function $f6c31cce2adf654f$var$getTouchById(event, pointerId) {
  const changedTouches = event.changedTouches;
  for (let i = 0; i < changedTouches.length; i++) {
    const touch = changedTouches[i];
    if (touch.identifier === pointerId)
      return touch;
  }
  return null;
}
function $f6c31cce2adf654f$var$createEvent(target, e) {
  return {
    currentTarget: target,
    shiftKey: e.shiftKey,
    ctrlKey: e.ctrlKey,
    metaKey: e.metaKey,
    altKey: e.altKey
  };
}
function $f6c31cce2adf654f$var$getPointClientRect(point) {
  let offsetX = point.width / 2 || point.radiusX || 0;
  let offsetY = point.height / 2 || point.radiusY || 0;
  return {
    top: point.clientY - offsetY,
    right: point.clientX + offsetX,
    bottom: point.clientY + offsetY,
    left: point.clientX - offsetX
  };
}
function $f6c31cce2adf654f$var$areRectanglesOverlapping(a, b) {
  if (a.left > b.right || b.left > a.right)
    return false;
  if (a.top > b.bottom || b.top > a.bottom)
    return false;
  return true;
}
function $f6c31cce2adf654f$var$isOverTarget(point, target) {
  let rect = target.getBoundingClientRect();
  let pointRect = $f6c31cce2adf654f$var$getPointClientRect(point);
  return $f6c31cce2adf654f$var$areRectanglesOverlapping(rect, pointRect);
}
function $f6c31cce2adf654f$var$shouldPreventDefault(target) {
  return !(target instanceof HTMLElement) || !target.draggable;
}
function $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(target, key) {
  if (target instanceof HTMLInputElement)
    return !$f6c31cce2adf654f$var$isValidInputKey(target, key);
  if (target instanceof HTMLButtonElement)
    return target.type !== "submit" && target.type !== "reset";
  return true;
}
var $f6c31cce2adf654f$var$nonTextInputTypes = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $f6c31cce2adf654f$var$isValidInputKey(target, key) {
  return target.type === "checkbox" || target.type === "radio" ? key === " " : $f6c31cce2adf654f$var$nonTextInputTypes.has(target.type);
}
var $3b117e43dc0ca95d$export$27c701ed9e449e99 = (0, import_react4.default).forwardRef(({ children, ...props }, ref) => {
  let newRef = (0, import_react4.useRef)();
  ref = ref !== null && ref !== void 0 ? ref : newRef;
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    ...props,
    ref
  });
  let child = (0, import_react4.default).Children.only(children);
  return (0, import_react4.default).cloneElement(
    child,
    // @ts-ignore
    {
      ref,
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(child.props, pressProps)
    }
  );
});
var $f1ab8c75478c6f73$export$3351871ee4b288b8 = (0, import_react4.default).forwardRef(({ children, ...props }, ref) => {
  let isRegistered = (0, import_react4.useRef)(false);
  let prevContext = (0, import_react4.useContext)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5));
  let context = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(prevContext || {}, {
    ...props,
    ref: ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref),
    register() {
      isRegistered.current = true;
      if (prevContext)
        prevContext.register();
    }
  });
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e)(prevContext, ref);
  (0, import_react4.useEffect)(() => {
    if (!isRegistered.current) {
      console.warn("A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.");
      isRegistered.current = true;
    }
  }, []);
  return (0, import_react4.default).createElement((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5).Provider, {
    value: context
  }, children);
});
var $8a9cb279dc87e130$export$905e7fc544a71f36 = class {
  isDefaultPrevented() {
    return this.nativeEvent.defaultPrevented;
  }
  preventDefault() {
    this.defaultPrevented = true;
    this.nativeEvent.preventDefault();
  }
  stopPropagation() {
    this.nativeEvent.stopPropagation();
    this.isPropagationStopped = () => true;
  }
  isPropagationStopped() {
    return false;
  }
  persist() {
  }
  constructor(type, nativeEvent) {
    this.nativeEvent = nativeEvent;
    this.target = nativeEvent.target;
    this.currentTarget = nativeEvent.currentTarget;
    this.relatedTarget = nativeEvent.relatedTarget;
    this.bubbles = nativeEvent.bubbles;
    this.cancelable = nativeEvent.cancelable;
    this.defaultPrevented = nativeEvent.defaultPrevented;
    this.eventPhase = nativeEvent.eventPhase;
    this.isTrusted = nativeEvent.isTrusted;
    this.timeStamp = nativeEvent.timeStamp;
    this.type = type;
  }
};
function $8a9cb279dc87e130$export$715c682d09d639cc(onBlur) {
  let stateRef = (0, import_react4.useRef)({
    isFocused: false,
    observer: null
  });
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    const state = stateRef.current;
    return () => {
      if (state.observer) {
        state.observer.disconnect();
        state.observer = null;
      }
    };
  }, []);
  let dispatchBlur = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    onBlur === null || onBlur === void 0 ? void 0 : onBlur(e);
  });
  return (0, import_react4.useCallback)((e) => {
    if (e.target instanceof HTMLButtonElement || e.target instanceof HTMLInputElement || e.target instanceof HTMLTextAreaElement || e.target instanceof HTMLSelectElement) {
      stateRef.current.isFocused = true;
      let target = e.target;
      let onBlurHandler = (e2) => {
        stateRef.current.isFocused = false;
        if (target.disabled)
          dispatchBlur(new $8a9cb279dc87e130$export$905e7fc544a71f36("blur", e2));
        if (stateRef.current.observer) {
          stateRef.current.observer.disconnect();
          stateRef.current.observer = null;
        }
      };
      target.addEventListener("focusout", onBlurHandler, {
        once: true
      });
      stateRef.current.observer = new MutationObserver(() => {
        if (stateRef.current.isFocused && target.disabled) {
          stateRef.current.observer.disconnect();
          let relatedTargetEl = target === document.activeElement ? null : document.activeElement;
          target.dispatchEvent(new FocusEvent("blur", {
            relatedTarget: relatedTargetEl
          }));
          target.dispatchEvent(new FocusEvent("focusout", {
            bubbles: true,
            relatedTarget: relatedTargetEl
          }));
        }
      });
      stateRef.current.observer.observe(target, {
        attributes: true,
        attributeFilter: [
          "disabled"
        ]
      });
    }
  }, [
    dispatchBlur
  ]);
}
function $a1ea59d68270f0dd$export$f8168d8dd8fd66e6(props) {
  let { isDisabled, onFocus: onFocusProp, onBlur: onBlurProp, onFocusChange } = props;
  const onBlur = (0, import_react4.useCallback)((e) => {
    if (e.target === e.currentTarget) {
      if (onBlurProp)
        onBlurProp(e);
      if (onFocusChange)
        onFocusChange(false);
      return true;
    }
  }, [
    onBlurProp,
    onFocusChange
  ]);
  const onSyntheticFocus = (0, $8a9cb279dc87e130$export$715c682d09d639cc)(onBlur);
  const onFocus = (0, import_react4.useCallback)((e) => {
    if (e.target === e.currentTarget && document.activeElement === e.target) {
      if (onFocusProp)
        onFocusProp(e);
      if (onFocusChange)
        onFocusChange(true);
      onSyntheticFocus(e);
    }
  }, [
    onFocusChange,
    onFocusProp,
    onSyntheticFocus
  ]);
  return {
    focusProps: {
      onFocus: !isDisabled && (onFocusProp || onFocusChange || onBlurProp) ? onFocus : void 0,
      onBlur: !isDisabled && (onBlurProp || onFocusChange) ? onBlur : void 0
    }
  };
}
var $507fabe10e71c6fb$var$currentModality = null;
var $507fabe10e71c6fb$var$changeHandlers = /* @__PURE__ */ new Set();
var $507fabe10e71c6fb$var$hasSetupGlobalListeners = false;
var $507fabe10e71c6fb$var$hasEventBeforeFocus = false;
var $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;
var $507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS = {
  Tab: true,
  Escape: true
};
function $507fabe10e71c6fb$var$triggerChangeHandlers(modality, e) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers)
    handler(modality, e);
}
function $507fabe10e71c6fb$var$isValidKey(e) {
  return !(e.metaKey || !(0, $c87311424ea30a05$export$9ac100e40613ea10)() && e.altKey || e.ctrlKey || e.key === "Control" || e.key === "Shift" || e.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent(e) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
  if ($507fabe10e71c6fb$var$isValidKey(e)) {
    $507fabe10e71c6fb$var$currentModality = "keyboard";
    $507fabe10e71c6fb$var$triggerChangeHandlers("keyboard", e);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent(e) {
  $507fabe10e71c6fb$var$currentModality = "pointer";
  if (e.type === "mousedown" || e.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers("pointer", e);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent(e) {
  if ((0, $6a7db85432448f7f$export$60278871457622de)(e)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
    $507fabe10e71c6fb$var$currentModality = "virtual";
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent(e) {
  if (e.target === window || e.target === document)
    return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus && !$507fabe10e71c6fb$var$hasBlurredWindowRecently) {
    $507fabe10e71c6fb$var$currentModality = "virtual";
    $507fabe10e71c6fb$var$triggerChangeHandlers("virtual", e);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur() {
  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents() {
  if (typeof window === "undefined" || $507fabe10e71c6fb$var$hasSetupGlobalListeners)
    return;
  let focus = HTMLElement.prototype.focus;
  HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
    focus.apply(this, arguments);
  };
  document.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent, true);
  document.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent, true);
  document.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent, true);
  window.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent, true);
  window.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur, false);
  if (typeof PointerEvent !== "undefined") {
    document.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent, true);
    document.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent, true);
    document.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent, true);
  } else {
    document.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent, true);
    document.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent, true);
    document.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent, true);
  }
  $507fabe10e71c6fb$var$hasSetupGlobalListeners = true;
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $507fabe10e71c6fb$var$setupGlobalFocusEvents();
  else
    document.addEventListener("DOMContentLoaded", $507fabe10e71c6fb$var$setupGlobalFocusEvents);
}
function $507fabe10e71c6fb$export$b9b3dfddab17db27() {
  return $507fabe10e71c6fb$var$currentModality !== "pointer";
}
function $507fabe10e71c6fb$export$630ff653c5ada6a9() {
  return $507fabe10e71c6fb$var$currentModality;
}
function $507fabe10e71c6fb$export$8397ddfc504fdb9a(modality) {
  $507fabe10e71c6fb$var$currentModality = modality;
  $507fabe10e71c6fb$var$triggerChangeHandlers(modality, null);
}
function $507fabe10e71c6fb$export$98e20ec92f614cfe() {
  $507fabe10e71c6fb$var$setupGlobalFocusEvents();
  let [modality, setModality] = (0, import_react4.useState)($507fabe10e71c6fb$var$currentModality);
  (0, import_react4.useEffect)(() => {
    let handler = () => {
      setModality($507fabe10e71c6fb$var$currentModality);
    };
    $507fabe10e71c6fb$var$changeHandlers.add(handler);
    return () => {
      $507fabe10e71c6fb$var$changeHandlers.delete(handler);
    };
  }, []);
  return (0, $b5e257d569688ac6$export$535bd6ca7f90a273)() ? null : modality;
}
function $507fabe10e71c6fb$var$isKeyboardFocusEvent(isTextInput, modality, e) {
  return !(isTextInput && modality === "keyboard" && e instanceof KeyboardEvent && !$507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS[e.key]);
}
function $507fabe10e71c6fb$export$ec71b4b83ac08ec3(fn, deps, opts) {
  $507fabe10e71c6fb$var$setupGlobalFocusEvents();
  (0, import_react4.useEffect)(() => {
    let handler = (modality, e) => {
      if (!$507fabe10e71c6fb$var$isKeyboardFocusEvent(opts === null || opts === void 0 ? void 0 : opts.isTextInput, modality, e))
        return;
      fn($507fabe10e71c6fb$export$b9b3dfddab17db27());
    };
    $507fabe10e71c6fb$var$changeHandlers.add(handler);
    return () => {
      $507fabe10e71c6fb$var$changeHandlers.delete(handler);
    };
  }, deps);
}
function $9ab94262bd0047c7$export$420e68273165f4ec(props) {
  let { isDisabled, onBlurWithin, onFocusWithin, onFocusWithinChange } = props;
  let state = (0, import_react4.useRef)({
    isFocusWithin: false
  });
  let onBlur = (0, import_react4.useCallback)((e) => {
    if (state.current.isFocusWithin && !e.currentTarget.contains(e.relatedTarget)) {
      state.current.isFocusWithin = false;
      if (onBlurWithin)
        onBlurWithin(e);
      if (onFocusWithinChange)
        onFocusWithinChange(false);
    }
  }, [
    onBlurWithin,
    onFocusWithinChange,
    state
  ]);
  let onSyntheticFocus = (0, $8a9cb279dc87e130$export$715c682d09d639cc)(onBlur);
  let onFocus = (0, import_react4.useCallback)((e) => {
    if (!state.current.isFocusWithin && document.activeElement === e.target) {
      if (onFocusWithin)
        onFocusWithin(e);
      if (onFocusWithinChange)
        onFocusWithinChange(true);
      state.current.isFocusWithin = true;
      onSyntheticFocus(e);
    }
  }, [
    onFocusWithin,
    onFocusWithinChange,
    onSyntheticFocus
  ]);
  if (isDisabled)
    return {
      focusWithinProps: {
        onFocus: null,
        onBlur: null
      }
    };
  return {
    focusWithinProps: {
      onFocus,
      onBlur
    }
  };
}
var $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;
var $6179b936705e76d3$var$hoverCount = 0;
function $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents() {
  $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = true;
  setTimeout(() => {
    $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;
  }, 50);
}
function $6179b936705e76d3$var$handleGlobalPointerEvent(e) {
  if (e.pointerType === "touch")
    $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents();
}
function $6179b936705e76d3$var$setupGlobalTouchEvents() {
  if (typeof document === "undefined")
    return;
  if (typeof PointerEvent !== "undefined")
    document.addEventListener("pointerup", $6179b936705e76d3$var$handleGlobalPointerEvent);
  else
    document.addEventListener("touchend", $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);
  $6179b936705e76d3$var$hoverCount++;
  return () => {
    $6179b936705e76d3$var$hoverCount--;
    if ($6179b936705e76d3$var$hoverCount > 0)
      return;
    if (typeof PointerEvent !== "undefined")
      document.removeEventListener("pointerup", $6179b936705e76d3$var$handleGlobalPointerEvent);
    else
      document.removeEventListener("touchend", $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);
  };
}
function $6179b936705e76d3$export$ae780daf29e6d456(props) {
  let { onHoverStart, onHoverChange, onHoverEnd, isDisabled } = props;
  let [isHovered, setHovered] = (0, import_react4.useState)(false);
  let state = (0, import_react4.useRef)({
    isHovered: false,
    ignoreEmulatedMouseEvents: false,
    pointerType: "",
    target: null
  }).current;
  (0, import_react4.useEffect)($6179b936705e76d3$var$setupGlobalTouchEvents, []);
  let { hoverProps, triggerHoverEnd } = (0, import_react4.useMemo)(() => {
    let triggerHoverStart = (event, pointerType) => {
      state.pointerType = pointerType;
      if (isDisabled || pointerType === "touch" || state.isHovered || !event.currentTarget.contains(event.target))
        return;
      state.isHovered = true;
      let target = event.currentTarget;
      state.target = target;
      if (onHoverStart)
        onHoverStart({
          type: "hoverstart",
          target,
          pointerType
        });
      if (onHoverChange)
        onHoverChange(true);
      setHovered(true);
    };
    let triggerHoverEnd2 = (event, pointerType) => {
      state.pointerType = "";
      state.target = null;
      if (pointerType === "touch" || !state.isHovered)
        return;
      state.isHovered = false;
      let target = event.currentTarget;
      if (onHoverEnd)
        onHoverEnd({
          type: "hoverend",
          target,
          pointerType
        });
      if (onHoverChange)
        onHoverChange(false);
      setHovered(false);
    };
    let hoverProps2 = {};
    if (typeof PointerEvent !== "undefined") {
      hoverProps2.onPointerEnter = (e) => {
        if ($6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents && e.pointerType === "mouse")
          return;
        triggerHoverStart(e, e.pointerType);
      };
      hoverProps2.onPointerLeave = (e) => {
        if (!isDisabled && e.currentTarget.contains(e.target))
          triggerHoverEnd2(e, e.pointerType);
      };
    } else {
      hoverProps2.onTouchStart = () => {
        state.ignoreEmulatedMouseEvents = true;
      };
      hoverProps2.onMouseEnter = (e) => {
        if (!state.ignoreEmulatedMouseEvents && !$6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents)
          triggerHoverStart(e, "mouse");
        state.ignoreEmulatedMouseEvents = false;
      };
      hoverProps2.onMouseLeave = (e) => {
        if (!isDisabled && e.currentTarget.contains(e.target))
          triggerHoverEnd2(e, "mouse");
      };
    }
    return {
      hoverProps: hoverProps2,
      triggerHoverEnd: triggerHoverEnd2
    };
  }, [
    onHoverStart,
    onHoverChange,
    onHoverEnd,
    isDisabled,
    state
  ]);
  (0, import_react4.useEffect)(() => {
    if (isDisabled)
      triggerHoverEnd({
        currentTarget: state.target
      }, state.pointerType);
  }, [
    isDisabled
  ]);
  return {
    hoverProps,
    isHovered
  };
}
function $e0b6e0b68ec7f50f$export$872b660ac5a1ff98(props) {
  let { ref, onInteractOutside, isDisabled, onInteractOutsideStart } = props;
  let stateRef = (0, import_react4.useRef)({
    isPointerDown: false,
    ignoreEmulatedMouseEvents: false
  });
  let onPointerDown = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (onInteractOutside && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref)) {
      if (onInteractOutsideStart)
        onInteractOutsideStart(e);
      stateRef.current.isPointerDown = true;
    }
  });
  let triggerInteractOutside = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (onInteractOutside)
      onInteractOutside(e);
  });
  (0, import_react4.useEffect)(() => {
    let state = stateRef.current;
    if (isDisabled)
      return;
    if (typeof PointerEvent !== "undefined") {
      let onPointerUp = (e) => {
        if (state.isPointerDown && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref))
          triggerInteractOutside(e);
        state.isPointerDown = false;
      };
      document.addEventListener("pointerdown", onPointerDown, true);
      document.addEventListener("pointerup", onPointerUp, true);
      return () => {
        document.removeEventListener("pointerdown", onPointerDown, true);
        document.removeEventListener("pointerup", onPointerUp, true);
      };
    } else {
      let onMouseUp = (e) => {
        if (state.ignoreEmulatedMouseEvents)
          state.ignoreEmulatedMouseEvents = false;
        else if (state.isPointerDown && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref))
          triggerInteractOutside(e);
        state.isPointerDown = false;
      };
      let onTouchEnd = (e) => {
        state.ignoreEmulatedMouseEvents = true;
        if (state.isPointerDown && $e0b6e0b68ec7f50f$var$isValidEvent(e, ref))
          triggerInteractOutside(e);
        state.isPointerDown = false;
      };
      document.addEventListener("mousedown", onPointerDown, true);
      document.addEventListener("mouseup", onMouseUp, true);
      document.addEventListener("touchstart", onPointerDown, true);
      document.addEventListener("touchend", onTouchEnd, true);
      return () => {
        document.removeEventListener("mousedown", onPointerDown, true);
        document.removeEventListener("mouseup", onMouseUp, true);
        document.removeEventListener("touchstart", onPointerDown, true);
        document.removeEventListener("touchend", onTouchEnd, true);
      };
    }
  }, [
    ref,
    isDisabled,
    onPointerDown,
    triggerInteractOutside
  ]);
}
function $e0b6e0b68ec7f50f$var$isValidEvent(event, ref) {
  if (event.button > 0)
    return false;
  if (event.target) {
    const ownerDocument = event.target.ownerDocument;
    if (!ownerDocument || !ownerDocument.documentElement.contains(event.target))
      return false;
    if (event.target.closest("[data-react-aria-top-layer]"))
      return false;
  }
  return ref.current && !ref.current.contains(event.target);
}
function $93925083ecbb358c$export$48d1ea6320830260(handler) {
  if (!handler)
    return;
  let shouldStopPropagation = true;
  return (e) => {
    let event = {
      ...e,
      preventDefault() {
        e.preventDefault();
      },
      isDefaultPrevented() {
        return e.isDefaultPrevented();
      },
      stopPropagation() {
        console.error("stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.");
      },
      continuePropagation() {
        shouldStopPropagation = false;
      }
    };
    handler(event);
    if (shouldStopPropagation)
      e.stopPropagation();
  };
}
function $46d819fcbaf35654$export$8f71654801c2f7cd(props) {
  return {
    keyboardProps: props.isDisabled ? {} : {
      onKeyDown: (0, $93925083ecbb358c$export$48d1ea6320830260)(props.onKeyDown),
      onKeyUp: (0, $93925083ecbb358c$export$48d1ea6320830260)(props.onKeyUp)
    }
  };
}
function $e8a7022cf87cba2a$export$36da96379f79f245(props) {
  let { onMoveStart, onMove, onMoveEnd } = props;
  let state = (0, import_react4.useRef)({
    didMove: false,
    lastPosition: null,
    id: null
  });
  let { addGlobalListener, removeGlobalListener } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  let move = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((originalEvent, pointerType, deltaX, deltaY) => {
    if (deltaX === 0 && deltaY === 0)
      return;
    if (!state.current.didMove) {
      state.current.didMove = true;
      onMoveStart === null || onMoveStart === void 0 ? void 0 : onMoveStart({
        type: "movestart",
        pointerType,
        shiftKey: originalEvent.shiftKey,
        metaKey: originalEvent.metaKey,
        ctrlKey: originalEvent.ctrlKey,
        altKey: originalEvent.altKey
      });
    }
    onMove({
      type: "move",
      pointerType,
      deltaX,
      deltaY,
      shiftKey: originalEvent.shiftKey,
      metaKey: originalEvent.metaKey,
      ctrlKey: originalEvent.ctrlKey,
      altKey: originalEvent.altKey
    });
  });
  let end = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((originalEvent, pointerType) => {
    (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)();
    if (state.current.didMove)
      onMoveEnd === null || onMoveEnd === void 0 ? void 0 : onMoveEnd({
        type: "moveend",
        pointerType,
        shiftKey: originalEvent.shiftKey,
        metaKey: originalEvent.metaKey,
        ctrlKey: originalEvent.ctrlKey,
        altKey: originalEvent.altKey
      });
  });
  let moveProps = (0, import_react4.useMemo)(() => {
    let moveProps2 = {};
    let start = () => {
      (0, $14c0b72509d70225$export$16a4697467175487)();
      state.current.didMove = false;
    };
    if (typeof PointerEvent === "undefined") {
      let onMouseMove = (e) => {
        if (e.button === 0) {
          move(e, "mouse", e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);
          state.current.lastPosition = {
            pageX: e.pageX,
            pageY: e.pageY
          };
        }
      };
      let onMouseUp = (e) => {
        if (e.button === 0) {
          end(e, "mouse");
          removeGlobalListener(window, "mousemove", onMouseMove, false);
          removeGlobalListener(window, "mouseup", onMouseUp, false);
        }
      };
      moveProps2.onMouseDown = (e) => {
        if (e.button === 0) {
          start();
          e.stopPropagation();
          e.preventDefault();
          state.current.lastPosition = {
            pageX: e.pageX,
            pageY: e.pageY
          };
          addGlobalListener(window, "mousemove", onMouseMove, false);
          addGlobalListener(window, "mouseup", onMouseUp, false);
        }
      };
      let onTouchMove = (e) => {
        let touch = [
          ...e.changedTouches
        ].findIndex(({ identifier }) => identifier === state.current.id);
        if (touch >= 0) {
          let { pageX, pageY } = e.changedTouches[touch];
          move(e, "touch", pageX - state.current.lastPosition.pageX, pageY - state.current.lastPosition.pageY);
          state.current.lastPosition = {
            pageX,
            pageY
          };
        }
      };
      let onTouchEnd = (e) => {
        let touch = [
          ...e.changedTouches
        ].findIndex(({ identifier }) => identifier === state.current.id);
        if (touch >= 0) {
          end(e, "touch");
          state.current.id = null;
          removeGlobalListener(window, "touchmove", onTouchMove);
          removeGlobalListener(window, "touchend", onTouchEnd);
          removeGlobalListener(window, "touchcancel", onTouchEnd);
        }
      };
      moveProps2.onTouchStart = (e) => {
        if (e.changedTouches.length === 0 || state.current.id != null)
          return;
        let { pageX, pageY, identifier } = e.changedTouches[0];
        start();
        e.stopPropagation();
        e.preventDefault();
        state.current.lastPosition = {
          pageX,
          pageY
        };
        state.current.id = identifier;
        addGlobalListener(window, "touchmove", onTouchMove, false);
        addGlobalListener(window, "touchend", onTouchEnd, false);
        addGlobalListener(window, "touchcancel", onTouchEnd, false);
      };
    } else {
      let onPointerMove = (e) => {
        if (e.pointerId === state.current.id) {
          let pointerType = e.pointerType || "mouse";
          move(e, pointerType, e.pageX - state.current.lastPosition.pageX, e.pageY - state.current.lastPosition.pageY);
          state.current.lastPosition = {
            pageX: e.pageX,
            pageY: e.pageY
          };
        }
      };
      let onPointerUp = (e) => {
        if (e.pointerId === state.current.id) {
          let pointerType = e.pointerType || "mouse";
          end(e, pointerType);
          state.current.id = null;
          removeGlobalListener(window, "pointermove", onPointerMove, false);
          removeGlobalListener(window, "pointerup", onPointerUp, false);
          removeGlobalListener(window, "pointercancel", onPointerUp, false);
        }
      };
      moveProps2.onPointerDown = (e) => {
        if (e.button === 0 && state.current.id == null) {
          start();
          e.stopPropagation();
          e.preventDefault();
          state.current.lastPosition = {
            pageX: e.pageX,
            pageY: e.pageY
          };
          state.current.id = e.pointerId;
          addGlobalListener(window, "pointermove", onPointerMove, false);
          addGlobalListener(window, "pointerup", onPointerUp, false);
          addGlobalListener(window, "pointercancel", onPointerUp, false);
        }
      };
    }
    let triggerKeyboardMove = (e, deltaX, deltaY) => {
      start();
      move(e, "keyboard", deltaX, deltaY);
      end(e, "keyboard");
    };
    moveProps2.onKeyDown = (e) => {
      switch (e.key) {
        case "Left":
        case "ArrowLeft":
          e.preventDefault();
          e.stopPropagation();
          triggerKeyboardMove(e, -1, 0);
          break;
        case "Right":
        case "ArrowRight":
          e.preventDefault();
          e.stopPropagation();
          triggerKeyboardMove(e, 1, 0);
          break;
        case "Up":
        case "ArrowUp":
          e.preventDefault();
          e.stopPropagation();
          triggerKeyboardMove(e, 0, -1);
          break;
        case "Down":
        case "ArrowDown":
          e.preventDefault();
          e.stopPropagation();
          triggerKeyboardMove(e, 0, 1);
          break;
      }
    };
    return moveProps2;
  }, [
    state,
    addGlobalListener,
    removeGlobalListener,
    move,
    end
  ]);
  return {
    moveProps
  };
}
function $7d0a636d7a4dcefd$export$2123ff2b87c81ca(props, ref) {
  let { onScroll, isDisabled } = props;
  let onScrollHandler = (0, import_react4.useCallback)((e) => {
    if (e.ctrlKey)
      return;
    e.preventDefault();
    e.stopPropagation();
    if (onScroll)
      onScroll({
        deltaX: e.deltaX,
        deltaY: e.deltaY
      });
  }, [
    onScroll
  ]);
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(ref, "wheel", isDisabled ? null : onScrollHandler);
}
var $8a26561d2877236e$var$DEFAULT_THRESHOLD = 500;
function $8a26561d2877236e$export$c24ed0104d07eab9(props) {
  let { isDisabled, onLongPressStart, onLongPressEnd, onLongPress, threshold = $8a26561d2877236e$var$DEFAULT_THRESHOLD, accessibilityDescription } = props;
  const timeRef = (0, import_react4.useRef)(null);
  let { addGlobalListener, removeGlobalListener } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    isDisabled,
    onPressStart(e) {
      e.continuePropagation();
      if (e.pointerType === "mouse" || e.pointerType === "touch") {
        if (onLongPressStart)
          onLongPressStart({
            ...e,
            type: "longpressstart"
          });
        timeRef.current = setTimeout(() => {
          e.target.dispatchEvent(new PointerEvent("pointercancel", {
            bubbles: true
          }));
          if (onLongPress)
            onLongPress({
              ...e,
              type: "longpress"
            });
          timeRef.current = null;
        }, threshold);
        if (e.pointerType === "touch") {
          let onContextMenu = (e2) => {
            e2.preventDefault();
          };
          addGlobalListener(e.target, "contextmenu", onContextMenu, {
            once: true
          });
          addGlobalListener(window, "pointerup", () => {
            setTimeout(() => {
              removeGlobalListener(e.target, "contextmenu", onContextMenu);
            }, 30);
          }, {
            once: true
          });
        }
      }
    },
    onPressEnd(e) {
      if (timeRef.current)
        clearTimeout(timeRef.current);
      if (onLongPressEnd && (e.pointerType === "mouse" || e.pointerType === "touch"))
        onLongPressEnd({
          ...e,
          type: "longpressend"
        });
    }
  });
  let descriptionProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(onLongPress && !isDisabled ? accessibilityDescription : null);
  return {
    longPressProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(pressProps, descriptionProps)
  };
}

// node_modules/.pnpm/@react-aria+focus@3.14.0_react@18.2.0/node_modules/@react-aria/focus/dist/module.js
function $6a99195332edec8b$export$80f3e147d781571c(element) {
  if ((0, $507fabe10e71c6fb$export$630ff653c5ada6a9)() === "virtual") {
    let lastFocusedElement = document.activeElement;
    (0, $bbed8b41f857bcc0$export$24490316f764c430)(() => {
      if (document.activeElement === lastFocusedElement && document.contains(element))
        (0, $7215afc6de606d6b$export$de79e2c695e052f3)(element);
    });
  } else
    (0, $7215afc6de606d6b$export$de79e2c695e052f3)(element);
}
function $645f2e67b85a24c9$var$isStyleVisible(element) {
  if (!(element instanceof HTMLElement) && !(element instanceof SVGElement))
    return false;
  let { display, visibility } = element.style;
  let isVisible = display !== "none" && visibility !== "hidden" && visibility !== "collapse";
  if (isVisible) {
    const { getComputedStyle: getComputedStyle2 } = element.ownerDocument.defaultView;
    let { display: computedDisplay, visibility: computedVisibility } = getComputedStyle2(element);
    isVisible = computedDisplay !== "none" && computedVisibility !== "hidden" && computedVisibility !== "collapse";
  }
  return isVisible;
}
function $645f2e67b85a24c9$var$isAttributeVisible(element, childElement) {
  return !element.hasAttribute("hidden") && (element.nodeName === "DETAILS" && childElement && childElement.nodeName !== "SUMMARY" ? element.hasAttribute("open") : true);
}
function $645f2e67b85a24c9$export$e989c0fffaa6b27a(element, childElement) {
  return element.nodeName !== "#comment" && $645f2e67b85a24c9$var$isStyleVisible(element) && $645f2e67b85a24c9$var$isAttributeVisible(element, childElement) && (!element.parentElement || $645f2e67b85a24c9$export$e989c0fffaa6b27a(element.parentElement, element));
}
var $9bf71ea28793e738$var$FocusContext = (0, import_react5.default).createContext(null);
var $9bf71ea28793e738$var$activeScope = null;
function $9bf71ea28793e738$export$20e40289641fbbb6(props) {
  let { children, contain, restoreFocus, autoFocus } = props;
  let startRef = (0, import_react5.useRef)();
  let endRef = (0, import_react5.useRef)();
  let scopeRef = (0, import_react5.useRef)([]);
  let { parentNode } = (0, import_react5.useContext)($9bf71ea28793e738$var$FocusContext) || {};
  let node = (0, import_react5.useMemo)(() => new $9bf71ea28793e738$var$TreeNode({
    scopeRef
  }), [
    scopeRef
  ]);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    let parent = parentNode || $9bf71ea28793e738$export$d06fae2ee68b101e.root;
    if ($9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(parent.scopeRef) && $9bf71ea28793e738$var$activeScope && !$9bf71ea28793e738$var$isAncestorScope($9bf71ea28793e738$var$activeScope, parent.scopeRef)) {
      let activeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode($9bf71ea28793e738$var$activeScope);
      if (activeNode)
        parent = activeNode;
    }
    parent.addChild(node);
    $9bf71ea28793e738$export$d06fae2ee68b101e.addNode(node);
  }, [
    node,
    parentNode
  ]);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    let node2 = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef);
    node2.contain = contain;
  }, [
    contain
  ]);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    let node2 = startRef.current.nextSibling;
    let nodes = [];
    while (node2 && node2 !== endRef.current) {
      nodes.push(node2);
      node2 = node2.nextSibling;
    }
    scopeRef.current = nodes;
  }, [
    children
  ]);
  $9bf71ea28793e738$var$useActiveScopeTracker(scopeRef, restoreFocus, contain);
  $9bf71ea28793e738$var$useFocusContainment(scopeRef, contain);
  $9bf71ea28793e738$var$useRestoreFocus(scopeRef, restoreFocus, contain);
  $9bf71ea28793e738$var$useAutoFocus(scopeRef, autoFocus);
  (0, import_react5.useEffect)(() => {
    if (scopeRef) {
      let activeElement = document.activeElement;
      let scope = null;
      if ($9bf71ea28793e738$var$isElementInScope(activeElement, scopeRef.current)) {
        for (let node2 of $9bf71ea28793e738$export$d06fae2ee68b101e.traverse())
          if ($9bf71ea28793e738$var$isElementInScope(activeElement, node2.scopeRef.current))
            scope = node2;
        if (scope === $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef))
          $9bf71ea28793e738$var$activeScope = scope.scopeRef;
      }
      return () => {
        let parentScope = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef).parent.scopeRef;
        if ((scopeRef === $9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope(scopeRef, $9bf71ea28793e738$var$activeScope)) && (!parentScope || $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(parentScope)))
          $9bf71ea28793e738$var$activeScope = parentScope;
        $9bf71ea28793e738$export$d06fae2ee68b101e.removeTreeNode(scopeRef);
      };
    }
  }, [
    scopeRef
  ]);
  let focusManager = (0, import_react5.useMemo)(() => $9bf71ea28793e738$var$createFocusManagerForScope(scopeRef), []);
  let value = (0, import_react5.useMemo)(() => ({
    focusManager,
    parentNode: node
  }), [
    node,
    focusManager
  ]);
  return (0, import_react5.default).createElement($9bf71ea28793e738$var$FocusContext.Provider, {
    value
  }, (0, import_react5.default).createElement("span", {
    "data-focus-scope-start": true,
    hidden: true,
    ref: startRef
  }), children, (0, import_react5.default).createElement("span", {
    "data-focus-scope-end": true,
    hidden: true,
    ref: endRef
  }));
}
function $9bf71ea28793e738$var$createFocusManagerForScope(scopeRef) {
  return {
    focusNext(opts = {}) {
      let scope = scopeRef.current;
      let { from, tabbable, wrap, accept } = opts;
      let node = from || document.activeElement;
      let sentinel = scope[0].previousElementSibling;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {
        tabbable,
        accept
      }, scope);
      walker.currentNode = $9bf71ea28793e738$var$isElementInScope(node, scope) ? node : sentinel;
      let nextNode = walker.nextNode();
      if (!nextNode && wrap) {
        walker.currentNode = sentinel;
        nextNode = walker.nextNode();
      }
      if (nextNode)
        $9bf71ea28793e738$var$focusElement(nextNode, true);
      return nextNode;
    },
    focusPrevious(opts = {}) {
      let scope = scopeRef.current;
      let { from, tabbable, wrap, accept } = opts;
      let node = from || document.activeElement;
      let sentinel = scope[scope.length - 1].nextElementSibling;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {
        tabbable,
        accept
      }, scope);
      walker.currentNode = $9bf71ea28793e738$var$isElementInScope(node, scope) ? node : sentinel;
      let previousNode = walker.previousNode();
      if (!previousNode && wrap) {
        walker.currentNode = sentinel;
        previousNode = walker.previousNode();
      }
      if (previousNode)
        $9bf71ea28793e738$var$focusElement(previousNode, true);
      return previousNode;
    },
    focusFirst(opts = {}) {
      let scope = scopeRef.current;
      let { tabbable, accept } = opts;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {
        tabbable,
        accept
      }, scope);
      walker.currentNode = scope[0].previousElementSibling;
      let nextNode = walker.nextNode();
      if (nextNode)
        $9bf71ea28793e738$var$focusElement(nextNode, true);
      return nextNode;
    },
    focusLast(opts = {}) {
      let scope = scopeRef.current;
      let { tabbable, accept } = opts;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {
        tabbable,
        accept
      }, scope);
      walker.currentNode = scope[scope.length - 1].nextElementSibling;
      let previousNode = walker.previousNode();
      if (previousNode)
        $9bf71ea28793e738$var$focusElement(previousNode, true);
      return previousNode;
    }
  };
}
var $9bf71ea28793e738$var$focusableElements = [
  "input:not([disabled]):not([type=hidden])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[contenteditable]"
];
var $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR = $9bf71ea28793e738$var$focusableElements.join(":not([hidden]),") + ",[tabindex]:not([disabled]):not([hidden])";
$9bf71ea28793e738$var$focusableElements.push('[tabindex]:not([tabindex="-1"]):not([disabled])');
var $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR = $9bf71ea28793e738$var$focusableElements.join(':not([hidden]):not([tabindex="-1"]),');
function $9bf71ea28793e738$var$getScopeRoot(scope) {
  return scope[0].parentElement;
}
function $9bf71ea28793e738$var$shouldContainFocus(scopeRef) {
  let scope = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode($9bf71ea28793e738$var$activeScope);
  while (scope && scope.scopeRef !== scopeRef) {
    if (scope.contain)
      return false;
    scope = scope.parent;
  }
  return true;
}
function $9bf71ea28793e738$var$useFocusContainment(scopeRef, contain) {
  let focusedNode = (0, import_react5.useRef)();
  let raf = (0, import_react5.useRef)(null);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    let scope = scopeRef.current;
    if (!contain) {
      if (raf.current) {
        cancelAnimationFrame(raf.current);
        raf.current = null;
      }
      return;
    }
    let onKeyDown = (e) => {
      if (e.key !== "Tab" || e.altKey || e.ctrlKey || e.metaKey || !$9bf71ea28793e738$var$shouldContainFocus(scopeRef))
        return;
      let focusedElement = document.activeElement;
      let scope2 = scopeRef.current;
      if (!$9bf71ea28793e738$var$isElementInScope(focusedElement, scope2))
        return;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope2), {
        tabbable: true
      }, scope2);
      walker.currentNode = focusedElement;
      let nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();
      if (!nextElement) {
        walker.currentNode = e.shiftKey ? scope2[scope2.length - 1].nextElementSibling : scope2[0].previousElementSibling;
        nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();
      }
      e.preventDefault();
      if (nextElement)
        $9bf71ea28793e738$var$focusElement(nextElement, true);
    };
    let onFocus = (e) => {
      if ((!$9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope($9bf71ea28793e738$var$activeScope, scopeRef)) && $9bf71ea28793e738$var$isElementInScope(e.target, scopeRef.current)) {
        $9bf71ea28793e738$var$activeScope = scopeRef;
        focusedNode.current = e.target;
      } else if ($9bf71ea28793e738$var$shouldContainFocus(scopeRef) && !$9bf71ea28793e738$var$isElementInChildScope(e.target, scopeRef)) {
        if (focusedNode.current)
          focusedNode.current.focus();
        else if ($9bf71ea28793e738$var$activeScope)
          $9bf71ea28793e738$var$focusFirstInScope($9bf71ea28793e738$var$activeScope.current);
      } else if ($9bf71ea28793e738$var$shouldContainFocus(scopeRef))
        focusedNode.current = e.target;
    };
    let onBlur = (e) => {
      if (raf.current)
        cancelAnimationFrame(raf.current);
      raf.current = requestAnimationFrame(() => {
        if ($9bf71ea28793e738$var$shouldContainFocus(scopeRef) && !$9bf71ea28793e738$var$isElementInChildScope(document.activeElement, scopeRef)) {
          $9bf71ea28793e738$var$activeScope = scopeRef;
          if (document.body.contains(e.target)) {
            focusedNode.current = e.target;
            focusedNode.current.focus();
          } else if ($9bf71ea28793e738$var$activeScope)
            $9bf71ea28793e738$var$focusFirstInScope($9bf71ea28793e738$var$activeScope.current);
        }
      });
    };
    document.addEventListener("keydown", onKeyDown, false);
    document.addEventListener("focusin", onFocus, false);
    scope.forEach((element) => element.addEventListener("focusin", onFocus, false));
    scope.forEach((element) => element.addEventListener("focusout", onBlur, false));
    return () => {
      document.removeEventListener("keydown", onKeyDown, false);
      document.removeEventListener("focusin", onFocus, false);
      scope.forEach((element) => element.removeEventListener("focusin", onFocus, false));
      scope.forEach((element) => element.removeEventListener("focusout", onBlur, false));
    };
  }, [
    scopeRef,
    contain
  ]);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    return () => {
      if (raf.current)
        cancelAnimationFrame(raf.current);
    };
  }, [
    raf
  ]);
}
function $9bf71ea28793e738$var$isElementInAnyScope(element) {
  return $9bf71ea28793e738$var$isElementInChildScope(element);
}
function $9bf71ea28793e738$var$isElementInScope(element, scope) {
  return scope.some((node) => node.contains(element));
}
function $9bf71ea28793e738$var$isElementInChildScope(element, scope = null) {
  if (element instanceof Element && element.closest("[data-react-aria-top-layer]"))
    return true;
  for (let { scopeRef: s } of $9bf71ea28793e738$export$d06fae2ee68b101e.traverse($9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scope))) {
    if ($9bf71ea28793e738$var$isElementInScope(element, s.current))
      return true;
  }
  return false;
}
function $9bf71ea28793e738$export$1258395f99bf9cbf(element) {
  return $9bf71ea28793e738$var$isElementInChildScope(element, $9bf71ea28793e738$var$activeScope);
}
function $9bf71ea28793e738$var$isAncestorScope(ancestor, scope) {
  var _focusScopeTree_getTreeNode;
  let parent = (_focusScopeTree_getTreeNode = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scope)) === null || _focusScopeTree_getTreeNode === void 0 ? void 0 : _focusScopeTree_getTreeNode.parent;
  while (parent) {
    if (parent.scopeRef === ancestor)
      return true;
    parent = parent.parent;
  }
  return false;
}
function $9bf71ea28793e738$var$focusElement(element, scroll = false) {
  if (element != null && !scroll)
    try {
      (0, $6a99195332edec8b$export$80f3e147d781571c)(element);
    } catch (err) {
    }
  else if (element != null)
    try {
      element.focus();
    } catch (err) {
    }
}
function $9bf71ea28793e738$var$focusFirstInScope(scope, tabbable = true) {
  let sentinel = scope[0].previousElementSibling;
  let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {
    tabbable
  }, scope);
  walker.currentNode = sentinel;
  let nextNode = walker.nextNode();
  if (tabbable && !nextNode) {
    walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {
      tabbable: false
    }, scope);
    walker.currentNode = sentinel;
    nextNode = walker.nextNode();
  }
  $9bf71ea28793e738$var$focusElement(nextNode);
}
function $9bf71ea28793e738$var$useAutoFocus(scopeRef, autoFocus) {
  const autoFocusRef = (0, import_react5.default).useRef(autoFocus);
  (0, import_react5.useEffect)(() => {
    if (autoFocusRef.current) {
      $9bf71ea28793e738$var$activeScope = scopeRef;
      if (!$9bf71ea28793e738$var$isElementInScope(document.activeElement, $9bf71ea28793e738$var$activeScope.current))
        $9bf71ea28793e738$var$focusFirstInScope(scopeRef.current);
    }
    autoFocusRef.current = false;
  }, [
    scopeRef
  ]);
}
function $9bf71ea28793e738$var$useActiveScopeTracker(scopeRef, restore, contain) {
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (restore || contain)
      return;
    let scope = scopeRef.current;
    let onFocus = (e) => {
      let target = e.target;
      if ($9bf71ea28793e738$var$isElementInScope(target, scopeRef.current))
        $9bf71ea28793e738$var$activeScope = scopeRef;
      else if (!$9bf71ea28793e738$var$isElementInAnyScope(target))
        $9bf71ea28793e738$var$activeScope = null;
    };
    document.addEventListener("focusin", onFocus, false);
    scope.forEach((element) => element.addEventListener("focusin", onFocus, false));
    return () => {
      document.removeEventListener("focusin", onFocus, false);
      scope.forEach((element) => element.removeEventListener("focusin", onFocus, false));
    };
  }, [
    scopeRef,
    restore,
    contain
  ]);
}
function $9bf71ea28793e738$var$shouldRestoreFocus(scopeRef) {
  let scope = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode($9bf71ea28793e738$var$activeScope);
  while (scope && scope.scopeRef !== scopeRef) {
    if (scope.nodeToRestore)
      return false;
    scope = scope.parent;
  }
  return (scope === null || scope === void 0 ? void 0 : scope.scopeRef) === scopeRef;
}
function $9bf71ea28793e738$var$useRestoreFocus(scopeRef, restoreFocus, contain) {
  const nodeToRestoreRef = (0, import_react5.useRef)(typeof document !== "undefined" ? document.activeElement : null);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    let scope = scopeRef.current;
    if (!restoreFocus || contain)
      return;
    let onFocus = () => {
      if ((!$9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope($9bf71ea28793e738$var$activeScope, scopeRef)) && $9bf71ea28793e738$var$isElementInScope(document.activeElement, scopeRef.current))
        $9bf71ea28793e738$var$activeScope = scopeRef;
    };
    document.addEventListener("focusin", onFocus, false);
    scope.forEach((element) => element.addEventListener("focusin", onFocus, false));
    return () => {
      document.removeEventListener("focusin", onFocus, false);
      scope.forEach((element) => element.removeEventListener("focusin", onFocus, false));
    };
  }, [
    scopeRef,
    contain
  ]);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (!restoreFocus)
      return;
    let onKeyDown = (e) => {
      if (e.key !== "Tab" || e.altKey || e.ctrlKey || e.metaKey || !$9bf71ea28793e738$var$shouldContainFocus(scopeRef))
        return;
      let focusedElement = document.activeElement;
      if (!$9bf71ea28793e738$var$isElementInScope(focusedElement, scopeRef.current))
        return;
      let nodeToRestore = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef).nodeToRestore;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(document.body, {
        tabbable: true
      });
      walker.currentNode = focusedElement;
      let nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();
      if (!document.body.contains(nodeToRestore) || nodeToRestore === document.body) {
        nodeToRestore = null;
        $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef).nodeToRestore = null;
      }
      if ((!nextElement || !$9bf71ea28793e738$var$isElementInScope(nextElement, scopeRef.current)) && nodeToRestore) {
        walker.currentNode = nodeToRestore;
        do
          nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();
        while ($9bf71ea28793e738$var$isElementInScope(nextElement, scopeRef.current));
        e.preventDefault();
        e.stopPropagation();
        if (nextElement)
          $9bf71ea28793e738$var$focusElement(nextElement, true);
        else if (!$9bf71ea28793e738$var$isElementInAnyScope(nodeToRestore))
          focusedElement.blur();
        else
          $9bf71ea28793e738$var$focusElement(nodeToRestore, true);
      }
    };
    if (!contain)
      document.addEventListener("keydown", onKeyDown, true);
    return () => {
      if (!contain)
        document.removeEventListener("keydown", onKeyDown, true);
    };
  }, [
    scopeRef,
    restoreFocus,
    contain
  ]);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (!restoreFocus)
      return;
    $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef).nodeToRestore = nodeToRestoreRef.current;
    return () => {
      let nodeToRestore = $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(scopeRef).nodeToRestore;
      if (restoreFocus && nodeToRestore && // eslint-disable-next-line react-hooks/exhaustive-deps
      ($9bf71ea28793e738$var$isElementInScope(document.activeElement, scopeRef.current) || document.activeElement === document.body && $9bf71ea28793e738$var$shouldRestoreFocus(scopeRef))) {
        let clonedTree = $9bf71ea28793e738$export$d06fae2ee68b101e.clone();
        requestAnimationFrame(() => {
          if (document.activeElement === document.body) {
            let treeNode = clonedTree.getTreeNode(scopeRef);
            while (treeNode) {
              if (treeNode.nodeToRestore && document.body.contains(treeNode.nodeToRestore)) {
                $9bf71ea28793e738$var$focusElement(treeNode.nodeToRestore);
                return;
              }
              treeNode = treeNode.parent;
            }
            treeNode = clonedTree.getTreeNode(scopeRef);
            while (treeNode) {
              if (treeNode.scopeRef && $9bf71ea28793e738$export$d06fae2ee68b101e.getTreeNode(treeNode.scopeRef)) {
                $9bf71ea28793e738$var$focusFirstInScope(treeNode.scopeRef.current, true);
                return;
              }
              treeNode = treeNode.parent;
            }
          }
        });
      }
    };
  }, [
    scopeRef,
    restoreFocus
  ]);
}
function $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, opts, scope) {
  let selector = (opts === null || opts === void 0 ? void 0 : opts.tabbable) ? $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR : $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR;
  let walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {
    acceptNode(node) {
      var _opts_from;
      if (opts === null || opts === void 0 ? void 0 : (_opts_from = opts.from) === null || _opts_from === void 0 ? void 0 : _opts_from.contains(node))
        return NodeFilter.FILTER_REJECT;
      if (node.matches(selector) && (0, $645f2e67b85a24c9$export$e989c0fffaa6b27a)(node) && (!scope || $9bf71ea28793e738$var$isElementInScope(node, scope)) && (!(opts === null || opts === void 0 ? void 0 : opts.accept) || opts.accept(node)))
        return NodeFilter.FILTER_ACCEPT;
      return NodeFilter.FILTER_SKIP;
    }
  });
  if (opts === null || opts === void 0 ? void 0 : opts.from)
    walker.currentNode = opts.from;
  return walker;
}
function $9bf71ea28793e738$export$c5251b9e124bf29(ref, defaultOptions = {}) {
  return {
    focusNext(opts = {}) {
      let root = ref.current;
      if (!root)
        return;
      let { from, tabbable = defaultOptions.tabbable, wrap = defaultOptions.wrap, accept = defaultOptions.accept } = opts;
      let node = from || document.activeElement;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {
        tabbable,
        accept
      });
      if (root.contains(node))
        walker.currentNode = node;
      let nextNode = walker.nextNode();
      if (!nextNode && wrap) {
        walker.currentNode = root;
        nextNode = walker.nextNode();
      }
      if (nextNode)
        $9bf71ea28793e738$var$focusElement(nextNode, true);
      return nextNode;
    },
    focusPrevious(opts = defaultOptions) {
      let root = ref.current;
      if (!root)
        return;
      let { from, tabbable = defaultOptions.tabbable, wrap = defaultOptions.wrap, accept = defaultOptions.accept } = opts;
      let node = from || document.activeElement;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {
        tabbable,
        accept
      });
      if (root.contains(node))
        walker.currentNode = node;
      else {
        let next = $9bf71ea28793e738$var$last(walker);
        if (next)
          $9bf71ea28793e738$var$focusElement(next, true);
        return next;
      }
      let previousNode = walker.previousNode();
      if (!previousNode && wrap) {
        walker.currentNode = root;
        previousNode = $9bf71ea28793e738$var$last(walker);
      }
      if (previousNode)
        $9bf71ea28793e738$var$focusElement(previousNode, true);
      return previousNode;
    },
    focusFirst(opts = defaultOptions) {
      let root = ref.current;
      if (!root)
        return;
      let { tabbable = defaultOptions.tabbable, accept = defaultOptions.accept } = opts;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {
        tabbable,
        accept
      });
      let nextNode = walker.nextNode();
      if (nextNode)
        $9bf71ea28793e738$var$focusElement(nextNode, true);
      return nextNode;
    },
    focusLast(opts = defaultOptions) {
      let root = ref.current;
      if (!root)
        return;
      let { tabbable = defaultOptions.tabbable, accept = defaultOptions.accept } = opts;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, {
        tabbable,
        accept
      });
      let next = $9bf71ea28793e738$var$last(walker);
      if (next)
        $9bf71ea28793e738$var$focusElement(next, true);
      return next;
    }
  };
}
function $9bf71ea28793e738$var$last(walker) {
  let next;
  let last;
  do {
    last = walker.lastChild();
    if (last)
      next = last;
  } while (last);
  return next;
}
var $9bf71ea28793e738$var$Tree = class {
  get size() {
    return this.fastMap.size;
  }
  getTreeNode(data) {
    return this.fastMap.get(data);
  }
  addTreeNode(scopeRef, parent, nodeToRestore) {
    let parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);
    let node = new $9bf71ea28793e738$var$TreeNode({
      scopeRef
    });
    parentNode.addChild(node);
    node.parent = parentNode;
    this.fastMap.set(scopeRef, node);
    if (nodeToRestore)
      node.nodeToRestore = nodeToRestore;
  }
  addNode(node) {
    this.fastMap.set(node.scopeRef, node);
  }
  removeTreeNode(scopeRef) {
    if (scopeRef === null)
      return;
    let node = this.fastMap.get(scopeRef);
    let parentNode = node.parent;
    for (let current of this.traverse())
      if (current !== node && node.nodeToRestore && current.nodeToRestore && node.scopeRef.current && $9bf71ea28793e738$var$isElementInScope(current.nodeToRestore, node.scopeRef.current))
        current.nodeToRestore = node.nodeToRestore;
    let children = node.children;
    parentNode.removeChild(node);
    if (children.size > 0)
      children.forEach((child) => parentNode.addChild(child));
    this.fastMap.delete(node.scopeRef);
  }
  // Pre Order Depth First
  *traverse(node = this.root) {
    if (node.scopeRef != null)
      yield node;
    if (node.children.size > 0)
      for (let child of node.children)
        yield* this.traverse(child);
  }
  clone() {
    let newTree = new $9bf71ea28793e738$var$Tree();
    for (let node of this.traverse())
      newTree.addTreeNode(node.scopeRef, node.parent.scopeRef, node.nodeToRestore);
    return newTree;
  }
  constructor() {
    this.fastMap = /* @__PURE__ */ new Map();
    this.root = new $9bf71ea28793e738$var$TreeNode({
      scopeRef: null
    });
    this.fastMap.set(null, this.root);
  }
};
var $9bf71ea28793e738$var$TreeNode = class {
  addChild(node) {
    this.children.add(node);
    node.parent = this;
  }
  removeChild(node) {
    this.children.delete(node);
    node.parent = void 0;
  }
  constructor(props) {
    this.children = /* @__PURE__ */ new Set();
    this.contain = false;
    this.scopeRef = props.scopeRef;
  }
};
var $9bf71ea28793e738$export$d06fae2ee68b101e = new $9bf71ea28793e738$var$Tree();
function $f7dceffc5ad7768b$export$4e328f61c538687f(props = {}) {
  let { autoFocus = false, isTextInput, within } = props;
  let state = (0, import_react5.useRef)({
    isFocused: false,
    isFocusVisible: autoFocus || (0, $507fabe10e71c6fb$export$b9b3dfddab17db27)()
  });
  let [isFocused, setFocused] = (0, import_react5.useState)(false);
  let [isFocusVisibleState, setFocusVisible] = (0, import_react5.useState)(() => state.current.isFocused && state.current.isFocusVisible);
  let updateState = (0, import_react5.useCallback)(() => setFocusVisible(state.current.isFocused && state.current.isFocusVisible), []);
  let onFocusChange = (0, import_react5.useCallback)((isFocused2) => {
    state.current.isFocused = isFocused2;
    setFocused(isFocused2);
    updateState();
  }, [
    updateState
  ]);
  (0, $507fabe10e71c6fb$export$ec71b4b83ac08ec3)((isFocusVisible) => {
    state.current.isFocusVisible = isFocusVisible;
    updateState();
  }, [], {
    isTextInput
  });
  let { focusProps } = (0, $a1ea59d68270f0dd$export$f8168d8dd8fd66e6)({
    isDisabled: within,
    onFocusChange
  });
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec)({
    isDisabled: !within,
    onFocusWithinChange: onFocusChange
  });
  return {
    isFocused,
    isFocusVisible: isFocusVisibleState,
    focusProps: within ? focusWithinProps : focusProps
  };
}
var $e6afbd83fe6ebbd2$var$FocusableContext = (0, import_react5.default).createContext(null);
function $e6afbd83fe6ebbd2$var$useFocusableContext(ref) {
  let context = (0, import_react5.useContext)($e6afbd83fe6ebbd2$var$FocusableContext) || {};
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e)(context, ref);
  let { ref: _, ...otherProps } = context;
  return otherProps;
}
function $e6afbd83fe6ebbd2$var$FocusableProvider(props, ref) {
  let { children, ...otherProps } = props;
  let context = {
    ...otherProps,
    ref
  };
  return (0, import_react5.default).createElement($e6afbd83fe6ebbd2$var$FocusableContext.Provider, {
    value: context
  }, children);
}
var $e6afbd83fe6ebbd2$export$13f3202a3e5ddd5 = (0, import_react5.default).forwardRef($e6afbd83fe6ebbd2$var$FocusableProvider);
function $e6afbd83fe6ebbd2$export$4c014de7c8940b4c(props, domRef) {
  let { focusProps } = (0, $a1ea59d68270f0dd$export$f8168d8dd8fd66e6)(props);
  let { keyboardProps } = (0, $46d819fcbaf35654$export$8f71654801c2f7cd)(props);
  let interactions = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(focusProps, keyboardProps);
  let domProps = $e6afbd83fe6ebbd2$var$useFocusableContext(domRef);
  let interactionProps = props.isDisabled ? {} : domProps;
  let autoFocusRef = (0, import_react5.useRef)(props.autoFocus);
  (0, import_react5.useEffect)(() => {
    if (autoFocusRef.current && domRef.current)
      (0, $6a99195332edec8b$export$80f3e147d781571c)(domRef.current);
    autoFocusRef.current = false;
  }, [
    domRef
  ]);
  return {
    focusableProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)({
      ...interactions,
      tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : void 0
    }, interactionProps)
  };
}
function $83013635b024ae3d$export$eac1895992b9f3d6(ref, options) {
  let isDisabled = options === null || options === void 0 ? void 0 : options.isDisabled;
  let [hasTabbableChild, setHasTabbableChild] = (0, import_react5.useState)(false);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if ((ref === null || ref === void 0 ? void 0 : ref.current) && !isDisabled) {
      let update = () => {
        if (ref.current) {
          let walker = (0, $9bf71ea28793e738$export$2d6ec8fc375ceafa)(ref.current, {
            tabbable: true
          });
          setHasTabbableChild(!!walker.nextNode());
        }
      };
      update();
      let observer = new MutationObserver(update);
      observer.observe(ref.current, {
        subtree: true,
        childList: true,
        attributes: true,
        attributeFilter: [
          "tabIndex",
          "disabled"
        ]
      });
      return () => {
        observer.disconnect();
      };
    }
  });
  return isDisabled ? false : hasTabbableChild;
}

// node_modules/.pnpm/@react-aria+link@3.5.3_react@18.2.0/node_modules/@react-aria/link/dist/module.js
function $298d61e98472621b$export$dcf14c9974fe2767(props, ref) {
  let {
    elementType = "a",
    onPress,
    onPressStart,
    onPressEnd,
    // @ts-ignore
    onClick: deprecatedOnClick,
    isDisabled,
    ...otherProps
  } = props;
  let linkProps = {};
  if (elementType !== "a")
    linkProps = {
      role: "link",
      tabIndex: !isDisabled ? 0 : void 0
    };
  let { focusableProps } = (0, $e6afbd83fe6ebbd2$export$4c014de7c8940b4c)(props, ref);
  let { pressProps, isPressed } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    onPress,
    onPressStart,
    onPressEnd,
    isDisabled,
    ref
  });
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(otherProps, {
    labelable: true
  });
  let interactionHandlers = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(focusableProps, pressProps);
  return {
    isPressed,
    linkProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, {
      ...interactionHandlers,
      ...linkProps,
      "aria-disabled": isDisabled || void 0,
      "aria-current": props["aria-current"],
      onClick: (e) => {
        var _pressProps_onClick;
        (_pressProps_onClick = pressProps.onClick) === null || _pressProps_onClick === void 0 ? void 0 : _pressProps_onClick.call(pressProps, e);
        if (deprecatedOnClick) {
          deprecatedOnClick(e);
          console.warn("onClick is deprecated, please use onPress");
        }
      }
    })
  };
}

// node_modules/.pnpm/@react-aria+i18n@3.8.1_react@18.2.0/node_modules/@react-aria/i18n/dist/real-module.js
var import_react6 = __toESM(require_react());

// node_modules/.pnpm/@internationalized+string@3.1.1/node_modules/@internationalized/string/dist/module.js
var $5b160d28a433310d$export$c17fa47878dc55b6 = class {
  /** Returns a localized string for the given key and locale. */
  getStringForLocale(key, locale) {
    let strings = this.strings[locale];
    if (!strings) {
      strings = $5b160d28a433310d$var$getStringsForLocale(locale, this.strings, this.defaultLocale);
      this.strings[locale] = strings;
    }
    let string = strings[key];
    if (!string)
      throw new Error(`Could not find intl message ${key} in ${locale} locale`);
    return string;
  }
  constructor(messages, defaultLocale = "en-US") {
    this.strings = {
      ...messages
    };
    this.defaultLocale = defaultLocale;
  }
};
function $5b160d28a433310d$var$getStringsForLocale(locale, strings, defaultLocale = "en-US") {
  if (strings[locale])
    return strings[locale];
  let language = $5b160d28a433310d$var$getLanguage(locale);
  if (strings[language])
    return strings[language];
  for (let key in strings) {
    if (key.startsWith(language + "-"))
      return strings[key];
  }
  return strings[defaultLocale];
}
function $5b160d28a433310d$var$getLanguage(locale) {
  if (Intl.Locale)
    return new Intl.Locale(locale).language;
  return locale.split("-")[0];
}
var $6db58dc88e78b024$var$pluralRulesCache = /* @__PURE__ */ new Map();
var $6db58dc88e78b024$var$numberFormatCache = /* @__PURE__ */ new Map();
var $6db58dc88e78b024$export$2f817fcdc4b89ae0 = class {
  /** Formats a localized string for the given key with the provided variables. */
  format(key, variables) {
    let message = this.strings.getStringForLocale(key, this.locale);
    return typeof message === "function" ? message(variables, this) : message;
  }
  plural(count, options, type = "cardinal") {
    let opt = options["=" + count];
    if (opt)
      return typeof opt === "function" ? opt() : opt;
    let key = this.locale + ":" + type;
    let pluralRules = $6db58dc88e78b024$var$pluralRulesCache.get(key);
    if (!pluralRules) {
      pluralRules = new Intl.PluralRules(this.locale, {
        type
      });
      $6db58dc88e78b024$var$pluralRulesCache.set(key, pluralRules);
    }
    let selected = pluralRules.select(count);
    opt = options[selected] || options.other;
    return typeof opt === "function" ? opt() : opt;
  }
  number(value) {
    let numberFormat = $6db58dc88e78b024$var$numberFormatCache.get(this.locale);
    if (!numberFormat) {
      numberFormat = new Intl.NumberFormat(this.locale);
      $6db58dc88e78b024$var$numberFormatCache.set(this.locale, numberFormat);
    }
    return numberFormat.format(value);
  }
  select(options, value) {
    let opt = options[value] || options.other;
    return typeof opt === "function" ? opt() : opt;
  }
  constructor(locale, strings) {
    this.locale = locale;
    this.strings = strings;
  }
};

// node_modules/.pnpm/@internationalized+date@3.4.0/node_modules/@internationalized/date/dist/module.js
function $2b4dce13dd5a17fa$export$842a2cf37af977e1(amount, numerator) {
  return amount - numerator * Math.floor(amount / numerator);
}
var $3b62074eb05584b2$var$EPOCH = 1721426;
function $3b62074eb05584b2$export$f297eb839006d339(era, year, month, day) {
  year = $3b62074eb05584b2$export$c36e0ecb2d4fa69d(era, year);
  let y1 = year - 1;
  let monthOffset = -2;
  if (month <= 2)
    monthOffset = 0;
  else if ($3b62074eb05584b2$export$553d7fa8e3805fc0(year))
    monthOffset = -1;
  return $3b62074eb05584b2$var$EPOCH - 1 + 365 * y1 + Math.floor(y1 / 4) - Math.floor(y1 / 100) + Math.floor(y1 / 400) + Math.floor((367 * month - 362) / 12 + monthOffset + day);
}
function $3b62074eb05584b2$export$553d7fa8e3805fc0(year) {
  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
}
function $3b62074eb05584b2$export$c36e0ecb2d4fa69d(era, year) {
  return era === "BC" ? 1 - year : year;
}
function $3b62074eb05584b2$export$4475b7e617eb123c(year) {
  let era = "AD";
  if (year <= 0) {
    era = "BC";
    year = 1 - year;
  }
  return [
    era,
    year
  ];
}
var $3b62074eb05584b2$var$daysInMonth = {
  standard: [
    31,
    28,
    31,
    30,
    31,
    30,
    31,
    31,
    30,
    31,
    30,
    31
  ],
  leapyear: [
    31,
    29,
    31,
    30,
    31,
    30,
    31,
    31,
    30,
    31,
    30,
    31
  ]
};
var $3b62074eb05584b2$export$80ee6245ec4f29ec = class {
  fromJulianDay(jd) {
    let jd0 = jd;
    let depoch = jd0 - $3b62074eb05584b2$var$EPOCH;
    let quadricent = Math.floor(depoch / 146097);
    let dqc = (0, $2b4dce13dd5a17fa$export$842a2cf37af977e1)(depoch, 146097);
    let cent = Math.floor(dqc / 36524);
    let dcent = (0, $2b4dce13dd5a17fa$export$842a2cf37af977e1)(dqc, 36524);
    let quad = Math.floor(dcent / 1461);
    let dquad = (0, $2b4dce13dd5a17fa$export$842a2cf37af977e1)(dcent, 1461);
    let yindex = Math.floor(dquad / 365);
    let extendedYear = quadricent * 400 + cent * 100 + quad * 4 + yindex + (cent !== 4 && yindex !== 4 ? 1 : 0);
    let [era, year] = $3b62074eb05584b2$export$4475b7e617eb123c(extendedYear);
    let yearDay = jd0 - $3b62074eb05584b2$export$f297eb839006d339(era, year, 1, 1);
    let leapAdj = 2;
    if (jd0 < $3b62074eb05584b2$export$f297eb839006d339(era, year, 3, 1))
      leapAdj = 0;
    else if ($3b62074eb05584b2$export$553d7fa8e3805fc0(year))
      leapAdj = 1;
    let month = Math.floor(((yearDay + leapAdj) * 12 + 373) / 367);
    let day = jd0 - $3b62074eb05584b2$export$f297eb839006d339(era, year, month, 1) + 1;
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(era, year, month, day);
  }
  toJulianDay(date) {
    return $3b62074eb05584b2$export$f297eb839006d339(date.era, date.year, date.month, date.day);
  }
  getDaysInMonth(date) {
    return $3b62074eb05584b2$var$daysInMonth[$3b62074eb05584b2$export$553d7fa8e3805fc0(date.year) ? "leapyear" : "standard"][date.month - 1];
  }
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  getMonthsInYear(date) {
    return 12;
  }
  getDaysInYear(date) {
    return $3b62074eb05584b2$export$553d7fa8e3805fc0(date.year) ? 366 : 365;
  }
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  getYearsInEra(date) {
    return 9999;
  }
  getEras() {
    return [
      "BC",
      "AD"
    ];
  }
  isInverseEra(date) {
    return date.era === "BC";
  }
  balanceDate(date) {
    if (date.year <= 0) {
      date.era = date.era === "BC" ? "AD" : "BC";
      date.year = 1 - date.year;
    }
  }
  constructor() {
    this.identifier = "gregory";
  }
};
var $2fe286d2fb449abb$export$7a5acbd77d414bd9 = {
  "001": 1,
  AD: 1,
  AE: 6,
  AF: 6,
  AI: 1,
  AL: 1,
  AM: 1,
  AN: 1,
  AR: 1,
  AT: 1,
  AU: 1,
  AX: 1,
  AZ: 1,
  BA: 1,
  BE: 1,
  BG: 1,
  BH: 6,
  BM: 1,
  BN: 1,
  BY: 1,
  CH: 1,
  CL: 1,
  CM: 1,
  CN: 1,
  CR: 1,
  CY: 1,
  CZ: 1,
  DE: 1,
  DJ: 6,
  DK: 1,
  DZ: 6,
  EC: 1,
  EE: 1,
  EG: 6,
  ES: 1,
  FI: 1,
  FJ: 1,
  FO: 1,
  FR: 1,
  GB: 1,
  GE: 1,
  GF: 1,
  GP: 1,
  GR: 1,
  HR: 1,
  HU: 1,
  IE: 1,
  IQ: 6,
  IR: 6,
  IS: 1,
  IT: 1,
  JO: 6,
  KG: 1,
  KW: 6,
  KZ: 1,
  LB: 1,
  LI: 1,
  LK: 1,
  LT: 1,
  LU: 1,
  LV: 1,
  LY: 6,
  MC: 1,
  MD: 1,
  ME: 1,
  MK: 1,
  MN: 1,
  MQ: 1,
  MV: 5,
  MY: 1,
  NL: 1,
  NO: 1,
  NZ: 1,
  OM: 6,
  PL: 1,
  QA: 6,
  RE: 1,
  RO: 1,
  RS: 1,
  RU: 1,
  SD: 6,
  SE: 1,
  SI: 1,
  SK: 1,
  SM: 1,
  SY: 6,
  TJ: 1,
  TM: 1,
  TR: 1,
  UA: 1,
  UY: 1,
  UZ: 1,
  VA: 1,
  VN: 1,
  XK: 1
};
function $14e0f24ef4ac5c92$export$ea39ec197993aef0(a, b) {
  b = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(b, a.calendar);
  return a.era === b.era && a.year === b.year && a.month === b.month && a.day === b.day;
}
function $14e0f24ef4ac5c92$export$a18c89cbd24170ff(a, b) {
  b = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(b, a.calendar);
  a = $14e0f24ef4ac5c92$export$a5a3b454ada2268e(a);
  b = $14e0f24ef4ac5c92$export$a5a3b454ada2268e(b);
  return a.era === b.era && a.year === b.year && a.month === b.month;
}
function $14e0f24ef4ac5c92$export$91b62ebf2ba703ee(a, b) {
  return a.calendar.identifier === b.calendar.identifier && a.era === b.era && a.year === b.year && a.month === b.month && a.day === b.day;
}
function $14e0f24ef4ac5c92$export$629b0a497aa65267(date, timeZone) {
  return $14e0f24ef4ac5c92$export$ea39ec197993aef0(date, $14e0f24ef4ac5c92$export$d0bdf45af03a6ea3(timeZone));
}
function $14e0f24ef4ac5c92$export$2061056d06d7cdf7(date, locale) {
  let julian = date.calendar.toJulianDay(date);
  let dayOfWeek = Math.ceil(julian + 1 - $14e0f24ef4ac5c92$var$getWeekStart(locale)) % 7;
  if (dayOfWeek < 0)
    dayOfWeek += 7;
  return dayOfWeek;
}
function $14e0f24ef4ac5c92$export$461939dd4422153(timeZone) {
  return (0, $11d87f3f76e88657$export$1b96692a1ba042ac)(Date.now(), timeZone);
}
function $14e0f24ef4ac5c92$export$d0bdf45af03a6ea3(timeZone) {
  return (0, $11d87f3f76e88657$export$93522d1a439f3617)($14e0f24ef4ac5c92$export$461939dd4422153(timeZone));
}
function $14e0f24ef4ac5c92$export$68781ddf31c0090f(a, b) {
  return a.calendar.toJulianDay(a) - b.calendar.toJulianDay(b);
}
function $14e0f24ef4ac5c92$export$c19a80a9721b80f6(a, b) {
  return $14e0f24ef4ac5c92$var$timeToMs(a) - $14e0f24ef4ac5c92$var$timeToMs(b);
}
function $14e0f24ef4ac5c92$var$timeToMs(a) {
  return a.hour * 36e5 + a.minute * 6e4 + a.second * 1e3 + a.millisecond;
}
var $14e0f24ef4ac5c92$var$localTimeZone = null;
function $14e0f24ef4ac5c92$export$aa8b41735afcabd2() {
  if ($14e0f24ef4ac5c92$var$localTimeZone == null)
    $14e0f24ef4ac5c92$var$localTimeZone = new Intl.DateTimeFormat().resolvedOptions().timeZone;
  return $14e0f24ef4ac5c92$var$localTimeZone;
}
function $14e0f24ef4ac5c92$export$a5a3b454ada2268e(date) {
  return date.subtract({
    days: date.day - 1
  });
}
function $14e0f24ef4ac5c92$export$a2258d9c4118825c(date) {
  return date.add({
    days: date.calendar.getDaysInMonth(date) - date.day
  });
}
function $14e0f24ef4ac5c92$export$f91e89d3d0406102(date) {
  return $14e0f24ef4ac5c92$export$a5a3b454ada2268e(date.subtract({
    months: date.month - 1
  }));
}
function $14e0f24ef4ac5c92$export$5412ac11713b72ad(date) {
  if (date.calendar.getMinimumMonthInYear)
    return date.calendar.getMinimumMonthInYear(date);
  return 1;
}
function $14e0f24ef4ac5c92$export$b2f4953d301981d5(date) {
  if (date.calendar.getMinimumDayInMonth)
    return date.calendar.getMinimumDayInMonth(date);
  return 1;
}
function $14e0f24ef4ac5c92$export$42c81a444fbfb5d4(date, locale) {
  let dayOfWeek = $14e0f24ef4ac5c92$export$2061056d06d7cdf7(date, locale);
  return date.subtract({
    days: dayOfWeek
  });
}
function $14e0f24ef4ac5c92$export$ef8b6d9133084f4e(date, locale) {
  return $14e0f24ef4ac5c92$export$42c81a444fbfb5d4(date, locale).add({
    days: 6
  });
}
var $14e0f24ef4ac5c92$var$cachedRegions = /* @__PURE__ */ new Map();
function $14e0f24ef4ac5c92$var$getRegion(locale) {
  if (Intl.Locale) {
    let region = $14e0f24ef4ac5c92$var$cachedRegions.get(locale);
    if (!region) {
      region = new Intl.Locale(locale).maximize().region;
      $14e0f24ef4ac5c92$var$cachedRegions.set(locale, region);
    }
    return region;
  }
  let part = locale.split("-")[1];
  return part === "u" ? null : part;
}
function $14e0f24ef4ac5c92$var$getWeekStart(locale) {
  let region = $14e0f24ef4ac5c92$var$getRegion(locale);
  return (0, $2fe286d2fb449abb$export$7a5acbd77d414bd9)[region] || 0;
}
function $14e0f24ef4ac5c92$export$ccc1b2479e7dd654(date, locale) {
  let days = date.calendar.getDaysInMonth(date);
  return Math.ceil(($14e0f24ef4ac5c92$export$2061056d06d7cdf7($14e0f24ef4ac5c92$export$a5a3b454ada2268e(date), locale) + days) / 7);
}
function $14e0f24ef4ac5c92$export$5c333a116e949cdd(a, b) {
  if (a && b)
    return a.compare(b) <= 0 ? a : b;
  return a || b;
}
function $14e0f24ef4ac5c92$export$a75f2bff57811055(a, b) {
  if (a && b)
    return a.compare(b) >= 0 ? a : b;
  return a || b;
}
function $11d87f3f76e88657$export$bd4fb2bc8bb06fb(date) {
  date = $11d87f3f76e88657$export$b4a036af3fc0b032(date, new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());
  let year = (0, $3b62074eb05584b2$export$c36e0ecb2d4fa69d)(date.era, date.year);
  return $11d87f3f76e88657$var$epochFromParts(year, date.month, date.day, date.hour, date.minute, date.second, date.millisecond);
}
function $11d87f3f76e88657$var$epochFromParts(year, month, day, hour, minute, second, millisecond) {
  let date = new Date();
  date.setUTCHours(hour, minute, second, millisecond);
  date.setUTCFullYear(year, month - 1, day);
  return date.getTime();
}
function $11d87f3f76e88657$export$59c99f3515d3493f(ms, timeZone) {
  if (timeZone === "UTC")
    return 0;
  if (ms > 0 && timeZone === (0, $14e0f24ef4ac5c92$export$aa8b41735afcabd2)())
    return new Date(ms).getTimezoneOffset() * -6e4;
  let { year, month, day, hour, minute, second } = $11d87f3f76e88657$var$getTimeZoneParts(ms, timeZone);
  let utc = $11d87f3f76e88657$var$epochFromParts(year, month, day, hour, minute, second, 0);
  return utc - Math.floor(ms / 1e3) * 1e3;
}
var $11d87f3f76e88657$var$formattersByTimeZone = /* @__PURE__ */ new Map();
function $11d87f3f76e88657$var$getTimeZoneParts(ms, timeZone) {
  let formatter = $11d87f3f76e88657$var$formattersByTimeZone.get(timeZone);
  if (!formatter) {
    formatter = new Intl.DateTimeFormat("en-US", {
      timeZone,
      hour12: false,
      era: "short",
      year: "numeric",
      month: "numeric",
      day: "numeric",
      hour: "numeric",
      minute: "numeric",
      second: "numeric"
    });
    $11d87f3f76e88657$var$formattersByTimeZone.set(timeZone, formatter);
  }
  let parts = formatter.formatToParts(new Date(ms));
  let namedParts = {};
  for (let part of parts)
    if (part.type !== "literal")
      namedParts[part.type] = part.value;
  return {
    // Firefox returns B instead of BC... https://bugzilla.mozilla.org/show_bug.cgi?id=1752253
    year: namedParts.era === "BC" || namedParts.era === "B" ? -namedParts.year + 1 : +namedParts.year,
    month: +namedParts.month,
    day: +namedParts.day,
    hour: namedParts.hour === "24" ? 0 : +namedParts.hour,
    minute: +namedParts.minute,
    second: +namedParts.second
  };
}
var $11d87f3f76e88657$var$DAYMILLIS = 864e5;
function $11d87f3f76e88657$var$getValidWallTimes(date, timeZone, earlier, later) {
  let found = earlier === later ? [
    earlier
  ] : [
    earlier,
    later
  ];
  return found.filter((absolute) => $11d87f3f76e88657$var$isValidWallTime(date, timeZone, absolute));
}
function $11d87f3f76e88657$var$isValidWallTime(date, timeZone, absolute) {
  let parts = $11d87f3f76e88657$var$getTimeZoneParts(absolute, timeZone);
  return date.year === parts.year && date.month === parts.month && date.day === parts.day && date.hour === parts.hour && date.minute === parts.minute && date.second === parts.second;
}
function $11d87f3f76e88657$export$5107c82f94518f5c(date, timeZone, disambiguation = "compatible") {
  let dateTime = $11d87f3f76e88657$export$b21e0b124e224484(date);
  if (timeZone === "UTC")
    return $11d87f3f76e88657$export$bd4fb2bc8bb06fb(dateTime);
  if (timeZone === (0, $14e0f24ef4ac5c92$export$aa8b41735afcabd2)() && disambiguation === "compatible") {
    dateTime = $11d87f3f76e88657$export$b4a036af3fc0b032(dateTime, new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());
    let date2 = new Date();
    let year = (0, $3b62074eb05584b2$export$c36e0ecb2d4fa69d)(dateTime.era, dateTime.year);
    date2.setFullYear(year, dateTime.month - 1, dateTime.day);
    date2.setHours(dateTime.hour, dateTime.minute, dateTime.second, dateTime.millisecond);
    return date2.getTime();
  }
  let ms = $11d87f3f76e88657$export$bd4fb2bc8bb06fb(dateTime);
  let offsetBefore = $11d87f3f76e88657$export$59c99f3515d3493f(ms - $11d87f3f76e88657$var$DAYMILLIS, timeZone);
  let offsetAfter = $11d87f3f76e88657$export$59c99f3515d3493f(ms + $11d87f3f76e88657$var$DAYMILLIS, timeZone);
  let valid = $11d87f3f76e88657$var$getValidWallTimes(dateTime, timeZone, ms - offsetBefore, ms - offsetAfter);
  if (valid.length === 1)
    return valid[0];
  if (valid.length > 1)
    switch (disambiguation) {
      case "compatible":
      case "earlier":
        return valid[0];
      case "later":
        return valid[valid.length - 1];
      case "reject":
        throw new RangeError("Multiple possible absolute times found");
    }
  switch (disambiguation) {
    case "earlier":
      return Math.min(ms - offsetBefore, ms - offsetAfter);
    case "compatible":
    case "later":
      return Math.max(ms - offsetBefore, ms - offsetAfter);
    case "reject":
      throw new RangeError("No such absolute time found");
  }
}
function $11d87f3f76e88657$export$e67a095c620b86fe(dateTime, timeZone, disambiguation = "compatible") {
  return new Date($11d87f3f76e88657$export$5107c82f94518f5c(dateTime, timeZone, disambiguation));
}
function $11d87f3f76e88657$export$1b96692a1ba042ac(ms, timeZone) {
  let offset = $11d87f3f76e88657$export$59c99f3515d3493f(ms, timeZone);
  let date = new Date(ms + offset);
  let year = date.getUTCFullYear();
  let month = date.getUTCMonth() + 1;
  let day = date.getUTCDate();
  let hour = date.getUTCHours();
  let minute = date.getUTCMinutes();
  let second = date.getUTCSeconds();
  let millisecond = date.getUTCMilliseconds();
  return new (0, $35ea8db9cb2ccb90$export$d3b7288e7994edea)(year, month, day, timeZone, offset, hour, minute, second, millisecond);
}
function $11d87f3f76e88657$export$93522d1a439f3617(dateTime) {
  return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(dateTime.calendar, dateTime.era, dateTime.year, dateTime.month, dateTime.day);
}
function $11d87f3f76e88657$export$b21e0b124e224484(date, time) {
  let hour = 0, minute = 0, second = 0, millisecond = 0;
  if ("timeZone" in date)
    ({ hour, minute, second, millisecond } = date);
  else if ("hour" in date && !time)
    return date;
  if (time)
    ({ hour, minute, second, millisecond } = time);
  return new (0, $35ea8db9cb2ccb90$export$ca871e8dbb80966f)(date.calendar, date.era, date.year, date.month, date.day, hour, minute, second, millisecond);
}
function $11d87f3f76e88657$export$d33f79e3ffc3dc83(dateTime) {
  return new (0, $35ea8db9cb2ccb90$export$680ea196effce5f)(dateTime.hour, dateTime.minute, dateTime.second, dateTime.millisecond);
}
function $11d87f3f76e88657$export$b4a036af3fc0b032(date, calendar) {
  if (date.calendar.identifier === calendar.identifier)
    return date;
  let calendarDate = calendar.fromJulianDay(date.calendar.toJulianDay(date));
  let copy = date.copy();
  copy.calendar = calendar;
  copy.era = calendarDate.era;
  copy.year = calendarDate.year;
  copy.month = calendarDate.month;
  copy.day = calendarDate.day;
  (0, $735220c2d4774dd3$export$c4e2ecac49351ef2)(copy);
  return copy;
}
function $11d87f3f76e88657$export$84c95a83c799e074(date, timeZone, disambiguation) {
  if (date instanceof (0, $35ea8db9cb2ccb90$export$d3b7288e7994edea)) {
    if (date.timeZone === timeZone)
      return date;
    return $11d87f3f76e88657$export$538b00033cc11c75(date, timeZone);
  }
  let ms = $11d87f3f76e88657$export$5107c82f94518f5c(date, timeZone, disambiguation);
  return $11d87f3f76e88657$export$1b96692a1ba042ac(ms, timeZone);
}
function $11d87f3f76e88657$export$83aac07b4c37b25(date) {
  let ms = $11d87f3f76e88657$export$bd4fb2bc8bb06fb(date) - date.offset;
  return new Date(ms);
}
function $11d87f3f76e88657$export$538b00033cc11c75(date, timeZone) {
  let ms = $11d87f3f76e88657$export$bd4fb2bc8bb06fb(date) - date.offset;
  return $11d87f3f76e88657$export$b4a036af3fc0b032($11d87f3f76e88657$export$1b96692a1ba042ac(ms, timeZone), date.calendar);
}
var $735220c2d4774dd3$var$ONE_HOUR = 36e5;
function $735220c2d4774dd3$export$e16d8520af44a096(date, duration) {
  let mutableDate = date.copy();
  let days = "hour" in mutableDate ? $735220c2d4774dd3$var$addTimeFields(mutableDate, duration) : 0;
  $735220c2d4774dd3$var$addYears(mutableDate, duration.years || 0);
  if (mutableDate.calendar.balanceYearMonth)
    mutableDate.calendar.balanceYearMonth(mutableDate, date);
  mutableDate.month += duration.months || 0;
  $735220c2d4774dd3$var$balanceYearMonth(mutableDate);
  $735220c2d4774dd3$var$constrainMonthDay(mutableDate);
  mutableDate.day += (duration.weeks || 0) * 7;
  mutableDate.day += duration.days || 0;
  mutableDate.day += days;
  $735220c2d4774dd3$var$balanceDay(mutableDate);
  if (mutableDate.calendar.balanceDate)
    mutableDate.calendar.balanceDate(mutableDate);
  if (mutableDate.year < 1) {
    mutableDate.year = 1;
    mutableDate.month = 1;
    mutableDate.day = 1;
  }
  let maxYear = mutableDate.calendar.getYearsInEra(mutableDate);
  if (mutableDate.year > maxYear) {
    var _mutableDate_calendar, _mutableDate_calendar_isInverseEra;
    let isInverseEra = (_mutableDate_calendar_isInverseEra = (_mutableDate_calendar = mutableDate.calendar).isInverseEra) === null || _mutableDate_calendar_isInverseEra === void 0 ? void 0 : _mutableDate_calendar_isInverseEra.call(_mutableDate_calendar, mutableDate);
    mutableDate.year = maxYear;
    mutableDate.month = isInverseEra ? 1 : mutableDate.calendar.getMonthsInYear(mutableDate);
    mutableDate.day = isInverseEra ? 1 : mutableDate.calendar.getDaysInMonth(mutableDate);
  }
  if (mutableDate.month < 1) {
    mutableDate.month = 1;
    mutableDate.day = 1;
  }
  let maxMonth = mutableDate.calendar.getMonthsInYear(mutableDate);
  if (mutableDate.month > maxMonth) {
    mutableDate.month = maxMonth;
    mutableDate.day = mutableDate.calendar.getDaysInMonth(mutableDate);
  }
  mutableDate.day = Math.max(1, Math.min(mutableDate.calendar.getDaysInMonth(mutableDate), mutableDate.day));
  return mutableDate;
}
function $735220c2d4774dd3$var$addYears(date, years) {
  var _date_calendar, _date_calendar_isInverseEra;
  if ((_date_calendar_isInverseEra = (_date_calendar = date.calendar).isInverseEra) === null || _date_calendar_isInverseEra === void 0 ? void 0 : _date_calendar_isInverseEra.call(_date_calendar, date))
    years = -years;
  date.year += years;
}
function $735220c2d4774dd3$var$balanceYearMonth(date) {
  while (date.month < 1) {
    $735220c2d4774dd3$var$addYears(date, -1);
    date.month += date.calendar.getMonthsInYear(date);
  }
  let monthsInYear = 0;
  while (date.month > (monthsInYear = date.calendar.getMonthsInYear(date))) {
    date.month -= monthsInYear;
    $735220c2d4774dd3$var$addYears(date, 1);
  }
}
function $735220c2d4774dd3$var$balanceDay(date) {
  while (date.day < 1) {
    date.month--;
    $735220c2d4774dd3$var$balanceYearMonth(date);
    date.day += date.calendar.getDaysInMonth(date);
  }
  while (date.day > date.calendar.getDaysInMonth(date)) {
    date.day -= date.calendar.getDaysInMonth(date);
    date.month++;
    $735220c2d4774dd3$var$balanceYearMonth(date);
  }
}
function $735220c2d4774dd3$var$constrainMonthDay(date) {
  date.month = Math.max(1, Math.min(date.calendar.getMonthsInYear(date), date.month));
  date.day = Math.max(1, Math.min(date.calendar.getDaysInMonth(date), date.day));
}
function $735220c2d4774dd3$export$c4e2ecac49351ef2(date) {
  if (date.calendar.constrainDate)
    date.calendar.constrainDate(date);
  date.year = Math.max(1, Math.min(date.calendar.getYearsInEra(date), date.year));
  $735220c2d4774dd3$var$constrainMonthDay(date);
}
function $735220c2d4774dd3$export$3e2544e88a25bff8(duration) {
  let inverseDuration = {};
  for (let key in duration)
    if (typeof duration[key] === "number")
      inverseDuration[key] = -duration[key];
  return inverseDuration;
}
function $735220c2d4774dd3$export$4e2d2ead65e5f7e3(date, duration) {
  return $735220c2d4774dd3$export$e16d8520af44a096(date, $735220c2d4774dd3$export$3e2544e88a25bff8(duration));
}
function $735220c2d4774dd3$export$adaa4cf7ef1b65be(date, fields) {
  let mutableDate = date.copy();
  if (fields.era != null)
    mutableDate.era = fields.era;
  if (fields.year != null)
    mutableDate.year = fields.year;
  if (fields.month != null)
    mutableDate.month = fields.month;
  if (fields.day != null)
    mutableDate.day = fields.day;
  $735220c2d4774dd3$export$c4e2ecac49351ef2(mutableDate);
  return mutableDate;
}
function $735220c2d4774dd3$export$e5d5e1c1822b6e56(value, fields) {
  let mutableValue = value.copy();
  if (fields.hour != null)
    mutableValue.hour = fields.hour;
  if (fields.minute != null)
    mutableValue.minute = fields.minute;
  if (fields.second != null)
    mutableValue.second = fields.second;
  if (fields.millisecond != null)
    mutableValue.millisecond = fields.millisecond;
  $735220c2d4774dd3$export$7555de1e070510cb(mutableValue);
  return mutableValue;
}
function $735220c2d4774dd3$var$balanceTime(time) {
  time.second += Math.floor(time.millisecond / 1e3);
  time.millisecond = $735220c2d4774dd3$var$nonNegativeMod(time.millisecond, 1e3);
  time.minute += Math.floor(time.second / 60);
  time.second = $735220c2d4774dd3$var$nonNegativeMod(time.second, 60);
  time.hour += Math.floor(time.minute / 60);
  time.minute = $735220c2d4774dd3$var$nonNegativeMod(time.minute, 60);
  let days = Math.floor(time.hour / 24);
  time.hour = $735220c2d4774dd3$var$nonNegativeMod(time.hour, 24);
  return days;
}
function $735220c2d4774dd3$export$7555de1e070510cb(time) {
  time.millisecond = Math.max(0, Math.min(time.millisecond, 1e3));
  time.second = Math.max(0, Math.min(time.second, 59));
  time.minute = Math.max(0, Math.min(time.minute, 59));
  time.hour = Math.max(0, Math.min(time.hour, 23));
}
function $735220c2d4774dd3$var$nonNegativeMod(a, b) {
  let result = a % b;
  if (result < 0)
    result += b;
  return result;
}
function $735220c2d4774dd3$var$addTimeFields(time, duration) {
  time.hour += duration.hours || 0;
  time.minute += duration.minutes || 0;
  time.second += duration.seconds || 0;
  time.millisecond += duration.milliseconds || 0;
  return $735220c2d4774dd3$var$balanceTime(time);
}
function $735220c2d4774dd3$export$7ed87b6bc2506470(time, duration) {
  let res = time.copy();
  $735220c2d4774dd3$var$addTimeFields(res, duration);
  return res;
}
function $735220c2d4774dd3$export$fe34d3a381cd7501(time, duration) {
  return $735220c2d4774dd3$export$7ed87b6bc2506470(time, $735220c2d4774dd3$export$3e2544e88a25bff8(duration));
}
function $735220c2d4774dd3$export$d52ced6badfb9a4c(value, field, amount, options) {
  let mutable = value.copy();
  switch (field) {
    case "era": {
      let eras = value.calendar.getEras();
      let eraIndex = eras.indexOf(value.era);
      if (eraIndex < 0)
        throw new Error("Invalid era: " + value.era);
      eraIndex = $735220c2d4774dd3$var$cycleValue(eraIndex, amount, 0, eras.length - 1, options === null || options === void 0 ? void 0 : options.round);
      mutable.era = eras[eraIndex];
      $735220c2d4774dd3$export$c4e2ecac49351ef2(mutable);
      break;
    }
    case "year":
      var _mutable_calendar, _mutable_calendar_isInverseEra;
      if ((_mutable_calendar_isInverseEra = (_mutable_calendar = mutable.calendar).isInverseEra) === null || _mutable_calendar_isInverseEra === void 0 ? void 0 : _mutable_calendar_isInverseEra.call(_mutable_calendar, mutable))
        amount = -amount;
      mutable.year = $735220c2d4774dd3$var$cycleValue(value.year, amount, -Infinity, 9999, options === null || options === void 0 ? void 0 : options.round);
      if (mutable.year === -Infinity)
        mutable.year = 1;
      if (mutable.calendar.balanceYearMonth)
        mutable.calendar.balanceYearMonth(mutable, value);
      break;
    case "month":
      mutable.month = $735220c2d4774dd3$var$cycleValue(value.month, amount, 1, value.calendar.getMonthsInYear(value), options === null || options === void 0 ? void 0 : options.round);
      break;
    case "day":
      mutable.day = $735220c2d4774dd3$var$cycleValue(value.day, amount, 1, value.calendar.getDaysInMonth(value), options === null || options === void 0 ? void 0 : options.round);
      break;
    default:
      throw new Error("Unsupported field " + field);
  }
  if (value.calendar.balanceDate)
    value.calendar.balanceDate(mutable);
  $735220c2d4774dd3$export$c4e2ecac49351ef2(mutable);
  return mutable;
}
function $735220c2d4774dd3$export$dd02b3e0007dfe28(value, field, amount, options) {
  let mutable = value.copy();
  switch (field) {
    case "hour": {
      let hours = value.hour;
      let min = 0;
      let max = 23;
      if ((options === null || options === void 0 ? void 0 : options.hourCycle) === 12) {
        let isPM = hours >= 12;
        min = isPM ? 12 : 0;
        max = isPM ? 23 : 11;
      }
      mutable.hour = $735220c2d4774dd3$var$cycleValue(hours, amount, min, max, options === null || options === void 0 ? void 0 : options.round);
      break;
    }
    case "minute":
      mutable.minute = $735220c2d4774dd3$var$cycleValue(value.minute, amount, 0, 59, options === null || options === void 0 ? void 0 : options.round);
      break;
    case "second":
      mutable.second = $735220c2d4774dd3$var$cycleValue(value.second, amount, 0, 59, options === null || options === void 0 ? void 0 : options.round);
      break;
    case "millisecond":
      mutable.millisecond = $735220c2d4774dd3$var$cycleValue(value.millisecond, amount, 0, 999, options === null || options === void 0 ? void 0 : options.round);
      break;
    default:
      throw new Error("Unsupported field " + field);
  }
  return mutable;
}
function $735220c2d4774dd3$var$cycleValue(value, amount, min, max, round = false) {
  if (round) {
    value += Math.sign(amount);
    if (value < min)
      value = max;
    let div = Math.abs(amount);
    if (amount > 0)
      value = Math.ceil(value / div) * div;
    else
      value = Math.floor(value / div) * div;
    if (value > max)
      value = min;
  } else {
    value += amount;
    if (value < min)
      value = max - (min - value - 1);
    else if (value > max)
      value = min + (value - max - 1);
  }
  return value;
}
function $735220c2d4774dd3$export$96b1d28349274637(dateTime, duration) {
  let ms;
  if (duration.years != null && duration.years !== 0 || duration.months != null && duration.months !== 0 || duration.weeks != null && duration.weeks !== 0 || duration.days != null && duration.days !== 0) {
    let res2 = $735220c2d4774dd3$export$e16d8520af44a096((0, $11d87f3f76e88657$export$b21e0b124e224484)(dateTime), {
      years: duration.years,
      months: duration.months,
      weeks: duration.weeks,
      days: duration.days
    });
    ms = (0, $11d87f3f76e88657$export$5107c82f94518f5c)(res2, dateTime.timeZone);
  } else
    ms = (0, $11d87f3f76e88657$export$bd4fb2bc8bb06fb)(dateTime) - dateTime.offset;
  ms += duration.milliseconds || 0;
  ms += (duration.seconds || 0) * 1e3;
  ms += (duration.minutes || 0) * 6e4;
  ms += (duration.hours || 0) * 36e5;
  let res = (0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms, dateTime.timeZone);
  return (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(res, dateTime.calendar);
}
function $735220c2d4774dd3$export$6814caac34ca03c7(dateTime, duration) {
  return $735220c2d4774dd3$export$96b1d28349274637(dateTime, $735220c2d4774dd3$export$3e2544e88a25bff8(duration));
}
function $735220c2d4774dd3$export$9a297d111fc86b79(dateTime, field, amount, options) {
  switch (field) {
    case "hour": {
      let min = 0;
      let max = 23;
      if ((options === null || options === void 0 ? void 0 : options.hourCycle) === 12) {
        let isPM = dateTime.hour >= 12;
        min = isPM ? 12 : 0;
        max = isPM ? 23 : 11;
      }
      let plainDateTime = (0, $11d87f3f76e88657$export$b21e0b124e224484)(dateTime);
      let minDate = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)($735220c2d4774dd3$export$e5d5e1c1822b6e56(plainDateTime, {
        hour: min
      }), new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());
      let minAbsolute = [
        (0, $11d87f3f76e88657$export$5107c82f94518f5c)(minDate, dateTime.timeZone, "earlier"),
        (0, $11d87f3f76e88657$export$5107c82f94518f5c)(minDate, dateTime.timeZone, "later")
      ].filter((ms2) => (0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms2, dateTime.timeZone).day === minDate.day)[0];
      let maxDate = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)($735220c2d4774dd3$export$e5d5e1c1822b6e56(plainDateTime, {
        hour: max
      }), new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());
      let maxAbsolute = [
        (0, $11d87f3f76e88657$export$5107c82f94518f5c)(maxDate, dateTime.timeZone, "earlier"),
        (0, $11d87f3f76e88657$export$5107c82f94518f5c)(maxDate, dateTime.timeZone, "later")
      ].filter((ms2) => (0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms2, dateTime.timeZone).day === maxDate.day).pop();
      let ms = (0, $11d87f3f76e88657$export$bd4fb2bc8bb06fb)(dateTime) - dateTime.offset;
      let hours = Math.floor(ms / $735220c2d4774dd3$var$ONE_HOUR);
      let remainder = ms % $735220c2d4774dd3$var$ONE_HOUR;
      ms = $735220c2d4774dd3$var$cycleValue(hours, amount, Math.floor(minAbsolute / $735220c2d4774dd3$var$ONE_HOUR), Math.floor(maxAbsolute / $735220c2d4774dd3$var$ONE_HOUR), options === null || options === void 0 ? void 0 : options.round) * $735220c2d4774dd3$var$ONE_HOUR + remainder;
      return (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms, dateTime.timeZone), dateTime.calendar);
    }
    case "minute":
    case "second":
    case "millisecond":
      return $735220c2d4774dd3$export$dd02b3e0007dfe28(dateTime, field, amount, options);
    case "era":
    case "year":
    case "month":
    case "day": {
      let res = $735220c2d4774dd3$export$d52ced6badfb9a4c((0, $11d87f3f76e88657$export$b21e0b124e224484)(dateTime), field, amount, options);
      let ms = (0, $11d87f3f76e88657$export$5107c82f94518f5c)(res, dateTime.timeZone);
      return (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms, dateTime.timeZone), dateTime.calendar);
    }
    default:
      throw new Error("Unsupported field " + field);
  }
}
function $735220c2d4774dd3$export$31b5430eb18be4f8(dateTime, fields, disambiguation) {
  let plainDateTime = (0, $11d87f3f76e88657$export$b21e0b124e224484)(dateTime);
  let res = $735220c2d4774dd3$export$e5d5e1c1822b6e56($735220c2d4774dd3$export$adaa4cf7ef1b65be(plainDateTime, fields), fields);
  if (res.compare(plainDateTime) === 0)
    return dateTime;
  let ms = (0, $11d87f3f76e88657$export$5107c82f94518f5c)(res, dateTime.timeZone, disambiguation);
  return (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $11d87f3f76e88657$export$1b96692a1ba042ac)(ms, dateTime.timeZone), dateTime.calendar);
}
var $fae977aafc393c5c$var$requiredDurationTimeGroups = [
  "hours",
  "minutes",
  "seconds"
];
var $fae977aafc393c5c$var$requiredDurationGroups = [
  "years",
  "months",
  "weeks",
  "days",
  ...$fae977aafc393c5c$var$requiredDurationTimeGroups
];
function $fae977aafc393c5c$export$f59dee82248f5ad4(time) {
  return `${String(time.hour).padStart(2, "0")}:${String(time.minute).padStart(2, "0")}:${String(time.second).padStart(2, "0")}${time.millisecond ? String(time.millisecond / 1e3).slice(1) : ""}`;
}
function $fae977aafc393c5c$export$60dfd74aa96791bd(date) {
  let gregorianDate = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(date, new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());
  return `${String(gregorianDate.year).padStart(4, "0")}-${String(gregorianDate.month).padStart(2, "0")}-${String(gregorianDate.day).padStart(2, "0")}`;
}
function $fae977aafc393c5c$export$4223de14708adc63(date) {
  return `${$fae977aafc393c5c$export$60dfd74aa96791bd(date)}T${$fae977aafc393c5c$export$f59dee82248f5ad4(date)}`;
}
function $fae977aafc393c5c$var$offsetToString(offset) {
  let sign = Math.sign(offset) < 0 ? "-" : "+";
  offset = Math.abs(offset);
  let offsetHours = Math.floor(offset / 36e5);
  let offsetMinutes = offset % 36e5 / 6e4;
  return `${sign}${String(offsetHours).padStart(2, "0")}:${String(offsetMinutes).padStart(2, "0")}`;
}
function $fae977aafc393c5c$export$bf79f1ebf4b18792(date) {
  return `${$fae977aafc393c5c$export$4223de14708adc63(date)}${$fae977aafc393c5c$var$offsetToString(date.offset)}[${date.timeZone}]`;
}
function $35ea8db9cb2ccb90$var$shiftArgs(args) {
  let calendar = typeof args[0] === "object" ? args.shift() : new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)();
  let era;
  if (typeof args[0] === "string")
    era = args.shift();
  else {
    let eras = calendar.getEras();
    era = eras[eras.length - 1];
  }
  let year = args.shift();
  let month = args.shift();
  let day = args.shift();
  return [
    calendar,
    era,
    year,
    month,
    day
  ];
}
var $35ea8db9cb2ccb90$var$_type = /* @__PURE__ */ new WeakMap();
var $35ea8db9cb2ccb90$export$99faa760c7908e4f = class {
  /** Returns a copy of this date. */
  copy() {
    if (this.era)
      return new $35ea8db9cb2ccb90$export$99faa760c7908e4f(this.calendar, this.era, this.year, this.month, this.day);
    else
      return new $35ea8db9cb2ccb90$export$99faa760c7908e4f(this.calendar, this.year, this.month, this.day);
  }
  /** Returns a new `CalendarDate` with the given duration added to it. */
  add(duration) {
    return (0, $735220c2d4774dd3$export$e16d8520af44a096)(this, duration);
  }
  /** Returns a new `CalendarDate` with the given duration subtracted from it. */
  subtract(duration) {
    return (0, $735220c2d4774dd3$export$4e2d2ead65e5f7e3)(this, duration);
  }
  /** Returns a new `CalendarDate` with the given fields set to the provided values. Other fields will be constrained accordingly. */
  set(fields) {
    return (0, $735220c2d4774dd3$export$adaa4cf7ef1b65be)(this, fields);
  }
  /**
  * Returns a new `CalendarDate` with the given field adjusted by a specified amount.
  * When the resulting value reaches the limits of the field, it wraps around.
  */
  cycle(field, amount, options) {
    return (0, $735220c2d4774dd3$export$d52ced6badfb9a4c)(this, field, amount, options);
  }
  /** Converts the date to a native JavaScript Date object, with the time set to midnight in the given time zone. */
  toDate(timeZone) {
    return (0, $11d87f3f76e88657$export$e67a095c620b86fe)(this, timeZone);
  }
  /** Converts the date to an ISO 8601 formatted string. */
  toString() {
    return (0, $fae977aafc393c5c$export$60dfd74aa96791bd)(this);
  }
  /** Compares this date with another. A negative result indicates that this date is before the given one, and a positive date indicates that it is after. */
  compare(b) {
    return (0, $14e0f24ef4ac5c92$export$68781ddf31c0090f)(this, b);
  }
  constructor(...args) {
    (0, _class_private_field_init)(this, $35ea8db9cb2ccb90$var$_type, {
      writable: true,
      value: void 0
    });
    let [calendar, era, year, month, day] = $35ea8db9cb2ccb90$var$shiftArgs(args);
    this.calendar = calendar;
    this.era = era;
    this.year = year;
    this.month = month;
    this.day = day;
    (0, $735220c2d4774dd3$export$c4e2ecac49351ef2)(this);
  }
};
var $35ea8db9cb2ccb90$var$_type1 = /* @__PURE__ */ new WeakMap();
var $35ea8db9cb2ccb90$export$680ea196effce5f = class {
  /** Returns a copy of this time. */
  copy() {
    return new $35ea8db9cb2ccb90$export$680ea196effce5f(this.hour, this.minute, this.second, this.millisecond);
  }
  /** Returns a new `Time` with the given duration added to it. */
  add(duration) {
    return (0, $735220c2d4774dd3$export$7ed87b6bc2506470)(this, duration);
  }
  /** Returns a new `Time` with the given duration subtracted from it. */
  subtract(duration) {
    return (0, $735220c2d4774dd3$export$fe34d3a381cd7501)(this, duration);
  }
  /** Returns a new `Time` with the given fields set to the provided values. Other fields will be constrained accordingly. */
  set(fields) {
    return (0, $735220c2d4774dd3$export$e5d5e1c1822b6e56)(this, fields);
  }
  /**
  * Returns a new `Time` with the given field adjusted by a specified amount.
  * When the resulting value reaches the limits of the field, it wraps around.
  */
  cycle(field, amount, options) {
    return (0, $735220c2d4774dd3$export$dd02b3e0007dfe28)(this, field, amount, options);
  }
  /** Converts the time to an ISO 8601 formatted string. */
  toString() {
    return (0, $fae977aafc393c5c$export$f59dee82248f5ad4)(this);
  }
  /** Compares this time with another. A negative result indicates that this time is before the given one, and a positive time indicates that it is after. */
  compare(b) {
    return (0, $14e0f24ef4ac5c92$export$c19a80a9721b80f6)(this, b);
  }
  constructor(hour = 0, minute = 0, second = 0, millisecond = 0) {
    (0, _class_private_field_init)(this, $35ea8db9cb2ccb90$var$_type1, {
      writable: true,
      value: void 0
    });
    this.hour = hour;
    this.minute = minute;
    this.second = second;
    this.millisecond = millisecond;
    (0, $735220c2d4774dd3$export$7555de1e070510cb)(this);
  }
};
var $35ea8db9cb2ccb90$var$_type2 = /* @__PURE__ */ new WeakMap();
var $35ea8db9cb2ccb90$export$ca871e8dbb80966f = class {
  /** Returns a copy of this date. */
  copy() {
    if (this.era)
      return new $35ea8db9cb2ccb90$export$ca871e8dbb80966f(this.calendar, this.era, this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);
    else
      return new $35ea8db9cb2ccb90$export$ca871e8dbb80966f(this.calendar, this.year, this.month, this.day, this.hour, this.minute, this.second, this.millisecond);
  }
  /** Returns a new `CalendarDateTime` with the given duration added to it. */
  add(duration) {
    return (0, $735220c2d4774dd3$export$e16d8520af44a096)(this, duration);
  }
  /** Returns a new `CalendarDateTime` with the given duration subtracted from it. */
  subtract(duration) {
    return (0, $735220c2d4774dd3$export$4e2d2ead65e5f7e3)(this, duration);
  }
  /** Returns a new `CalendarDateTime` with the given fields set to the provided values. Other fields will be constrained accordingly. */
  set(fields) {
    return (0, $735220c2d4774dd3$export$adaa4cf7ef1b65be)((0, $735220c2d4774dd3$export$e5d5e1c1822b6e56)(this, fields), fields);
  }
  /**
  * Returns a new `CalendarDateTime` with the given field adjusted by a specified amount.
  * When the resulting value reaches the limits of the field, it wraps around.
  */
  cycle(field, amount, options) {
    switch (field) {
      case "era":
      case "year":
      case "month":
      case "day":
        return (0, $735220c2d4774dd3$export$d52ced6badfb9a4c)(this, field, amount, options);
      default:
        return (0, $735220c2d4774dd3$export$dd02b3e0007dfe28)(this, field, amount, options);
    }
  }
  /** Converts the date to a native JavaScript Date object in the given time zone. */
  toDate(timeZone, disambiguation) {
    return (0, $11d87f3f76e88657$export$e67a095c620b86fe)(this, timeZone, disambiguation);
  }
  /** Converts the date to an ISO 8601 formatted string. */
  toString() {
    return (0, $fae977aafc393c5c$export$4223de14708adc63)(this);
  }
  /** Compares this date with another. A negative result indicates that this date is before the given one, and a positive date indicates that it is after. */
  compare(b) {
    let res = (0, $14e0f24ef4ac5c92$export$68781ddf31c0090f)(this, b);
    if (res === 0)
      return (0, $14e0f24ef4ac5c92$export$c19a80a9721b80f6)(this, (0, $11d87f3f76e88657$export$b21e0b124e224484)(b));
    return res;
  }
  constructor(...args) {
    (0, _class_private_field_init)(this, $35ea8db9cb2ccb90$var$_type2, {
      writable: true,
      value: void 0
    });
    let [calendar, era, year, month, day] = $35ea8db9cb2ccb90$var$shiftArgs(args);
    this.calendar = calendar;
    this.era = era;
    this.year = year;
    this.month = month;
    this.day = day;
    this.hour = args.shift() || 0;
    this.minute = args.shift() || 0;
    this.second = args.shift() || 0;
    this.millisecond = args.shift() || 0;
    (0, $735220c2d4774dd3$export$c4e2ecac49351ef2)(this);
  }
};
var $35ea8db9cb2ccb90$var$_type3 = /* @__PURE__ */ new WeakMap();
var $35ea8db9cb2ccb90$export$d3b7288e7994edea = class {
  /** Returns a copy of this date. */
  copy() {
    if (this.era)
      return new $35ea8db9cb2ccb90$export$d3b7288e7994edea(this.calendar, this.era, this.year, this.month, this.day, this.timeZone, this.offset, this.hour, this.minute, this.second, this.millisecond);
    else
      return new $35ea8db9cb2ccb90$export$d3b7288e7994edea(this.calendar, this.year, this.month, this.day, this.timeZone, this.offset, this.hour, this.minute, this.second, this.millisecond);
  }
  /** Returns a new `ZonedDateTime` with the given duration added to it. */
  add(duration) {
    return (0, $735220c2d4774dd3$export$96b1d28349274637)(this, duration);
  }
  /** Returns a new `ZonedDateTime` with the given duration subtracted from it. */
  subtract(duration) {
    return (0, $735220c2d4774dd3$export$6814caac34ca03c7)(this, duration);
  }
  /** Returns a new `ZonedDateTime` with the given fields set to the provided values. Other fields will be constrained accordingly. */
  set(fields, disambiguation) {
    return (0, $735220c2d4774dd3$export$31b5430eb18be4f8)(this, fields, disambiguation);
  }
  /**
  * Returns a new `ZonedDateTime` with the given field adjusted by a specified amount.
  * When the resulting value reaches the limits of the field, it wraps around.
  */
  cycle(field, amount, options) {
    return (0, $735220c2d4774dd3$export$9a297d111fc86b79)(this, field, amount, options);
  }
  /** Converts the date to a native JavaScript Date object. */
  toDate() {
    return (0, $11d87f3f76e88657$export$83aac07b4c37b25)(this);
  }
  /** Converts the date to an ISO 8601 formatted string, including the UTC offset and time zone identifier. */
  toString() {
    return (0, $fae977aafc393c5c$export$bf79f1ebf4b18792)(this);
  }
  /** Converts the date to an ISO 8601 formatted string in UTC. */
  toAbsoluteString() {
    return this.toDate().toISOString();
  }
  /** Compares this date with another. A negative result indicates that this date is before the given one, and a positive date indicates that it is after. */
  compare(b) {
    return this.toDate().getTime() - (0, $11d87f3f76e88657$export$84c95a83c799e074)(b, this.timeZone).toDate().getTime();
  }
  constructor(...args) {
    (0, _class_private_field_init)(this, $35ea8db9cb2ccb90$var$_type3, {
      writable: true,
      value: void 0
    });
    let [calendar, era, year, month, day] = $35ea8db9cb2ccb90$var$shiftArgs(args);
    let timeZone = args.shift();
    let offset = args.shift();
    this.calendar = calendar;
    this.era = era;
    this.year = year;
    this.month = month;
    this.day = day;
    this.timeZone = timeZone;
    this.offset = offset;
    this.hour = args.shift() || 0;
    this.minute = args.shift() || 0;
    this.second = args.shift() || 0;
    this.millisecond = args.shift() || 0;
    (0, $735220c2d4774dd3$export$c4e2ecac49351ef2)(this);
  }
};
var $62225008020f0a13$var$ERA_START_DATES = [
  [
    1868,
    9,
    8
  ],
  [
    1912,
    7,
    30
  ],
  [
    1926,
    12,
    25
  ],
  [
    1989,
    1,
    8
  ],
  [
    2019,
    5,
    1
  ]
];
var $62225008020f0a13$var$ERA_END_DATES = [
  [
    1912,
    7,
    29
  ],
  [
    1926,
    12,
    24
  ],
  [
    1989,
    1,
    7
  ],
  [
    2019,
    4,
    30
  ]
];
var $62225008020f0a13$var$ERA_ADDENDS = [
  1867,
  1911,
  1925,
  1988,
  2018
];
var $62225008020f0a13$var$ERA_NAMES = [
  "meiji",
  "taisho",
  "showa",
  "heisei",
  "reiwa"
];
function $62225008020f0a13$var$findEraFromGregorianDate(date) {
  const idx = $62225008020f0a13$var$ERA_START_DATES.findIndex(([year, month, day]) => {
    if (date.year < year)
      return true;
    if (date.year === year && date.month < month)
      return true;
    if (date.year === year && date.month === month && date.day < day)
      return true;
    return false;
  });
  if (idx === -1)
    return $62225008020f0a13$var$ERA_START_DATES.length - 1;
  if (idx === 0)
    return 0;
  return idx - 1;
}
function $62225008020f0a13$var$toGregorian(date) {
  let eraAddend = $62225008020f0a13$var$ERA_ADDENDS[$62225008020f0a13$var$ERA_NAMES.indexOf(date.era)];
  if (!eraAddend)
    throw new Error("Unknown era: " + date.era);
  return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(date.year + eraAddend, date.month, date.day);
}
var $62225008020f0a13$export$b746ab2b60cdffbf = class extends (0, $3b62074eb05584b2$export$80ee6245ec4f29ec) {
  fromJulianDay(jd) {
    let date = super.fromJulianDay(jd);
    let era = $62225008020f0a13$var$findEraFromGregorianDate(date);
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, $62225008020f0a13$var$ERA_NAMES[era], date.year - $62225008020f0a13$var$ERA_ADDENDS[era], date.month, date.day);
  }
  toJulianDay(date) {
    return super.toJulianDay($62225008020f0a13$var$toGregorian(date));
  }
  balanceDate(date) {
    let gregorianDate = $62225008020f0a13$var$toGregorian(date);
    let era = $62225008020f0a13$var$findEraFromGregorianDate(gregorianDate);
    if ($62225008020f0a13$var$ERA_NAMES[era] !== date.era) {
      date.era = $62225008020f0a13$var$ERA_NAMES[era];
      date.year = gregorianDate.year - $62225008020f0a13$var$ERA_ADDENDS[era];
    }
    this.constrainDate(date);
  }
  constrainDate(date) {
    let idx = $62225008020f0a13$var$ERA_NAMES.indexOf(date.era);
    let end = $62225008020f0a13$var$ERA_END_DATES[idx];
    if (end != null) {
      let [endYear, endMonth, endDay] = end;
      let maxYear = endYear - $62225008020f0a13$var$ERA_ADDENDS[idx];
      date.year = Math.max(1, Math.min(maxYear, date.year));
      if (date.year === maxYear) {
        date.month = Math.min(endMonth, date.month);
        if (date.month === endMonth)
          date.day = Math.min(endDay, date.day);
      }
    }
    if (date.year === 1 && idx >= 0) {
      let [, startMonth, startDay] = $62225008020f0a13$var$ERA_START_DATES[idx];
      date.month = Math.max(startMonth, date.month);
      if (date.month === startMonth)
        date.day = Math.max(startDay, date.day);
    }
  }
  getEras() {
    return $62225008020f0a13$var$ERA_NAMES;
  }
  getYearsInEra(date) {
    let era = $62225008020f0a13$var$ERA_NAMES.indexOf(date.era);
    let cur = $62225008020f0a13$var$ERA_START_DATES[era];
    let next = $62225008020f0a13$var$ERA_START_DATES[era + 1];
    if (next == null)
      return 9999 - cur[0] + 1;
    let years = next[0] - cur[0];
    if (date.month < next[1] || date.month === next[1] && date.day < next[2])
      years++;
    return years;
  }
  getDaysInMonth(date) {
    return super.getDaysInMonth($62225008020f0a13$var$toGregorian(date));
  }
  getMinimumMonthInYear(date) {
    let start = $62225008020f0a13$var$getMinimums(date);
    return start ? start[1] : 1;
  }
  getMinimumDayInMonth(date) {
    let start = $62225008020f0a13$var$getMinimums(date);
    return start && date.month === start[1] ? start[2] : 1;
  }
  constructor(...args) {
    super(...args);
    this.identifier = "japanese";
  }
};
function $62225008020f0a13$var$getMinimums(date) {
  if (date.year === 1) {
    let idx = $62225008020f0a13$var$ERA_NAMES.indexOf(date.era);
    return $62225008020f0a13$var$ERA_START_DATES[idx];
  }
}
var $8d73d47422ca7302$var$BUDDHIST_ERA_START = -543;
var $8d73d47422ca7302$export$42d20a78301dee44 = class extends (0, $3b62074eb05584b2$export$80ee6245ec4f29ec) {
  fromJulianDay(jd) {
    let gregorianDate = super.fromJulianDay(jd);
    let year = (0, $3b62074eb05584b2$export$c36e0ecb2d4fa69d)(gregorianDate.era, gregorianDate.year);
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, year - $8d73d47422ca7302$var$BUDDHIST_ERA_START, gregorianDate.month, gregorianDate.day);
  }
  toJulianDay(date) {
    return super.toJulianDay($8d73d47422ca7302$var$toGregorian(date));
  }
  getEras() {
    return [
      "BE"
    ];
  }
  getDaysInMonth(date) {
    return super.getDaysInMonth($8d73d47422ca7302$var$toGregorian(date));
  }
  balanceDate() {
  }
  constructor(...args) {
    super(...args);
    this.identifier = "buddhist";
  }
};
function $8d73d47422ca7302$var$toGregorian(date) {
  let [era, year] = (0, $3b62074eb05584b2$export$4475b7e617eb123c)(date.year + $8d73d47422ca7302$var$BUDDHIST_ERA_START);
  return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(era, year, date.month, date.day);
}
var $5f31bd6f0c8940b2$var$TAIWAN_ERA_START = 1911;
function $5f31bd6f0c8940b2$var$gregorianYear(date) {
  return date.era === "minguo" ? date.year + $5f31bd6f0c8940b2$var$TAIWAN_ERA_START : 1 - date.year + $5f31bd6f0c8940b2$var$TAIWAN_ERA_START;
}
function $5f31bd6f0c8940b2$var$gregorianToTaiwan(year) {
  let y = year - $5f31bd6f0c8940b2$var$TAIWAN_ERA_START;
  if (y > 0)
    return [
      "minguo",
      y
    ];
  else
    return [
      "before_minguo",
      1 - y
    ];
}
var $5f31bd6f0c8940b2$export$65e01080afcb0799 = class extends (0, $3b62074eb05584b2$export$80ee6245ec4f29ec) {
  fromJulianDay(jd) {
    let date = super.fromJulianDay(jd);
    let extendedYear = (0, $3b62074eb05584b2$export$c36e0ecb2d4fa69d)(date.era, date.year);
    let [era, year] = $5f31bd6f0c8940b2$var$gregorianToTaiwan(extendedYear);
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, era, year, date.month, date.day);
  }
  toJulianDay(date) {
    return super.toJulianDay($5f31bd6f0c8940b2$var$toGregorian(date));
  }
  getEras() {
    return [
      "before_minguo",
      "minguo"
    ];
  }
  balanceDate(date) {
    let [era, year] = $5f31bd6f0c8940b2$var$gregorianToTaiwan($5f31bd6f0c8940b2$var$gregorianYear(date));
    date.era = era;
    date.year = year;
  }
  isInverseEra(date) {
    return date.era === "before_minguo";
  }
  getDaysInMonth(date) {
    return super.getDaysInMonth($5f31bd6f0c8940b2$var$toGregorian(date));
  }
  getYearsInEra(date) {
    return date.era === "before_minguo" ? 9999 : 9999 - $5f31bd6f0c8940b2$var$TAIWAN_ERA_START;
  }
  constructor(...args) {
    super(...args);
    this.identifier = "roc";
  }
};
function $5f31bd6f0c8940b2$var$toGregorian(date) {
  let [era, year] = (0, $3b62074eb05584b2$export$4475b7e617eb123c)($5f31bd6f0c8940b2$var$gregorianYear(date));
  return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(era, year, date.month, date.day);
}
var $f3ed2e4472ae7e25$var$PERSIAN_EPOCH = 1948321;
function $f3ed2e4472ae7e25$var$isLeapYear(year) {
  let y0 = year > 0 ? year - 474 : year - 473;
  let y1 = (0, $2b4dce13dd5a17fa$export$842a2cf37af977e1)(y0, 2820) + 474;
  return (0, $2b4dce13dd5a17fa$export$842a2cf37af977e1)((y1 + 38) * 31, 128) < 31;
}
function $f3ed2e4472ae7e25$var$persianToJulianDay(year, month, day) {
  let y0 = year > 0 ? year - 474 : year - 473;
  let y1 = (0, $2b4dce13dd5a17fa$export$842a2cf37af977e1)(y0, 2820) + 474;
  let offset = month <= 7 ? 31 * (month - 1) : 30 * (month - 1) + 6;
  return $f3ed2e4472ae7e25$var$PERSIAN_EPOCH - 1 + 1029983 * Math.floor(y0 / 2820) + 365 * (y1 - 1) + Math.floor((31 * y1 - 5) / 128) + offset + day;
}
var $f3ed2e4472ae7e25$export$37fccdbfd14c5939 = class {
  fromJulianDay(jd) {
    let d0 = jd - $f3ed2e4472ae7e25$var$persianToJulianDay(475, 1, 1);
    let n2820 = Math.floor(d0 / 1029983);
    let d1 = (0, $2b4dce13dd5a17fa$export$842a2cf37af977e1)(d0, 1029983);
    let y2820 = d1 === 1029982 ? 2820 : Math.floor((128 * d1 + 46878) / 46751);
    let year = 474 + 2820 * n2820 + y2820;
    if (year <= 0)
      year--;
    let yDay = jd - $f3ed2e4472ae7e25$var$persianToJulianDay(year, 1, 1) + 1;
    let month = yDay <= 186 ? Math.ceil(yDay / 31) : Math.ceil((yDay - 6) / 31);
    let day = jd - $f3ed2e4472ae7e25$var$persianToJulianDay(year, month, 1) + 1;
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, year, month, day);
  }
  toJulianDay(date) {
    return $f3ed2e4472ae7e25$var$persianToJulianDay(date.year, date.month, date.day);
  }
  getMonthsInYear() {
    return 12;
  }
  getDaysInMonth(date) {
    if (date.month <= 6)
      return 31;
    if (date.month <= 11)
      return 30;
    return $f3ed2e4472ae7e25$var$isLeapYear(date.year) ? 30 : 29;
  }
  getEras() {
    return [
      "AP"
    ];
  }
  getYearsInEra() {
    return 9377;
  }
  constructor() {
    this.identifier = "persian";
  }
};
var $82c358003bdda0a8$var$INDIAN_ERA_START = 78;
var $82c358003bdda0a8$var$INDIAN_YEAR_START = 80;
var $82c358003bdda0a8$export$39f31c639fa15726 = class extends (0, $3b62074eb05584b2$export$80ee6245ec4f29ec) {
  fromJulianDay(jd) {
    let date = super.fromJulianDay(jd);
    let indianYear = date.year - $82c358003bdda0a8$var$INDIAN_ERA_START;
    let yDay = jd - (0, $3b62074eb05584b2$export$f297eb839006d339)(date.era, date.year, 1, 1);
    let leapMonth;
    if (yDay < $82c358003bdda0a8$var$INDIAN_YEAR_START) {
      indianYear--;
      leapMonth = (0, $3b62074eb05584b2$export$553d7fa8e3805fc0)(date.year - 1) ? 31 : 30;
      yDay += leapMonth + 155 + 90 + 10;
    } else {
      leapMonth = (0, $3b62074eb05584b2$export$553d7fa8e3805fc0)(date.year) ? 31 : 30;
      yDay -= $82c358003bdda0a8$var$INDIAN_YEAR_START;
    }
    let indianMonth;
    let indianDay;
    if (yDay < leapMonth) {
      indianMonth = 1;
      indianDay = yDay + 1;
    } else {
      let mDay = yDay - leapMonth;
      if (mDay < 155) {
        indianMonth = Math.floor(mDay / 31) + 2;
        indianDay = mDay % 31 + 1;
      } else {
        mDay -= 155;
        indianMonth = Math.floor(mDay / 30) + 7;
        indianDay = mDay % 30 + 1;
      }
    }
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, indianYear, indianMonth, indianDay);
  }
  toJulianDay(date) {
    let extendedYear = date.year + $82c358003bdda0a8$var$INDIAN_ERA_START;
    let [era, year] = (0, $3b62074eb05584b2$export$4475b7e617eb123c)(extendedYear);
    let leapMonth;
    let jd;
    if ((0, $3b62074eb05584b2$export$553d7fa8e3805fc0)(year)) {
      leapMonth = 31;
      jd = (0, $3b62074eb05584b2$export$f297eb839006d339)(era, year, 3, 21);
    } else {
      leapMonth = 30;
      jd = (0, $3b62074eb05584b2$export$f297eb839006d339)(era, year, 3, 22);
    }
    if (date.month === 1)
      return jd + date.day - 1;
    jd += leapMonth + Math.min(date.month - 2, 5) * 31;
    if (date.month >= 8)
      jd += (date.month - 7) * 30;
    jd += date.day - 1;
    return jd;
  }
  getDaysInMonth(date) {
    if (date.month === 1 && (0, $3b62074eb05584b2$export$553d7fa8e3805fc0)(date.year + $82c358003bdda0a8$var$INDIAN_ERA_START))
      return 31;
    if (date.month >= 2 && date.month <= 6)
      return 31;
    return 30;
  }
  getYearsInEra() {
    return 9919;
  }
  getEras() {
    return [
      "saka"
    ];
  }
  balanceDate() {
  }
  constructor(...args) {
    super(...args);
    this.identifier = "indian";
  }
};
var $f2f3e0e3a817edbd$var$CIVIL_EPOC = 1948440;
var $f2f3e0e3a817edbd$var$ASTRONOMICAL_EPOC = 1948439;
var $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START = 1300;
var $f2f3e0e3a817edbd$var$UMALQURA_YEAR_END = 1600;
var $f2f3e0e3a817edbd$var$UMALQURA_START_DAYS = 460322;
function $f2f3e0e3a817edbd$var$islamicToJulianDay(epoch, year, month, day) {
  return day + Math.ceil(29.5 * (month - 1)) + (year - 1) * 354 + Math.floor((3 + 11 * year) / 30) + epoch - 1;
}
function $f2f3e0e3a817edbd$var$julianDayToIslamic(calendar, epoch, jd) {
  let year = Math.floor((30 * (jd - epoch) + 10646) / 10631);
  let month = Math.min(12, Math.ceil((jd - (29 + $f2f3e0e3a817edbd$var$islamicToJulianDay(epoch, year, 1, 1))) / 29.5) + 1);
  let day = jd - $f2f3e0e3a817edbd$var$islamicToJulianDay(epoch, year, month, 1) + 1;
  return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(calendar, year, month, day);
}
function $f2f3e0e3a817edbd$var$isLeapYear(year) {
  return (14 + 11 * year) % 30 < 11;
}
var $f2f3e0e3a817edbd$export$2066795aadd37bfc = class {
  fromJulianDay(jd) {
    return $f2f3e0e3a817edbd$var$julianDayToIslamic(this, $f2f3e0e3a817edbd$var$CIVIL_EPOC, jd);
  }
  toJulianDay(date) {
    return $f2f3e0e3a817edbd$var$islamicToJulianDay($f2f3e0e3a817edbd$var$CIVIL_EPOC, date.year, date.month, date.day);
  }
  getDaysInMonth(date) {
    let length = 29 + date.month % 2;
    if (date.month === 12 && $f2f3e0e3a817edbd$var$isLeapYear(date.year))
      length++;
    return length;
  }
  getMonthsInYear() {
    return 12;
  }
  getDaysInYear(date) {
    return $f2f3e0e3a817edbd$var$isLeapYear(date.year) ? 355 : 354;
  }
  getYearsInEra() {
    return 9665;
  }
  getEras() {
    return [
      "AH"
    ];
  }
  constructor() {
    this.identifier = "islamic-civil";
  }
};
var $f2f3e0e3a817edbd$export$37f0887f2f9d22f7 = class extends $f2f3e0e3a817edbd$export$2066795aadd37bfc {
  fromJulianDay(jd) {
    return $f2f3e0e3a817edbd$var$julianDayToIslamic(this, $f2f3e0e3a817edbd$var$ASTRONOMICAL_EPOC, jd);
  }
  toJulianDay(date) {
    return $f2f3e0e3a817edbd$var$islamicToJulianDay($f2f3e0e3a817edbd$var$ASTRONOMICAL_EPOC, date.year, date.month, date.day);
  }
  constructor(...args) {
    super(...args);
    this.identifier = "islamic-tbla";
  }
};
var $f2f3e0e3a817edbd$var$UMALQURA_DATA = "qgpUDckO1AbqBmwDrQpVBakGkgepC9QF2gpcBS0NlQZKB1QLagutBa4ETwoXBYsGpQbVCtYCWwmdBE0KJg2VDawFtgm6AlsKKwWVCsoG6Qr0AnYJtgJWCcoKpAvSC9kF3AJtCU0FpQpSC6ULtAW2CVcFlwJLBaMGUgdlC2oFqworBZUMSg2lDcoF1gpXCasESwmlClILagt1BXYCtwhbBFUFqQW0BdoJ3QRuAjYJqgpUDbIN1QXaAlsJqwRVCkkLZAtxC7QFtQpVCiUNkg7JDtQG6QprCasEkwpJDaQNsg25CroEWworBZUKKgtVC1wFvQQ9Ah0JlQpKC1oLbQW2AjsJmwRVBqkGVAdqC2wFrQpVBSkLkgupC9QF2gpaBasKlQVJB2QHqgu1BbYCVgpNDiULUgtqC60FrgIvCZcESwalBqwG1gpdBZ0ETQoWDZUNqgW1BdoCWwmtBJUFygbkBuoK9QS2AlYJqgpUC9IL2QXqAm0JrQSVCkoLpQuyBbUJ1gSXCkcFkwZJB1ULagVrCisFiwpGDaMNygXWCtsEawJLCaUKUgtpC3UFdgG3CFsCKwVlBbQF2gntBG0BtgimClINqQ3UBdoKWwmrBFMGKQdiB6kLsgW1ClUFJQuSDckO0gbpCmsFqwRVCikNVA2qDbUJugQ7CpsETQqqCtUK2gJdCV4ELgqaDFUNsga5BroEXQotBZUKUguoC7QLuQXaAloJSgukDdEO6AZqC20FNQWVBkoNqA3UDdoGWwWdAisGFQtKC5ULqgWuCi4JjwwnBZUGqgbWCl0FnQI=";
var $f2f3e0e3a817edbd$var$UMALQURA_MONTHLENGTH;
var $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE;
function $f2f3e0e3a817edbd$var$umalquraYearStart(year) {
  return $f2f3e0e3a817edbd$var$UMALQURA_START_DAYS + $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE[year - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START];
}
function $f2f3e0e3a817edbd$var$umalquraMonthLength(year, month) {
  let idx = year - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START;
  let mask = 1 << 11 - (month - 1);
  if (($f2f3e0e3a817edbd$var$UMALQURA_MONTHLENGTH[idx] & mask) === 0)
    return 29;
  else
    return 30;
}
function $f2f3e0e3a817edbd$var$umalquraMonthStart(year, month) {
  let day = $f2f3e0e3a817edbd$var$umalquraYearStart(year);
  for (let i = 1; i < month; i++)
    day += $f2f3e0e3a817edbd$var$umalquraMonthLength(year, i);
  return day;
}
function $f2f3e0e3a817edbd$var$umalquraYearLength(year) {
  return $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE[year + 1 - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START] - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE[year - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START];
}
var $f2f3e0e3a817edbd$export$5baab4758c231076 = class extends $f2f3e0e3a817edbd$export$2066795aadd37bfc {
  fromJulianDay(jd) {
    let days = jd - $f2f3e0e3a817edbd$var$CIVIL_EPOC;
    let startDays = $f2f3e0e3a817edbd$var$umalquraYearStart($f2f3e0e3a817edbd$var$UMALQURA_YEAR_START);
    let endDays = $f2f3e0e3a817edbd$var$umalquraYearStart($f2f3e0e3a817edbd$var$UMALQURA_YEAR_END);
    if (days < startDays || days > endDays)
      return super.fromJulianDay(jd);
    else {
      let y = $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START - 1;
      let m = 1;
      let d = 1;
      while (d > 0) {
        y++;
        d = days - $f2f3e0e3a817edbd$var$umalquraYearStart(y) + 1;
        let yearLength = $f2f3e0e3a817edbd$var$umalquraYearLength(y);
        if (d === yearLength) {
          m = 12;
          break;
        } else if (d < yearLength) {
          let monthLength = $f2f3e0e3a817edbd$var$umalquraMonthLength(y, m);
          m = 1;
          while (d > monthLength) {
            d -= monthLength;
            m++;
            monthLength = $f2f3e0e3a817edbd$var$umalquraMonthLength(y, m);
          }
          break;
        }
      }
      return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, y, m, days - $f2f3e0e3a817edbd$var$umalquraMonthStart(y, m) + 1);
    }
  }
  toJulianDay(date) {
    if (date.year < $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START || date.year > $f2f3e0e3a817edbd$var$UMALQURA_YEAR_END)
      return super.toJulianDay(date);
    return $f2f3e0e3a817edbd$var$CIVIL_EPOC + $f2f3e0e3a817edbd$var$umalquraMonthStart(date.year, date.month) + (date.day - 1);
  }
  getDaysInMonth(date) {
    if (date.year < $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START || date.year > $f2f3e0e3a817edbd$var$UMALQURA_YEAR_END)
      return super.getDaysInMonth(date);
    return $f2f3e0e3a817edbd$var$umalquraMonthLength(date.year, date.month);
  }
  getDaysInYear(date) {
    if (date.year < $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START || date.year > $f2f3e0e3a817edbd$var$UMALQURA_YEAR_END)
      return super.getDaysInYear(date);
    return $f2f3e0e3a817edbd$var$umalquraYearLength(date.year);
  }
  constructor() {
    super();
    this.identifier = "islamic-umalqura";
    if (!$f2f3e0e3a817edbd$var$UMALQURA_MONTHLENGTH)
      $f2f3e0e3a817edbd$var$UMALQURA_MONTHLENGTH = new Uint16Array(Uint8Array.from(atob($f2f3e0e3a817edbd$var$UMALQURA_DATA), (c) => c.charCodeAt(0)).buffer);
    if (!$f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE) {
      $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE = new Uint32Array($f2f3e0e3a817edbd$var$UMALQURA_YEAR_END - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START + 1);
      let yearStart = 0;
      for (let year = $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START; year <= $f2f3e0e3a817edbd$var$UMALQURA_YEAR_END; year++) {
        $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START_TABLE[year - $f2f3e0e3a817edbd$var$UMALQURA_YEAR_START] = yearStart;
        for (let i = 1; i <= 12; i++)
          yearStart += $f2f3e0e3a817edbd$var$umalquraMonthLength(year, i);
      }
    }
  }
};
var $7c5f6fbf42389787$var$HEBREW_EPOCH = 347997;
var $7c5f6fbf42389787$var$HOUR_PARTS = 1080;
var $7c5f6fbf42389787$var$DAY_PARTS = 24 * $7c5f6fbf42389787$var$HOUR_PARTS;
var $7c5f6fbf42389787$var$MONTH_DAYS = 29;
var $7c5f6fbf42389787$var$MONTH_FRACT = 12 * $7c5f6fbf42389787$var$HOUR_PARTS + 793;
var $7c5f6fbf42389787$var$MONTH_PARTS = $7c5f6fbf42389787$var$MONTH_DAYS * $7c5f6fbf42389787$var$DAY_PARTS + $7c5f6fbf42389787$var$MONTH_FRACT;
function $7c5f6fbf42389787$var$isLeapYear(year) {
  return (0, $2b4dce13dd5a17fa$export$842a2cf37af977e1)(year * 7 + 1, 19) < 7;
}
function $7c5f6fbf42389787$var$hebrewDelay1(year) {
  let months = Math.floor((235 * year - 234) / 19);
  let parts = 12084 + 13753 * months;
  let day = months * 29 + Math.floor(parts / 25920);
  if ((0, $2b4dce13dd5a17fa$export$842a2cf37af977e1)(3 * (day + 1), 7) < 3)
    day += 1;
  return day;
}
function $7c5f6fbf42389787$var$hebrewDelay2(year) {
  let last = $7c5f6fbf42389787$var$hebrewDelay1(year - 1);
  let present = $7c5f6fbf42389787$var$hebrewDelay1(year);
  let next = $7c5f6fbf42389787$var$hebrewDelay1(year + 1);
  if (next - present === 356)
    return 2;
  if (present - last === 382)
    return 1;
  return 0;
}
function $7c5f6fbf42389787$var$startOfYear(year) {
  return $7c5f6fbf42389787$var$hebrewDelay1(year) + $7c5f6fbf42389787$var$hebrewDelay2(year);
}
function $7c5f6fbf42389787$var$getDaysInYear(year) {
  return $7c5f6fbf42389787$var$startOfYear(year + 1) - $7c5f6fbf42389787$var$startOfYear(year);
}
function $7c5f6fbf42389787$var$getYearType(year) {
  let yearLength = $7c5f6fbf42389787$var$getDaysInYear(year);
  if (yearLength > 380)
    yearLength -= 30;
  switch (yearLength) {
    case 353:
      return 0;
    case 354:
      return 1;
    case 355:
      return 2;
  }
}
function $7c5f6fbf42389787$var$getDaysInMonth(year, month) {
  if (month >= 6 && !$7c5f6fbf42389787$var$isLeapYear(year))
    month++;
  if (month === 4 || month === 7 || month === 9 || month === 11 || month === 13)
    return 29;
  let yearType = $7c5f6fbf42389787$var$getYearType(year);
  if (month === 2)
    return yearType === 2 ? 30 : 29;
  if (month === 3)
    return yearType === 0 ? 29 : 30;
  if (month === 6)
    return $7c5f6fbf42389787$var$isLeapYear(year) ? 30 : 0;
  return 30;
}
var $7c5f6fbf42389787$export$ca405048b8fb5af = class {
  fromJulianDay(jd) {
    let d = jd - $7c5f6fbf42389787$var$HEBREW_EPOCH;
    let m = d * $7c5f6fbf42389787$var$DAY_PARTS / $7c5f6fbf42389787$var$MONTH_PARTS;
    let year = Math.floor((19 * m + 234) / 235) + 1;
    let ys = $7c5f6fbf42389787$var$startOfYear(year);
    let dayOfYear = Math.floor(d - ys);
    while (dayOfYear < 1) {
      year--;
      ys = $7c5f6fbf42389787$var$startOfYear(year);
      dayOfYear = Math.floor(d - ys);
    }
    let month = 1;
    let monthStart = 0;
    while (monthStart < dayOfYear) {
      monthStart += $7c5f6fbf42389787$var$getDaysInMonth(year, month);
      month++;
    }
    month--;
    monthStart -= $7c5f6fbf42389787$var$getDaysInMonth(year, month);
    let day = dayOfYear - monthStart;
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, year, month, day);
  }
  toJulianDay(date) {
    let jd = $7c5f6fbf42389787$var$startOfYear(date.year);
    for (let month = 1; month < date.month; month++)
      jd += $7c5f6fbf42389787$var$getDaysInMonth(date.year, month);
    return jd + date.day + $7c5f6fbf42389787$var$HEBREW_EPOCH;
  }
  getDaysInMonth(date) {
    return $7c5f6fbf42389787$var$getDaysInMonth(date.year, date.month);
  }
  getMonthsInYear(date) {
    return $7c5f6fbf42389787$var$isLeapYear(date.year) ? 13 : 12;
  }
  getDaysInYear(date) {
    return $7c5f6fbf42389787$var$getDaysInYear(date.year);
  }
  getYearsInEra() {
    return 9999;
  }
  getEras() {
    return [
      "AM"
    ];
  }
  balanceYearMonth(date, previousDate) {
    if (previousDate.year !== date.year) {
      if ($7c5f6fbf42389787$var$isLeapYear(previousDate.year) && !$7c5f6fbf42389787$var$isLeapYear(date.year) && previousDate.month > 6)
        date.month--;
      else if (!$7c5f6fbf42389787$var$isLeapYear(previousDate.year) && $7c5f6fbf42389787$var$isLeapYear(date.year) && previousDate.month > 6)
        date.month++;
    }
  }
  constructor() {
    this.identifier = "hebrew";
  }
};
var $b956b2d7a6cf451f$var$ETHIOPIC_EPOCH = 1723856;
var $b956b2d7a6cf451f$var$COPTIC_EPOCH = 1824665;
var $b956b2d7a6cf451f$var$AMETE_MIHRET_DELTA = 5500;
function $b956b2d7a6cf451f$var$ceToJulianDay(epoch, year, month, day) {
  return epoch + 365 * year + Math.floor(year / 4) + 30 * (month - 1) + day - 1;
}
function $b956b2d7a6cf451f$var$julianDayToCE(epoch, jd) {
  let year = Math.floor(4 * (jd - epoch) / 1461);
  let month = 1 + Math.floor((jd - $b956b2d7a6cf451f$var$ceToJulianDay(epoch, year, 1, 1)) / 30);
  let day = jd + 1 - $b956b2d7a6cf451f$var$ceToJulianDay(epoch, year, month, 1);
  return [
    year,
    month,
    day
  ];
}
function $b956b2d7a6cf451f$var$getLeapDay(year) {
  return Math.floor(year % 4 / 3);
}
function $b956b2d7a6cf451f$var$getDaysInMonth(year, month) {
  if (month % 13 !== 0)
    return 30;
  else
    return $b956b2d7a6cf451f$var$getLeapDay(year) + 5;
}
var $b956b2d7a6cf451f$export$26ba6eab5e20cd7d = class {
  fromJulianDay(jd) {
    let [year, month, day] = $b956b2d7a6cf451f$var$julianDayToCE($b956b2d7a6cf451f$var$ETHIOPIC_EPOCH, jd);
    let era = "AM";
    if (year <= 0) {
      era = "AA";
      year += $b956b2d7a6cf451f$var$AMETE_MIHRET_DELTA;
    }
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, era, year, month, day);
  }
  toJulianDay(date) {
    let year = date.year;
    if (date.era === "AA")
      year -= $b956b2d7a6cf451f$var$AMETE_MIHRET_DELTA;
    return $b956b2d7a6cf451f$var$ceToJulianDay($b956b2d7a6cf451f$var$ETHIOPIC_EPOCH, year, date.month, date.day);
  }
  getDaysInMonth(date) {
    return $b956b2d7a6cf451f$var$getDaysInMonth(date.year, date.month);
  }
  getMonthsInYear() {
    return 13;
  }
  getDaysInYear(date) {
    return 365 + $b956b2d7a6cf451f$var$getLeapDay(date.year);
  }
  getYearsInEra(date) {
    return date.era === "AA" ? 9999 : 9991;
  }
  getEras() {
    return [
      "AA",
      "AM"
    ];
  }
  constructor() {
    this.identifier = "ethiopic";
  }
};
var $b956b2d7a6cf451f$export$d72e0c37005a4914 = class extends $b956b2d7a6cf451f$export$26ba6eab5e20cd7d {
  fromJulianDay(jd) {
    let [year, month, day] = $b956b2d7a6cf451f$var$julianDayToCE($b956b2d7a6cf451f$var$ETHIOPIC_EPOCH, jd);
    year += $b956b2d7a6cf451f$var$AMETE_MIHRET_DELTA;
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, "AA", year, month, day);
  }
  getEras() {
    return [
      "AA"
    ];
  }
  getYearsInEra() {
    return 9999;
  }
  constructor(...args) {
    super(...args);
    this.identifier = "ethioaa";
  }
};
var $b956b2d7a6cf451f$export$fe6243cbe1a4b7c1 = class extends $b956b2d7a6cf451f$export$26ba6eab5e20cd7d {
  fromJulianDay(jd) {
    let [year, month, day] = $b956b2d7a6cf451f$var$julianDayToCE($b956b2d7a6cf451f$var$COPTIC_EPOCH, jd);
    let era = "CE";
    if (year <= 0) {
      era = "BCE";
      year = 1 - year;
    }
    return new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(this, era, year, month, day);
  }
  toJulianDay(date) {
    let year = date.year;
    if (date.era === "BCE")
      year = 1 - year;
    return $b956b2d7a6cf451f$var$ceToJulianDay($b956b2d7a6cf451f$var$COPTIC_EPOCH, year, date.month, date.day);
  }
  getDaysInMonth(date) {
    let year = date.year;
    if (date.era === "BCE")
      year = 1 - year;
    return $b956b2d7a6cf451f$var$getDaysInMonth(year, date.month);
  }
  isInverseEra(date) {
    return date.era === "BCE";
  }
  balanceDate(date) {
    if (date.year <= 0) {
      date.era = date.era === "BCE" ? "CE" : "BCE";
      date.year = 1 - date.year;
    }
  }
  getEras() {
    return [
      "BCE",
      "CE"
    ];
  }
  getYearsInEra(date) {
    return date.era === "BCE" ? 9999 : 9715;
  }
  constructor(...args) {
    super(...args);
    this.identifier = "coptic";
  }
};
function $64244302c3013299$export$dd0bbc9b26defe37(name) {
  switch (name) {
    case "buddhist":
      return new (0, $8d73d47422ca7302$export$42d20a78301dee44)();
    case "ethiopic":
      return new (0, $b956b2d7a6cf451f$export$26ba6eab5e20cd7d)();
    case "ethioaa":
      return new (0, $b956b2d7a6cf451f$export$d72e0c37005a4914)();
    case "coptic":
      return new (0, $b956b2d7a6cf451f$export$fe6243cbe1a4b7c1)();
    case "hebrew":
      return new (0, $7c5f6fbf42389787$export$ca405048b8fb5af)();
    case "indian":
      return new (0, $82c358003bdda0a8$export$39f31c639fa15726)();
    case "islamic-civil":
      return new (0, $f2f3e0e3a817edbd$export$2066795aadd37bfc)();
    case "islamic-tbla":
      return new (0, $f2f3e0e3a817edbd$export$37f0887f2f9d22f7)();
    case "islamic-umalqura":
      return new (0, $f2f3e0e3a817edbd$export$5baab4758c231076)();
    case "japanese":
      return new (0, $62225008020f0a13$export$b746ab2b60cdffbf)();
    case "persian":
      return new (0, $f3ed2e4472ae7e25$export$37fccdbfd14c5939)();
    case "roc":
      return new (0, $5f31bd6f0c8940b2$export$65e01080afcb0799)();
    case "gregory":
    default:
      return new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)();
  }
}
var $fb18d541ea1ad717$var$formatterCache = /* @__PURE__ */ new Map();
var $fb18d541ea1ad717$export$ad991b66133851cf = class {
  /** Formats a date as a string according to the locale and format options passed to the constructor. */
  format(value) {
    return this.formatter.format(value);
  }
  /** Formats a date to an array of parts such as separators, numbers, punctuation, and more. */
  formatToParts(value) {
    return this.formatter.formatToParts(value);
  }
  /** Formats a date range as a string. */
  formatRange(start, end) {
    if (typeof this.formatter.formatRange === "function")
      return this.formatter.formatRange(start, end);
    if (end < start)
      throw new RangeError("End date must be >= start date");
    return `${this.formatter.format(start)} – ${this.formatter.format(end)}`;
  }
  /** Formats a date range as an array of parts. */
  formatRangeToParts(start, end) {
    if (typeof this.formatter.formatRangeToParts === "function")
      return this.formatter.formatRangeToParts(start, end);
    if (end < start)
      throw new RangeError("End date must be >= start date");
    let startParts = this.formatter.formatToParts(start);
    let endParts = this.formatter.formatToParts(end);
    return [
      ...startParts.map((p) => ({
        ...p,
        source: "startRange"
      })),
      {
        type: "literal",
        value: " – ",
        source: "shared"
      },
      ...endParts.map((p) => ({
        ...p,
        source: "endRange"
      }))
    ];
  }
  /** Returns the resolved formatting options based on the values passed to the constructor. */
  resolvedOptions() {
    let resolvedOptions = this.formatter.resolvedOptions();
    if ($fb18d541ea1ad717$var$hasBuggyResolvedHourCycle()) {
      if (!this.resolvedHourCycle)
        this.resolvedHourCycle = $fb18d541ea1ad717$var$getResolvedHourCycle(resolvedOptions.locale, this.options);
      resolvedOptions.hourCycle = this.resolvedHourCycle;
      resolvedOptions.hour12 = this.resolvedHourCycle === "h11" || this.resolvedHourCycle === "h12";
    }
    if (resolvedOptions.calendar === "ethiopic-amete-alem")
      resolvedOptions.calendar = "ethioaa";
    return resolvedOptions;
  }
  constructor(locale, options = {}) {
    this.formatter = $fb18d541ea1ad717$var$getCachedDateFormatter(locale, options);
    this.options = options;
  }
};
var $fb18d541ea1ad717$var$hour12Preferences = {
  true: {
    // Only Japanese uses the h11 style for 12 hour time. All others use h12.
    ja: "h11"
  },
  false: {}
};
function $fb18d541ea1ad717$var$getCachedDateFormatter(locale, options = {}) {
  if (typeof options.hour12 === "boolean" && $fb18d541ea1ad717$var$hasBuggyHour12Behavior()) {
    options = {
      ...options
    };
    let pref = $fb18d541ea1ad717$var$hour12Preferences[String(options.hour12)][locale.split("-")[0]];
    let defaultHourCycle = options.hour12 ? "h12" : "h23";
    options.hourCycle = pref !== null && pref !== void 0 ? pref : defaultHourCycle;
    delete options.hour12;
  }
  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : "");
  if ($fb18d541ea1ad717$var$formatterCache.has(cacheKey))
    return $fb18d541ea1ad717$var$formatterCache.get(cacheKey);
  let numberFormatter = new Intl.DateTimeFormat(locale, options);
  $fb18d541ea1ad717$var$formatterCache.set(cacheKey, numberFormatter);
  return numberFormatter;
}
var $fb18d541ea1ad717$var$_hasBuggyHour12Behavior = null;
function $fb18d541ea1ad717$var$hasBuggyHour12Behavior() {
  if ($fb18d541ea1ad717$var$_hasBuggyHour12Behavior == null)
    $fb18d541ea1ad717$var$_hasBuggyHour12Behavior = new Intl.DateTimeFormat("en-US", {
      hour: "numeric",
      hour12: false
    }).format(new Date(2020, 2, 3, 0)) === "24";
  return $fb18d541ea1ad717$var$_hasBuggyHour12Behavior;
}
var $fb18d541ea1ad717$var$_hasBuggyResolvedHourCycle = null;
function $fb18d541ea1ad717$var$hasBuggyResolvedHourCycle() {
  if ($fb18d541ea1ad717$var$_hasBuggyResolvedHourCycle == null)
    $fb18d541ea1ad717$var$_hasBuggyResolvedHourCycle = new Intl.DateTimeFormat("fr", {
      hour: "numeric",
      hour12: false
    }).resolvedOptions().hourCycle === "h12";
  return $fb18d541ea1ad717$var$_hasBuggyResolvedHourCycle;
}
function $fb18d541ea1ad717$var$getResolvedHourCycle(locale, options) {
  if (!options.timeStyle && !options.hour)
    return void 0;
  locale = locale.replace(/(-u-)?-nu-[a-zA-Z0-9]+/, "");
  locale += (locale.includes("-u-") ? "" : "-u") + "-nu-latn";
  let formatter = $fb18d541ea1ad717$var$getCachedDateFormatter(locale, {
    ...options,
    timeZone: void 0
    // use local timezone
  });
  let min = parseInt(formatter.formatToParts(new Date(2020, 2, 3, 0)).find((p) => p.type === "hour").value, 10);
  let max = parseInt(formatter.formatToParts(new Date(2020, 2, 3, 23)).find((p) => p.type === "hour").value, 10);
  if (min === 0 && max === 23)
    return "h23";
  if (min === 24 && max === 23)
    return "h24";
  if (min === 0 && max === 11)
    return "h11";
  if (min === 12 && max === 11)
    return "h12";
  throw new Error("Unexpected hour cycle result");
}

// node_modules/.pnpm/@internationalized+number@3.2.1/node_modules/@internationalized/number/dist/module.js
var $488c6ddbf4ef74c2$var$formatterCache = /* @__PURE__ */ new Map();
var $488c6ddbf4ef74c2$var$supportsSignDisplay = false;
try {
  $488c6ddbf4ef74c2$var$supportsSignDisplay = new Intl.NumberFormat("de-DE", {
    signDisplay: "exceptZero"
  }).resolvedOptions().signDisplay === "exceptZero";
} catch (e) {
}
var $488c6ddbf4ef74c2$var$supportsUnit = false;
try {
  $488c6ddbf4ef74c2$var$supportsUnit = new Intl.NumberFormat("de-DE", {
    style: "unit",
    unit: "degree"
  }).resolvedOptions().style === "unit";
} catch (e) {
}
var $488c6ddbf4ef74c2$var$UNITS = {
  degree: {
    narrow: {
      default: "°",
      "ja-JP": " 度",
      "zh-TW": "度",
      "sl-SI": " °"
    }
  }
};
var $488c6ddbf4ef74c2$export$cc77c4ff7e8673c5 = class {
  /** Formats a number value as a string, according to the locale and options provided to the constructor. */
  format(value) {
    let res = "";
    if (!$488c6ddbf4ef74c2$var$supportsSignDisplay && this.options.signDisplay != null)
      res = $488c6ddbf4ef74c2$export$711b50b3c525e0f2(this.numberFormatter, this.options.signDisplay, value);
    else
      res = this.numberFormatter.format(value);
    if (this.options.style === "unit" && !$488c6ddbf4ef74c2$var$supportsUnit) {
      var _UNITS_unit;
      let { unit, unitDisplay = "short", locale } = this.resolvedOptions();
      let values = (_UNITS_unit = $488c6ddbf4ef74c2$var$UNITS[unit]) === null || _UNITS_unit === void 0 ? void 0 : _UNITS_unit[unitDisplay];
      res += values[locale] || values.default;
    }
    return res;
  }
  /** Formats a number to an array of parts such as separators, digits, punctuation, and more. */
  formatToParts(value) {
    return this.numberFormatter.formatToParts(value);
  }
  /** Formats a number range as a string. */
  formatRange(start, end) {
    if (typeof this.numberFormatter.formatRange === "function")
      return this.numberFormatter.formatRange(start, end);
    if (end < start)
      throw new RangeError("End date must be >= start date");
    return `${this.format(start)} – ${this.format(end)}`;
  }
  /** Formats a number range as an array of parts. */
  formatRangeToParts(start, end) {
    if (typeof this.numberFormatter.formatRangeToParts === "function")
      return this.numberFormatter.formatRangeToParts(start, end);
    if (end < start)
      throw new RangeError("End date must be >= start date");
    let startParts = this.numberFormatter.formatToParts(start);
    let endParts = this.numberFormatter.formatToParts(end);
    return [
      ...startParts.map((p) => ({
        ...p,
        source: "startRange"
      })),
      {
        type: "literal",
        value: " – ",
        source: "shared"
      },
      ...endParts.map((p) => ({
        ...p,
        source: "endRange"
      }))
    ];
  }
  /** Returns the resolved formatting options based on the values passed to the constructor. */
  resolvedOptions() {
    let options = this.numberFormatter.resolvedOptions();
    if (!$488c6ddbf4ef74c2$var$supportsSignDisplay && this.options.signDisplay != null)
      options = {
        ...options,
        signDisplay: this.options.signDisplay
      };
    if (!$488c6ddbf4ef74c2$var$supportsUnit && this.options.style === "unit")
      options = {
        ...options,
        style: "unit",
        unit: this.options.unit,
        unitDisplay: this.options.unitDisplay
      };
    return options;
  }
  constructor(locale, options = {}) {
    this.numberFormatter = $488c6ddbf4ef74c2$var$getCachedNumberFormatter(locale, options);
    this.options = options;
  }
};
function $488c6ddbf4ef74c2$var$getCachedNumberFormatter(locale, options = {}) {
  let { numberingSystem } = options;
  if (numberingSystem && locale.indexOf("-u-nu-") === -1)
    locale = `${locale}-u-nu-${numberingSystem}`;
  if (options.style === "unit" && !$488c6ddbf4ef74c2$var$supportsUnit) {
    var _UNITS_unit;
    let { unit, unitDisplay = "short" } = options;
    if (!unit)
      throw new Error('unit option must be provided with style: "unit"');
    if (!((_UNITS_unit = $488c6ddbf4ef74c2$var$UNITS[unit]) === null || _UNITS_unit === void 0 ? void 0 : _UNITS_unit[unitDisplay]))
      throw new Error(`Unsupported unit ${unit} with unitDisplay = ${unitDisplay}`);
    options = {
      ...options,
      style: "decimal"
    };
  }
  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : "");
  if ($488c6ddbf4ef74c2$var$formatterCache.has(cacheKey))
    return $488c6ddbf4ef74c2$var$formatterCache.get(cacheKey);
  let numberFormatter = new Intl.NumberFormat(locale, options);
  $488c6ddbf4ef74c2$var$formatterCache.set(cacheKey, numberFormatter);
  return numberFormatter;
}
function $488c6ddbf4ef74c2$export$711b50b3c525e0f2(numberFormat, signDisplay, num) {
  if (signDisplay === "auto")
    return numberFormat.format(num);
  else if (signDisplay === "never")
    return numberFormat.format(Math.abs(num));
  else {
    let needsPositiveSign = false;
    if (signDisplay === "always")
      needsPositiveSign = num > 0 || Object.is(num, 0);
    else if (signDisplay === "exceptZero") {
      if (Object.is(num, -0) || Object.is(num, 0))
        num = Math.abs(num);
      else
        needsPositiveSign = num > 0;
    }
    if (needsPositiveSign) {
      let negative = numberFormat.format(-num);
      let noSign = numberFormat.format(num);
      let minus = negative.replace(noSign, "").replace(/\u200e|\u061C/, "");
      if ([
        ...minus
      ].length !== 1)
        console.warn("@react-aria/i18n polyfill for NumberFormat signDisplay: Unsupported case");
      let positive = negative.replace(noSign, "!!!").replace(minus, "+").replace("!!!", noSign);
      return positive;
    } else
      return numberFormat.format(num);
  }
}
var $6c7bd7858deea686$var$CURRENCY_SIGN_REGEX = new RegExp("^.*\\(.*\\).*$");
var $6c7bd7858deea686$var$NUMBERING_SYSTEMS = [
  "latn",
  "arab",
  "hanidec"
];
var $6c7bd7858deea686$export$cd11ab140839f11d = class {
  /**
  * Parses the given string to a number. Returns NaN if a valid number could not be parsed.
  */
  parse(value) {
    return $6c7bd7858deea686$var$getNumberParserImpl(this.locale, this.options, value).parse(value);
  }
  /**
  * Returns whether the given string could potentially be a valid number. This should be used to
  * validate user input as the user types. If a `minValue` or `maxValue` is provided, the validity
  * of the minus/plus sign characters can be checked.
  */
  isValidPartialNumber(value, minValue, maxValue) {
    return $6c7bd7858deea686$var$getNumberParserImpl(this.locale, this.options, value).isValidPartialNumber(value, minValue, maxValue);
  }
  /**
  * Returns a numbering system for which the given string is valid in the current locale.
  * If no numbering system could be detected, the default numbering system for the current
  * locale is returned.
  */
  getNumberingSystem(value) {
    return $6c7bd7858deea686$var$getNumberParserImpl(this.locale, this.options, value).options.numberingSystem;
  }
  constructor(locale, options = {}) {
    this.locale = locale;
    this.options = options;
  }
};
var $6c7bd7858deea686$var$numberParserCache = /* @__PURE__ */ new Map();
function $6c7bd7858deea686$var$getNumberParserImpl(locale, options, value) {
  let defaultParser = $6c7bd7858deea686$var$getCachedNumberParser(locale, options);
  if (!locale.includes("-nu-") && !defaultParser.isValidPartialNumber(value)) {
    for (let numberingSystem of $6c7bd7858deea686$var$NUMBERING_SYSTEMS)
      if (numberingSystem !== defaultParser.options.numberingSystem) {
        let parser = $6c7bd7858deea686$var$getCachedNumberParser(locale + (locale.includes("-u-") ? "-nu-" : "-u-nu-") + numberingSystem, options);
        if (parser.isValidPartialNumber(value))
          return parser;
      }
  }
  return defaultParser;
}
function $6c7bd7858deea686$var$getCachedNumberParser(locale, options) {
  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : "");
  let parser = $6c7bd7858deea686$var$numberParserCache.get(cacheKey);
  if (!parser) {
    parser = new $6c7bd7858deea686$var$NumberParserImpl(locale, options);
    $6c7bd7858deea686$var$numberParserCache.set(cacheKey, parser);
  }
  return parser;
}
var $6c7bd7858deea686$var$NumberParserImpl = class {
  parse(value) {
    let fullySanitizedValue = this.sanitize(value);
    fullySanitizedValue = $6c7bd7858deea686$var$replaceAll(fullySanitizedValue, this.symbols.group, "").replace(this.symbols.decimal, ".").replace(this.symbols.minusSign, "-").replace(this.symbols.numeral, this.symbols.index);
    let newValue = fullySanitizedValue ? +fullySanitizedValue : NaN;
    if (isNaN(newValue))
      return NaN;
    if (this.options.currencySign === "accounting" && $6c7bd7858deea686$var$CURRENCY_SIGN_REGEX.test(value))
      newValue = -1 * newValue;
    if (this.options.style === "percent") {
      newValue /= 100;
      var _this_options_maximumFractionDigits;
      newValue = +newValue.toFixed(((_this_options_maximumFractionDigits = this.options.maximumFractionDigits) !== null && _this_options_maximumFractionDigits !== void 0 ? _this_options_maximumFractionDigits : 0) + 2);
    }
    return newValue;
  }
  sanitize(value) {
    value = value.replace(this.symbols.literals, "");
    value = value.replace("-", this.symbols.minusSign);
    if (this.options.numberingSystem === "arab") {
      value = value.replace(",", this.symbols.decimal);
      value = value.replace(String.fromCharCode(1548), this.symbols.decimal);
      value = $6c7bd7858deea686$var$replaceAll(value, ".", this.symbols.group);
    }
    if (this.options.locale === "fr-FR")
      value = $6c7bd7858deea686$var$replaceAll(value, ".", String.fromCharCode(8239));
    return value;
  }
  isValidPartialNumber(value, minValue = -Infinity, maxValue = Infinity) {
    value = this.sanitize(value);
    if (value.startsWith(this.symbols.minusSign) && minValue < 0)
      value = value.slice(this.symbols.minusSign.length);
    else if (this.symbols.plusSign && value.startsWith(this.symbols.plusSign) && maxValue > 0)
      value = value.slice(this.symbols.plusSign.length);
    if (value.startsWith(this.symbols.group))
      return false;
    value = $6c7bd7858deea686$var$replaceAll(value, this.symbols.group, "").replace(this.symbols.numeral, "").replace(this.symbols.decimal, "");
    return value.length === 0;
  }
  constructor(locale, options = {}) {
    this.formatter = new Intl.NumberFormat(locale, options);
    this.options = this.formatter.resolvedOptions();
    this.symbols = $6c7bd7858deea686$var$getSymbols(this.formatter, this.options, options);
  }
};
var $6c7bd7858deea686$var$nonLiteralParts = /* @__PURE__ */ new Set([
  "decimal",
  "fraction",
  "integer",
  "minusSign",
  "plusSign",
  "group"
]);
function $6c7bd7858deea686$var$getSymbols(formatter, intlOptions, originalOptions) {
  var _allParts_find, _posAllParts_find, _allParts_find1, _allParts_find2;
  let allParts = formatter.formatToParts(-10000.111);
  let posAllParts = formatter.formatToParts(10000.111);
  let singularParts = formatter.formatToParts(1);
  var _allParts_find_value;
  let minusSign = (_allParts_find_value = (_allParts_find = allParts.find((p) => p.type === "minusSign")) === null || _allParts_find === void 0 ? void 0 : _allParts_find.value) !== null && _allParts_find_value !== void 0 ? _allParts_find_value : "-";
  let plusSign = (_posAllParts_find = posAllParts.find((p) => p.type === "plusSign")) === null || _posAllParts_find === void 0 ? void 0 : _posAllParts_find.value;
  if (!plusSign && ((originalOptions === null || originalOptions === void 0 ? void 0 : originalOptions.signDisplay) === "exceptZero" || (originalOptions === null || originalOptions === void 0 ? void 0 : originalOptions.signDisplay) === "always"))
    plusSign = "+";
  let decimal = (_allParts_find1 = allParts.find((p) => p.type === "decimal")) === null || _allParts_find1 === void 0 ? void 0 : _allParts_find1.value;
  let group = (_allParts_find2 = allParts.find((p) => p.type === "group")) === null || _allParts_find2 === void 0 ? void 0 : _allParts_find2.value;
  let pluralLiterals = allParts.filter((p) => !$6c7bd7858deea686$var$nonLiteralParts.has(p.type)).map((p) => $6c7bd7858deea686$var$escapeRegex(p.value));
  let singularLiterals = singularParts.filter((p) => !$6c7bd7858deea686$var$nonLiteralParts.has(p.type)).map((p) => $6c7bd7858deea686$var$escapeRegex(p.value));
  let sortedLiterals = [
    .../* @__PURE__ */ new Set([
      ...singularLiterals,
      ...pluralLiterals
    ])
  ].sort((a, b) => b.length - a.length);
  let literals = sortedLiterals.length === 0 ? new RegExp("[\\p{White_Space}]", "gu") : new RegExp(`${sortedLiterals.join("|")}|[\\p{White_Space}]`, "gu");
  let numerals = [
    ...new Intl.NumberFormat(intlOptions.locale, {
      useGrouping: false
    }).format(9876543210)
  ].reverse();
  let indexes = new Map(numerals.map((d, i) => [
    d,
    i
  ]));
  let numeral = new RegExp(`[${numerals.join("")}]`, "g");
  let index = (d) => String(indexes.get(d));
  return {
    minusSign,
    plusSign,
    decimal,
    group,
    literals,
    numeral,
    index
  };
}
function $6c7bd7858deea686$var$replaceAll(str, find, replace) {
  if (str.replaceAll)
    return str.replaceAll(find, replace);
  return str.split(find).join(replace);
}
function $6c7bd7858deea686$var$escapeRegex(string) {
  return string.replace(/[-/\\^$*+?.()|[\]{}]/g, "\\$&");
}

// node_modules/.pnpm/@react-aria+i18n@3.8.1_react@18.2.0/node_modules/@react-aria/i18n/dist/real-module.js
var $148a7a147e38ea7f$var$RTL_SCRIPTS = /* @__PURE__ */ new Set([
  "Arab",
  "Syrc",
  "Samr",
  "Mand",
  "Thaa",
  "Mend",
  "Nkoo",
  "Adlm",
  "Rohg",
  "Hebr"
]);
var $148a7a147e38ea7f$var$RTL_LANGS = /* @__PURE__ */ new Set([
  "ae",
  "ar",
  "arc",
  "bcc",
  "bqi",
  "ckb",
  "dv",
  "fa",
  "glk",
  "he",
  "ku",
  "mzn",
  "nqo",
  "pnb",
  "ps",
  "sd",
  "ug",
  "ur",
  "yi"
]);
function $148a7a147e38ea7f$export$702d680b21cbd764(locale) {
  if (Intl.Locale) {
    let script = new Intl.Locale(locale).maximize().script;
    return $148a7a147e38ea7f$var$RTL_SCRIPTS.has(script);
  }
  let lang = locale.split("-")[0];
  return $148a7a147e38ea7f$var$RTL_LANGS.has(lang);
}
function $1e5a04cdaf7d1af8$export$f09106e7c6677ec5() {
  let locale = typeof navigator !== "undefined" && (navigator.language || navigator.userLanguage) || "en-US";
  try {
    Intl.DateTimeFormat.supportedLocalesOf([
      locale
    ]);
  } catch (_err) {
    locale = "en-US";
  }
  return {
    locale,
    direction: (0, $148a7a147e38ea7f$export$702d680b21cbd764)(locale) ? "rtl" : "ltr"
  };
}
var $1e5a04cdaf7d1af8$var$currentLocale = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5();
var $1e5a04cdaf7d1af8$var$listeners = /* @__PURE__ */ new Set();
function $1e5a04cdaf7d1af8$var$updateLocale() {
  $1e5a04cdaf7d1af8$var$currentLocale = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5();
  for (let listener of $1e5a04cdaf7d1af8$var$listeners)
    listener($1e5a04cdaf7d1af8$var$currentLocale);
}
function $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a() {
  let isSSR = (0, $b5e257d569688ac6$export$535bd6ca7f90a273)();
  let [defaultLocale, setDefaultLocale] = (0, import_react6.useState)($1e5a04cdaf7d1af8$var$currentLocale);
  (0, import_react6.useEffect)(() => {
    if ($1e5a04cdaf7d1af8$var$listeners.size === 0)
      window.addEventListener("languagechange", $1e5a04cdaf7d1af8$var$updateLocale);
    $1e5a04cdaf7d1af8$var$listeners.add(setDefaultLocale);
    return () => {
      $1e5a04cdaf7d1af8$var$listeners.delete(setDefaultLocale);
      if ($1e5a04cdaf7d1af8$var$listeners.size === 0)
        window.removeEventListener("languagechange", $1e5a04cdaf7d1af8$var$updateLocale);
    };
  }, []);
  if (isSSR)
    return {
      locale: "en-US",
      direction: "ltr"
    };
  return defaultLocale;
}
var $18f2051aff69b9bf$var$I18nContext = (0, import_react6.default).createContext(null);
function $18f2051aff69b9bf$export$43bb16f9c6d9e3f7() {
  let defaultLocale = (0, $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a)();
  let context = (0, import_react6.useContext)($18f2051aff69b9bf$var$I18nContext);
  return context || defaultLocale;
}
var $fca6afa0e843324b$var$cache = /* @__PURE__ */ new WeakMap();
function $fca6afa0e843324b$var$getCachedDictionary(strings) {
  let dictionary = $fca6afa0e843324b$var$cache.get(strings);
  if (!dictionary) {
    dictionary = new (0, $5b160d28a433310d$export$c17fa47878dc55b6)(strings);
    $fca6afa0e843324b$var$cache.set(strings, dictionary);
  }
  return dictionary;
}
function $fca6afa0e843324b$export$f12b703ca79dfbb1(strings) {
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let dictionary = (0, import_react6.useMemo)(() => $fca6afa0e843324b$var$getCachedDictionary(strings), [
    strings
  ]);
  return (0, import_react6.useMemo)(() => new (0, $6db58dc88e78b024$export$2f817fcdc4b89ae0)(locale, dictionary), [
    locale,
    dictionary
  ]);
}
function $896ba0a80a8f4d36$export$85fd5fdf27bacc79(options) {
  options = (0, $5a387cc49350e6db$export$722debc0e56fea39)(options, $896ba0a80a8f4d36$var$isEqual);
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  return (0, import_react6.useMemo)(() => new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale, options), [
    locale,
    options
  ]);
}
function $896ba0a80a8f4d36$var$isEqual(a, b) {
  if (a === b)
    return true;
  let aKeys = Object.keys(a);
  let bKeys = Object.keys(b);
  if (aKeys.length !== bKeys.length)
    return false;
  for (let key of aKeys) {
    if (b[key] !== a[key])
      return false;
  }
  return true;
}
function $a916eb452884faea$export$b7a616150fdb9f44(options = {}) {
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  return (0, import_react6.useMemo)(() => new (0, $488c6ddbf4ef74c2$export$cc77c4ff7e8673c5)(locale, options), [
    locale,
    options
  ]);
}
var $325a3faab7a68acd$var$cache = /* @__PURE__ */ new Map();
function $325a3faab7a68acd$export$a16aca283550c30d(options) {
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : "");
  if ($325a3faab7a68acd$var$cache.has(cacheKey))
    return $325a3faab7a68acd$var$cache.get(cacheKey);
  let formatter = new Intl.Collator(locale, options);
  $325a3faab7a68acd$var$cache.set(cacheKey, formatter);
  return formatter;
}
function $bb77f239b46e8c72$export$3274cf84b703fff(options) {
  let collator = (0, $325a3faab7a68acd$export$a16aca283550c30d)({
    usage: "search",
    ...options
  });
  let startsWith4 = (0, import_react6.useCallback)((string, substring) => {
    if (substring.length === 0)
      return true;
    string = string.normalize("NFC");
    substring = substring.normalize("NFC");
    return collator.compare(string.slice(0, substring.length), substring) === 0;
  }, [
    collator
  ]);
  let endsWith = (0, import_react6.useCallback)((string, substring) => {
    if (substring.length === 0)
      return true;
    string = string.normalize("NFC");
    substring = substring.normalize("NFC");
    return collator.compare(string.slice(-substring.length), substring) === 0;
  }, [
    collator
  ]);
  let contains = (0, import_react6.useCallback)((string, substring) => {
    if (substring.length === 0)
      return true;
    string = string.normalize("NFC");
    substring = substring.normalize("NFC");
    let scan = 0;
    let sliceLen = substring.length;
    for (; scan + sliceLen <= string.length; scan++) {
      let slice = string.slice(scan, scan + sliceLen);
      if (collator.compare(substring, slice) === 0)
        return true;
    }
    return false;
  }, [
    collator
  ]);
  return (0, import_react6.useMemo)(() => ({
    startsWith: startsWith4,
    endsWith,
    contains
  }), [
    startsWith4,
    endsWith,
    contains
  ]);
}

// node_modules/.pnpm/tslib@2.6.2/node_modules/tslib/tslib.es6.js
var extendStatics = function(d, b) {
  extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
    d2.__proto__ = b2;
  } || function(d2, b2) {
    for (var p in b2)
      if (Object.prototype.hasOwnProperty.call(b2, p))
        d2[p] = b2[p];
  };
  return extendStatics(d, b);
};
function __extends(d, b) {
  if (typeof b !== "function" && b !== null)
    throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
  extendStatics(d, b);
  function __() {
    this.constructor = d;
  }
  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var __assign = function() {
  __assign = Object.assign || function __assign2(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
function __rest(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
}
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
}

// node_modules/.pnpm/@formatjs+icu-messageformat-parser@2.6.0/node_modules/@formatjs/icu-messageformat-parser/lib/error.js
var ErrorKind;
(function(ErrorKind2) {
  ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_CLOSING_BRACE"] = 1] = "EXPECT_ARGUMENT_CLOSING_BRACE";
  ErrorKind2[ErrorKind2["EMPTY_ARGUMENT"] = 2] = "EMPTY_ARGUMENT";
  ErrorKind2[ErrorKind2["MALFORMED_ARGUMENT"] = 3] = "MALFORMED_ARGUMENT";
  ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_TYPE"] = 4] = "EXPECT_ARGUMENT_TYPE";
  ErrorKind2[ErrorKind2["INVALID_ARGUMENT_TYPE"] = 5] = "INVALID_ARGUMENT_TYPE";
  ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_STYLE"] = 6] = "EXPECT_ARGUMENT_STYLE";
  ErrorKind2[ErrorKind2["INVALID_NUMBER_SKELETON"] = 7] = "INVALID_NUMBER_SKELETON";
  ErrorKind2[ErrorKind2["INVALID_DATE_TIME_SKELETON"] = 8] = "INVALID_DATE_TIME_SKELETON";
  ErrorKind2[ErrorKind2["EXPECT_NUMBER_SKELETON"] = 9] = "EXPECT_NUMBER_SKELETON";
  ErrorKind2[ErrorKind2["EXPECT_DATE_TIME_SKELETON"] = 10] = "EXPECT_DATE_TIME_SKELETON";
  ErrorKind2[ErrorKind2["UNCLOSED_QUOTE_IN_ARGUMENT_STYLE"] = 11] = "UNCLOSED_QUOTE_IN_ARGUMENT_STYLE";
  ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_OPTIONS"] = 12] = "EXPECT_SELECT_ARGUMENT_OPTIONS";
  ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE"] = 13] = "EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE";
  ErrorKind2[ErrorKind2["INVALID_PLURAL_ARGUMENT_OFFSET_VALUE"] = 14] = "INVALID_PLURAL_ARGUMENT_OFFSET_VALUE";
  ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_SELECTOR"] = 15] = "EXPECT_SELECT_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_SELECTOR"] = 16] = "EXPECT_PLURAL_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT"] = 17] = "EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT";
  ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT"] = 18] = "EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT";
  ErrorKind2[ErrorKind2["INVALID_PLURAL_ARGUMENT_SELECTOR"] = 19] = "INVALID_PLURAL_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["DUPLICATE_PLURAL_ARGUMENT_SELECTOR"] = 20] = "DUPLICATE_PLURAL_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["DUPLICATE_SELECT_ARGUMENT_SELECTOR"] = 21] = "DUPLICATE_SELECT_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["MISSING_OTHER_CLAUSE"] = 22] = "MISSING_OTHER_CLAUSE";
  ErrorKind2[ErrorKind2["INVALID_TAG"] = 23] = "INVALID_TAG";
  ErrorKind2[ErrorKind2["INVALID_TAG_NAME"] = 25] = "INVALID_TAG_NAME";
  ErrorKind2[ErrorKind2["UNMATCHED_CLOSING_TAG"] = 26] = "UNMATCHED_CLOSING_TAG";
  ErrorKind2[ErrorKind2["UNCLOSED_TAG"] = 27] = "UNCLOSED_TAG";
})(ErrorKind || (ErrorKind = {}));

// node_modules/.pnpm/@formatjs+icu-messageformat-parser@2.6.0/node_modules/@formatjs/icu-messageformat-parser/lib/types.js
var TYPE;
(function(TYPE2) {
  TYPE2[TYPE2["literal"] = 0] = "literal";
  TYPE2[TYPE2["argument"] = 1] = "argument";
  TYPE2[TYPE2["number"] = 2] = "number";
  TYPE2[TYPE2["date"] = 3] = "date";
  TYPE2[TYPE2["time"] = 4] = "time";
  TYPE2[TYPE2["select"] = 5] = "select";
  TYPE2[TYPE2["plural"] = 6] = "plural";
  TYPE2[TYPE2["pound"] = 7] = "pound";
  TYPE2[TYPE2["tag"] = 8] = "tag";
})(TYPE || (TYPE = {}));
var SKELETON_TYPE;
(function(SKELETON_TYPE2) {
  SKELETON_TYPE2[SKELETON_TYPE2["number"] = 0] = "number";
  SKELETON_TYPE2[SKELETON_TYPE2["dateTime"] = 1] = "dateTime";
})(SKELETON_TYPE || (SKELETON_TYPE = {}));
function isLiteralElement(el) {
  return el.type === TYPE.literal;
}
function isArgumentElement(el) {
  return el.type === TYPE.argument;
}
function isNumberElement(el) {
  return el.type === TYPE.number;
}
function isDateElement(el) {
  return el.type === TYPE.date;
}
function isTimeElement(el) {
  return el.type === TYPE.time;
}
function isSelectElement(el) {
  return el.type === TYPE.select;
}
function isPluralElement(el) {
  return el.type === TYPE.plural;
}
function isPoundElement(el) {
  return el.type === TYPE.pound;
}
function isTagElement(el) {
  return el.type === TYPE.tag;
}
function isNumberSkeleton(el) {
  return !!(el && typeof el === "object" && el.type === SKELETON_TYPE.number);
}
function isDateTimeSkeleton(el) {
  return !!(el && typeof el === "object" && el.type === SKELETON_TYPE.dateTime);
}

// node_modules/.pnpm/@formatjs+icu-messageformat-parser@2.6.0/node_modules/@formatjs/icu-messageformat-parser/lib/regex.generated.js
var SPACE_SEPARATOR_REGEX = /[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/;

// node_modules/.pnpm/@formatjs+icu-skeleton-parser@1.6.0/node_modules/@formatjs/icu-skeleton-parser/lib/date-time.js
var DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;
function parseDateTimeSkeleton(skeleton) {
  var result = {};
  skeleton.replace(DATE_TIME_REGEX, function(match) {
    var len = match.length;
    switch (match[0]) {
      case "G":
        result.era = len === 4 ? "long" : len === 5 ? "narrow" : "short";
        break;
      case "y":
        result.year = len === 2 ? "2-digit" : "numeric";
        break;
      case "Y":
      case "u":
      case "U":
      case "r":
        throw new RangeError("`Y/u/U/r` (year) patterns are not supported, use `y` instead");
      case "q":
      case "Q":
        throw new RangeError("`q/Q` (quarter) patterns are not supported");
      case "M":
      case "L":
        result.month = ["numeric", "2-digit", "short", "long", "narrow"][len - 1];
        break;
      case "w":
      case "W":
        throw new RangeError("`w/W` (week) patterns are not supported");
      case "d":
        result.day = ["numeric", "2-digit"][len - 1];
        break;
      case "D":
      case "F":
      case "g":
        throw new RangeError("`D/F/g` (day) patterns are not supported, use `d` instead");
      case "E":
        result.weekday = len === 4 ? "short" : len === 5 ? "narrow" : "short";
        break;
      case "e":
        if (len < 4) {
          throw new RangeError("`e..eee` (weekday) patterns are not supported");
        }
        result.weekday = ["short", "long", "narrow", "short"][len - 4];
        break;
      case "c":
        if (len < 4) {
          throw new RangeError("`c..ccc` (weekday) patterns are not supported");
        }
        result.weekday = ["short", "long", "narrow", "short"][len - 4];
        break;
      case "a":
        result.hour12 = true;
        break;
      case "b":
      case "B":
        throw new RangeError("`b/B` (period) patterns are not supported, use `a` instead");
      case "h":
        result.hourCycle = "h12";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "H":
        result.hourCycle = "h23";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "K":
        result.hourCycle = "h11";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "k":
        result.hourCycle = "h24";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "j":
      case "J":
      case "C":
        throw new RangeError("`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead");
      case "m":
        result.minute = ["numeric", "2-digit"][len - 1];
        break;
      case "s":
        result.second = ["numeric", "2-digit"][len - 1];
        break;
      case "S":
      case "A":
        throw new RangeError("`S/A` (second) patterns are not supported, use `s` instead");
      case "z":
        result.timeZoneName = len < 4 ? "short" : "long";
        break;
      case "Z":
      case "O":
      case "v":
      case "V":
      case "X":
      case "x":
        throw new RangeError("`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead");
    }
    return "";
  });
  return result;
}

// node_modules/.pnpm/@formatjs+icu-skeleton-parser@1.6.0/node_modules/@formatjs/icu-skeleton-parser/lib/regex.generated.js
var WHITE_SPACE_REGEX = /[\t-\r \x85\u200E\u200F\u2028\u2029]/i;

// node_modules/.pnpm/@formatjs+icu-skeleton-parser@1.6.0/node_modules/@formatjs/icu-skeleton-parser/lib/number.js
function parseNumberSkeletonFromString(skeleton) {
  if (skeleton.length === 0) {
    throw new Error("Number skeleton cannot be empty");
  }
  var stringTokens = skeleton.split(WHITE_SPACE_REGEX).filter(function(x) {
    return x.length > 0;
  });
  var tokens = [];
  for (var _i = 0, stringTokens_1 = stringTokens; _i < stringTokens_1.length; _i++) {
    var stringToken = stringTokens_1[_i];
    var stemAndOptions = stringToken.split("/");
    if (stemAndOptions.length === 0) {
      throw new Error("Invalid number skeleton");
    }
    var stem = stemAndOptions[0], options = stemAndOptions.slice(1);
    for (var _a2 = 0, options_1 = options; _a2 < options_1.length; _a2++) {
      var option = options_1[_a2];
      if (option.length === 0) {
        throw new Error("Invalid number skeleton");
      }
    }
    tokens.push({ stem, options });
  }
  return tokens;
}
function icuUnitToEcma(unit) {
  return unit.replace(/^(.*?)-/, "");
}
var FRACTION_PRECISION_REGEX = /^\.(?:(0+)(\*)?|(#+)|(0+)(#+))$/g;
var SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\+|#+)?[rs]?$/g;
var INTEGER_WIDTH_REGEX = /(\*)(0+)|(#+)(0+)|(0+)/g;
var CONCISE_INTEGER_WIDTH_REGEX = /^(0+)$/;
function parseSignificantPrecision(str) {
  var result = {};
  if (str[str.length - 1] === "r") {
    result.roundingPriority = "morePrecision";
  } else if (str[str.length - 1] === "s") {
    result.roundingPriority = "lessPrecision";
  }
  str.replace(SIGNIFICANT_PRECISION_REGEX, function(_, g1, g2) {
    if (typeof g2 !== "string") {
      result.minimumSignificantDigits = g1.length;
      result.maximumSignificantDigits = g1.length;
    } else if (g2 === "+") {
      result.minimumSignificantDigits = g1.length;
    } else if (g1[0] === "#") {
      result.maximumSignificantDigits = g1.length;
    } else {
      result.minimumSignificantDigits = g1.length;
      result.maximumSignificantDigits = g1.length + (typeof g2 === "string" ? g2.length : 0);
    }
    return "";
  });
  return result;
}
function parseSign(str) {
  switch (str) {
    case "sign-auto":
      return {
        signDisplay: "auto"
      };
    case "sign-accounting":
    case "()":
      return {
        currencySign: "accounting"
      };
    case "sign-always":
    case "+!":
      return {
        signDisplay: "always"
      };
    case "sign-accounting-always":
    case "()!":
      return {
        signDisplay: "always",
        currencySign: "accounting"
      };
    case "sign-except-zero":
    case "+?":
      return {
        signDisplay: "exceptZero"
      };
    case "sign-accounting-except-zero":
    case "()?":
      return {
        signDisplay: "exceptZero",
        currencySign: "accounting"
      };
    case "sign-never":
    case "+_":
      return {
        signDisplay: "never"
      };
  }
}
function parseConciseScientificAndEngineeringStem(stem) {
  var result;
  if (stem[0] === "E" && stem[1] === "E") {
    result = {
      notation: "engineering"
    };
    stem = stem.slice(2);
  } else if (stem[0] === "E") {
    result = {
      notation: "scientific"
    };
    stem = stem.slice(1);
  }
  if (result) {
    var signDisplay = stem.slice(0, 2);
    if (signDisplay === "+!") {
      result.signDisplay = "always";
      stem = stem.slice(2);
    } else if (signDisplay === "+?") {
      result.signDisplay = "exceptZero";
      stem = stem.slice(2);
    }
    if (!CONCISE_INTEGER_WIDTH_REGEX.test(stem)) {
      throw new Error("Malformed concise eng/scientific notation");
    }
    result.minimumIntegerDigits = stem.length;
  }
  return result;
}
function parseNotationOptions(opt) {
  var result = {};
  var signOpts = parseSign(opt);
  if (signOpts) {
    return signOpts;
  }
  return result;
}
function parseNumberSkeleton(tokens) {
  var result = {};
  for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {
    var token = tokens_1[_i];
    switch (token.stem) {
      case "percent":
      case "%":
        result.style = "percent";
        continue;
      case "%x100":
        result.style = "percent";
        result.scale = 100;
        continue;
      case "currency":
        result.style = "currency";
        result.currency = token.options[0];
        continue;
      case "group-off":
      case ",_":
        result.useGrouping = false;
        continue;
      case "precision-integer":
      case ".":
        result.maximumFractionDigits = 0;
        continue;
      case "measure-unit":
      case "unit":
        result.style = "unit";
        result.unit = icuUnitToEcma(token.options[0]);
        continue;
      case "compact-short":
      case "K":
        result.notation = "compact";
        result.compactDisplay = "short";
        continue;
      case "compact-long":
      case "KK":
        result.notation = "compact";
        result.compactDisplay = "long";
        continue;
      case "scientific":
        result = __assign(__assign(__assign({}, result), { notation: "scientific" }), token.options.reduce(function(all, opt2) {
          return __assign(__assign({}, all), parseNotationOptions(opt2));
        }, {}));
        continue;
      case "engineering":
        result = __assign(__assign(__assign({}, result), { notation: "engineering" }), token.options.reduce(function(all, opt2) {
          return __assign(__assign({}, all), parseNotationOptions(opt2));
        }, {}));
        continue;
      case "notation-simple":
        result.notation = "standard";
        continue;
      case "unit-width-narrow":
        result.currencyDisplay = "narrowSymbol";
        result.unitDisplay = "narrow";
        continue;
      case "unit-width-short":
        result.currencyDisplay = "code";
        result.unitDisplay = "short";
        continue;
      case "unit-width-full-name":
        result.currencyDisplay = "name";
        result.unitDisplay = "long";
        continue;
      case "unit-width-iso-code":
        result.currencyDisplay = "symbol";
        continue;
      case "scale":
        result.scale = parseFloat(token.options[0]);
        continue;
      case "integer-width":
        if (token.options.length > 1) {
          throw new RangeError("integer-width stems only accept a single optional option");
        }
        token.options[0].replace(INTEGER_WIDTH_REGEX, function(_, g1, g2, g3, g4, g5) {
          if (g1) {
            result.minimumIntegerDigits = g2.length;
          } else if (g3 && g4) {
            throw new Error("We currently do not support maximum integer digits");
          } else if (g5) {
            throw new Error("We currently do not support exact integer digits");
          }
          return "";
        });
        continue;
    }
    if (CONCISE_INTEGER_WIDTH_REGEX.test(token.stem)) {
      result.minimumIntegerDigits = token.stem.length;
      continue;
    }
    if (FRACTION_PRECISION_REGEX.test(token.stem)) {
      if (token.options.length > 1) {
        throw new RangeError("Fraction-precision stems only accept a single optional option");
      }
      token.stem.replace(FRACTION_PRECISION_REGEX, function(_, g1, g2, g3, g4, g5) {
        if (g2 === "*") {
          result.minimumFractionDigits = g1.length;
        } else if (g3 && g3[0] === "#") {
          result.maximumFractionDigits = g3.length;
        } else if (g4 && g5) {
          result.minimumFractionDigits = g4.length;
          result.maximumFractionDigits = g4.length + g5.length;
        } else {
          result.minimumFractionDigits = g1.length;
          result.maximumFractionDigits = g1.length;
        }
        return "";
      });
      var opt = token.options[0];
      if (opt === "w") {
        result = __assign(__assign({}, result), { trailingZeroDisplay: "stripIfInteger" });
      } else if (opt) {
        result = __assign(__assign({}, result), parseSignificantPrecision(opt));
      }
      continue;
    }
    if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {
      result = __assign(__assign({}, result), parseSignificantPrecision(token.stem));
      continue;
    }
    var signOpts = parseSign(token.stem);
    if (signOpts) {
      result = __assign(__assign({}, result), signOpts);
    }
    var conciseScientificAndEngineeringOpts = parseConciseScientificAndEngineeringStem(token.stem);
    if (conciseScientificAndEngineeringOpts) {
      result = __assign(__assign({}, result), conciseScientificAndEngineeringOpts);
    }
  }
  return result;
}

// node_modules/.pnpm/@formatjs+icu-messageformat-parser@2.6.0/node_modules/@formatjs/icu-messageformat-parser/lib/time-data.generated.js
var timeData = {
  "001": [
    "H",
    "h"
  ],
  "AC": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "AD": [
    "H",
    "hB"
  ],
  "AE": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "AF": [
    "H",
    "hb",
    "hB",
    "h"
  ],
  "AG": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "AI": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "AL": [
    "h",
    "H",
    "hB"
  ],
  "AM": [
    "H",
    "hB"
  ],
  "AO": [
    "H",
    "hB"
  ],
  "AR": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "AS": [
    "h",
    "H"
  ],
  "AT": [
    "H",
    "hB"
  ],
  "AU": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "AW": [
    "H",
    "hB"
  ],
  "AX": [
    "H"
  ],
  "AZ": [
    "H",
    "hB",
    "h"
  ],
  "BA": [
    "H",
    "hB",
    "h"
  ],
  "BB": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "BD": [
    "h",
    "hB",
    "H"
  ],
  "BE": [
    "H",
    "hB"
  ],
  "BF": [
    "H",
    "hB"
  ],
  "BG": [
    "H",
    "hB",
    "h"
  ],
  "BH": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "BJ": [
    "H",
    "hB"
  ],
  "BL": [
    "H",
    "hB"
  ],
  "BM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "BN": [
    "hb",
    "hB",
    "h",
    "H"
  ],
  "BO": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "BQ": [
    "H"
  ],
  "BR": [
    "H",
    "hB"
  ],
  "BS": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "BT": [
    "h",
    "H"
  ],
  "BW": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "BZ": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CA": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "CC": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CD": [
    "hB",
    "H"
  ],
  "CF": [
    "H",
    "h",
    "hB"
  ],
  "CG": [
    "H",
    "hB"
  ],
  "CH": [
    "H",
    "hB",
    "h"
  ],
  "CI": [
    "H",
    "hB"
  ],
  "CK": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CL": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "CM": [
    "H",
    "h",
    "hB"
  ],
  "CN": [
    "H",
    "hB",
    "hb",
    "h"
  ],
  "CO": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "CP": [
    "H"
  ],
  "CR": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "CU": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "CV": [
    "H",
    "hB"
  ],
  "CX": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CY": [
    "h",
    "H",
    "hb",
    "hB"
  ],
  "CZ": [
    "H"
  ],
  "DE": [
    "H",
    "hB"
  ],
  "DG": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "DJ": [
    "h",
    "H"
  ],
  "DK": [
    "H"
  ],
  "DM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "DO": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "DZ": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "EA": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "EC": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "EE": [
    "H",
    "hB"
  ],
  "EG": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "EH": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "ER": [
    "h",
    "H"
  ],
  "ES": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "ET": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "FI": [
    "H"
  ],
  "FJ": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "FK": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "FM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "FR": [
    "H",
    "hB"
  ],
  "GA": [
    "H",
    "hB"
  ],
  "GB": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "GD": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "GE": [
    "H",
    "hB",
    "h"
  ],
  "GF": [
    "H",
    "hB"
  ],
  "GG": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "GH": [
    "h",
    "H"
  ],
  "GI": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "GM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "GN": [
    "H",
    "hB"
  ],
  "GP": [
    "H",
    "hB"
  ],
  "GQ": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "GR": [
    "h",
    "H",
    "hb",
    "hB"
  ],
  "GT": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "GU": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "GW": [
    "H",
    "hB"
  ],
  "GY": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "HK": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "HN": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "HR": [
    "H",
    "hB"
  ],
  "IC": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "ID": [
    "H"
  ],
  "IE": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "IL": [
    "H",
    "hB"
  ],
  "IM": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "IN": [
    "h",
    "H"
  ],
  "IO": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "IQ": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "IR": [
    "hB",
    "H"
  ],
  "IS": [
    "H"
  ],
  "IT": [
    "H",
    "hB"
  ],
  "JE": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "JM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "JO": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "JP": [
    "H",
    "h",
    "K"
  ],
  "KE": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "KG": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "KH": [
    "hB",
    "h",
    "H",
    "hb"
  ],
  "KI": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "KM": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "KN": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "KP": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "KR": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "KW": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "KY": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "KZ": [
    "H",
    "hB"
  ],
  "LA": [
    "H",
    "hb",
    "hB",
    "h"
  ],
  "LB": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "LC": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "LI": [
    "H",
    "hB",
    "h"
  ],
  "LK": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "LR": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "LS": [
    "h",
    "H"
  ],
  "LT": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "LU": [
    "H",
    "h",
    "hB"
  ],
  "LV": [
    "H",
    "hB",
    "hb",
    "h"
  ],
  "LY": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "MA": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "MC": [
    "H",
    "hB"
  ],
  "MD": [
    "H",
    "hB"
  ],
  "ME": [
    "H",
    "hB",
    "h"
  ],
  "MF": [
    "H",
    "hB"
  ],
  "MH": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "MK": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "ML": [
    "H"
  ],
  "MM": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "MN": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "MO": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "MP": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "MQ": [
    "H",
    "hB"
  ],
  "MR": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "MS": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "MW": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "MX": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "MY": [
    "hb",
    "hB",
    "h",
    "H"
  ],
  "MZ": [
    "H",
    "hB"
  ],
  "NA": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "NC": [
    "H",
    "hB"
  ],
  "NE": [
    "H"
  ],
  "NF": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NG": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NI": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "NL": [
    "H",
    "hB"
  ],
  "NP": [
    "H",
    "h",
    "hB"
  ],
  "NR": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NU": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NZ": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "OM": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "PA": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "PE": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "PF": [
    "H",
    "h",
    "hB"
  ],
  "PG": [
    "h",
    "H"
  ],
  "PH": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "PK": [
    "h",
    "hB",
    "H"
  ],
  "PM": [
    "H",
    "hB"
  ],
  "PN": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "PR": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "PS": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "PT": [
    "H",
    "hB"
  ],
  "PW": [
    "h",
    "H"
  ],
  "PY": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "QA": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "RE": [
    "H",
    "hB"
  ],
  "RO": [
    "H",
    "hB"
  ],
  "RS": [
    "H",
    "hB",
    "h"
  ],
  "RU": [
    "H"
  ],
  "SA": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "SB": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "SC": [
    "H",
    "h",
    "hB"
  ],
  "SD": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "SE": [
    "H"
  ],
  "SG": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "SH": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "SI": [
    "H",
    "hB"
  ],
  "SJ": [
    "H"
  ],
  "SK": [
    "H"
  ],
  "SL": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "SM": [
    "H",
    "h",
    "hB"
  ],
  "SN": [
    "H",
    "h",
    "hB"
  ],
  "SO": [
    "h",
    "H"
  ],
  "SR": [
    "H",
    "hB"
  ],
  "SS": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "ST": [
    "H",
    "hB"
  ],
  "SV": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "SX": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "SY": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "SZ": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "TA": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "TC": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "TD": [
    "h",
    "H",
    "hB"
  ],
  "TF": [
    "H",
    "h",
    "hB"
  ],
  "TG": [
    "H",
    "hB"
  ],
  "TL": [
    "H",
    "hB",
    "hb",
    "h"
  ],
  "TN": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "TO": [
    "h",
    "H"
  ],
  "TR": [
    "H",
    "hB"
  ],
  "TT": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "TW": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "TZ": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "UA": [
    "H",
    "hB",
    "h"
  ],
  "UG": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "UM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "US": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "UY": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "UZ": [
    "H",
    "hB",
    "h"
  ],
  "VA": [
    "H",
    "h",
    "hB"
  ],
  "VC": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "VE": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "VG": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "VI": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "VU": [
    "h",
    "H"
  ],
  "WF": [
    "H",
    "hB"
  ],
  "WS": [
    "h",
    "H"
  ],
  "XK": [
    "H",
    "hB",
    "h"
  ],
  "YE": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "YT": [
    "H",
    "hB"
  ],
  "ZA": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "ZM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "af-ZA": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "ar-001": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "ca-ES": [
    "H",
    "h",
    "hB"
  ],
  "en-001": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "es-BO": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-BR": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-EC": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-ES": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-GQ": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-PE": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "fr-CA": [
    "H",
    "h",
    "hB"
  ],
  "gl-ES": [
    "H",
    "h",
    "hB"
  ],
  "gu-IN": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "hi-IN": [
    "hB",
    "h",
    "H"
  ],
  "it-CH": [
    "H",
    "h",
    "hB"
  ],
  "it-IT": [
    "H",
    "h",
    "hB"
  ],
  "kn-IN": [
    "hB",
    "h",
    "H"
  ],
  "ml-IN": [
    "hB",
    "h",
    "H"
  ],
  "mr-IN": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "pa-IN": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "ta-IN": [
    "hB",
    "h",
    "hb",
    "H"
  ],
  "te-IN": [
    "hB",
    "h",
    "H"
  ],
  "zu-ZA": [
    "H",
    "hB",
    "hb",
    "h"
  ]
};

// node_modules/.pnpm/@formatjs+icu-messageformat-parser@2.6.0/node_modules/@formatjs/icu-messageformat-parser/lib/date-time-pattern-generator.js
function getBestPattern(skeleton, locale) {
  var skeletonCopy = "";
  for (var patternPos = 0; patternPos < skeleton.length; patternPos++) {
    var patternChar = skeleton.charAt(patternPos);
    if (patternChar === "j") {
      var extraLength = 0;
      while (patternPos + 1 < skeleton.length && skeleton.charAt(patternPos + 1) === patternChar) {
        extraLength++;
        patternPos++;
      }
      var hourLen = 1 + (extraLength & 1);
      var dayPeriodLen = extraLength < 2 ? 1 : 3 + (extraLength >> 1);
      var dayPeriodChar = "a";
      var hourChar = getDefaultHourSymbolFromLocale(locale);
      if (hourChar == "H" || hourChar == "k") {
        dayPeriodLen = 0;
      }
      while (dayPeriodLen-- > 0) {
        skeletonCopy += dayPeriodChar;
      }
      while (hourLen-- > 0) {
        skeletonCopy = hourChar + skeletonCopy;
      }
    } else if (patternChar === "J") {
      skeletonCopy += "H";
    } else {
      skeletonCopy += patternChar;
    }
  }
  return skeletonCopy;
}
function getDefaultHourSymbolFromLocale(locale) {
  var hourCycle = locale.hourCycle;
  if (hourCycle === void 0 && // @ts-ignore hourCycle(s) is not identified yet
  locale.hourCycles && // @ts-ignore
  locale.hourCycles.length) {
    hourCycle = locale.hourCycles[0];
  }
  if (hourCycle) {
    switch (hourCycle) {
      case "h24":
        return "k";
      case "h23":
        return "H";
      case "h12":
        return "h";
      case "h11":
        return "K";
      default:
        throw new Error("Invalid hourCycle");
    }
  }
  var languageTag = locale.language;
  var regionTag;
  if (languageTag !== "root") {
    regionTag = locale.maximize().region;
  }
  var hourCycles = timeData[regionTag || ""] || timeData[languageTag || ""] || timeData["".concat(languageTag, "-001")] || timeData["001"];
  return hourCycles[0];
}

// node_modules/.pnpm/@formatjs+icu-messageformat-parser@2.6.0/node_modules/@formatjs/icu-messageformat-parser/lib/parser.js
var _a;
var SPACE_SEPARATOR_START_REGEX = new RegExp("^".concat(SPACE_SEPARATOR_REGEX.source, "*"));
var SPACE_SEPARATOR_END_REGEX = new RegExp("".concat(SPACE_SEPARATOR_REGEX.source, "*$"));
function createLocation(start, end) {
  return { start, end };
}
var hasNativeStartsWith = !!String.prototype.startsWith;
var hasNativeFromCodePoint = !!String.fromCodePoint;
var hasNativeFromEntries = !!Object.fromEntries;
var hasNativeCodePointAt = !!String.prototype.codePointAt;
var hasTrimStart = !!String.prototype.trimStart;
var hasTrimEnd = !!String.prototype.trimEnd;
var hasNativeIsSafeInteger = !!Number.isSafeInteger;
var isSafeInteger = hasNativeIsSafeInteger ? Number.isSafeInteger : function(n) {
  return typeof n === "number" && isFinite(n) && Math.floor(n) === n && Math.abs(n) <= 9007199254740991;
};
var REGEX_SUPPORTS_U_AND_Y = true;
try {
  re = RE("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu");
  REGEX_SUPPORTS_U_AND_Y = ((_a = re.exec("a")) === null || _a === void 0 ? void 0 : _a[0]) === "a";
} catch (_) {
  REGEX_SUPPORTS_U_AND_Y = false;
}
var re;
var startsWith = hasNativeStartsWith ? (
  // Native
  function startsWith2(s, search, position) {
    return s.startsWith(search, position);
  }
) : (
  // For IE11
  function startsWith3(s, search, position) {
    return s.slice(position, position + search.length) === search;
  }
);
var fromCodePoint = hasNativeFromCodePoint ? String.fromCodePoint : (
  // IE11
  function fromCodePoint2() {
    var codePoints = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      codePoints[_i] = arguments[_i];
    }
    var elements = "";
    var length = codePoints.length;
    var i = 0;
    var code;
    while (length > i) {
      code = codePoints[i++];
      if (code > 1114111)
        throw RangeError(code + " is not a valid code point");
      elements += code < 65536 ? String.fromCharCode(code) : String.fromCharCode(((code -= 65536) >> 10) + 55296, code % 1024 + 56320);
    }
    return elements;
  }
);
var fromEntries = (
  // native
  hasNativeFromEntries ? Object.fromEntries : (
    // Ponyfill
    function fromEntries2(entries) {
      var obj = {};
      for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
        var _a2 = entries_1[_i], k = _a2[0], v = _a2[1];
        obj[k] = v;
      }
      return obj;
    }
  )
);
var codePointAt = hasNativeCodePointAt ? (
  // Native
  function codePointAt2(s, index) {
    return s.codePointAt(index);
  }
) : (
  // IE 11
  function codePointAt3(s, index) {
    var size = s.length;
    if (index < 0 || index >= size) {
      return void 0;
    }
    var first = s.charCodeAt(index);
    var second;
    return first < 55296 || first > 56319 || index + 1 === size || (second = s.charCodeAt(index + 1)) < 56320 || second > 57343 ? first : (first - 55296 << 10) + (second - 56320) + 65536;
  }
);
var trimStart = hasTrimStart ? (
  // Native
  function trimStart2(s) {
    return s.trimStart();
  }
) : (
  // Ponyfill
  function trimStart3(s) {
    return s.replace(SPACE_SEPARATOR_START_REGEX, "");
  }
);
var trimEnd = hasTrimEnd ? (
  // Native
  function trimEnd2(s) {
    return s.trimEnd();
  }
) : (
  // Ponyfill
  function trimEnd3(s) {
    return s.replace(SPACE_SEPARATOR_END_REGEX, "");
  }
);
function RE(s, flag) {
  return new RegExp(s, flag);
}
var matchIdentifierAtIndex;
if (REGEX_SUPPORTS_U_AND_Y) {
  IDENTIFIER_PREFIX_RE_1 = RE("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu");
  matchIdentifierAtIndex = function matchIdentifierAtIndex2(s, index) {
    var _a2;
    IDENTIFIER_PREFIX_RE_1.lastIndex = index;
    var match = IDENTIFIER_PREFIX_RE_1.exec(s);
    return (_a2 = match[1]) !== null && _a2 !== void 0 ? _a2 : "";
  };
} else {
  matchIdentifierAtIndex = function matchIdentifierAtIndex2(s, index) {
    var match = [];
    while (true) {
      var c = codePointAt(s, index);
      if (c === void 0 || _isWhiteSpace(c) || _isPatternSyntax(c)) {
        break;
      }
      match.push(c);
      index += c >= 65536 ? 2 : 1;
    }
    return fromCodePoint.apply(void 0, match);
  };
}
var IDENTIFIER_PREFIX_RE_1;
var Parser = (
  /** @class */
  function() {
    function Parser2(message, options) {
      if (options === void 0) {
        options = {};
      }
      this.message = message;
      this.position = { offset: 0, line: 1, column: 1 };
      this.ignoreTag = !!options.ignoreTag;
      this.locale = options.locale;
      this.requiresOtherClause = !!options.requiresOtherClause;
      this.shouldParseSkeletons = !!options.shouldParseSkeletons;
    }
    Parser2.prototype.parse = function() {
      if (this.offset() !== 0) {
        throw Error("parser can only be used once");
      }
      return this.parseMessage(0, "", false);
    };
    Parser2.prototype.parseMessage = function(nestingLevel, parentArgType, expectingCloseTag) {
      var elements = [];
      while (!this.isEOF()) {
        var char = this.char();
        if (char === 123) {
          var result = this.parseArgument(nestingLevel, expectingCloseTag);
          if (result.err) {
            return result;
          }
          elements.push(result.val);
        } else if (char === 125 && nestingLevel > 0) {
          break;
        } else if (char === 35 && (parentArgType === "plural" || parentArgType === "selectordinal")) {
          var position = this.clonePosition();
          this.bump();
          elements.push({
            type: TYPE.pound,
            location: createLocation(position, this.clonePosition())
          });
        } else if (char === 60 && !this.ignoreTag && this.peek() === 47) {
          if (expectingCloseTag) {
            break;
          } else {
            return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(this.clonePosition(), this.clonePosition()));
          }
        } else if (char === 60 && !this.ignoreTag && _isAlpha(this.peek() || 0)) {
          var result = this.parseTag(nestingLevel, parentArgType);
          if (result.err) {
            return result;
          }
          elements.push(result.val);
        } else {
          var result = this.parseLiteral(nestingLevel, parentArgType);
          if (result.err) {
            return result;
          }
          elements.push(result.val);
        }
      }
      return { val: elements, err: null };
    };
    Parser2.prototype.parseTag = function(nestingLevel, parentArgType) {
      var startPosition = this.clonePosition();
      this.bump();
      var tagName = this.parseTagName();
      this.bumpSpace();
      if (this.bumpIf("/>")) {
        return {
          val: {
            type: TYPE.literal,
            value: "<".concat(tagName, "/>"),
            location: createLocation(startPosition, this.clonePosition())
          },
          err: null
        };
      } else if (this.bumpIf(">")) {
        var childrenResult = this.parseMessage(nestingLevel + 1, parentArgType, true);
        if (childrenResult.err) {
          return childrenResult;
        }
        var children = childrenResult.val;
        var endTagStartPosition = this.clonePosition();
        if (this.bumpIf("</")) {
          if (this.isEOF() || !_isAlpha(this.char())) {
            return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
          }
          var closingTagNameStartPosition = this.clonePosition();
          var closingTagName = this.parseTagName();
          if (tagName !== closingTagName) {
            return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(closingTagNameStartPosition, this.clonePosition()));
          }
          this.bumpSpace();
          if (!this.bumpIf(">")) {
            return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
          }
          return {
            val: {
              type: TYPE.tag,
              value: tagName,
              children,
              location: createLocation(startPosition, this.clonePosition())
            },
            err: null
          };
        } else {
          return this.error(ErrorKind.UNCLOSED_TAG, createLocation(startPosition, this.clonePosition()));
        }
      } else {
        return this.error(ErrorKind.INVALID_TAG, createLocation(startPosition, this.clonePosition()));
      }
    };
    Parser2.prototype.parseTagName = function() {
      var startOffset = this.offset();
      this.bump();
      while (!this.isEOF() && _isPotentialElementNameChar(this.char())) {
        this.bump();
      }
      return this.message.slice(startOffset, this.offset());
    };
    Parser2.prototype.parseLiteral = function(nestingLevel, parentArgType) {
      var start = this.clonePosition();
      var value = "";
      while (true) {
        var parseQuoteResult = this.tryParseQuote(parentArgType);
        if (parseQuoteResult) {
          value += parseQuoteResult;
          continue;
        }
        var parseUnquotedResult = this.tryParseUnquoted(nestingLevel, parentArgType);
        if (parseUnquotedResult) {
          value += parseUnquotedResult;
          continue;
        }
        var parseLeftAngleResult = this.tryParseLeftAngleBracket();
        if (parseLeftAngleResult) {
          value += parseLeftAngleResult;
          continue;
        }
        break;
      }
      var location = createLocation(start, this.clonePosition());
      return {
        val: { type: TYPE.literal, value, location },
        err: null
      };
    };
    Parser2.prototype.tryParseLeftAngleBracket = function() {
      if (!this.isEOF() && this.char() === 60 && (this.ignoreTag || // If at the opening tag or closing tag position, bail.
      !_isAlphaOrSlash(this.peek() || 0))) {
        this.bump();
        return "<";
      }
      return null;
    };
    Parser2.prototype.tryParseQuote = function(parentArgType) {
      if (this.isEOF() || this.char() !== 39) {
        return null;
      }
      switch (this.peek()) {
        case 39:
          this.bump();
          this.bump();
          return "'";
        case 123:
        case 60:
        case 62:
        case 125:
          break;
        case 35:
          if (parentArgType === "plural" || parentArgType === "selectordinal") {
            break;
          }
          return null;
        default:
          return null;
      }
      this.bump();
      var codePoints = [this.char()];
      this.bump();
      while (!this.isEOF()) {
        var ch = this.char();
        if (ch === 39) {
          if (this.peek() === 39) {
            codePoints.push(39);
            this.bump();
          } else {
            this.bump();
            break;
          }
        } else {
          codePoints.push(ch);
        }
        this.bump();
      }
      return fromCodePoint.apply(void 0, codePoints);
    };
    Parser2.prototype.tryParseUnquoted = function(nestingLevel, parentArgType) {
      if (this.isEOF()) {
        return null;
      }
      var ch = this.char();
      if (ch === 60 || ch === 123 || ch === 35 && (parentArgType === "plural" || parentArgType === "selectordinal") || ch === 125 && nestingLevel > 0) {
        return null;
      } else {
        this.bump();
        return fromCodePoint(ch);
      }
    };
    Parser2.prototype.parseArgument = function(nestingLevel, expectingCloseTag) {
      var openingBracePosition = this.clonePosition();
      this.bump();
      this.bumpSpace();
      if (this.isEOF()) {
        return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
      }
      if (this.char() === 125) {
        this.bump();
        return this.error(ErrorKind.EMPTY_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
      }
      var value = this.parseIdentifierIfPossible().value;
      if (!value) {
        return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
      }
      this.bumpSpace();
      if (this.isEOF()) {
        return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
      }
      switch (this.char()) {
        case 125: {
          this.bump();
          return {
            val: {
              type: TYPE.argument,
              // value does not include the opening and closing braces.
              value,
              location: createLocation(openingBracePosition, this.clonePosition())
            },
            err: null
          };
        }
        case 44: {
          this.bump();
          this.bumpSpace();
          if (this.isEOF()) {
            return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
          }
          return this.parseArgumentOptions(nestingLevel, expectingCloseTag, value, openingBracePosition);
        }
        default:
          return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
      }
    };
    Parser2.prototype.parseIdentifierIfPossible = function() {
      var startingPosition = this.clonePosition();
      var startOffset = this.offset();
      var value = matchIdentifierAtIndex(this.message, startOffset);
      var endOffset = startOffset + value.length;
      this.bumpTo(endOffset);
      var endPosition = this.clonePosition();
      var location = createLocation(startingPosition, endPosition);
      return { value, location };
    };
    Parser2.prototype.parseArgumentOptions = function(nestingLevel, expectingCloseTag, value, openingBracePosition) {
      var _a2;
      var typeStartPosition = this.clonePosition();
      var argType = this.parseIdentifierIfPossible().value;
      var typeEndPosition = this.clonePosition();
      switch (argType) {
        case "":
          return this.error(ErrorKind.EXPECT_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
        case "number":
        case "date":
        case "time": {
          this.bumpSpace();
          var styleAndLocation = null;
          if (this.bumpIf(",")) {
            this.bumpSpace();
            var styleStartPosition = this.clonePosition();
            var result = this.parseSimpleArgStyleIfPossible();
            if (result.err) {
              return result;
            }
            var style = trimEnd(result.val);
            if (style.length === 0) {
              return this.error(ErrorKind.EXPECT_ARGUMENT_STYLE, createLocation(this.clonePosition(), this.clonePosition()));
            }
            var styleLocation = createLocation(styleStartPosition, this.clonePosition());
            styleAndLocation = { style, styleLocation };
          }
          var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
          if (argCloseResult.err) {
            return argCloseResult;
          }
          var location_1 = createLocation(openingBracePosition, this.clonePosition());
          if (styleAndLocation && startsWith(styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style, "::", 0)) {
            var skeleton = trimStart(styleAndLocation.style.slice(2));
            if (argType === "number") {
              var result = this.parseNumberSkeletonFromString(skeleton, styleAndLocation.styleLocation);
              if (result.err) {
                return result;
              }
              return {
                val: { type: TYPE.number, value, location: location_1, style: result.val },
                err: null
              };
            } else {
              if (skeleton.length === 0) {
                return this.error(ErrorKind.EXPECT_DATE_TIME_SKELETON, location_1);
              }
              var dateTimePattern = skeleton;
              if (this.locale) {
                dateTimePattern = getBestPattern(skeleton, this.locale);
              }
              var style = {
                type: SKELETON_TYPE.dateTime,
                pattern: dateTimePattern,
                location: styleAndLocation.styleLocation,
                parsedOptions: this.shouldParseSkeletons ? parseDateTimeSkeleton(dateTimePattern) : {}
              };
              var type = argType === "date" ? TYPE.date : TYPE.time;
              return {
                val: { type, value, location: location_1, style },
                err: null
              };
            }
          }
          return {
            val: {
              type: argType === "number" ? TYPE.number : argType === "date" ? TYPE.date : TYPE.time,
              value,
              location: location_1,
              style: (_a2 = styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style) !== null && _a2 !== void 0 ? _a2 : null
            },
            err: null
          };
        }
        case "plural":
        case "selectordinal":
        case "select": {
          var typeEndPosition_1 = this.clonePosition();
          this.bumpSpace();
          if (!this.bumpIf(",")) {
            return this.error(ErrorKind.EXPECT_SELECT_ARGUMENT_OPTIONS, createLocation(typeEndPosition_1, __assign({}, typeEndPosition_1)));
          }
          this.bumpSpace();
          var identifierAndLocation = this.parseIdentifierIfPossible();
          var pluralOffset = 0;
          if (argType !== "select" && identifierAndLocation.value === "offset") {
            if (!this.bumpIf(":")) {
              return this.error(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, createLocation(this.clonePosition(), this.clonePosition()));
            }
            this.bumpSpace();
            var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, ErrorKind.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE);
            if (result.err) {
              return result;
            }
            this.bumpSpace();
            identifierAndLocation = this.parseIdentifierIfPossible();
            pluralOffset = result.val;
          }
          var optionsResult = this.tryParsePluralOrSelectOptions(nestingLevel, argType, expectingCloseTag, identifierAndLocation);
          if (optionsResult.err) {
            return optionsResult;
          }
          var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
          if (argCloseResult.err) {
            return argCloseResult;
          }
          var location_2 = createLocation(openingBracePosition, this.clonePosition());
          if (argType === "select") {
            return {
              val: {
                type: TYPE.select,
                value,
                options: fromEntries(optionsResult.val),
                location: location_2
              },
              err: null
            };
          } else {
            return {
              val: {
                type: TYPE.plural,
                value,
                options: fromEntries(optionsResult.val),
                offset: pluralOffset,
                pluralType: argType === "plural" ? "cardinal" : "ordinal",
                location: location_2
              },
              err: null
            };
          }
        }
        default:
          return this.error(ErrorKind.INVALID_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
      }
    };
    Parser2.prototype.tryParseArgumentClose = function(openingBracePosition) {
      if (this.isEOF() || this.char() !== 125) {
        return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
      }
      this.bump();
      return { val: true, err: null };
    };
    Parser2.prototype.parseSimpleArgStyleIfPossible = function() {
      var nestedBraces = 0;
      var startPosition = this.clonePosition();
      while (!this.isEOF()) {
        var ch = this.char();
        switch (ch) {
          case 39: {
            this.bump();
            var apostrophePosition = this.clonePosition();
            if (!this.bumpUntil("'")) {
              return this.error(ErrorKind.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE, createLocation(apostrophePosition, this.clonePosition()));
            }
            this.bump();
            break;
          }
          case 123: {
            nestedBraces += 1;
            this.bump();
            break;
          }
          case 125: {
            if (nestedBraces > 0) {
              nestedBraces -= 1;
            } else {
              return {
                val: this.message.slice(startPosition.offset, this.offset()),
                err: null
              };
            }
            break;
          }
          default:
            this.bump();
            break;
        }
      }
      return {
        val: this.message.slice(startPosition.offset, this.offset()),
        err: null
      };
    };
    Parser2.prototype.parseNumberSkeletonFromString = function(skeleton, location) {
      var tokens = [];
      try {
        tokens = parseNumberSkeletonFromString(skeleton);
      } catch (e) {
        return this.error(ErrorKind.INVALID_NUMBER_SKELETON, location);
      }
      return {
        val: {
          type: SKELETON_TYPE.number,
          tokens,
          location,
          parsedOptions: this.shouldParseSkeletons ? parseNumberSkeleton(tokens) : {}
        },
        err: null
      };
    };
    Parser2.prototype.tryParsePluralOrSelectOptions = function(nestingLevel, parentArgType, expectCloseTag, parsedFirstIdentifier) {
      var _a2;
      var hasOtherClause = false;
      var options = [];
      var parsedSelectors = /* @__PURE__ */ new Set();
      var selector = parsedFirstIdentifier.value, selectorLocation = parsedFirstIdentifier.location;
      while (true) {
        if (selector.length === 0) {
          var startPosition = this.clonePosition();
          if (parentArgType !== "select" && this.bumpIf("=")) {
            var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, ErrorKind.INVALID_PLURAL_ARGUMENT_SELECTOR);
            if (result.err) {
              return result;
            }
            selectorLocation = createLocation(startPosition, this.clonePosition());
            selector = this.message.slice(startPosition.offset, this.offset());
          } else {
            break;
          }
        }
        if (parsedSelectors.has(selector)) {
          return this.error(parentArgType === "select" ? ErrorKind.DUPLICATE_SELECT_ARGUMENT_SELECTOR : ErrorKind.DUPLICATE_PLURAL_ARGUMENT_SELECTOR, selectorLocation);
        }
        if (selector === "other") {
          hasOtherClause = true;
        }
        this.bumpSpace();
        var openingBracePosition = this.clonePosition();
        if (!this.bumpIf("{")) {
          return this.error(parentArgType === "select" ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT, createLocation(this.clonePosition(), this.clonePosition()));
        }
        var fragmentResult = this.parseMessage(nestingLevel + 1, parentArgType, expectCloseTag);
        if (fragmentResult.err) {
          return fragmentResult;
        }
        var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
        if (argCloseResult.err) {
          return argCloseResult;
        }
        options.push([
          selector,
          {
            value: fragmentResult.val,
            location: createLocation(openingBracePosition, this.clonePosition())
          }
        ]);
        parsedSelectors.add(selector);
        this.bumpSpace();
        _a2 = this.parseIdentifierIfPossible(), selector = _a2.value, selectorLocation = _a2.location;
      }
      if (options.length === 0) {
        return this.error(parentArgType === "select" ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, createLocation(this.clonePosition(), this.clonePosition()));
      }
      if (this.requiresOtherClause && !hasOtherClause) {
        return this.error(ErrorKind.MISSING_OTHER_CLAUSE, createLocation(this.clonePosition(), this.clonePosition()));
      }
      return { val: options, err: null };
    };
    Parser2.prototype.tryParseDecimalInteger = function(expectNumberError, invalidNumberError) {
      var sign = 1;
      var startingPosition = this.clonePosition();
      if (this.bumpIf("+")) {
      } else if (this.bumpIf("-")) {
        sign = -1;
      }
      var hasDigits = false;
      var decimal = 0;
      while (!this.isEOF()) {
        var ch = this.char();
        if (ch >= 48 && ch <= 57) {
          hasDigits = true;
          decimal = decimal * 10 + (ch - 48);
          this.bump();
        } else {
          break;
        }
      }
      var location = createLocation(startingPosition, this.clonePosition());
      if (!hasDigits) {
        return this.error(expectNumberError, location);
      }
      decimal *= sign;
      if (!isSafeInteger(decimal)) {
        return this.error(invalidNumberError, location);
      }
      return { val: decimal, err: null };
    };
    Parser2.prototype.offset = function() {
      return this.position.offset;
    };
    Parser2.prototype.isEOF = function() {
      return this.offset() === this.message.length;
    };
    Parser2.prototype.clonePosition = function() {
      return {
        offset: this.position.offset,
        line: this.position.line,
        column: this.position.column
      };
    };
    Parser2.prototype.char = function() {
      var offset = this.position.offset;
      if (offset >= this.message.length) {
        throw Error("out of bound");
      }
      var code = codePointAt(this.message, offset);
      if (code === void 0) {
        throw Error("Offset ".concat(offset, " is at invalid UTF-16 code unit boundary"));
      }
      return code;
    };
    Parser2.prototype.error = function(kind, location) {
      return {
        val: null,
        err: {
          kind,
          message: this.message,
          location
        }
      };
    };
    Parser2.prototype.bump = function() {
      if (this.isEOF()) {
        return;
      }
      var code = this.char();
      if (code === 10) {
        this.position.line += 1;
        this.position.column = 1;
        this.position.offset += 1;
      } else {
        this.position.column += 1;
        this.position.offset += code < 65536 ? 1 : 2;
      }
    };
    Parser2.prototype.bumpIf = function(prefix) {
      if (startsWith(this.message, prefix, this.offset())) {
        for (var i = 0; i < prefix.length; i++) {
          this.bump();
        }
        return true;
      }
      return false;
    };
    Parser2.prototype.bumpUntil = function(pattern) {
      var currentOffset = this.offset();
      var index = this.message.indexOf(pattern, currentOffset);
      if (index >= 0) {
        this.bumpTo(index);
        return true;
      } else {
        this.bumpTo(this.message.length);
        return false;
      }
    };
    Parser2.prototype.bumpTo = function(targetOffset) {
      if (this.offset() > targetOffset) {
        throw Error("targetOffset ".concat(targetOffset, " must be greater than or equal to the current offset ").concat(this.offset()));
      }
      targetOffset = Math.min(targetOffset, this.message.length);
      while (true) {
        var offset = this.offset();
        if (offset === targetOffset) {
          break;
        }
        if (offset > targetOffset) {
          throw Error("targetOffset ".concat(targetOffset, " is at invalid UTF-16 code unit boundary"));
        }
        this.bump();
        if (this.isEOF()) {
          break;
        }
      }
    };
    Parser2.prototype.bumpSpace = function() {
      while (!this.isEOF() && _isWhiteSpace(this.char())) {
        this.bump();
      }
    };
    Parser2.prototype.peek = function() {
      if (this.isEOF()) {
        return null;
      }
      var code = this.char();
      var offset = this.offset();
      var nextCode = this.message.charCodeAt(offset + (code >= 65536 ? 2 : 1));
      return nextCode !== null && nextCode !== void 0 ? nextCode : null;
    };
    return Parser2;
  }()
);
function _isAlpha(codepoint) {
  return codepoint >= 97 && codepoint <= 122 || codepoint >= 65 && codepoint <= 90;
}
function _isAlphaOrSlash(codepoint) {
  return _isAlpha(codepoint) || codepoint === 47;
}
function _isPotentialElementNameChar(c) {
  return c === 45 || c === 46 || c >= 48 && c <= 57 || c === 95 || c >= 97 && c <= 122 || c >= 65 && c <= 90 || c == 183 || c >= 192 && c <= 214 || c >= 216 && c <= 246 || c >= 248 && c <= 893 || c >= 895 && c <= 8191 || c >= 8204 && c <= 8205 || c >= 8255 && c <= 8256 || c >= 8304 && c <= 8591 || c >= 11264 && c <= 12271 || c >= 12289 && c <= 55295 || c >= 63744 && c <= 64975 || c >= 65008 && c <= 65533 || c >= 65536 && c <= 983039;
}
function _isWhiteSpace(c) {
  return c >= 9 && c <= 13 || c === 32 || c === 133 || c >= 8206 && c <= 8207 || c === 8232 || c === 8233;
}
function _isPatternSyntax(c) {
  return c >= 33 && c <= 35 || c === 36 || c >= 37 && c <= 39 || c === 40 || c === 41 || c === 42 || c === 43 || c === 44 || c === 45 || c >= 46 && c <= 47 || c >= 58 && c <= 59 || c >= 60 && c <= 62 || c >= 63 && c <= 64 || c === 91 || c === 92 || c === 93 || c === 94 || c === 96 || c === 123 || c === 124 || c === 125 || c === 126 || c === 161 || c >= 162 && c <= 165 || c === 166 || c === 167 || c === 169 || c === 171 || c === 172 || c === 174 || c === 176 || c === 177 || c === 182 || c === 187 || c === 191 || c === 215 || c === 247 || c >= 8208 && c <= 8213 || c >= 8214 && c <= 8215 || c === 8216 || c === 8217 || c === 8218 || c >= 8219 && c <= 8220 || c === 8221 || c === 8222 || c === 8223 || c >= 8224 && c <= 8231 || c >= 8240 && c <= 8248 || c === 8249 || c === 8250 || c >= 8251 && c <= 8254 || c >= 8257 && c <= 8259 || c === 8260 || c === 8261 || c === 8262 || c >= 8263 && c <= 8273 || c === 8274 || c === 8275 || c >= 8277 && c <= 8286 || c >= 8592 && c <= 8596 || c >= 8597 && c <= 8601 || c >= 8602 && c <= 8603 || c >= 8604 && c <= 8607 || c === 8608 || c >= 8609 && c <= 8610 || c === 8611 || c >= 8612 && c <= 8613 || c === 8614 || c >= 8615 && c <= 8621 || c === 8622 || c >= 8623 && c <= 8653 || c >= 8654 && c <= 8655 || c >= 8656 && c <= 8657 || c === 8658 || c === 8659 || c === 8660 || c >= 8661 && c <= 8691 || c >= 8692 && c <= 8959 || c >= 8960 && c <= 8967 || c === 8968 || c === 8969 || c === 8970 || c === 8971 || c >= 8972 && c <= 8991 || c >= 8992 && c <= 8993 || c >= 8994 && c <= 9e3 || c === 9001 || c === 9002 || c >= 9003 && c <= 9083 || c === 9084 || c >= 9085 && c <= 9114 || c >= 9115 && c <= 9139 || c >= 9140 && c <= 9179 || c >= 9180 && c <= 9185 || c >= 9186 && c <= 9254 || c >= 9255 && c <= 9279 || c >= 9280 && c <= 9290 || c >= 9291 && c <= 9311 || c >= 9472 && c <= 9654 || c === 9655 || c >= 9656 && c <= 9664 || c === 9665 || c >= 9666 && c <= 9719 || c >= 9720 && c <= 9727 || c >= 9728 && c <= 9838 || c === 9839 || c >= 9840 && c <= 10087 || c === 10088 || c === 10089 || c === 10090 || c === 10091 || c === 10092 || c === 10093 || c === 10094 || c === 10095 || c === 10096 || c === 10097 || c === 10098 || c === 10099 || c === 10100 || c === 10101 || c >= 10132 && c <= 10175 || c >= 10176 && c <= 10180 || c === 10181 || c === 10182 || c >= 10183 && c <= 10213 || c === 10214 || c === 10215 || c === 10216 || c === 10217 || c === 10218 || c === 10219 || c === 10220 || c === 10221 || c === 10222 || c === 10223 || c >= 10224 && c <= 10239 || c >= 10240 && c <= 10495 || c >= 10496 && c <= 10626 || c === 10627 || c === 10628 || c === 10629 || c === 10630 || c === 10631 || c === 10632 || c === 10633 || c === 10634 || c === 10635 || c === 10636 || c === 10637 || c === 10638 || c === 10639 || c === 10640 || c === 10641 || c === 10642 || c === 10643 || c === 10644 || c === 10645 || c === 10646 || c === 10647 || c === 10648 || c >= 10649 && c <= 10711 || c === 10712 || c === 10713 || c === 10714 || c === 10715 || c >= 10716 && c <= 10747 || c === 10748 || c === 10749 || c >= 10750 && c <= 11007 || c >= 11008 && c <= 11055 || c >= 11056 && c <= 11076 || c >= 11077 && c <= 11078 || c >= 11079 && c <= 11084 || c >= 11085 && c <= 11123 || c >= 11124 && c <= 11125 || c >= 11126 && c <= 11157 || c === 11158 || c >= 11159 && c <= 11263 || c >= 11776 && c <= 11777 || c === 11778 || c === 11779 || c === 11780 || c === 11781 || c >= 11782 && c <= 11784 || c === 11785 || c === 11786 || c === 11787 || c === 11788 || c === 11789 || c >= 11790 && c <= 11798 || c === 11799 || c >= 11800 && c <= 11801 || c === 11802 || c === 11803 || c === 11804 || c === 11805 || c >= 11806 && c <= 11807 || c === 11808 || c === 11809 || c === 11810 || c === 11811 || c === 11812 || c === 11813 || c === 11814 || c === 11815 || c === 11816 || c === 11817 || c >= 11818 && c <= 11822 || c === 11823 || c >= 11824 && c <= 11833 || c >= 11834 && c <= 11835 || c >= 11836 && c <= 11839 || c === 11840 || c === 11841 || c === 11842 || c >= 11843 && c <= 11855 || c >= 11856 && c <= 11857 || c === 11858 || c >= 11859 && c <= 11903 || c >= 12289 && c <= 12291 || c === 12296 || c === 12297 || c === 12298 || c === 12299 || c === 12300 || c === 12301 || c === 12302 || c === 12303 || c === 12304 || c === 12305 || c >= 12306 && c <= 12307 || c === 12308 || c === 12309 || c === 12310 || c === 12311 || c === 12312 || c === 12313 || c === 12314 || c === 12315 || c === 12316 || c === 12317 || c >= 12318 && c <= 12319 || c === 12320 || c === 12336 || c === 64830 || c === 64831 || c >= 65093 && c <= 65094;
}

// node_modules/.pnpm/@formatjs+icu-messageformat-parser@2.6.0/node_modules/@formatjs/icu-messageformat-parser/lib/index.js
function pruneLocation(els) {
  els.forEach(function(el) {
    delete el.location;
    if (isSelectElement(el) || isPluralElement(el)) {
      for (var k in el.options) {
        delete el.options[k].location;
        pruneLocation(el.options[k].value);
      }
    } else if (isNumberElement(el) && isNumberSkeleton(el.style)) {
      delete el.style.location;
    } else if ((isDateElement(el) || isTimeElement(el)) && isDateTimeSkeleton(el.style)) {
      delete el.style.location;
    } else if (isTagElement(el)) {
      pruneLocation(el.children);
    }
  });
}
function parse(message, opts) {
  if (opts === void 0) {
    opts = {};
  }
  opts = __assign({ shouldParseSkeletons: true, requiresOtherClause: true }, opts);
  var result = new Parser(message, opts).parse();
  if (result.err) {
    var error = SyntaxError(ErrorKind[result.err.kind]);
    error.location = result.err.location;
    error.originalMessage = result.err.message;
    throw error;
  }
  if (!(opts === null || opts === void 0 ? void 0 : opts.captureLocation)) {
    pruneLocation(result.val);
  }
  return result.val;
}

// node_modules/.pnpm/@formatjs+fast-memoize@2.2.0/node_modules/@formatjs/fast-memoize/lib/index.js
function memoize(fn, options) {
  var cache = options && options.cache ? options.cache : cacheDefault;
  var serializer = options && options.serializer ? options.serializer : serializerDefault;
  var strategy = options && options.strategy ? options.strategy : strategyDefault;
  return strategy(fn, {
    cache,
    serializer
  });
}
function isPrimitive(value) {
  return value == null || typeof value === "number" || typeof value === "boolean";
}
function monadic(fn, cache, serializer, arg) {
  var cacheKey = isPrimitive(arg) ? arg : serializer(arg);
  var computedValue = cache.get(cacheKey);
  if (typeof computedValue === "undefined") {
    computedValue = fn.call(this, arg);
    cache.set(cacheKey, computedValue);
  }
  return computedValue;
}
function variadic(fn, cache, serializer) {
  var args = Array.prototype.slice.call(arguments, 3);
  var cacheKey = serializer(args);
  var computedValue = cache.get(cacheKey);
  if (typeof computedValue === "undefined") {
    computedValue = fn.apply(this, args);
    cache.set(cacheKey, computedValue);
  }
  return computedValue;
}
function assemble(fn, context, strategy, cache, serialize) {
  return strategy.bind(context, fn, cache, serialize);
}
function strategyDefault(fn, options) {
  var strategy = fn.length === 1 ? monadic : variadic;
  return assemble(fn, this, strategy, options.cache.create(), options.serializer);
}
function strategyVariadic(fn, options) {
  return assemble(fn, this, variadic, options.cache.create(), options.serializer);
}
function strategyMonadic(fn, options) {
  return assemble(fn, this, monadic, options.cache.create(), options.serializer);
}
var serializerDefault = function() {
  return JSON.stringify(arguments);
};
function ObjectWithoutPrototypeCache() {
  this.cache = /* @__PURE__ */ Object.create(null);
}
ObjectWithoutPrototypeCache.prototype.get = function(key) {
  return this.cache[key];
};
ObjectWithoutPrototypeCache.prototype.set = function(key, value) {
  this.cache[key] = value;
};
var cacheDefault = {
  create: function create() {
    return new ObjectWithoutPrototypeCache();
  }
};
var strategies = {
  variadic: strategyVariadic,
  monadic: strategyMonadic
};

// node_modules/.pnpm/intl-messageformat@10.5.0/node_modules/intl-messageformat/lib/src/error.js
var ErrorCode;
(function(ErrorCode2) {
  ErrorCode2["MISSING_VALUE"] = "MISSING_VALUE";
  ErrorCode2["INVALID_VALUE"] = "INVALID_VALUE";
  ErrorCode2["MISSING_INTL_API"] = "MISSING_INTL_API";
})(ErrorCode || (ErrorCode = {}));
var FormatError = (
  /** @class */
  function(_super) {
    __extends(FormatError2, _super);
    function FormatError2(msg, code, originalMessage) {
      var _this = _super.call(this, msg) || this;
      _this.code = code;
      _this.originalMessage = originalMessage;
      return _this;
    }
    FormatError2.prototype.toString = function() {
      return "[formatjs Error: ".concat(this.code, "] ").concat(this.message);
    };
    return FormatError2;
  }(Error)
);
var InvalidValueError = (
  /** @class */
  function(_super) {
    __extends(InvalidValueError2, _super);
    function InvalidValueError2(variableId, value, options, originalMessage) {
      return _super.call(this, 'Invalid values for "'.concat(variableId, '": "').concat(value, '". Options are "').concat(Object.keys(options).join('", "'), '"'), ErrorCode.INVALID_VALUE, originalMessage) || this;
    }
    return InvalidValueError2;
  }(FormatError)
);
var InvalidValueTypeError = (
  /** @class */
  function(_super) {
    __extends(InvalidValueTypeError2, _super);
    function InvalidValueTypeError2(value, type, originalMessage) {
      return _super.call(this, 'Value for "'.concat(value, '" must be of type ').concat(type), ErrorCode.INVALID_VALUE, originalMessage) || this;
    }
    return InvalidValueTypeError2;
  }(FormatError)
);
var MissingValueError = (
  /** @class */
  function(_super) {
    __extends(MissingValueError2, _super);
    function MissingValueError2(variableId, originalMessage) {
      return _super.call(this, 'The intl string context variable "'.concat(variableId, '" was not provided to the string "').concat(originalMessage, '"'), ErrorCode.MISSING_VALUE, originalMessage) || this;
    }
    return MissingValueError2;
  }(FormatError)
);

// node_modules/.pnpm/intl-messageformat@10.5.0/node_modules/intl-messageformat/lib/src/formatters.js
var PART_TYPE;
(function(PART_TYPE2) {
  PART_TYPE2[PART_TYPE2["literal"] = 0] = "literal";
  PART_TYPE2[PART_TYPE2["object"] = 1] = "object";
})(PART_TYPE || (PART_TYPE = {}));
function mergeLiteral(parts) {
  if (parts.length < 2) {
    return parts;
  }
  return parts.reduce(function(all, part) {
    var lastPart = all[all.length - 1];
    if (!lastPart || lastPart.type !== PART_TYPE.literal || part.type !== PART_TYPE.literal) {
      all.push(part);
    } else {
      lastPart.value += part.value;
    }
    return all;
  }, []);
}
function isFormatXMLElementFn(el) {
  return typeof el === "function";
}
function formatToParts(els, locales, formatters, formats, values, currentPluralValue, originalMessage) {
  if (els.length === 1 && isLiteralElement(els[0])) {
    return [
      {
        type: PART_TYPE.literal,
        value: els[0].value
      }
    ];
  }
  var result = [];
  for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {
    var el = els_1[_i];
    if (isLiteralElement(el)) {
      result.push({
        type: PART_TYPE.literal,
        value: el.value
      });
      continue;
    }
    if (isPoundElement(el)) {
      if (typeof currentPluralValue === "number") {
        result.push({
          type: PART_TYPE.literal,
          value: formatters.getNumberFormat(locales).format(currentPluralValue)
        });
      }
      continue;
    }
    var varName = el.value;
    if (!(values && varName in values)) {
      throw new MissingValueError(varName, originalMessage);
    }
    var value = values[varName];
    if (isArgumentElement(el)) {
      if (!value || typeof value === "string" || typeof value === "number") {
        value = typeof value === "string" || typeof value === "number" ? String(value) : "";
      }
      result.push({
        type: typeof value === "string" ? PART_TYPE.literal : PART_TYPE.object,
        value
      });
      continue;
    }
    if (isDateElement(el)) {
      var style = typeof el.style === "string" ? formats.date[el.style] : isDateTimeSkeleton(el.style) ? el.style.parsedOptions : void 0;
      result.push({
        type: PART_TYPE.literal,
        value: formatters.getDateTimeFormat(locales, style).format(value)
      });
      continue;
    }
    if (isTimeElement(el)) {
      var style = typeof el.style === "string" ? formats.time[el.style] : isDateTimeSkeleton(el.style) ? el.style.parsedOptions : formats.time.medium;
      result.push({
        type: PART_TYPE.literal,
        value: formatters.getDateTimeFormat(locales, style).format(value)
      });
      continue;
    }
    if (isNumberElement(el)) {
      var style = typeof el.style === "string" ? formats.number[el.style] : isNumberSkeleton(el.style) ? el.style.parsedOptions : void 0;
      if (style && style.scale) {
        value = value * (style.scale || 1);
      }
      result.push({
        type: PART_TYPE.literal,
        value: formatters.getNumberFormat(locales, style).format(value)
      });
      continue;
    }
    if (isTagElement(el)) {
      var children = el.children, value_1 = el.value;
      var formatFn = values[value_1];
      if (!isFormatXMLElementFn(formatFn)) {
        throw new InvalidValueTypeError(value_1, "function", originalMessage);
      }
      var parts = formatToParts(children, locales, formatters, formats, values, currentPluralValue);
      var chunks = formatFn(parts.map(function(p) {
        return p.value;
      }));
      if (!Array.isArray(chunks)) {
        chunks = [chunks];
      }
      result.push.apply(result, chunks.map(function(c) {
        return {
          type: typeof c === "string" ? PART_TYPE.literal : PART_TYPE.object,
          value: c
        };
      }));
    }
    if (isSelectElement(el)) {
      var opt = el.options[value] || el.options.other;
      if (!opt) {
        throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);
      }
      result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));
      continue;
    }
    if (isPluralElement(el)) {
      var opt = el.options["=".concat(value)];
      if (!opt) {
        if (!Intl.PluralRules) {
          throw new FormatError('Intl.PluralRules is not available in this environment.\nTry polyfilling it using "@formatjs/intl-pluralrules"\n', ErrorCode.MISSING_INTL_API, originalMessage);
        }
        var rule = formatters.getPluralRules(locales, { type: el.pluralType }).select(value - (el.offset || 0));
        opt = el.options[rule] || el.options.other;
      }
      if (!opt) {
        throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);
      }
      result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));
      continue;
    }
  }
  return mergeLiteral(result);
}

// node_modules/.pnpm/intl-messageformat@10.5.0/node_modules/intl-messageformat/lib/src/core.js
function mergeConfig(c1, c2) {
  if (!c2) {
    return c1;
  }
  return __assign(__assign(__assign({}, c1 || {}), c2 || {}), Object.keys(c1).reduce(function(all, k) {
    all[k] = __assign(__assign({}, c1[k]), c2[k] || {});
    return all;
  }, {}));
}
function mergeConfigs(defaultConfig, configs) {
  if (!configs) {
    return defaultConfig;
  }
  return Object.keys(defaultConfig).reduce(function(all, k) {
    all[k] = mergeConfig(defaultConfig[k], configs[k]);
    return all;
  }, __assign({}, defaultConfig));
}
function createFastMemoizeCache(store) {
  return {
    create: function() {
      return {
        get: function(key) {
          return store[key];
        },
        set: function(key, value) {
          store[key] = value;
        }
      };
    }
  };
}
function createDefaultFormatters(cache) {
  if (cache === void 0) {
    cache = {
      number: {},
      dateTime: {},
      pluralRules: {}
    };
  }
  return {
    getNumberFormat: memoize(function() {
      var _a2;
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return new ((_a2 = Intl.NumberFormat).bind.apply(_a2, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache(cache.number),
      strategy: strategies.variadic
    }),
    getDateTimeFormat: memoize(function() {
      var _a2;
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return new ((_a2 = Intl.DateTimeFormat).bind.apply(_a2, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache(cache.dateTime),
      strategy: strategies.variadic
    }),
    getPluralRules: memoize(function() {
      var _a2;
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return new ((_a2 = Intl.PluralRules).bind.apply(_a2, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache(cache.pluralRules),
      strategy: strategies.variadic
    })
  };
}
var IntlMessageFormat = (
  /** @class */
  function() {
    function IntlMessageFormat2(message, locales, overrideFormats, opts) {
      if (locales === void 0) {
        locales = IntlMessageFormat2.defaultLocale;
      }
      var _this = this;
      this.formatterCache = {
        number: {},
        dateTime: {},
        pluralRules: {}
      };
      this.format = function(values) {
        var parts = _this.formatToParts(values);
        if (parts.length === 1) {
          return parts[0].value;
        }
        var result = parts.reduce(function(all, part) {
          if (!all.length || part.type !== PART_TYPE.literal || typeof all[all.length - 1] !== "string") {
            all.push(part.value);
          } else {
            all[all.length - 1] += part.value;
          }
          return all;
        }, []);
        if (result.length <= 1) {
          return result[0] || "";
        }
        return result;
      };
      this.formatToParts = function(values) {
        return formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values, void 0, _this.message);
      };
      this.resolvedOptions = function() {
        var _a3;
        return {
          locale: ((_a3 = _this.resolvedLocale) === null || _a3 === void 0 ? void 0 : _a3.toString()) || Intl.NumberFormat.supportedLocalesOf(_this.locales)[0]
        };
      };
      this.getAst = function() {
        return _this.ast;
      };
      this.locales = locales;
      this.resolvedLocale = IntlMessageFormat2.resolveLocale(locales);
      if (typeof message === "string") {
        this.message = message;
        if (!IntlMessageFormat2.__parse) {
          throw new TypeError("IntlMessageFormat.__parse must be set to process `message` of type `string`");
        }
        var _a2 = opts || {}, formatters = _a2.formatters, parseOpts = __rest(_a2, ["formatters"]);
        this.ast = IntlMessageFormat2.__parse(message, __assign(__assign({}, parseOpts), { locale: this.resolvedLocale }));
      } else {
        this.ast = message;
      }
      if (!Array.isArray(this.ast)) {
        throw new TypeError("A message must be provided as a String or AST.");
      }
      this.formats = mergeConfigs(IntlMessageFormat2.formats, overrideFormats);
      this.formatters = opts && opts.formatters || createDefaultFormatters(this.formatterCache);
    }
    Object.defineProperty(IntlMessageFormat2, "defaultLocale", {
      get: function() {
        if (!IntlMessageFormat2.memoizedDefaultLocale) {
          IntlMessageFormat2.memoizedDefaultLocale = new Intl.NumberFormat().resolvedOptions().locale;
        }
        return IntlMessageFormat2.memoizedDefaultLocale;
      },
      enumerable: false,
      configurable: true
    });
    IntlMessageFormat2.memoizedDefaultLocale = null;
    IntlMessageFormat2.resolveLocale = function(locales) {
      if (typeof Intl.Locale === "undefined") {
        return;
      }
      var supportedLocales = Intl.NumberFormat.supportedLocalesOf(locales);
      if (supportedLocales.length > 0) {
        return new Intl.Locale(supportedLocales[0]);
      }
      return new Intl.Locale(typeof locales === "string" ? locales : locales[0]);
    };
    IntlMessageFormat2.__parse = parse;
    IntlMessageFormat2.formats = {
      number: {
        integer: {
          maximumFractionDigits: 0
        },
        currency: {
          style: "currency"
        },
        percent: {
          style: "percent"
        }
      },
      date: {
        short: {
          month: "numeric",
          day: "numeric",
          year: "2-digit"
        },
        medium: {
          month: "short",
          day: "numeric",
          year: "numeric"
        },
        long: {
          month: "long",
          day: "numeric",
          year: "numeric"
        },
        full: {
          weekday: "long",
          month: "long",
          day: "numeric",
          year: "numeric"
        }
      },
      time: {
        short: {
          hour: "numeric",
          minute: "numeric"
        },
        medium: {
          hour: "numeric",
          minute: "numeric",
          second: "numeric"
        },
        long: {
          hour: "numeric",
          minute: "numeric",
          second: "numeric",
          timeZoneName: "short"
        },
        full: {
          hour: "numeric",
          minute: "numeric",
          second: "numeric",
          timeZoneName: "short"
        }
      }
    };
    return IntlMessageFormat2;
  }()
);

// node_modules/.pnpm/@react-aria+i18n@3.8.1_react@18.2.0/node_modules/@react-aria/i18n/dist/useMessageFormatter.module.js
var import_react7 = __toESM(require_react());

// node_modules/.pnpm/@react-aria+breadcrumbs@3.5.4_react@18.2.0/node_modules/@react-aria/breadcrumbs/dist/module.js
function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}
var $8229b34715874f89$exports = {};
var $b91590b2dc47de39$exports = {};
$b91590b2dc47de39$exports = {
  "breadcrumbs": `عناصر الواجهة`
};
var $55b0693b2cf3fe91$exports = {};
$55b0693b2cf3fe91$exports = {
  "breadcrumbs": `Трохи хляб`
};
var $6ec1ed7729e948cc$exports = {};
$6ec1ed7729e948cc$exports = {
  "breadcrumbs": `Popis cesty`
};
var $5a41bb2baa6861e4$exports = {};
$5a41bb2baa6861e4$exports = {
  "breadcrumbs": `Brødkrummer`
};
var $f28bbea439e87eca$exports = {};
$f28bbea439e87eca$exports = {
  "breadcrumbs": `Breadcrumbs`
};
var $b3eca51cb720961a$exports = {};
$b3eca51cb720961a$exports = {
  "breadcrumbs": `Πλοηγήσεις breadcrumb`
};
var $0b39b205118db415$exports = {};
$0b39b205118db415$exports = {
  "breadcrumbs": `Breadcrumbs`
};
var $f467c0ee7bfb0950$exports = {};
$f467c0ee7bfb0950$exports = {
  "breadcrumbs": `Migas de pan`
};
var $ab711d2ffb4cdf3d$exports = {};
$ab711d2ffb4cdf3d$exports = {
  "breadcrumbs": `Lingiread`
};
var $b63105d663e6f9d5$exports = {};
$b63105d663e6f9d5$exports = {
  "breadcrumbs": `Navigointilinkit`
};
var $9d2ed7be7fcdc2a1$exports = {};
$9d2ed7be7fcdc2a1$exports = {
  "breadcrumbs": `Chemin de navigation`
};
var $c5704294d85c7b5d$exports = {};
$c5704294d85c7b5d$exports = {
  "breadcrumbs": `שבילי ניווט`
};
var $20c975671d6bbc63$exports = {};
$20c975671d6bbc63$exports = {
  "breadcrumbs": `Navigacijski putovi`
};
var $2569ca3917233115$exports = {};
$2569ca3917233115$exports = {
  "breadcrumbs": `Morzsamenü`
};
var $caa152f7f8e96c85$exports = {};
$caa152f7f8e96c85$exports = {
  "breadcrumbs": `Breadcrumb`
};
var $cbc6af0cc98fad10$exports = {};
$cbc6af0cc98fad10$exports = {
  "breadcrumbs": `パンくずリスト`
};
var $ad9be5d332b4d607$exports = {};
$ad9be5d332b4d607$exports = {
  "breadcrumbs": `탐색 표시`
};
var $659de19a00ff9617$exports = {};
$659de19a00ff9617$exports = {
  "breadcrumbs": `Naršymo kelias`
};
var $173e9fb4d14fe309$exports = {};
$173e9fb4d14fe309$exports = {
  "breadcrumbs": `Atpakaļceļi`
};
var $d8e2640a066567a9$exports = {};
$d8e2640a066567a9$exports = {
  "breadcrumbs": `Navigasjonsstier`
};
var $d71fd764236c0d12$exports = {};
$d71fd764236c0d12$exports = {
  "breadcrumbs": `Broodkruimels`
};
var $f4ad3faf9f4aaec6$exports = {};
$f4ad3faf9f4aaec6$exports = {
  "breadcrumbs": `Struktura nawigacyjna`
};
var $9703be9d55d8e9c2$exports = {};
$9703be9d55d8e9c2$exports = {
  "breadcrumbs": `Caminho detalhado`
};
var $7e23baec8a14f309$exports = {};
$7e23baec8a14f309$exports = {
  "breadcrumbs": `Categorias`
};
var $568f95594049d56e$exports = {};
$568f95594049d56e$exports = {
  "breadcrumbs": `Miez de pâine`
};
var $625df06cecc70764$exports = {};
$625df06cecc70764$exports = {
  "breadcrumbs": `Навигация`
};
var $b5a67525f3a2f594$exports = {};
$b5a67525f3a2f594$exports = {
  "breadcrumbs": `Navigačné prvky Breadcrumbs`
};
var $16125922964febca$exports = {};
$16125922964febca$exports = {
  "breadcrumbs": `Drobtine`
};
var $de104bf355206bcf$exports = {};
$de104bf355206bcf$exports = {
  "breadcrumbs": `Putanje navigacije`
};
var $d5ab76bcbadc9c07$exports = {};
$d5ab76bcbadc9c07$exports = {
  "breadcrumbs": `Sökvägar`
};
var $a6a1af5968159b55$exports = {};
$a6a1af5968159b55$exports = {
  "breadcrumbs": `İçerik haritaları`
};
var $5204a30f0d17ffec$exports = {};
$5204a30f0d17ffec$exports = {
  "breadcrumbs": `Навігаційна стежка`
};
var $8d15e736e12d3dfd$exports = {};
$8d15e736e12d3dfd$exports = {
  "breadcrumbs": `导航栏`
};
var $f8c49dd804b75140$exports = {};
$f8c49dd804b75140$exports = {
  "breadcrumbs": `導覽列`
};
$8229b34715874f89$exports = {
  "ar-AE": $b91590b2dc47de39$exports,
  "bg-BG": $55b0693b2cf3fe91$exports,
  "cs-CZ": $6ec1ed7729e948cc$exports,
  "da-DK": $5a41bb2baa6861e4$exports,
  "de-DE": $f28bbea439e87eca$exports,
  "el-GR": $b3eca51cb720961a$exports,
  "en-US": $0b39b205118db415$exports,
  "es-ES": $f467c0ee7bfb0950$exports,
  "et-EE": $ab711d2ffb4cdf3d$exports,
  "fi-FI": $b63105d663e6f9d5$exports,
  "fr-FR": $9d2ed7be7fcdc2a1$exports,
  "he-IL": $c5704294d85c7b5d$exports,
  "hr-HR": $20c975671d6bbc63$exports,
  "hu-HU": $2569ca3917233115$exports,
  "it-IT": $caa152f7f8e96c85$exports,
  "ja-JP": $cbc6af0cc98fad10$exports,
  "ko-KR": $ad9be5d332b4d607$exports,
  "lt-LT": $659de19a00ff9617$exports,
  "lv-LV": $173e9fb4d14fe309$exports,
  "nb-NO": $d8e2640a066567a9$exports,
  "nl-NL": $d71fd764236c0d12$exports,
  "pl-PL": $f4ad3faf9f4aaec6$exports,
  "pt-BR": $9703be9d55d8e9c2$exports,
  "pt-PT": $7e23baec8a14f309$exports,
  "ro-RO": $568f95594049d56e$exports,
  "ru-RU": $625df06cecc70764$exports,
  "sk-SK": $b5a67525f3a2f594$exports,
  "sl-SI": $16125922964febca$exports,
  "sr-SP": $de104bf355206bcf$exports,
  "sv-SE": $d5ab76bcbadc9c07$exports,
  "tr-TR": $a6a1af5968159b55$exports,
  "uk-UA": $5204a30f0d17ffec$exports,
  "zh-CN": $8d15e736e12d3dfd$exports,
  "zh-TW": $f8c49dd804b75140$exports
};
function $848231d7a2b3998e$export$8cefe241bd876ca0(props) {
  let { "aria-label": ariaLabel, ...otherProps } = props;
  let strings = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault($8229b34715874f89$exports)));
  return {
    navProps: {
      ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(otherProps, {
        labelable: true
      }),
      "aria-label": ariaLabel || strings.format("breadcrumbs")
    }
  };
}

// node_modules/.pnpm/@react-aria+button@3.8.1_react@18.2.0/node_modules/@react-aria/button/dist/module.js
function $701a24aa0da5b062$export$ea18c227d4417cc3(props, ref) {
  let {
    elementType = "button",
    isDisabled,
    onPress,
    onPressStart,
    onPressEnd,
    onPressChange,
    preventFocusOnPress,
    allowFocusWhenDisabled,
    // @ts-ignore
    onClick: deprecatedOnClick,
    href,
    target,
    rel,
    type = "button"
  } = props;
  let additionalProps;
  if (elementType === "button")
    additionalProps = {
      type,
      disabled: isDisabled
    };
  else
    additionalProps = {
      role: "button",
      tabIndex: isDisabled ? void 0 : 0,
      href: elementType === "a" && isDisabled ? void 0 : href,
      target: elementType === "a" ? target : void 0,
      type: elementType === "input" ? type : void 0,
      disabled: elementType === "input" ? isDisabled : void 0,
      "aria-disabled": !isDisabled || elementType === "input" ? void 0 : isDisabled,
      rel: elementType === "a" ? rel : void 0
    };
  let { pressProps, isPressed } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    onPressStart,
    onPressEnd,
    onPressChange,
    onPress,
    isDisabled,
    preventFocusOnPress,
    ref
  });
  let { focusableProps } = (0, $e6afbd83fe6ebbd2$export$4c014de7c8940b4c)(props, ref);
  if (allowFocusWhenDisabled)
    focusableProps.tabIndex = isDisabled ? -1 : focusableProps.tabIndex;
  let buttonProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(focusableProps, pressProps, (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  }));
  return {
    isPressed,
    buttonProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(additionalProps, buttonProps, {
      "aria-haspopup": props["aria-haspopup"],
      "aria-expanded": props["aria-expanded"],
      "aria-controls": props["aria-controls"],
      "aria-pressed": props["aria-pressed"],
      onClick: (e) => {
        if (deprecatedOnClick) {
          deprecatedOnClick(e);
          console.warn("onClick is deprecated, please use onPress");
        }
      }
    })
  };
}
function $55f54f7887471b58$export$51e84d46ca0bc451(props, state, ref) {
  const { isSelected } = state;
  const { isPressed, buttonProps } = (0, $701a24aa0da5b062$export$ea18c227d4417cc3)({
    ...props,
    onPress: (0, $ff5963eb1fccf552$export$e08e3b67e392101e)(state.toggle, props.onPress)
  }, ref);
  return {
    isPressed,
    buttonProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(buttonProps, {
      "aria-pressed": isSelected
    })
  };
}

// node_modules/.pnpm/@react-aria+live-announcer@3.3.1/node_modules/@react-aria/live-announcer/dist/module.js
var $319e236875307eab$var$LIVEREGION_TIMEOUT_DELAY = 7e3;
var $319e236875307eab$var$liveAnnouncer = null;
function $319e236875307eab$export$a9b970dcc4ae71a9(message, assertiveness = "assertive", timeout = $319e236875307eab$var$LIVEREGION_TIMEOUT_DELAY) {
  if (!$319e236875307eab$var$liveAnnouncer)
    $319e236875307eab$var$liveAnnouncer = new $319e236875307eab$var$LiveAnnouncer();
  $319e236875307eab$var$liveAnnouncer.announce(message, assertiveness, timeout);
}
function $319e236875307eab$export$d10ae4f68404609a(assertiveness) {
  if ($319e236875307eab$var$liveAnnouncer)
    $319e236875307eab$var$liveAnnouncer.clear(assertiveness);
}
var $319e236875307eab$var$LiveAnnouncer = class {
  createLog(ariaLive) {
    let node = document.createElement("div");
    node.setAttribute("role", "log");
    node.setAttribute("aria-live", ariaLive);
    node.setAttribute("aria-relevant", "additions");
    return node;
  }
  destroy() {
    if (!this.node)
      return;
    document.body.removeChild(this.node);
    this.node = null;
  }
  announce(message, assertiveness = "assertive", timeout = $319e236875307eab$var$LIVEREGION_TIMEOUT_DELAY) {
    if (!this.node)
      return;
    let node = document.createElement("div");
    node.textContent = message;
    if (assertiveness === "assertive")
      this.assertiveLog.appendChild(node);
    else
      this.politeLog.appendChild(node);
    if (message !== "")
      setTimeout(() => {
        node.remove();
      }, timeout);
  }
  clear(assertiveness) {
    if (!this.node)
      return;
    if (!assertiveness || assertiveness === "assertive")
      this.assertiveLog.innerHTML = "";
    if (!assertiveness || assertiveness === "polite")
      this.politeLog.innerHTML = "";
  }
  constructor() {
    this.node = document.createElement("div");
    this.node.dataset.liveAnnouncer = "true";
    Object.assign(this.node.style, {
      border: 0,
      clip: "rect(0 0 0 0)",
      clipPath: "inset(50%)",
      height: "1px",
      margin: "-1px",
      overflow: "hidden",
      padding: 0,
      position: "absolute",
      width: "1px",
      whiteSpace: "nowrap"
    });
    this.assertiveLog = this.createLog("assertive");
    this.node.appendChild(this.assertiveLog);
    this.politeLog = this.createLog("polite");
    this.node.appendChild(this.politeLog);
    document.body.prepend(this.node);
  }
};

// node_modules/.pnpm/@react-aria+calendar@3.4.1_react-dom@18.2.0_react@18.2.0/node_modules/@react-aria/calendar/dist/module.js
var import_react8 = __toESM(require_react());
function $parcel$interopDefault2(a) {
  return a && a.__esModule ? a.default : a;
}
var $3904726b442bd9b2$exports = {};
var $39324ace0d945f59$exports = {};
$39324ace0d945f59$exports = {
  "dateRange": (args) => `${args.startDate} إلى ${args.endDate}`,
  "dateSelected": (args) => `${args.date} المحدد`,
  "finishRangeSelectionPrompt": `انقر لإنهاء عملية تحديد نطاق التاريخ`,
  "maximumDate": `آخر تاريخ متاح`,
  "minimumDate": `أول تاريخ متاح`,
  "next": `التالي`,
  "previous": `السابق`,
  "selectedDateDescription": (args) => `تاريخ محدد: ${args.date}`,
  "selectedRangeDescription": (args) => `المدى الزمني المحدد: ${args.dateRange}`,
  "startRangeSelectionPrompt": `انقر لبدء عملية تحديد نطاق التاريخ`,
  "todayDate": (args) => `اليوم، ${args.date}`,
  "todayDateSelected": (args) => `اليوم، ${args.date} محدد`
};
var $1830a539e98c7baf$exports = {};
$1830a539e98c7baf$exports = {
  "dateRange": (args) => `${args.startDate} до ${args.endDate}`,
  "dateSelected": (args) => `Избрано е ${args.date}`,
  "finishRangeSelectionPrompt": `Натиснете, за да довършите избора на времеви интервал`,
  "maximumDate": `Последна налична дата`,
  "minimumDate": `Първа налична дата`,
  "next": `Напред`,
  "previous": `Назад`,
  "selectedDateDescription": (args) => `Избрана дата: ${args.date}`,
  "selectedRangeDescription": (args) => `Избран диапазон: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Натиснете, за да пристъпите към избора на времеви интервал`,
  "todayDate": (args) => `Днес, ${args.date}`,
  "todayDateSelected": (args) => `Днес, ${args.date} са избрани`
};
var $f4b92528965aab97$exports = {};
$f4b92528965aab97$exports = {
  "dateRange": (args) => `${args.startDate} až ${args.endDate}`,
  "dateSelected": (args) => `Vybráno ${args.date}`,
  "finishRangeSelectionPrompt": `Kliknutím dokončíte výběr rozsahu dat`,
  "maximumDate": `Poslední dostupné datum`,
  "minimumDate": `První dostupné datum`,
  "next": `Další`,
  "previous": `Předchozí`,
  "selectedDateDescription": (args) => `Vybrané datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Vybrané období: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kliknutím zahájíte výběr rozsahu dat`,
  "todayDate": (args) => `Dnes, ${args.date}`,
  "todayDateSelected": (args) => `Dnes, vybráno ${args.date}`
};
var $1cd578ef0547c8f1$exports = {};
$1cd578ef0547c8f1$exports = {
  "dateRange": (args) => `${args.startDate} til ${args.endDate}`,
  "dateSelected": (args) => `${args.date} valgt`,
  "finishRangeSelectionPrompt": `Klik for at fuldføre valg af datoområde`,
  "maximumDate": `Sidste ledige dato`,
  "minimumDate": `Første ledige dato`,
  "next": `Næste`,
  "previous": `Forrige`,
  "selectedDateDescription": (args) => `Valgt dato: ${args.date}`,
  "selectedRangeDescription": (args) => `Valgt interval: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Klik for at starte valg af datoområde`,
  "todayDate": (args) => `I dag, ${args.date}`,
  "todayDateSelected": (args) => `I dag, ${args.date} valgt`
};
var $db55a8973925d619$exports = {};
$db55a8973925d619$exports = {
  "dateRange": (args) => `${args.startDate} bis ${args.endDate}`,
  "dateSelected": (args) => `${args.date} ausgewählt`,
  "finishRangeSelectionPrompt": `Klicken, um die Auswahl des Datumsbereichs zu beenden`,
  "maximumDate": `Letztes verfügbares Datum`,
  "minimumDate": `Erstes verfügbares Datum`,
  "next": `Weiter`,
  "previous": `Zurück`,
  "selectedDateDescription": (args) => `Ausgewähltes Datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Ausgewählter Bereich: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Klicken, um die Auswahl des Datumsbereichs zu beginnen`,
  "todayDate": (args) => `Heute, ${args.date}`,
  "todayDateSelected": (args) => `Heute, ${args.date} ausgewählt`
};
var $ec6937d58566d443$exports = {};
$ec6937d58566d443$exports = {
  "dateRange": (args) => `${args.startDate} έως ${args.endDate}`,
  "dateSelected": (args) => `Επιλέχθηκε ${args.date}`,
  "finishRangeSelectionPrompt": `Κάντε κλικ για να ολοκληρώσετε την επιλογή εύρους ημερομηνιών`,
  "maximumDate": `Τελευταία διαθέσιμη ημερομηνία`,
  "minimumDate": `Πρώτη διαθέσιμη ημερομηνία`,
  "next": `Επόμενο`,
  "previous": `Προηγούμενο`,
  "selectedDateDescription": (args) => `Επιλεγμένη ημερομηνία: ${args.date}`,
  "selectedRangeDescription": (args) => `Επιλεγμένο εύρος: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Κάντε κλικ για να ξεκινήσετε την επιλογή εύρους ημερομηνιών`,
  "todayDate": (args) => `Σήμερα, ${args.date}`,
  "todayDateSelected": (args) => `Σήμερα, επιλέχτηκε ${args.date}`
};
var $1f5cea0742dc284a$exports = {};
$1f5cea0742dc284a$exports = {
  "previous": `Previous`,
  "next": `Next`,
  "selectedDateDescription": (args) => `Selected Date: ${args.date}`,
  "selectedRangeDescription": (args) => `Selected Range: ${args.dateRange}`,
  "todayDate": (args) => `Today, ${args.date}`,
  "todayDateSelected": (args) => `Today, ${args.date} selected`,
  "dateSelected": (args) => `${args.date} selected`,
  "startRangeSelectionPrompt": `Click to start selecting date range`,
  "finishRangeSelectionPrompt": `Click to finish selecting date range`,
  "minimumDate": `First available date`,
  "maximumDate": `Last available date`,
  "dateRange": (args) => `${args.startDate} to ${args.endDate}`
};
var $2ca7ea366384817b$exports = {};
$2ca7ea366384817b$exports = {
  "dateRange": (args) => `${args.startDate} a ${args.endDate}`,
  "dateSelected": (args) => `${args.date} seleccionado`,
  "finishRangeSelectionPrompt": `Haga clic para terminar de seleccionar rango de fechas`,
  "maximumDate": `Última fecha disponible`,
  "minimumDate": `Primera fecha disponible`,
  "next": `Siguiente`,
  "previous": `Anterior`,
  "selectedDateDescription": (args) => `Fecha seleccionada: ${args.date}`,
  "selectedRangeDescription": (args) => `Intervalo seleccionado: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Haga clic para comenzar a seleccionar un rango de fechas`,
  "todayDate": (args) => `Hoy, ${args.date}`,
  "todayDateSelected": (args) => `Hoy, ${args.date} seleccionado`
};
var $97874a7fe9cd091f$exports = {};
$97874a7fe9cd091f$exports = {
  "dateRange": (args) => `${args.startDate} kuni ${args.endDate}`,
  "dateSelected": (args) => `${args.date} valitud`,
  "finishRangeSelectionPrompt": `Klõpsake kuupäevavahemiku valimise lõpetamiseks`,
  "maximumDate": `Viimane saadaolev kuupäev`,
  "minimumDate": `Esimene saadaolev kuupäev`,
  "next": `Järgmine`,
  "previous": `Eelmine`,
  "selectedDateDescription": (args) => `Valitud kuupäev: ${args.date}`,
  "selectedRangeDescription": (args) => `Valitud vahemik: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Klõpsake kuupäevavahemiku valimiseks`,
  "todayDate": (args) => `Täna, ${args.date}`,
  "todayDateSelected": (args) => `Täna, ${args.date} valitud`
};
var $5d376b7fce1a45b2$exports = {};
$5d376b7fce1a45b2$exports = {
  "dateRange": (args) => `${args.startDate} – ${args.endDate}`,
  "dateSelected": (args) => `${args.date} valittu`,
  "finishRangeSelectionPrompt": `Lopeta päivämääräalueen valinta napsauttamalla tätä.`,
  "maximumDate": `Viimeinen varattavissa oleva päivämäärä`,
  "minimumDate": `Ensimmäinen varattavissa oleva päivämäärä`,
  "next": `Seuraava`,
  "previous": `Edellinen`,
  "selectedDateDescription": (args) => `Valittu päivämäärä: ${args.date}`,
  "selectedRangeDescription": (args) => `Valittu aikaväli: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Aloita päivämääräalueen valinta napsauttamalla tätä.`,
  "todayDate": (args) => `Tänään, ${args.date}`,
  "todayDateSelected": (args) => `Tänään, ${args.date} valittu`
};
var $3bf722b362aaf54d$exports = {};
$3bf722b362aaf54d$exports = {
  "dateRange": (args) => `${args.startDate} à ${args.endDate}`,
  "dateSelected": (args) => `${args.date} sélectionné`,
  "finishRangeSelectionPrompt": `Cliquer pour finir de sélectionner la plage de dates`,
  "maximumDate": `Dernière date disponible`,
  "minimumDate": `Première date disponible`,
  "next": `Suivant`,
  "previous": `Précédent`,
  "selectedDateDescription": (args) => `Date sélectionnée : ${args.date}`,
  "selectedRangeDescription": (args) => `Plage sélectionnée : ${args.dateRange}`,
  "startRangeSelectionPrompt": `Cliquer pour commencer à sélectionner la plage de dates`,
  "todayDate": (args) => `Aujourd'hui, ${args.date}`,
  "todayDateSelected": (args) => `Aujourd’hui, ${args.date} sélectionné`
};
var $38c43f8322316031$exports = {};
$38c43f8322316031$exports = {
  "dateRange": (args) => `${args.startDate} עד ${args.endDate}`,
  "dateSelected": (args) => `${args.date} נבחר`,
  "finishRangeSelectionPrompt": `חץ כדי לסיים את בחירת טווח התאריכים`,
  "maximumDate": `תאריך פנוי אחרון`,
  "minimumDate": `תאריך פנוי ראשון`,
  "next": `הבא`,
  "previous": `הקודם`,
  "selectedDateDescription": (args) => `תאריך נבחר: ${args.date}`,
  "selectedRangeDescription": (args) => `טווח נבחר: ${args.dateRange}`,
  "startRangeSelectionPrompt": `לחץ כדי להתחיל בבחירת טווח התאריכים`,
  "todayDate": (args) => `היום, ${args.date}`,
  "todayDateSelected": (args) => `היום, ${args.date} נבחר`
};
var $c90e0f32b44630bf$exports = {};
$c90e0f32b44630bf$exports = {
  "dateRange": (args) => `${args.startDate} do ${args.endDate}`,
  "dateSelected": (args) => `${args.date} odabran`,
  "finishRangeSelectionPrompt": `Kliknite da dovršite raspon odabranih datuma`,
  "maximumDate": `Posljednji raspoloživi datum`,
  "minimumDate": `Prvi raspoloživi datum`,
  "next": `Sljedeći`,
  "previous": `Prethodni`,
  "selectedDateDescription": (args) => `Odabrani datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Odabrani raspon: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kliknite da započnete raspon odabranih datuma`,
  "todayDate": (args) => `Danas, ${args.date}`,
  "todayDateSelected": (args) => `Danas, odabran ${args.date}`
};
var $715875e6e7a338f4$exports = {};
$715875e6e7a338f4$exports = {
  "dateRange": (args) => `${args.startDate}–${args.endDate}`,
  "dateSelected": (args) => `${args.date} kiválasztva`,
  "finishRangeSelectionPrompt": `Kattintson a dátumtartomány kijelölésének befejezéséhez`,
  "maximumDate": `Utolsó elérhető dátum`,
  "minimumDate": `Az első elérhető dátum`,
  "next": `Következő`,
  "previous": `Előző`,
  "selectedDateDescription": (args) => `Kijelölt dátum: ${args.date}`,
  "selectedRangeDescription": (args) => `Kijelölt tartomány: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kattintson a dátumtartomány kijelölésének indításához`,
  "todayDate": (args) => `Ma, ${args.date}`,
  "todayDateSelected": (args) => `Ma, ${args.date} kijelölve`
};
var $37d77c66e34daccf$exports = {};
$37d77c66e34daccf$exports = {
  "dateRange": (args) => `Da ${args.startDate} a ${args.endDate}`,
  "dateSelected": (args) => `${args.date} selezionata`,
  "finishRangeSelectionPrompt": `Fai clic per completare la selezione dell’intervallo di date`,
  "maximumDate": `Ultima data disponibile`,
  "minimumDate": `Prima data disponibile`,
  "next": `Successivo`,
  "previous": `Precedente`,
  "selectedDateDescription": (args) => `Data selezionata: ${args.date}`,
  "selectedRangeDescription": (args) => `Intervallo selezionato: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Fai clic per selezionare l’intervallo di date`,
  "todayDate": (args) => `Oggi, ${args.date}`,
  "todayDateSelected": (args) => `Oggi, ${args.date} selezionata`
};
var $542f39aee29303c3$exports = {};
$542f39aee29303c3$exports = {
  "dateRange": (args) => `${args.startDate} から ${args.endDate}`,
  "dateSelected": (args) => `${args.date} を選択`,
  "finishRangeSelectionPrompt": `クリックして日付範囲の選択を終了`,
  "maximumDate": `最終利用可能日`,
  "minimumDate": `最初の利用可能日`,
  "next": `次へ`,
  "previous": `前へ`,
  "selectedDateDescription": (args) => `選択した日付 : ${args.date}`,
  "selectedRangeDescription": (args) => `選択範囲 : ${args.dateRange}`,
  "startRangeSelectionPrompt": `クリックして日付範囲の選択を開始`,
  "todayDate": (args) => `本日、${args.date}`,
  "todayDateSelected": (args) => `本日、${args.date} を選択`
};
var $22a5f0623ea73e4f$exports = {};
$22a5f0623ea73e4f$exports = {
  "dateRange": (args) => `${args.startDate} ~ ${args.endDate}`,
  "dateSelected": (args) => `${args.date} 선택됨`,
  "finishRangeSelectionPrompt": `날짜 범위 선택을 완료하려면 클릭하십시오.`,
  "maximumDate": `마지막으로 사용 가능한 일자`,
  "minimumDate": `처음으로 사용 가능한 일자`,
  "next": `다음`,
  "previous": `이전`,
  "selectedDateDescription": (args) => `선택 일자: ${args.date}`,
  "selectedRangeDescription": (args) => `선택 범위: ${args.dateRange}`,
  "startRangeSelectionPrompt": `날짜 범위 선택을 시작하려면 클릭하십시오.`,
  "todayDate": (args) => `오늘, ${args.date}`,
  "todayDateSelected": (args) => `오늘, ${args.date} 선택됨`
};
var $522380d13d62cba0$exports = {};
$522380d13d62cba0$exports = {
  "dateRange": (args) => `Nuo ${args.startDate} iki ${args.endDate}`,
  "dateSelected": (args) => `Pasirinkta ${args.date}`,
  "finishRangeSelectionPrompt": `Spustelėkite, kad baigtumėte pasirinkti datų intervalą`,
  "maximumDate": `Paskutinė galima data`,
  "minimumDate": `Pirmoji galima data`,
  "next": `Paskesnis`,
  "previous": `Ankstesnis`,
  "selectedDateDescription": (args) => `Pasirinkta data: ${args.date}`,
  "selectedRangeDescription": (args) => `Pasirinktas intervalas: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Spustelėkite, kad pradėtumėte pasirinkti datų intervalą`,
  "todayDate": (args) => `Šiandien, ${args.date}`,
  "todayDateSelected": (args) => `Šiandien, pasirinkta ${args.date}`
};
var $8a7bc830b2fe6485$exports = {};
$8a7bc830b2fe6485$exports = {
  "dateRange": (args) => `No ${args.startDate} līdz ${args.endDate}`,
  "dateSelected": (args) => `Atlasīts: ${args.date}`,
  "finishRangeSelectionPrompt": `Noklikšķiniet, lai pabeigtu datumu diapazona atlasi`,
  "maximumDate": `Pēdējais pieejamais datums`,
  "minimumDate": `Pirmais pieejamais datums`,
  "next": `Tālāk`,
  "previous": `Atpakaļ`,
  "selectedDateDescription": (args) => `Atlasītais datums: ${args.date}`,
  "selectedRangeDescription": (args) => `Atlasītais diapazons: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Noklikšķiniet, lai sāktu datumu diapazona atlasi`,
  "todayDate": (args) => `Šodien, ${args.date}`,
  "todayDateSelected": (args) => `Atlasīta šodiena, ${args.date}`
};
var $9fac9c044470683b$exports = {};
$9fac9c044470683b$exports = {
  "dateRange": (args) => `${args.startDate} til ${args.endDate}`,
  "dateSelected": (args) => `${args.date} valgt`,
  "finishRangeSelectionPrompt": `Klikk for å fullføre valg av datoområde`,
  "maximumDate": `Siste tilgjengelige dato`,
  "minimumDate": `Første tilgjengelige dato`,
  "next": `Neste`,
  "previous": `Forrige`,
  "selectedDateDescription": (args) => `Valgt dato: ${args.date}`,
  "selectedRangeDescription": (args) => `Valgt område: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Klikk for å starte valg av datoområde`,
  "todayDate": (args) => `I dag, ${args.date}`,
  "todayDateSelected": (args) => `I dag, ${args.date} valgt`
};
var $b127d3569efb1449$exports = {};
$b127d3569efb1449$exports = {
  "dateRange": (args) => `${args.startDate} tot ${args.endDate}`,
  "dateSelected": (args) => `${args.date} geselecteerd`,
  "finishRangeSelectionPrompt": `Klik om de selectie van het datumbereik te voltooien`,
  "maximumDate": `Laatste beschikbare datum`,
  "minimumDate": `Eerste beschikbare datum`,
  "next": `Volgende`,
  "previous": `Vorige`,
  "selectedDateDescription": (args) => `Geselecteerde datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Geselecteerd bereik: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Klik om het datumbereik te selecteren`,
  "todayDate": (args) => `Vandaag, ${args.date}`,
  "todayDateSelected": (args) => `Vandaag, ${args.date} geselecteerd`
};
var $51404a4090633490$exports = {};
$51404a4090633490$exports = {
  "dateRange": (args) => `${args.startDate} do ${args.endDate}`,
  "dateSelected": (args) => `Wybrano ${args.date}`,
  "finishRangeSelectionPrompt": `Kliknij, aby zakończyć wybór zakresu dat`,
  "maximumDate": `Ostatnia dostępna data`,
  "minimumDate": `Pierwsza dostępna data`,
  "next": `Dalej`,
  "previous": `Wstecz`,
  "selectedDateDescription": (args) => `Wybrana data: ${args.date}`,
  "selectedRangeDescription": (args) => `Wybrany zakres: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kliknij, aby rozpocząć wybór zakresu dat`,
  "todayDate": (args) => `Dzisiaj, ${args.date}`,
  "todayDateSelected": (args) => `Dzisiaj wybrano ${args.date}`
};
var $e5e6a3fe3b4527df$exports = {};
$e5e6a3fe3b4527df$exports = {
  "dateRange": (args) => `${args.startDate} a ${args.endDate}`,
  "dateSelected": (args) => `${args.date} selecionado`,
  "finishRangeSelectionPrompt": `Clique para concluir a seleção do intervalo de datas`,
  "maximumDate": `Última data disponível`,
  "minimumDate": `Primeira data disponível`,
  "next": `Próximo`,
  "previous": `Anterior`,
  "selectedDateDescription": (args) => `Data selecionada: ${args.date}`,
  "selectedRangeDescription": (args) => `Intervalo selecionado: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Clique para iniciar a seleção do intervalo de datas`,
  "todayDate": (args) => `Hoje, ${args.date}`,
  "todayDateSelected": (args) => `Hoje, ${args.date} selecionado`
};
var $c519dcadcbb1ee47$exports = {};
$c519dcadcbb1ee47$exports = {
  "dateRange": (args) => `${args.startDate} a ${args.endDate}`,
  "dateSelected": (args) => `${args.date} selecionado`,
  "finishRangeSelectionPrompt": `Clique para terminar de selecionar o intervalo de datas`,
  "maximumDate": `Última data disponível`,
  "minimumDate": `Primeira data disponível`,
  "next": `Próximo`,
  "previous": `Anterior`,
  "selectedDateDescription": (args) => `Data selecionada: ${args.date}`,
  "selectedRangeDescription": (args) => `Intervalo selecionado: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Clique para começar a selecionar o intervalo de datas`,
  "todayDate": (args) => `Hoje, ${args.date}`,
  "todayDateSelected": (args) => `Hoje, ${args.date} selecionado`
};
var $e5aa0186ca7889c6$exports = {};
$e5aa0186ca7889c6$exports = {
  "dateRange": (args) => `De la ${args.startDate} până la ${args.endDate}`,
  "dateSelected": (args) => `${args.date} selectată`,
  "finishRangeSelectionPrompt": `Apăsaţi pentru a finaliza selecţia razei pentru dată`,
  "maximumDate": `Ultima dată disponibilă`,
  "minimumDate": `Prima dată disponibilă`,
  "next": `Următorul`,
  "previous": `Înainte`,
  "selectedDateDescription": (args) => `Dată selectată: ${args.date}`,
  "selectedRangeDescription": (args) => `Interval selectat: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Apăsaţi pentru a începe selecţia razei pentru dată`,
  "todayDate": (args) => `Astăzi, ${args.date}`,
  "todayDateSelected": (args) => `Azi, ${args.date} selectată`
};
var $5b907f5fa3eee652$exports = {};
$5b907f5fa3eee652$exports = {
  "dateRange": (args) => `С ${args.startDate} по ${args.endDate}`,
  "dateSelected": (args) => `Выбрано ${args.date}`,
  "finishRangeSelectionPrompt": `Щелкните, чтобы завершить выбор диапазона дат`,
  "maximumDate": `Последняя доступная дата`,
  "minimumDate": `Первая доступная дата`,
  "next": `Далее`,
  "previous": `Назад`,
  "selectedDateDescription": (args) => `Выбранная дата: ${args.date}`,
  "selectedRangeDescription": (args) => `Выбранный диапазон: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Щелкните, чтобы начать выбор диапазона дат`,
  "todayDate": (args) => `Сегодня, ${args.date}`,
  "todayDateSelected": (args) => `Сегодня, выбрано ${args.date}`
};
var $1b4c51359c99cf79$exports = {};
$1b4c51359c99cf79$exports = {
  "dateRange": (args) => `Od ${args.startDate} do ${args.endDate}`,
  "dateSelected": (args) => `Vybratý dátum ${args.date}`,
  "finishRangeSelectionPrompt": `Kliknutím dokončíte výber rozsahu dátumov`,
  "maximumDate": `Posledný dostupný dátum`,
  "minimumDate": `Prvý dostupný dátum`,
  "next": `Nasledujúce`,
  "previous": `Predchádzajúce`,
  "selectedDateDescription": (args) => `Vybratý dátum: ${args.date}`,
  "selectedRangeDescription": (args) => `Vybratý rozsah: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kliknutím spustíte výber rozsahu dátumov`,
  "todayDate": (args) => `Dnes ${args.date}`,
  "todayDateSelected": (args) => `Vybratý dnešný dátum ${args.date}`
};
var $02e4e6a4608cc6f3$exports = {};
$02e4e6a4608cc6f3$exports = {
  "dateRange": (args) => `${args.startDate} do ${args.endDate}`,
  "dateSelected": (args) => `${args.date} izbrano`,
  "finishRangeSelectionPrompt": `Kliknite za dokončanje izbire datumskega obsega`,
  "maximumDate": `Zadnji razpoložljivi datum`,
  "minimumDate": `Prvi razpoložljivi datum`,
  "next": `Naprej`,
  "previous": `Nazaj`,
  "selectedDateDescription": (args) => `Izbrani datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Izbrano območje: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kliknite za začetek izbire datumskega obsega`,
  "todayDate": (args) => `Danes, ${args.date}`,
  "todayDateSelected": (args) => `Danes, ${args.date} izbrano`
};
var $6dd2fbaad93b6878$exports = {};
$6dd2fbaad93b6878$exports = {
  "dateRange": (args) => `${args.startDate} do ${args.endDate}`,
  "dateSelected": (args) => `${args.date} izabran`,
  "finishRangeSelectionPrompt": `Kliknite da dovršite opseg izabranih datuma`,
  "maximumDate": `Zadnji raspoloživi datum`,
  "minimumDate": `Prvi raspoloživi datum`,
  "next": `Sledeći`,
  "previous": `Prethodni`,
  "selectedDateDescription": (args) => `Izabrani datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Izabrani period: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Kliknite da započnete opseg izabranih datuma`,
  "todayDate": (args) => `Danas, ${args.date}`,
  "todayDateSelected": (args) => `Danas, izabran ${args.date}`
};
var $33ea59bfe6e804e0$exports = {};
$33ea59bfe6e804e0$exports = {
  "dateRange": (args) => `${args.startDate} till ${args.endDate}`,
  "dateSelected": (args) => `${args.date} har valts`,
  "finishRangeSelectionPrompt": `Klicka för att avsluta val av datumintervall`,
  "maximumDate": `Sista tillgängliga datum`,
  "minimumDate": `Första tillgängliga datum`,
  "next": `Nästa`,
  "previous": `Föregående`,
  "selectedDateDescription": (args) => `Valt datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Valt intervall: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Klicka för att välja datumintervall`,
  "todayDate": (args) => `Idag, ${args.date}`,
  "todayDateSelected": (args) => `Idag, ${args.date} har valts`
};
var $4603b0d0246969b2$exports = {};
$4603b0d0246969b2$exports = {
  "dateRange": (args) => `${args.startDate} - ${args.endDate}`,
  "dateSelected": (args) => `${args.date} seçildi`,
  "finishRangeSelectionPrompt": `Tarih aralığı seçimini tamamlamak için tıklayın`,
  "maximumDate": `Son müsait tarih`,
  "minimumDate": `İlk müsait tarih`,
  "next": `Sonraki`,
  "previous": `Önceki`,
  "selectedDateDescription": (args) => `Seçilen Tarih: ${args.date}`,
  "selectedRangeDescription": (args) => `Seçilen Aralık: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Tarih aralığı seçimini başlatmak için tıklayın`,
  "todayDate": (args) => `Bugün, ${args.date}`,
  "todayDateSelected": (args) => `Bugün, ${args.date} seçildi`
};
var $82649816f530bb1b$exports = {};
$82649816f530bb1b$exports = {
  "dateRange": (args) => `${args.startDate} — ${args.endDate}`,
  "dateSelected": (args) => `Вибрано ${args.date}`,
  "finishRangeSelectionPrompt": `Натисніть, щоб завершити вибір діапазону дат`,
  "maximumDate": `Остання доступна дата`,
  "minimumDate": `Перша доступна дата`,
  "next": `Наступний`,
  "previous": `Попередній`,
  "selectedDateDescription": (args) => `Вибрана дата: ${args.date}`,
  "selectedRangeDescription": (args) => `Вибраний діапазон: ${args.dateRange}`,
  "startRangeSelectionPrompt": `Натисніть, щоб почати вибір діапазону дат`,
  "todayDate": (args) => `Сьогодні, ${args.date}`,
  "todayDateSelected": (args) => `Сьогодні, вибрано ${args.date}`
};
var $628e140a43dfb330$exports = {};
$628e140a43dfb330$exports = {
  "dateRange": (args) => `${args.startDate} 至 ${args.endDate}`,
  "dateSelected": (args) => `已选择 ${args.date}`,
  "finishRangeSelectionPrompt": `单击以完成选择日期范围`,
  "maximumDate": `最后一个可用日期`,
  "minimumDate": `第一个可用日期`,
  "next": `下一页`,
  "previous": `上一页`,
  "selectedDateDescription": (args) => `选定的日期：${args.date}`,
  "selectedRangeDescription": (args) => `选定的范围：${args.dateRange}`,
  "startRangeSelectionPrompt": `单击以开始选择日期范围`,
  "todayDate": (args) => `今天，即 ${args.date}`,
  "todayDateSelected": (args) => `已选择今天，即 ${args.date}`
};
var $745937250cd4679c$exports = {};
$745937250cd4679c$exports = {
  "dateRange": (args) => `${args.startDate} 至 ${args.endDate}`,
  "dateSelected": (args) => `已選取 ${args.date}`,
  "finishRangeSelectionPrompt": `按一下以完成選取日期範圍`,
  "maximumDate": `最後一個可用日期`,
  "minimumDate": `第一個可用日期`,
  "next": `下一頁`,
  "previous": `上一頁`,
  "selectedDateDescription": (args) => `選定的日期：${args.date}`,
  "selectedRangeDescription": (args) => `選定的範圍：${args.dateRange}`,
  "startRangeSelectionPrompt": `按一下以開始選取日期範圍`,
  "todayDate": (args) => `今天，${args.date}`,
  "todayDateSelected": (args) => `已選取今天，${args.date}`
};
$3904726b442bd9b2$exports = {
  "ar-AE": $39324ace0d945f59$exports,
  "bg-BG": $1830a539e98c7baf$exports,
  "cs-CZ": $f4b92528965aab97$exports,
  "da-DK": $1cd578ef0547c8f1$exports,
  "de-DE": $db55a8973925d619$exports,
  "el-GR": $ec6937d58566d443$exports,
  "en-US": $1f5cea0742dc284a$exports,
  "es-ES": $2ca7ea366384817b$exports,
  "et-EE": $97874a7fe9cd091f$exports,
  "fi-FI": $5d376b7fce1a45b2$exports,
  "fr-FR": $3bf722b362aaf54d$exports,
  "he-IL": $38c43f8322316031$exports,
  "hr-HR": $c90e0f32b44630bf$exports,
  "hu-HU": $715875e6e7a338f4$exports,
  "it-IT": $37d77c66e34daccf$exports,
  "ja-JP": $542f39aee29303c3$exports,
  "ko-KR": $22a5f0623ea73e4f$exports,
  "lt-LT": $522380d13d62cba0$exports,
  "lv-LV": $8a7bc830b2fe6485$exports,
  "nb-NO": $9fac9c044470683b$exports,
  "nl-NL": $b127d3569efb1449$exports,
  "pl-PL": $51404a4090633490$exports,
  "pt-BR": $e5e6a3fe3b4527df$exports,
  "pt-PT": $c519dcadcbb1ee47$exports,
  "ro-RO": $e5aa0186ca7889c6$exports,
  "ru-RU": $5b907f5fa3eee652$exports,
  "sk-SK": $1b4c51359c99cf79$exports,
  "sl-SI": $02e4e6a4608cc6f3$exports,
  "sr-SP": $6dd2fbaad93b6878$exports,
  "sv-SE": $33ea59bfe6e804e0$exports,
  "tr-TR": $4603b0d0246969b2$exports,
  "uk-UA": $82649816f530bb1b$exports,
  "zh-CN": $628e140a43dfb330$exports,
  "zh-TW": $745937250cd4679c$exports
};
var $a074e1e2d0f0a665$export$653eddfc964b0f8a = /* @__PURE__ */ new WeakMap();
function $a074e1e2d0f0a665$export$134cbb7fb09a9522(date) {
  return (date === null || date === void 0 ? void 0 : date.calendar.identifier) === "gregory" && date.era === "BC" ? "short" : void 0;
}
function $a074e1e2d0f0a665$export$b6df97c887c38e1a(state) {
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault2($3904726b442bd9b2$exports)));
  let start, end;
  if ("highlightedRange" in state)
    ({ start, end } = state.highlightedRange || {});
  else
    start = end = state.value;
  let dateFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    weekday: "long",
    month: "long",
    year: "numeric",
    day: "numeric",
    era: $a074e1e2d0f0a665$export$134cbb7fb09a9522(start) || $a074e1e2d0f0a665$export$134cbb7fb09a9522(end),
    timeZone: state.timeZone
  });
  let anchorDate = "anchorDate" in state ? state.anchorDate : null;
  return (0, import_react8.useMemo)(() => {
    if (!anchorDate && start && end) {
      if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(start, end)) {
        let date = dateFormatter.format(start.toDate(state.timeZone));
        return stringFormatter.format("selectedDateDescription", {
          date
        });
      } else {
        let dateRange = $a074e1e2d0f0a665$var$formatRange(dateFormatter, stringFormatter, start, end, state.timeZone);
        return stringFormatter.format("selectedRangeDescription", {
          dateRange
        });
      }
    }
    return "";
  }, [
    start,
    end,
    anchorDate,
    state.timeZone,
    stringFormatter,
    dateFormatter
  ]);
}
function $a074e1e2d0f0a665$export$31afe65d91ef6e8(startDate, endDate, timeZone, isAria) {
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault2($3904726b442bd9b2$exports)));
  let era = $a074e1e2d0f0a665$export$134cbb7fb09a9522(startDate) || $a074e1e2d0f0a665$export$134cbb7fb09a9522(endDate);
  let monthFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    month: "long",
    year: "numeric",
    era,
    calendar: startDate.calendar.identifier,
    timeZone
  });
  let dateFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    month: "long",
    year: "numeric",
    day: "numeric",
    era,
    calendar: startDate.calendar.identifier,
    timeZone
  });
  return (0, import_react8.useMemo)(() => {
    if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(startDate, (0, $14e0f24ef4ac5c92$export$a5a3b454ada2268e)(startDate))) {
      if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(endDate, (0, $14e0f24ef4ac5c92$export$a2258d9c4118825c)(startDate)))
        return monthFormatter.format(startDate.toDate(timeZone));
      else if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(endDate, (0, $14e0f24ef4ac5c92$export$a2258d9c4118825c)(endDate)))
        return isAria ? $a074e1e2d0f0a665$var$formatRange(monthFormatter, stringFormatter, startDate, endDate, timeZone) : monthFormatter.formatRange(startDate.toDate(timeZone), endDate.toDate(timeZone));
    }
    return isAria ? $a074e1e2d0f0a665$var$formatRange(dateFormatter, stringFormatter, startDate, endDate, timeZone) : dateFormatter.formatRange(startDate.toDate(timeZone), endDate.toDate(timeZone));
  }, [
    startDate,
    endDate,
    monthFormatter,
    dateFormatter,
    stringFormatter,
    timeZone,
    isAria
  ]);
}
function $a074e1e2d0f0a665$var$formatRange(dateFormatter, stringFormatter, start, end, timeZone) {
  let parts = dateFormatter.formatRangeToParts(start.toDate(timeZone), end.toDate(timeZone));
  let separatorIndex = -1;
  for (let i = 0; i < parts.length; i++) {
    let part = parts[i];
    if (part.source === "shared" && part.type === "literal")
      separatorIndex = i;
    else if (part.source === "endRange")
      break;
  }
  let startValue = "";
  let endValue = "";
  for (let i = 0; i < parts.length; i++) {
    if (i < separatorIndex)
      startValue += parts[i].value;
    else if (i > separatorIndex)
      endValue += parts[i].value;
  }
  return stringFormatter.format("dateRange", {
    startDate: startValue,
    endDate: endValue
  });
}
function $c4acc1de3ab169cf$export$d652b3ea2d672d5b(props, state) {
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault2($3904726b442bd9b2$exports)));
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  let title = (0, $a074e1e2d0f0a665$export$31afe65d91ef6e8)(state.visibleRange.start, state.visibleRange.end, state.timeZone, false);
  let visibleRangeDescription = (0, $a074e1e2d0f0a665$export$31afe65d91ef6e8)(state.visibleRange.start, state.visibleRange.end, state.timeZone, true);
  (0, $4f58c5f72bcf79f7$export$496315a1608d9602)(() => {
    if (!state.isFocused)
      (0, $319e236875307eab$export$a9b970dcc4ae71a9)(visibleRangeDescription);
  }, [
    visibleRangeDescription
  ]);
  let selectedDateDescription = (0, $a074e1e2d0f0a665$export$b6df97c887c38e1a)(state);
  (0, $4f58c5f72bcf79f7$export$496315a1608d9602)(() => {
    if (selectedDateDescription)
      (0, $319e236875307eab$export$a9b970dcc4ae71a9)(selectedDateDescription, "polite", 4e3);
  }, [
    selectedDateDescription
  ]);
  let errorMessageId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)([
    Boolean(props.errorMessage),
    props.validationState
  ]);
  (0, $a074e1e2d0f0a665$export$653eddfc964b0f8a).set(state, {
    ariaLabel: props["aria-label"],
    ariaLabelledBy: props["aria-labelledby"],
    errorMessageId,
    selectedDateDescription
  });
  let [nextFocused, setNextFocused] = (0, import_react8.useState)(false);
  let nextDisabled = props.isDisabled || state.isNextVisibleRangeInvalid();
  if (nextDisabled && nextFocused) {
    setNextFocused(false);
    state.setFocused(true);
  }
  let [previousFocused, setPreviousFocused] = (0, import_react8.useState)(false);
  let previousDisabled = props.isDisabled || state.isPreviousVisibleRangeInvalid();
  if (previousDisabled && previousFocused) {
    setPreviousFocused(false);
    state.setFocused(true);
  }
  let labelProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    id: props["id"],
    "aria-label": [
      props["aria-label"],
      visibleRangeDescription
    ].filter(Boolean).join(", "),
    "aria-labelledby": props["aria-labelledby"]
  });
  return {
    calendarProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, labelProps, {
      role: "application",
      "aria-describedby": props["aria-describedby"] || void 0
    }),
    nextButtonProps: {
      onPress: () => state.focusNextPage(),
      "aria-label": stringFormatter.format("next"),
      isDisabled: nextDisabled,
      onFocusChange: setNextFocused
    },
    prevButtonProps: {
      onPress: () => state.focusPreviousPage(),
      "aria-label": stringFormatter.format("previous"),
      isDisabled: previousDisabled,
      onFocusChange: setPreviousFocused
    },
    errorMessageProps: {
      id: errorMessageId
    },
    title
  };
}
function $9942cad8a072a530$export$3ee915f8151bd4f1(props, state) {
  return (0, $c4acc1de3ab169cf$export$d652b3ea2d672d5b)(props, state);
}
function $46a4342aab3d8076$export$87e0539f600c24e5(props, state, ref) {
  let res = (0, $c4acc1de3ab169cf$export$d652b3ea2d672d5b)(props, state);
  let isVirtualClick = (0, import_react8.useRef)(false);
  let windowRef = (0, import_react8.useRef)(typeof window !== "undefined" ? window : null);
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(windowRef, "pointerdown", (e) => {
    isVirtualClick.current = e.width === 0 && e.height === 0;
  });
  let endDragging = (e) => {
    if (isVirtualClick.current) {
      isVirtualClick.current = false;
      return;
    }
    state.setDragging(false);
    if (!state.anchorDate)
      return;
    let target = e.target;
    let body = document.getElementById(res.calendarProps.id);
    if (body && body.contains(document.activeElement) && (!body.contains(target) || !target.closest('button, [role="button"]')))
      state.selectFocusedDate();
  };
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(windowRef, "pointerup", endDragging);
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(windowRef, "pointercancel", endDragging);
  res.calendarProps.onBlur = (e) => {
    if ((!e.relatedTarget || !ref.current.contains(e.relatedTarget)) && state.anchorDate)
      state.selectFocusedDate();
  };
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(ref, "touchmove", (e) => {
    if (state.isDragging)
      e.preventDefault();
  }, {
    passive: false,
    capture: true
  });
  return res;
}
function $e3031d1f8c9d64eb$export$cb95147730a423f5(props, state) {
  let { startDate = state.visibleRange.start, endDate = state.visibleRange.end } = props;
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let onKeyDown = (e) => {
    switch (e.key) {
      case "Enter":
      case " ":
        e.preventDefault();
        state.selectFocusedDate();
        break;
      case "PageUp":
        e.preventDefault();
        e.stopPropagation();
        state.focusPreviousSection(e.shiftKey);
        break;
      case "PageDown":
        e.preventDefault();
        e.stopPropagation();
        state.focusNextSection(e.shiftKey);
        break;
      case "End":
        e.preventDefault();
        e.stopPropagation();
        state.focusSectionEnd();
        break;
      case "Home":
        e.preventDefault();
        e.stopPropagation();
        state.focusSectionStart();
        break;
      case "ArrowLeft":
        e.preventDefault();
        e.stopPropagation();
        if (direction === "rtl")
          state.focusNextDay();
        else
          state.focusPreviousDay();
        break;
      case "ArrowUp":
        e.preventDefault();
        e.stopPropagation();
        state.focusPreviousRow();
        break;
      case "ArrowRight":
        e.preventDefault();
        e.stopPropagation();
        if (direction === "rtl")
          state.focusPreviousDay();
        else
          state.focusNextDay();
        break;
      case "ArrowDown":
        e.preventDefault();
        e.stopPropagation();
        state.focusNextRow();
        break;
      case "Escape":
        if ("setAnchorDate" in state) {
          e.preventDefault();
          state.setAnchorDate(null);
        }
        break;
    }
  };
  let visibleRangeDescription = (0, $a074e1e2d0f0a665$export$31afe65d91ef6e8)(startDate, endDate, state.timeZone, true);
  let { ariaLabel, ariaLabelledBy } = (0, $a074e1e2d0f0a665$export$653eddfc964b0f8a).get(state);
  let labelProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    "aria-label": [
      ariaLabel,
      visibleRangeDescription
    ].filter(Boolean).join(", "),
    "aria-labelledby": ariaLabelledBy
  });
  let dayFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    weekday: props.weekdayStyle || "narrow",
    timeZone: state.timeZone
  });
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let weekDays = (0, import_react8.useMemo)(() => {
    let weekStart = (0, $14e0f24ef4ac5c92$export$42c81a444fbfb5d4)((0, $14e0f24ef4ac5c92$export$d0bdf45af03a6ea3)(state.timeZone), locale);
    return [
      ...new Array(7).keys()
    ].map((index) => {
      let date = weekStart.add({
        days: index
      });
      let dateDay = date.toDate(state.timeZone);
      return dayFormatter.format(dateDay);
    });
  }, [
    locale,
    state.timeZone,
    dayFormatter
  ]);
  return {
    gridProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(labelProps, {
      role: "grid",
      "aria-readonly": state.isReadOnly || null,
      "aria-disabled": state.isDisabled || null,
      "aria-multiselectable": "highlightedRange" in state || void 0,
      onKeyDown,
      onFocus: () => state.setFocused(true),
      onBlur: () => state.setFocused(false)
    }),
    headerProps: {
      // Column headers are hidden to screen readers to make navigating with a touch screen reader easier.
      // The day names are already included in the label of each cell, so there's no need to announce them twice.
      "aria-hidden": true
    },
    weekDays
  };
}
function $36a0ac60f04457c5$export$136073280381448e(props, state, ref) {
  let { date, isDisabled } = props;
  let { errorMessageId, selectedDateDescription } = (0, $a074e1e2d0f0a665$export$653eddfc964b0f8a).get(state);
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault2($3904726b442bd9b2$exports)));
  let dateFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    weekday: "long",
    day: "numeric",
    month: "long",
    year: "numeric",
    era: (0, $a074e1e2d0f0a665$export$134cbb7fb09a9522)(date),
    timeZone: state.timeZone
  });
  let isSelected = state.isSelected(date);
  let isFocused = state.isCellFocused(date);
  isDisabled = isDisabled || state.isCellDisabled(date);
  let isUnavailable = state.isCellUnavailable(date);
  let isSelectable = !isDisabled && !isUnavailable;
  let isInvalid = state.validationState === "invalid" && ("highlightedRange" in state ? !state.anchorDate && state.highlightedRange && date.compare(state.highlightedRange.start) >= 0 && date.compare(state.highlightedRange.end) <= 0 : state.value && (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(state.value, date));
  if (isInvalid)
    isSelected = true;
  date = (0, $5a387cc49350e6db$export$722debc0e56fea39)(date, (0, $14e0f24ef4ac5c92$export$91b62ebf2ba703ee));
  let nativeDate = (0, import_react8.useMemo)(() => date.toDate(state.timeZone), [
    date,
    state.timeZone
  ]);
  let isDateToday = (0, $14e0f24ef4ac5c92$export$629b0a497aa65267)(date, state.timeZone);
  let label = (0, import_react8.useMemo)(() => {
    let label2 = "";
    if ("highlightedRange" in state && state.value && !state.anchorDate && ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.value.start) || (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.value.end)))
      label2 = selectedDateDescription + ", ";
    label2 += dateFormatter.format(nativeDate);
    if (isDateToday)
      label2 = stringFormatter.format(isSelected ? "todayDateSelected" : "todayDate", {
        date: label2
      });
    else if (isSelected)
      label2 = stringFormatter.format("dateSelected", {
        date: label2
      });
    if (state.minValue && (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.minValue))
      label2 += ", " + stringFormatter.format("minimumDate");
    else if (state.maxValue && (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.maxValue))
      label2 += ", " + stringFormatter.format("maximumDate");
    return label2;
  }, [
    dateFormatter,
    nativeDate,
    stringFormatter,
    isSelected,
    isDateToday,
    date,
    state,
    selectedDateDescription
  ]);
  let rangeSelectionPrompt = "";
  if ("anchorDate" in state && isFocused && !state.isReadOnly && isSelectable) {
    if (state.anchorDate)
      rangeSelectionPrompt = stringFormatter.format("finishRangeSelectionPrompt");
    else
      rangeSelectionPrompt = stringFormatter.format("startRangeSelectionPrompt");
  }
  let descriptionProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(rangeSelectionPrompt);
  let isAnchorPressed = (0, import_react8.useRef)(false);
  let isRangeBoundaryPressed = (0, import_react8.useRef)(false);
  let touchDragTimerRef = (0, import_react8.useRef)(null);
  let { pressProps, isPressed } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    // When dragging to select a range, we don't want dragging over the original anchor
    // again to trigger onPressStart. Cancel presses immediately when the pointer exits.
    shouldCancelOnPointerExit: "anchorDate" in state && !!state.anchorDate,
    preventFocusOnPress: true,
    isDisabled: !isSelectable || state.isReadOnly,
    onPressStart(e) {
      if (state.isReadOnly) {
        state.setFocusedDate(date);
        return;
      }
      if ("highlightedRange" in state && !state.anchorDate && (e.pointerType === "mouse" || e.pointerType === "touch")) {
        if (state.highlightedRange && !isInvalid) {
          if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.highlightedRange.start)) {
            state.setAnchorDate(state.highlightedRange.end);
            state.setFocusedDate(date);
            state.setDragging(true);
            isRangeBoundaryPressed.current = true;
            return;
          } else if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.highlightedRange.end)) {
            state.setAnchorDate(state.highlightedRange.start);
            state.setFocusedDate(date);
            state.setDragging(true);
            isRangeBoundaryPressed.current = true;
            return;
          }
        }
        let startDragging = () => {
          state.setDragging(true);
          touchDragTimerRef.current = null;
          state.selectDate(date);
          state.setFocusedDate(date);
          isAnchorPressed.current = true;
        };
        if (e.pointerType === "touch")
          touchDragTimerRef.current = setTimeout(startDragging, 200);
        else
          startDragging();
      }
    },
    onPressEnd() {
      isRangeBoundaryPressed.current = false;
      isAnchorPressed.current = false;
      clearTimeout(touchDragTimerRef.current);
      touchDragTimerRef.current = null;
    },
    onPress() {
      if (!("anchorDate" in state) && !state.isReadOnly) {
        state.selectDate(date);
        state.setFocusedDate(date);
      }
    },
    onPressUp(e) {
      if (state.isReadOnly)
        return;
      if ("anchorDate" in state && touchDragTimerRef.current) {
        state.selectDate(date);
        state.setFocusedDate(date);
      }
      if ("anchorDate" in state) {
        if (isRangeBoundaryPressed.current)
          state.setAnchorDate(date);
        else if (state.anchorDate && !isAnchorPressed.current) {
          state.selectDate(date);
          state.setFocusedDate(date);
        } else if (e.pointerType === "keyboard" && !state.anchorDate) {
          state.selectDate(date);
          let nextDay = date.add({
            days: 1
          });
          if (state.isInvalid(nextDay))
            nextDay = date.subtract({
              days: 1
            });
          if (!state.isInvalid(nextDay))
            state.setFocusedDate(nextDay);
        } else if (e.pointerType === "virtual") {
          state.selectDate(date);
          state.setFocusedDate(date);
        }
      }
    }
  });
  let tabIndex = null;
  if (!isDisabled)
    tabIndex = (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.focusedDate) ? 0 : -1;
  (0, import_react8.useEffect)(() => {
    if (isFocused && ref.current) {
      (0, $7215afc6de606d6b$export$de79e2c695e052f3)(ref.current);
      if ((0, $507fabe10e71c6fb$export$630ff653c5ada6a9)() !== "pointer" && document.activeElement === ref.current)
        (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(ref.current, {
          containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
        });
    }
  }, [
    isFocused,
    ref
  ]);
  let cellDateFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    day: "numeric",
    timeZone: state.timeZone,
    calendar: date.calendar.identifier
  });
  let formattedDate = (0, import_react8.useMemo)(() => cellDateFormatter.formatToParts(nativeDate).find((part) => part.type === "day").value, [
    cellDateFormatter,
    nativeDate
  ]);
  return {
    cellProps: {
      role: "gridcell",
      "aria-disabled": !isSelectable || null,
      "aria-selected": isSelected || null,
      "aria-invalid": isInvalid || null
    },
    buttonProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(pressProps, {
      onFocus() {
        if (!isDisabled)
          state.setFocusedDate(date);
      },
      tabIndex,
      role: "button",
      "aria-disabled": !isSelectable || null,
      "aria-label": label,
      "aria-invalid": isInvalid || null,
      "aria-describedby": [
        isInvalid ? errorMessageId : null,
        descriptionProps["aria-describedby"]
      ].filter(Boolean).join(" ") || void 0,
      onPointerEnter(e) {
        if ("highlightDate" in state && (e.pointerType !== "touch" || state.isDragging) && isSelectable)
          state.highlightDate(date);
      },
      onPointerDown(e) {
        if ("releasePointerCapture" in e.target)
          e.target.releasePointerCapture(e.pointerId);
      },
      onContextMenu(e) {
        e.preventDefault();
      }
    }),
    isPressed,
    isFocused,
    isSelected,
    isDisabled,
    isUnavailable,
    isOutsideVisibleRange: date.compare(state.visibleRange.start) < 0 || date.compare(state.visibleRange.end) > 0,
    isInvalid,
    formattedDate
  };
}

// node_modules/.pnpm/@react-aria+checkbox@3.10.0_react@18.2.0/node_modules/@react-aria/checkbox/dist/module.js
var import_react9 = __toESM(require_react());

// node_modules/.pnpm/@react-aria+toggle@3.7.0_react@18.2.0/node_modules/@react-aria/toggle/dist/module.js
function $d2c8e2b0480f3f34$export$cbe85ee05b554577(props, state, ref) {
  let { isDisabled = false, isRequired = false, isReadOnly = false, value, name, children, "aria-label": ariaLabel, "aria-labelledby": ariaLabelledby, validationState = "valid" } = props;
  let onChange = (e) => {
    e.stopPropagation();
    state.setSelected(e.target.checked);
  };
  let hasChildren = children != null;
  let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;
  if (!hasChildren && !hasAriaLabel)
    console.warn("If you do not provide children, you must specify an aria-label for accessibility");
  let { pressProps, isPressed } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    isDisabled
  });
  let { focusableProps } = (0, $e6afbd83fe6ebbd2$export$4c014de7c8940b4c)(props, ref);
  let interactions = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(pressProps, focusableProps);
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  (0, $99facab73266f662$export$5add1d006293d136)(ref, state.isSelected, state.setSelected);
  return {
    inputProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, {
      "aria-invalid": validationState === "invalid" || void 0,
      "aria-errormessage": props["aria-errormessage"],
      "aria-controls": props["aria-controls"],
      "aria-readonly": isReadOnly || void 0,
      "aria-required": isRequired || void 0,
      onChange,
      disabled: isDisabled,
      ...value == null ? {} : {
        value
      },
      name,
      type: "checkbox",
      ...interactions
    }),
    isSelected: state.isSelected,
    isPressed,
    isDisabled,
    isReadOnly
  };
}

// node_modules/.pnpm/@react-aria+label@3.6.1_react@18.2.0/node_modules/@react-aria/label/dist/module.js
function $d191a55c9702f145$export$8467354a121f1b9f(props) {
  let { id, label, "aria-labelledby": ariaLabelledby, "aria-label": ariaLabel, labelElementType = "label" } = props;
  id = (0, $bdb11010cef70236$export$f680877a34711e37)(id);
  let labelId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let labelProps = {};
  if (label) {
    ariaLabelledby = ariaLabelledby ? `${labelId} ${ariaLabelledby}` : labelId;
    labelProps = {
      id: labelId,
      htmlFor: labelElementType === "label" ? id : void 0
    };
  } else if (!ariaLabelledby && !ariaLabel)
    console.warn("If you do not provide a visible label, you must specify an aria-label or aria-labelledby attribute for accessibility");
  let fieldProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    id,
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby
  });
  return {
    labelProps,
    fieldProps
  };
}
function $2baaea4c71418dea$export$294aa081a6c6f55d(props) {
  let { description, errorMessage, validationState } = props;
  let { labelProps, fieldProps } = (0, $d191a55c9702f145$export$8467354a121f1b9f)(props);
  let descriptionId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)([
    Boolean(description),
    Boolean(errorMessage),
    validationState
  ]);
  let errorMessageId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)([
    Boolean(description),
    Boolean(errorMessage),
    validationState
  ]);
  fieldProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(fieldProps, {
    "aria-describedby": [
      descriptionId,
      // Use aria-describedby for error message because aria-errormessage is unsupported using VoiceOver or NVDA. See https://github.com/adobe/react-spectrum/issues/1346#issuecomment-740136268
      errorMessageId,
      props["aria-describedby"]
    ].filter(Boolean).join(" ") || void 0
  });
  return {
    labelProps,
    fieldProps,
    descriptionProps: {
      id: descriptionId
    },
    errorMessageProps: {
      id: errorMessageId
    }
  };
}

// node_modules/.pnpm/@react-stately+toggle@3.6.1_react@18.2.0/node_modules/@react-stately/toggle/dist/module.js
function $3017fa7ffdddec74$export$8042c6c013fd5226(props = {}) {
  let { isReadOnly } = props;
  let [isSelected, setSelected] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.isSelected, props.defaultSelected || false, props.onChange);
  function updateSelected(value) {
    if (!isReadOnly)
      setSelected(value);
  }
  function toggleState() {
    if (!isReadOnly)
      setSelected(!isSelected);
  }
  return {
    isSelected,
    setSelected: updateSelected,
    toggle: toggleState
  };
}

// node_modules/.pnpm/@react-aria+checkbox@3.10.0_react@18.2.0/node_modules/@react-aria/checkbox/dist/module.js
function $406796ff087fe49b$export$e375f10ce42261c5(props, state, inputRef) {
  let { inputProps, isSelected, isPressed, isDisabled, isReadOnly } = (0, $d2c8e2b0480f3f34$export$cbe85ee05b554577)(props, state, inputRef);
  let { isIndeterminate } = props;
  (0, import_react9.useEffect)(() => {
    if (inputRef.current)
      inputRef.current.indeterminate = isIndeterminate;
  });
  return {
    inputProps: {
      ...inputProps,
      checked: isSelected
    },
    isSelected,
    isPressed,
    isDisabled,
    isReadOnly
  };
}
var $1ae600c947479353$export$31440636951aa68c = /* @__PURE__ */ new WeakMap();
var $1ae600c947479353$export$a3077e9c93f7360f = /* @__PURE__ */ new WeakMap();
var $1ae600c947479353$export$d5679492e2864181 = /* @__PURE__ */ new WeakMap();
function $1e9fce0cfacc738b$export$49ff6f28c54f1cbe(props, state) {
  let { isDisabled, name } = props;
  let { labelProps, fieldProps, descriptionProps, errorMessageProps } = (0, $2baaea4c71418dea$export$294aa081a6c6f55d)({
    ...props,
    // Checkbox group is not an HTML input element so it
    // shouldn't be labeled by a <label> element.
    labelElementType: "span"
  });
  (0, $1ae600c947479353$export$a3077e9c93f7360f).set(state, descriptionProps.id);
  (0, $1ae600c947479353$export$d5679492e2864181).set(state, errorMessageProps.id);
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  (0, $1ae600c947479353$export$31440636951aa68c).set(state, name);
  return {
    groupProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, {
      role: "group",
      "aria-disabled": isDisabled || void 0,
      ...fieldProps
    }),
    labelProps,
    descriptionProps,
    errorMessageProps
  };
}
function $fba3e38d5ca8983f$export$353b32fc6898d37d(props, state, inputRef) {
  const toggleState = (0, $3017fa7ffdddec74$export$8042c6c013fd5226)({
    isReadOnly: props.isReadOnly || state.isReadOnly,
    isSelected: state.isSelected(props.value),
    onChange(isSelected) {
      if (isSelected)
        state.addValue(props.value);
      else
        state.removeValue(props.value);
      if (props.onChange)
        props.onChange(isSelected);
    }
  });
  let res = (0, $406796ff087fe49b$export$e375f10ce42261c5)({
    ...props,
    isReadOnly: props.isReadOnly || state.isReadOnly,
    isDisabled: props.isDisabled || state.isDisabled,
    name: props.name || (0, $1ae600c947479353$export$31440636951aa68c).get(state)
  }, toggleState, inputRef);
  return {
    ...res,
    inputProps: {
      ...res.inputProps,
      "aria-describedby": [
        props["aria-describedby"],
        state.validationState === "invalid" ? (0, $1ae600c947479353$export$d5679492e2864181).get(state) : null,
        (0, $1ae600c947479353$export$a3077e9c93f7360f).get(state)
      ].filter(Boolean).join(" ") || void 0
    }
  };
}

// node_modules/.pnpm/@react-aria+overlays@3.16.0_react-dom@18.2.0_react@18.2.0/node_modules/@react-aria/overlays/dist/module.js
var import_react11 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());

// node_modules/.pnpm/@react-aria+visually-hidden@3.8.3_react@18.2.0/node_modules/@react-aria/visually-hidden/dist/module.js
var import_react10 = __toESM(require_react());
var $5c3e21d68f1c4674$var$styles = {
  border: 0,
  clip: "rect(0 0 0 0)",
  clipPath: "inset(50%)",
  height: "1px",
  margin: "-1px",
  overflow: "hidden",
  padding: 0,
  position: "absolute",
  width: "1px",
  whiteSpace: "nowrap"
};
function $5c3e21d68f1c4674$export$a966af930f325cab(props = {}) {
  let { style, isFocusable } = props;
  let [isFocused, setFocused] = (0, import_react10.useState)(false);
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec)({
    isDisabled: !isFocusable,
    onFocusWithinChange: (val) => setFocused(val)
  });
  let combinedStyles = (0, import_react10.useMemo)(() => {
    if (isFocused)
      return style;
    else if (style)
      return {
        ...$5c3e21d68f1c4674$var$styles,
        ...style
      };
    else
      return $5c3e21d68f1c4674$var$styles;
  }, [
    isFocused
  ]);
  return {
    visuallyHiddenProps: {
      ...focusWithinProps,
      style: combinedStyles
    }
  };
}
function $5c3e21d68f1c4674$export$439d29a4e110a164(props) {
  let { children, elementType: Element2 = "div", isFocusable, style, ...otherProps } = props;
  let { visuallyHiddenProps } = $5c3e21d68f1c4674$export$a966af930f325cab(props);
  return (0, import_react10.default).createElement(Element2, (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(otherProps, visuallyHiddenProps), children);
}

// node_modules/.pnpm/@react-aria+overlays@3.16.0_react-dom@18.2.0_react@18.2.0/node_modules/@react-aria/overlays/dist/module.js
function $parcel$interopDefault3(a) {
  return a && a.__esModule ? a.default : a;
}
var $edcf132a9284368a$var$AXIS = {
  top: "top",
  bottom: "top",
  left: "left",
  right: "left"
};
var $edcf132a9284368a$var$FLIPPED_DIRECTION = {
  top: "bottom",
  bottom: "top",
  left: "right",
  right: "left"
};
var $edcf132a9284368a$var$CROSS_AXIS = {
  top: "left",
  left: "top"
};
var $edcf132a9284368a$var$AXIS_SIZE = {
  top: "height",
  left: "width"
};
var $edcf132a9284368a$var$TOTAL_SIZE = {
  width: "totalWidth",
  height: "totalHeight"
};
var $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE = {};
var $edcf132a9284368a$var$visualViewport = typeof document !== "undefined" && window.visualViewport;
function $edcf132a9284368a$var$getContainerDimensions(containerNode) {
  let width = 0, height = 0, totalWidth = 0, totalHeight = 0, top = 0, left = 0;
  let scroll = {};
  if (containerNode.tagName === "BODY") {
    let documentElement = document.documentElement;
    totalWidth = documentElement.clientWidth;
    totalHeight = documentElement.clientHeight;
    var _visualViewport_width;
    width = (_visualViewport_width = $edcf132a9284368a$var$visualViewport === null || $edcf132a9284368a$var$visualViewport === void 0 ? void 0 : $edcf132a9284368a$var$visualViewport.width) !== null && _visualViewport_width !== void 0 ? _visualViewport_width : totalWidth;
    var _visualViewport_height;
    height = (_visualViewport_height = $edcf132a9284368a$var$visualViewport === null || $edcf132a9284368a$var$visualViewport === void 0 ? void 0 : $edcf132a9284368a$var$visualViewport.height) !== null && _visualViewport_height !== void 0 ? _visualViewport_height : totalHeight;
    scroll.top = documentElement.scrollTop || containerNode.scrollTop;
    scroll.left = documentElement.scrollLeft || containerNode.scrollLeft;
  } else {
    ({ width, height, top, left } = $edcf132a9284368a$var$getOffset(containerNode));
    scroll.top = containerNode.scrollTop;
    scroll.left = containerNode.scrollLeft;
    totalWidth = width;
    totalHeight = height;
  }
  return {
    width,
    height,
    totalWidth,
    totalHeight,
    scroll,
    top,
    left
  };
}
function $edcf132a9284368a$var$getScroll(node) {
  return {
    top: node.scrollTop,
    left: node.scrollLeft,
    width: node.scrollWidth,
    height: node.scrollHeight
  };
}
function $edcf132a9284368a$var$getDelta(axis, offset, size, containerDimensions, padding) {
  let containerScroll = containerDimensions.scroll[axis];
  let containerHeight = containerDimensions[$edcf132a9284368a$var$AXIS_SIZE[axis]];
  let startEdgeOffset = offset - padding - containerScroll;
  let endEdgeOffset = offset + padding - containerScroll + size;
  if (startEdgeOffset < 0)
    return -startEdgeOffset;
  else if (endEdgeOffset > containerHeight)
    return Math.max(containerHeight - endEdgeOffset, -startEdgeOffset);
  else
    return 0;
}
function $edcf132a9284368a$var$getMargins(node) {
  let style = window.getComputedStyle(node);
  return {
    top: parseInt(style.marginTop, 10) || 0,
    bottom: parseInt(style.marginBottom, 10) || 0,
    left: parseInt(style.marginLeft, 10) || 0,
    right: parseInt(style.marginRight, 10) || 0
  };
}
function $edcf132a9284368a$var$parsePlacement(input) {
  if ($edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input])
    return $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input];
  let [placement, crossPlacement] = input.split(" ");
  let axis = $edcf132a9284368a$var$AXIS[placement] || "right";
  let crossAxis = $edcf132a9284368a$var$CROSS_AXIS[axis];
  if (!$edcf132a9284368a$var$AXIS[crossPlacement])
    crossPlacement = "center";
  let size = $edcf132a9284368a$var$AXIS_SIZE[axis];
  let crossSize = $edcf132a9284368a$var$AXIS_SIZE[crossAxis];
  $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input] = {
    placement,
    crossPlacement,
    axis,
    crossAxis,
    size,
    crossSize
  };
  return $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input];
}
function $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned, arrowSize, arrowBoundaryOffset) {
  let { placement, crossPlacement, axis, crossAxis, size, crossSize } = placementInfo;
  let position = {};
  position[crossAxis] = childOffset[crossAxis];
  if (crossPlacement === "center")
    position[crossAxis] += (childOffset[crossSize] - overlaySize[crossSize]) / 2;
  else if (crossPlacement !== crossAxis)
    position[crossAxis] += childOffset[crossSize] - overlaySize[crossSize];
  position[crossAxis] += crossOffset;
  const minPosition = childOffset[crossAxis] - overlaySize[crossSize] + arrowSize + arrowBoundaryOffset;
  const maxPosition = childOffset[crossAxis] + childOffset[crossSize] - arrowSize - arrowBoundaryOffset;
  position[crossAxis] = (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(position[crossAxis], minPosition, maxPosition);
  if (placement === axis) {
    const containerHeight = isContainerPositioned ? containerOffsetWithBoundary[size] : boundaryDimensions[$edcf132a9284368a$var$TOTAL_SIZE[size]];
    position[$edcf132a9284368a$var$FLIPPED_DIRECTION[axis]] = Math.floor(containerHeight - childOffset[axis] + offset);
  } else
    position[axis] = Math.floor(childOffset[axis] + childOffset[size] + offset);
  return position;
}
function $edcf132a9284368a$var$getMaxHeight(position, boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding) {
  return position.top != null ? Math.max(0, boundaryDimensions.height + boundaryDimensions.top + boundaryDimensions.scroll.top - (containerOffsetWithBoundary.top + position.top) - (margins.top + margins.bottom + padding)) : Math.max(0, childOffset.top + containerOffsetWithBoundary.top - (boundaryDimensions.top + boundaryDimensions.scroll.top) - (margins.top + margins.bottom + padding));
}
function $edcf132a9284368a$var$getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding, placementInfo) {
  let { placement, axis, size } = placementInfo;
  if (placement === axis)
    return Math.max(0, childOffset[axis] - boundaryDimensions[axis] - boundaryDimensions.scroll[axis] + containerOffsetWithBoundary[axis] - margins[axis] - margins[$edcf132a9284368a$var$FLIPPED_DIRECTION[axis]] - padding);
  return Math.max(0, boundaryDimensions[size] + boundaryDimensions[axis] + boundaryDimensions.scroll[axis] - containerOffsetWithBoundary[axis] - childOffset[axis] - childOffset[size] - margins[axis] - margins[$edcf132a9284368a$var$FLIPPED_DIRECTION[axis]] - padding);
}
function $edcf132a9284368a$export$6839422d1f33cee9(placementInput, childOffset, overlaySize, scrollSize, margins, padding, flip, boundaryDimensions, containerOffsetWithBoundary, offset, crossOffset, isContainerPositioned, userSetMaxHeight, arrowSize, arrowBoundaryOffset) {
  let placementInfo = $edcf132a9284368a$var$parsePlacement(placementInput);
  let { size, crossAxis, crossSize, placement, crossPlacement } = placementInfo;
  let position = $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned, arrowSize, arrowBoundaryOffset);
  let normalizedOffset = offset;
  let space = $edcf132a9284368a$var$getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding + offset, placementInfo);
  if (flip && scrollSize[size] > space) {
    let flippedPlacementInfo = $edcf132a9284368a$var$parsePlacement(`${$edcf132a9284368a$var$FLIPPED_DIRECTION[placement]} ${crossPlacement}`);
    let flippedPosition = $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, flippedPlacementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned, arrowSize, arrowBoundaryOffset);
    let flippedSpace = $edcf132a9284368a$var$getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding + offset, flippedPlacementInfo);
    if (flippedSpace > space) {
      placementInfo = flippedPlacementInfo;
      position = flippedPosition;
      normalizedOffset = offset;
    }
  }
  let delta = $edcf132a9284368a$var$getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, padding);
  position[crossAxis] += delta;
  let maxHeight = $edcf132a9284368a$var$getMaxHeight(position, boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding);
  if (userSetMaxHeight && userSetMaxHeight < maxHeight)
    maxHeight = userSetMaxHeight;
  overlaySize.height = Math.min(overlaySize.height, maxHeight);
  position = $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, normalizedOffset, crossOffset, containerOffsetWithBoundary, isContainerPositioned, arrowSize, arrowBoundaryOffset);
  delta = $edcf132a9284368a$var$getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, padding);
  position[crossAxis] += delta;
  let arrowPosition = {};
  let preferredArrowPosition = childOffset[crossAxis] + 0.5 * childOffset[crossSize] - overlaySize[crossAxis];
  const arrowMinPosition = arrowSize / 2 + arrowBoundaryOffset;
  const arrowMaxPosition = overlaySize[crossSize] - arrowSize / 2 - arrowBoundaryOffset;
  const arrowOverlappingChildMinEdge = childOffset[crossAxis] - overlaySize[crossAxis] + arrowSize / 2;
  const arrowOverlappingChildMaxEdge = childOffset[crossAxis] + childOffset[crossSize] - overlaySize[crossAxis] - arrowSize / 2;
  const arrowPositionOverlappingChild = (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(preferredArrowPosition, arrowOverlappingChildMinEdge, arrowOverlappingChildMaxEdge);
  arrowPosition[crossAxis] = (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(arrowPositionOverlappingChild, arrowMinPosition, arrowMaxPosition);
  return {
    position,
    maxHeight,
    arrowOffsetLeft: arrowPosition.left,
    arrowOffsetTop: arrowPosition.top,
    placement: placementInfo.placement
  };
}
function $edcf132a9284368a$export$b3ceb0cbf1056d98(opts) {
  let { placement, targetNode, overlayNode, scrollNode, padding, shouldFlip, boundaryElement, offset, crossOffset, maxHeight, arrowSize = 0, arrowBoundaryOffset = 0 } = opts;
  let container = overlayNode instanceof HTMLElement ? $edcf132a9284368a$var$getContainingBlock(overlayNode) : document.documentElement;
  let isViewportContainer = container === document.documentElement;
  const containerPositionStyle = window.getComputedStyle(container).position;
  let isContainerPositioned = !!containerPositionStyle && containerPositionStyle !== "static";
  let childOffset = isViewportContainer ? $edcf132a9284368a$var$getOffset(targetNode) : $edcf132a9284368a$var$getPosition(targetNode, container);
  if (!isViewportContainer) {
    let { marginTop, marginLeft } = window.getComputedStyle(targetNode);
    childOffset.top += parseInt(marginTop, 10) || 0;
    childOffset.left += parseInt(marginLeft, 10) || 0;
  }
  let overlaySize = $edcf132a9284368a$var$getOffset(overlayNode);
  let margins = $edcf132a9284368a$var$getMargins(overlayNode);
  overlaySize.width += margins.left + margins.right;
  overlaySize.height += margins.top + margins.bottom;
  let scrollSize = $edcf132a9284368a$var$getScroll(scrollNode);
  let boundaryDimensions = $edcf132a9284368a$var$getContainerDimensions(boundaryElement);
  let containerOffsetWithBoundary = boundaryElement.tagName === "BODY" ? $edcf132a9284368a$var$getOffset(container) : $edcf132a9284368a$var$getPosition(container, boundaryElement);
  return $edcf132a9284368a$export$6839422d1f33cee9(placement, childOffset, overlaySize, scrollSize, margins, padding, shouldFlip, boundaryDimensions, containerOffsetWithBoundary, offset, crossOffset, isContainerPositioned, maxHeight, arrowSize, arrowBoundaryOffset);
}
function $edcf132a9284368a$var$getOffset(node) {
  let { top, left, width, height } = node.getBoundingClientRect();
  let { scrollTop, scrollLeft, clientTop, clientLeft } = document.documentElement;
  return {
    top: top + scrollTop - clientTop,
    left: left + scrollLeft - clientLeft,
    width,
    height
  };
}
function $edcf132a9284368a$var$getPosition(node, parent) {
  let style = window.getComputedStyle(node);
  let offset;
  if (style.position === "fixed") {
    let { top, left, width, height } = node.getBoundingClientRect();
    offset = {
      top,
      left,
      width,
      height
    };
  } else {
    offset = $edcf132a9284368a$var$getOffset(node);
    let parentOffset = $edcf132a9284368a$var$getOffset(parent);
    let parentStyle = window.getComputedStyle(parent);
    parentOffset.top += (parseInt(parentStyle.borderTopWidth, 10) || 0) - parent.scrollTop;
    parentOffset.left += (parseInt(parentStyle.borderLeftWidth, 10) || 0) - parent.scrollLeft;
    offset.top -= parentOffset.top;
    offset.left -= parentOffset.left;
  }
  offset.top -= parseInt(style.marginTop, 10) || 0;
  offset.left -= parseInt(style.marginLeft, 10) || 0;
  return offset;
}
function $edcf132a9284368a$var$getContainingBlock(node) {
  let offsetParent = node.offsetParent;
  if (offsetParent && offsetParent === document.body && window.getComputedStyle(offsetParent).position === "static" && !$edcf132a9284368a$var$isContainingBlock(offsetParent))
    offsetParent = document.documentElement;
  if (offsetParent == null) {
    offsetParent = node.parentElement;
    while (offsetParent && !$edcf132a9284368a$var$isContainingBlock(offsetParent))
      offsetParent = offsetParent.parentElement;
  }
  return offsetParent || document.documentElement;
}
function $edcf132a9284368a$var$isContainingBlock(node) {
  let style = window.getComputedStyle(node);
  return style.transform !== "none" || /transform|perspective/.test(style.willChange) || style.filter !== "none" || style.contain === "paint" || // @ts-ignore
  "backdropFilter" in style && style.backdropFilter !== "none" || // @ts-ignore
  "WebkitBackdropFilter" in style && style.WebkitBackdropFilter !== "none";
}
var $dd149f63282afbbf$export$f6211563215e3b37 = /* @__PURE__ */ new WeakMap();
function $dd149f63282afbbf$export$18fc8428861184da(opts) {
  let { triggerRef, isOpen, onClose } = opts;
  (0, import_react11.useEffect)(() => {
    if (!isOpen || onClose === null)
      return;
    let onScroll = (e) => {
      let target = e.target;
      if (!triggerRef.current || target instanceof Node && !target.contains(triggerRef.current))
        return;
      let onCloseHandler = onClose || $dd149f63282afbbf$export$f6211563215e3b37.get(triggerRef.current);
      if (onCloseHandler)
        onCloseHandler();
    };
    window.addEventListener("scroll", onScroll, true);
    return () => {
      window.removeEventListener("scroll", onScroll, true);
    };
  }, [
    isOpen,
    onClose,
    triggerRef
  ]);
}
var $2a41e45df1593e64$var$visualViewport = typeof document !== "undefined" && window.visualViewport;
function $2a41e45df1593e64$export$d39e1813b3bdd0e1(props) {
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let { arrowSize = 0, targetRef, overlayRef, scrollRef = overlayRef, placement = "bottom", containerPadding = 12, shouldFlip = true, boundaryElement = typeof document !== "undefined" ? document.body : null, offset = 0, crossOffset = 0, shouldUpdatePosition = true, isOpen = true, onClose, maxHeight, arrowBoundaryOffset = 0 } = props;
  let [position, setPosition] = (0, import_react11.useState)({
    position: {},
    arrowOffsetLeft: void 0,
    arrowOffsetTop: void 0,
    maxHeight: void 0,
    placement: void 0
  });
  let deps = [
    shouldUpdatePosition,
    placement,
    overlayRef.current,
    targetRef.current,
    scrollRef.current,
    containerPadding,
    shouldFlip,
    boundaryElement,
    offset,
    crossOffset,
    isOpen,
    direction,
    maxHeight,
    arrowBoundaryOffset,
    arrowSize
  ];
  let updatePosition = (0, import_react11.useCallback)(() => {
    if (shouldUpdatePosition === false || !isOpen || !overlayRef.current || !targetRef.current || !scrollRef.current || !boundaryElement)
      return;
    let position2 = (0, $edcf132a9284368a$export$b3ceb0cbf1056d98)({
      placement: $2a41e45df1593e64$var$translateRTL(placement, direction),
      overlayNode: overlayRef.current,
      targetNode: targetRef.current,
      scrollNode: scrollRef.current,
      padding: containerPadding,
      shouldFlip,
      boundaryElement,
      offset,
      crossOffset,
      maxHeight,
      arrowSize,
      arrowBoundaryOffset
    });
    Object.keys(position2.position).forEach((key) => overlayRef.current.style[key] = position2.position[key] + "px");
    overlayRef.current.style.maxHeight = position2.maxHeight != null ? position2.maxHeight + "px" : void 0;
    setPosition(position2);
  }, deps);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(updatePosition, deps);
  $2a41e45df1593e64$var$useResize(updatePosition);
  (0, $9daab02d461809db$export$683480f191c0e3ea)({
    ref: overlayRef,
    onResize: updatePosition
  });
  let isResizing = (0, import_react11.useRef)(false);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    let timeout;
    let onResize = () => {
      isResizing.current = true;
      clearTimeout(timeout);
      timeout = setTimeout(() => {
        isResizing.current = false;
      }, 500);
      updatePosition();
    };
    $2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.addEventListener("resize", onResize);
    $2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.addEventListener("scroll", onResize);
    return () => {
      $2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.removeEventListener("resize", onResize);
      $2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.removeEventListener("scroll", onResize);
    };
  }, [
    updatePosition
  ]);
  let close = (0, import_react11.useCallback)(() => {
    if (!isResizing.current)
      onClose();
  }, [
    onClose,
    isResizing
  ]);
  (0, $dd149f63282afbbf$export$18fc8428861184da)({
    triggerRef: targetRef,
    isOpen,
    onClose: onClose && close
  });
  return {
    overlayProps: {
      style: {
        position: "absolute",
        zIndex: 1e5,
        ...position.position,
        maxHeight: position.maxHeight
      }
    },
    placement: position.placement,
    arrowProps: {
      "aria-hidden": "true",
      role: "presentation",
      style: {
        left: position.arrowOffsetLeft,
        top: position.arrowOffsetTop
      }
    },
    updatePosition
  };
}
function $2a41e45df1593e64$var$useResize(onResize) {
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    window.addEventListener("resize", onResize, false);
    return () => {
      window.removeEventListener("resize", onResize, false);
    };
  }, [
    onResize
  ]);
}
function $2a41e45df1593e64$var$translateRTL(position, direction) {
  if (direction === "rtl")
    return position.replace("start", "right").replace("end", "left");
  return position.replace("start", "left").replace("end", "right");
}
var $a11501f3d1d39e6c$var$visibleOverlays = [];
function $a11501f3d1d39e6c$export$ea8f71083e90600f(props, ref) {
  let { onClose, shouldCloseOnBlur, isOpen, isDismissable = false, isKeyboardDismissDisabled = false, shouldCloseOnInteractOutside } = props;
  (0, import_react11.useEffect)(() => {
    if (isOpen)
      $a11501f3d1d39e6c$var$visibleOverlays.push(ref);
    return () => {
      let index = $a11501f3d1d39e6c$var$visibleOverlays.indexOf(ref);
      if (index >= 0)
        $a11501f3d1d39e6c$var$visibleOverlays.splice(index, 1);
    };
  }, [
    isOpen,
    ref
  ]);
  let onHide = () => {
    if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref && onClose)
      onClose();
  };
  let onInteractOutsideStart = (e) => {
    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target)) {
      if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref) {
        e.stopPropagation();
        e.preventDefault();
      }
    }
  };
  let onInteractOutside = (e) => {
    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target)) {
      if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref) {
        e.stopPropagation();
        e.preventDefault();
      }
      onHide();
    }
  };
  let onKeyDown = (e) => {
    if (e.key === "Escape" && !isKeyboardDismissDisabled) {
      e.stopPropagation();
      e.preventDefault();
      onHide();
    }
  };
  (0, $e0b6e0b68ec7f50f$export$872b660ac5a1ff98)({
    ref,
    onInteractOutside: isDismissable ? onInteractOutside : null,
    onInteractOutsideStart
  });
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec)({
    isDisabled: !shouldCloseOnBlur,
    onBlurWithin: (e) => {
      if (e.relatedTarget && (0, $9bf71ea28793e738$export$1258395f99bf9cbf)(e.relatedTarget))
        return;
      if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.relatedTarget))
        onClose();
    }
  });
  let onPointerDownUnderlay = (e) => {
    if (e.target === e.currentTarget)
      e.preventDefault();
  };
  return {
    overlayProps: {
      onKeyDown,
      ...focusWithinProps
    },
    underlayProps: {
      onPointerDown: onPointerDownUnderlay
    }
  };
}
function $628037886ba31236$export$f9d5c8beee7d008d(props, state, ref) {
  let { type } = props;
  let { isOpen } = state;
  (0, import_react11.useEffect)(() => {
    if (ref && ref.current)
      (0, $dd149f63282afbbf$export$f6211563215e3b37).set(ref.current, state.close);
  });
  let ariaHasPopup = void 0;
  if (type === "menu")
    ariaHasPopup = true;
  else if (type === "listbox")
    ariaHasPopup = "listbox";
  let overlayId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  return {
    triggerProps: {
      "aria-haspopup": ariaHasPopup,
      "aria-expanded": isOpen,
      "aria-controls": isOpen ? overlayId : null,
      onPress: state.toggle
    },
    overlayProps: {
      id: overlayId
    }
  };
}
var $49c51c25361d4cd2$var$visualViewport = typeof document !== "undefined" && window.visualViewport;
var $49c51c25361d4cd2$var$nonTextInputTypes = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
var $49c51c25361d4cd2$var$preventScrollCount = 0;
var $49c51c25361d4cd2$var$restore;
function $49c51c25361d4cd2$export$ee0f7cc6afcd1c18(options = {}) {
  let { isDisabled } = options;
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (isDisabled)
      return;
    $49c51c25361d4cd2$var$preventScrollCount++;
    if ($49c51c25361d4cd2$var$preventScrollCount === 1) {
      if ((0, $c87311424ea30a05$export$fedb369cb70207f1)())
        $49c51c25361d4cd2$var$restore = $49c51c25361d4cd2$var$preventScrollMobileSafari();
      else
        $49c51c25361d4cd2$var$restore = $49c51c25361d4cd2$var$preventScrollStandard();
    }
    return () => {
      $49c51c25361d4cd2$var$preventScrollCount--;
      if ($49c51c25361d4cd2$var$preventScrollCount === 0)
        $49c51c25361d4cd2$var$restore();
    };
  }, [
    isDisabled
  ]);
}
function $49c51c25361d4cd2$var$preventScrollStandard() {
  return (0, $ff5963eb1fccf552$export$e08e3b67e392101e)($49c51c25361d4cd2$var$setStyle(document.documentElement, "paddingRight", `${window.innerWidth - document.documentElement.clientWidth}px`), $49c51c25361d4cd2$var$setStyle(document.documentElement, "overflow", "hidden"));
}
function $49c51c25361d4cd2$var$preventScrollMobileSafari() {
  let scrollable;
  let lastY = 0;
  let onTouchStart = (e) => {
    scrollable = (0, $62d8ded9296f3872$export$cfa2225e87938781)(e.target);
    if (scrollable === document.documentElement && scrollable === document.body)
      return;
    lastY = e.changedTouches[0].pageY;
  };
  let onTouchMove = (e) => {
    if (!scrollable || scrollable === document.documentElement || scrollable === document.body) {
      e.preventDefault();
      return;
    }
    let y = e.changedTouches[0].pageY;
    let scrollTop = scrollable.scrollTop;
    let bottom = scrollable.scrollHeight - scrollable.clientHeight;
    if (bottom === 0)
      return;
    if (scrollTop <= 0 && y > lastY || scrollTop >= bottom && y < lastY)
      e.preventDefault();
    lastY = y;
  };
  let onTouchEnd = (e) => {
    let target = e.target;
    if ($49c51c25361d4cd2$var$willOpenKeyboard(target) && target !== document.activeElement) {
      e.preventDefault();
      target.style.transform = "translateY(-2000px)";
      target.focus();
      requestAnimationFrame(() => {
        target.style.transform = "";
      });
    }
  };
  let onFocus = (e) => {
    let target = e.target;
    if ($49c51c25361d4cd2$var$willOpenKeyboard(target)) {
      target.style.transform = "translateY(-2000px)";
      requestAnimationFrame(() => {
        target.style.transform = "";
        if ($49c51c25361d4cd2$var$visualViewport) {
          if ($49c51c25361d4cd2$var$visualViewport.height < window.innerHeight)
            requestAnimationFrame(() => {
              $49c51c25361d4cd2$var$scrollIntoView(target);
            });
          else
            $49c51c25361d4cd2$var$visualViewport.addEventListener("resize", () => $49c51c25361d4cd2$var$scrollIntoView(target), {
              once: true
            });
        }
      });
    }
  };
  let onWindowScroll = () => {
    window.scrollTo(0, 0);
  };
  let scrollX = window.pageXOffset;
  let scrollY = window.pageYOffset;
  let restoreStyles = (0, $ff5963eb1fccf552$export$e08e3b67e392101e)($49c51c25361d4cd2$var$setStyle(document.documentElement, "paddingRight", `${window.innerWidth - document.documentElement.clientWidth}px`), $49c51c25361d4cd2$var$setStyle(document.documentElement, "overflow", "hidden"), $49c51c25361d4cd2$var$setStyle(document.body, "marginTop", `-${scrollY}px`));
  window.scrollTo(0, 0);
  let removeEvents = (0, $ff5963eb1fccf552$export$e08e3b67e392101e)($49c51c25361d4cd2$var$addEvent(document, "touchstart", onTouchStart, {
    passive: false,
    capture: true
  }), $49c51c25361d4cd2$var$addEvent(document, "touchmove", onTouchMove, {
    passive: false,
    capture: true
  }), $49c51c25361d4cd2$var$addEvent(document, "touchend", onTouchEnd, {
    passive: false,
    capture: true
  }), $49c51c25361d4cd2$var$addEvent(document, "focus", onFocus, true), $49c51c25361d4cd2$var$addEvent(window, "scroll", onWindowScroll));
  return () => {
    restoreStyles();
    removeEvents();
    window.scrollTo(scrollX, scrollY);
  };
}
function $49c51c25361d4cd2$var$setStyle(element, style, value) {
  let cur = element.style[style];
  element.style[style] = value;
  return () => {
    element.style[style] = cur;
  };
}
function $49c51c25361d4cd2$var$addEvent(target, event, handler, options) {
  target.addEventListener(event, handler, options);
  return () => {
    target.removeEventListener(event, handler, options);
  };
}
function $49c51c25361d4cd2$var$scrollIntoView(target) {
  let root = document.scrollingElement || document.documentElement;
  while (target && target !== root) {
    let scrollable = (0, $62d8ded9296f3872$export$cfa2225e87938781)(target);
    if (scrollable !== document.documentElement && scrollable !== document.body && scrollable !== target) {
      let scrollableTop = scrollable.getBoundingClientRect().top;
      let targetTop = target.getBoundingClientRect().top;
      if (targetTop > scrollableTop + target.clientHeight)
        scrollable.scrollTop += targetTop - scrollableTop;
    }
    target = scrollable.parentElement;
  }
}
function $49c51c25361d4cd2$var$willOpenKeyboard(target) {
  return target instanceof HTMLInputElement && !$49c51c25361d4cd2$var$nonTextInputTypes.has(target.type) || target instanceof HTMLTextAreaElement || target instanceof HTMLElement && target.isContentEditable;
}
var $f57aed4a881a3485$var$Context = (0, import_react11.default).createContext(null);
function $f57aed4a881a3485$export$178405afcd8c5eb(props) {
  let { children } = props;
  let parent = (0, import_react11.useContext)($f57aed4a881a3485$var$Context);
  let [modalCount, setModalCount] = (0, import_react11.useState)(0);
  let context = (0, import_react11.useMemo)(() => ({
    parent,
    modalCount,
    addModal() {
      setModalCount((count) => count + 1);
      if (parent)
        parent.addModal();
    },
    removeModal() {
      setModalCount((count) => count - 1);
      if (parent)
        parent.removeModal();
    }
  }), [
    parent,
    modalCount
  ]);
  return (0, import_react11.default).createElement($f57aed4a881a3485$var$Context.Provider, {
    value: context
  }, children);
}
function $f57aed4a881a3485$export$d9aaed4c3ece1bc0() {
  let context = (0, import_react11.useContext)($f57aed4a881a3485$var$Context);
  return {
    modalProviderProps: {
      "aria-hidden": context && context.modalCount > 0 ? true : null
    }
  };
}
function $f57aed4a881a3485$var$OverlayContainerDOM(props) {
  let { modalProviderProps } = $f57aed4a881a3485$export$d9aaed4c3ece1bc0();
  return (0, import_react11.default).createElement("div", {
    "data-overlay-container": true,
    ...props,
    ...modalProviderProps
  });
}
function $f57aed4a881a3485$export$bf688221f59024e5(props) {
  return (0, import_react11.default).createElement($f57aed4a881a3485$export$178405afcd8c5eb, null, (0, import_react11.default).createElement($f57aed4a881a3485$var$OverlayContainerDOM, props));
}
function $f57aed4a881a3485$export$b47c3594eab58386(props) {
  let isSSR = (0, $b5e257d569688ac6$export$535bd6ca7f90a273)();
  let { portalContainer = isSSR ? null : document.body, ...rest } = props;
  (0, import_react11.default).useEffect(() => {
    if (portalContainer === null || portalContainer === void 0 ? void 0 : portalContainer.closest("[data-overlay-container]"))
      throw new Error("An OverlayContainer must not be inside another container. Please change the portalContainer prop.");
  }, [
    portalContainer
  ]);
  if (!portalContainer)
    return null;
  let contents = (0, import_react11.default).createElement($f57aed4a881a3485$export$bf688221f59024e5, rest);
  return (0, import_react_dom.default).createPortal(contents, portalContainer);
}
var $a2f21f5f14f60553$exports = {};
var $773d5888b972f1cf$exports = {};
$773d5888b972f1cf$exports = {
  "dismiss": `تجاهل`
};
var $d11f19852b941573$exports = {};
$d11f19852b941573$exports = {
  "dismiss": `Отхвърляне`
};
var $b983974c2ee1efb3$exports = {};
$b983974c2ee1efb3$exports = {
  "dismiss": `Odstranit`
};
var $5809cc9d4e92de73$exports = {};
$5809cc9d4e92de73$exports = {
  "dismiss": `Luk`
};
var $c68c2e4fc74398d1$exports = {};
$c68c2e4fc74398d1$exports = {
  "dismiss": `Schließen`
};
var $0898b4c153db2b77$exports = {};
$0898b4c153db2b77$exports = {
  "dismiss": `Απόρριψη`
};
var $6d74810286a15183$exports = {};
$6d74810286a15183$exports = {
  "dismiss": `Dismiss`
};
var $309d73dc65f78055$exports = {};
$309d73dc65f78055$exports = {
  "dismiss": `Descartar`
};
var $44ad94f7205cf593$exports = {};
$44ad94f7205cf593$exports = {
  "dismiss": `Lõpeta`
};
var $7c28f5687f0779a9$exports = {};
$7c28f5687f0779a9$exports = {
  "dismiss": `Hylkää`
};
var $e6d75df4b68bd73a$exports = {};
$e6d75df4b68bd73a$exports = {
  "dismiss": `Rejeter`
};
var $87505c9dab186d0f$exports = {};
$87505c9dab186d0f$exports = {
  "dismiss": `התעלם`
};
var $553439c3ffb3e492$exports = {};
$553439c3ffb3e492$exports = {
  "dismiss": `Odbaci`
};
var $74cf411061b983a2$exports = {};
$74cf411061b983a2$exports = {
  "dismiss": `Elutasítás`
};
var $e933f298574dc435$exports = {};
$e933f298574dc435$exports = {
  "dismiss": `Ignora`
};
var $ac91fc9fe02f71f6$exports = {};
$ac91fc9fe02f71f6$exports = {
  "dismiss": `閉じる`
};
var $52b96f86422025af$exports = {};
$52b96f86422025af$exports = {
  "dismiss": `무시`
};
var $c0d724c3e51dafa6$exports = {};
$c0d724c3e51dafa6$exports = {
  "dismiss": `Atmesti`
};
var $c92899672a3fe72e$exports = {};
$c92899672a3fe72e$exports = {
  "dismiss": `Nerādīt`
};
var $9f576b39d8e7a9d6$exports = {};
$9f576b39d8e7a9d6$exports = {
  "dismiss": `Lukk`
};
var $9d025808aeec81a7$exports = {};
$9d025808aeec81a7$exports = {
  "dismiss": `Negeren`
};
var $fce709921e2c0fa6$exports = {};
$fce709921e2c0fa6$exports = {
  "dismiss": `Zignoruj`
};
var $2599cf0c4ab37f59$exports = {};
$2599cf0c4ab37f59$exports = {
  "dismiss": `Descartar`
};
var $3c220ae7ef8a35fd$exports = {};
$3c220ae7ef8a35fd$exports = {
  "dismiss": `Dispensar`
};
var $93562b5094072f54$exports = {};
$93562b5094072f54$exports = {
  "dismiss": `Revocare`
};
var $cd9e2abd0d06c7b4$exports = {};
$cd9e2abd0d06c7b4$exports = {
  "dismiss": `Пропустить`
};
var $45375701f409adf1$exports = {};
$45375701f409adf1$exports = {
  "dismiss": `Zrušiť`
};
var $27fab53a576de9dd$exports = {};
$27fab53a576de9dd$exports = {
  "dismiss": `Opusti`
};
var $4438748d9952e7c7$exports = {};
$4438748d9952e7c7$exports = {
  "dismiss": `Odbaci`
};
var $0936d7347ef4da4c$exports = {};
$0936d7347ef4da4c$exports = {
  "dismiss": `Avvisa`
};
var $29700c92185d38f8$exports = {};
$29700c92185d38f8$exports = {
  "dismiss": `Kapat`
};
var $662ccaf2be4c25b3$exports = {};
$662ccaf2be4c25b3$exports = {
  "dismiss": `Скасувати`
};
var $d80a27deda7cdb3c$exports = {};
$d80a27deda7cdb3c$exports = {
  "dismiss": `取消`
};
var $2b2734393847c884$exports = {};
$2b2734393847c884$exports = {
  "dismiss": `關閉`
};
$a2f21f5f14f60553$exports = {
  "ar-AE": $773d5888b972f1cf$exports,
  "bg-BG": $d11f19852b941573$exports,
  "cs-CZ": $b983974c2ee1efb3$exports,
  "da-DK": $5809cc9d4e92de73$exports,
  "de-DE": $c68c2e4fc74398d1$exports,
  "el-GR": $0898b4c153db2b77$exports,
  "en-US": $6d74810286a15183$exports,
  "es-ES": $309d73dc65f78055$exports,
  "et-EE": $44ad94f7205cf593$exports,
  "fi-FI": $7c28f5687f0779a9$exports,
  "fr-FR": $e6d75df4b68bd73a$exports,
  "he-IL": $87505c9dab186d0f$exports,
  "hr-HR": $553439c3ffb3e492$exports,
  "hu-HU": $74cf411061b983a2$exports,
  "it-IT": $e933f298574dc435$exports,
  "ja-JP": $ac91fc9fe02f71f6$exports,
  "ko-KR": $52b96f86422025af$exports,
  "lt-LT": $c0d724c3e51dafa6$exports,
  "lv-LV": $c92899672a3fe72e$exports,
  "nb-NO": $9f576b39d8e7a9d6$exports,
  "nl-NL": $9d025808aeec81a7$exports,
  "pl-PL": $fce709921e2c0fa6$exports,
  "pt-BR": $2599cf0c4ab37f59$exports,
  "pt-PT": $3c220ae7ef8a35fd$exports,
  "ro-RO": $93562b5094072f54$exports,
  "ru-RU": $cd9e2abd0d06c7b4$exports,
  "sk-SK": $45375701f409adf1$exports,
  "sl-SI": $27fab53a576de9dd$exports,
  "sr-SP": $4438748d9952e7c7$exports,
  "sv-SE": $0936d7347ef4da4c$exports,
  "tr-TR": $29700c92185d38f8$exports,
  "uk-UA": $662ccaf2be4c25b3$exports,
  "zh-CN": $d80a27deda7cdb3c$exports,
  "zh-TW": $2b2734393847c884$exports
};
function $86ea4cb521eb2e37$export$2317d149ed6f78c4(props) {
  let { onDismiss, ...otherProps } = props;
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault3($a2f21f5f14f60553$exports)));
  let labels = (0, $313b98861ee5dd6c$export$d6875122194c7b44)(otherProps, stringFormatter.format("dismiss"));
  let onClick = () => {
    if (onDismiss)
      onDismiss();
  };
  return (0, import_react11.default).createElement((0, $5c3e21d68f1c4674$export$439d29a4e110a164), null, (0, import_react11.default).createElement("button", {
    ...labels,
    tabIndex: -1,
    onClick
  }));
}
var $5e3802645cc19319$var$refCountMap = /* @__PURE__ */ new WeakMap();
var $5e3802645cc19319$var$observerStack = [];
function $5e3802645cc19319$export$1c3ebcada18427bf(targets, root = document.body) {
  let visibleNodes = new Set(targets);
  let hiddenNodes = /* @__PURE__ */ new Set();
  let walk = (root2) => {
    for (let element of root2.querySelectorAll("[data-live-announcer], [data-react-aria-top-layer]"))
      visibleNodes.add(element);
    let acceptNode = (node) => {
      if (visibleNodes.has(node) || hiddenNodes.has(node.parentElement) && node.parentElement.getAttribute("role") !== "row")
        return NodeFilter.FILTER_REJECT;
      for (let target of visibleNodes) {
        if (node.contains(target))
          return NodeFilter.FILTER_SKIP;
      }
      return NodeFilter.FILTER_ACCEPT;
    };
    let walker = document.createTreeWalker(root2, NodeFilter.SHOW_ELEMENT, {
      acceptNode
    });
    let acceptRoot = acceptNode(root2);
    if (acceptRoot === NodeFilter.FILTER_ACCEPT)
      hide(root2);
    if (acceptRoot !== NodeFilter.FILTER_REJECT) {
      let node = walker.nextNode();
      while (node != null) {
        hide(node);
        node = walker.nextNode();
      }
    }
  };
  let hide = (node) => {
    var _refCountMap_get;
    let refCount = (_refCountMap_get = $5e3802645cc19319$var$refCountMap.get(node)) !== null && _refCountMap_get !== void 0 ? _refCountMap_get : 0;
    if (node.getAttribute("aria-hidden") === "true" && refCount === 0)
      return;
    if (refCount === 0)
      node.setAttribute("aria-hidden", "true");
    hiddenNodes.add(node);
    $5e3802645cc19319$var$refCountMap.set(node, refCount + 1);
  };
  if ($5e3802645cc19319$var$observerStack.length)
    $5e3802645cc19319$var$observerStack[$5e3802645cc19319$var$observerStack.length - 1].disconnect();
  walk(root);
  let observer = new MutationObserver((changes) => {
    for (let change of changes) {
      if (change.type !== "childList" || change.addedNodes.length === 0)
        continue;
      if (![
        ...visibleNodes,
        ...hiddenNodes
      ].some((node) => node.contains(change.target))) {
        for (let node of change.removedNodes)
          if (node instanceof Element) {
            visibleNodes.delete(node);
            hiddenNodes.delete(node);
          }
        for (let node of change.addedNodes) {
          if ((node instanceof HTMLElement || node instanceof SVGElement) && (node.dataset.liveAnnouncer === "true" || node.dataset.reactAriaTopLayer === "true"))
            visibleNodes.add(node);
          else if (node instanceof Element)
            walk(node);
        }
      }
    }
  });
  observer.observe(root, {
    childList: true,
    subtree: true
  });
  let observerWrapper = {
    observe() {
      observer.observe(root, {
        childList: true,
        subtree: true
      });
    },
    disconnect() {
      observer.disconnect();
    }
  };
  $5e3802645cc19319$var$observerStack.push(observerWrapper);
  return () => {
    observer.disconnect();
    for (let node of hiddenNodes) {
      let count = $5e3802645cc19319$var$refCountMap.get(node);
      if (count === 1) {
        node.removeAttribute("aria-hidden");
        $5e3802645cc19319$var$refCountMap.delete(node);
      } else
        $5e3802645cc19319$var$refCountMap.set(node, count - 1);
    }
    if (observerWrapper === $5e3802645cc19319$var$observerStack[$5e3802645cc19319$var$observerStack.length - 1]) {
      $5e3802645cc19319$var$observerStack.pop();
      if ($5e3802645cc19319$var$observerStack.length)
        $5e3802645cc19319$var$observerStack[$5e3802645cc19319$var$observerStack.length - 1].observe();
    } else
      $5e3802645cc19319$var$observerStack.splice($5e3802645cc19319$var$observerStack.indexOf(observerWrapper), 1);
  };
}
function $f2f8a6077418541e$export$542a6fd13ac93354(props, state) {
  let { triggerRef, popoverRef, isNonModal, isKeyboardDismissDisabled, ...otherProps } = props;
  let { overlayProps, underlayProps } = (0, $a11501f3d1d39e6c$export$ea8f71083e90600f)({
    isOpen: state.isOpen,
    onClose: state.close,
    shouldCloseOnBlur: true,
    isDismissable: !isNonModal,
    isKeyboardDismissDisabled
  }, popoverRef);
  let { overlayProps: positionProps, arrowProps, placement } = (0, $2a41e45df1593e64$export$d39e1813b3bdd0e1)({
    ...otherProps,
    targetRef: triggerRef,
    overlayRef: popoverRef,
    isOpen: state.isOpen,
    onClose: null
  });
  (0, $49c51c25361d4cd2$export$ee0f7cc6afcd1c18)({
    isDisabled: isNonModal
  });
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (state.isOpen && !isNonModal && popoverRef.current)
      return (0, $5e3802645cc19319$export$1c3ebcada18427bf)([
        popoverRef.current
      ]);
  }, [
    isNonModal,
    state.isOpen,
    popoverRef
  ]);
  return {
    popoverProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(overlayProps, positionProps),
    arrowProps,
    underlayProps,
    placement
  };
}
var $337b884510726a0d$export$a2200b96afd16271 = (0, import_react11.default).createContext(null);
function $337b884510726a0d$export$c6fdb837b070b4ff(props) {
  let isSSR = (0, $b5e257d569688ac6$export$535bd6ca7f90a273)();
  let { portalContainer = isSSR ? null : document.body, isExiting } = props;
  let [contain, setContain] = (0, import_react11.useState)(false);
  let contextValue = (0, import_react11.useMemo)(() => ({
    contain,
    setContain
  }), [
    contain,
    setContain
  ]);
  if (!portalContainer)
    return null;
  let contents;
  if (!props.disableFocusManagement)
    contents = (0, import_react11.default).createElement($337b884510726a0d$export$a2200b96afd16271.Provider, {
      value: contextValue
    }, (0, import_react11.default).createElement((0, $9bf71ea28793e738$export$20e40289641fbbb6), {
      restoreFocus: true,
      contain: contain && !isExiting
    }, props.children));
  else
    contents = (0, import_react11.default).createElement($337b884510726a0d$export$a2200b96afd16271.Provider, {
      value: contextValue
    }, props.children);
  return (0, import_react_dom.default).createPortal(contents, portalContainer);
}
function $337b884510726a0d$export$14c98a7594375490() {
  let ctx = (0, import_react11.useContext)($337b884510726a0d$export$a2200b96afd16271);
  let setContain = ctx === null || ctx === void 0 ? void 0 : ctx.setContain;
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    setContain === null || setContain === void 0 ? void 0 : setContain(true);
  }, [
    setContain
  ]);
}
function $8ac8429251c45e4b$export$dbc0f175b25fb0fb(props, state, ref) {
  let { overlayProps, underlayProps } = (0, $a11501f3d1d39e6c$export$ea8f71083e90600f)({
    ...props,
    isOpen: state.isOpen,
    onClose: state.close
  }, ref);
  (0, $49c51c25361d4cd2$export$ee0f7cc6afcd1c18)({
    isDisabled: !state.isOpen
  });
  (0, $337b884510726a0d$export$14c98a7594375490)();
  (0, import_react11.useEffect)(() => {
    if (state.isOpen)
      return (0, $5e3802645cc19319$export$1c3ebcada18427bf)([
        ref.current
      ]);
  }, [
    state.isOpen,
    ref
  ]);
  return {
    modalProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(overlayProps),
    underlayProps
  };
}

// node_modules/.pnpm/@react-aria+selection@3.16.1_react@18.2.0/node_modules/@react-aria/selection/dist/module.js
var import_react12 = __toESM(require_react());
function $feb5ffebff200149$export$d3e3bd3e26688c04(e) {
  return (0, $c87311424ea30a05$export$e1865c3bedcd822b)() ? e.altKey : e.ctrlKey;
}
function $feb5ffebff200149$export$16792effe837dba3(e) {
  if ((0, $c87311424ea30a05$export$9ac100e40613ea10)())
    return e.metaKey;
  return e.ctrlKey;
}
var $fb3050f43d946246$var$TYPEAHEAD_DEBOUNCE_WAIT_MS = 1e3;
function $fb3050f43d946246$export$e32c88dfddc6e1d8(options) {
  let { keyboardDelegate, selectionManager, onTypeSelect } = options;
  let state = (0, import_react12.useRef)({
    search: "",
    timeout: null
  }).current;
  let onKeyDown = (e) => {
    let character = $fb3050f43d946246$var$getStringForKey(e.key);
    if (!character || e.ctrlKey || e.metaKey || !e.currentTarget.contains(e.target))
      return;
    if (character === " " && state.search.trim().length > 0) {
      e.preventDefault();
      if (!("continuePropagation" in e))
        e.stopPropagation();
    }
    state.search += character;
    let key = keyboardDelegate.getKeyForSearch(state.search, selectionManager.focusedKey);
    if (key == null)
      key = keyboardDelegate.getKeyForSearch(state.search);
    if (key != null) {
      selectionManager.setFocusedKey(key);
      if (onTypeSelect)
        onTypeSelect(key);
    }
    clearTimeout(state.timeout);
    state.timeout = setTimeout(() => {
      state.search = "";
    }, $fb3050f43d946246$var$TYPEAHEAD_DEBOUNCE_WAIT_MS);
  };
  return {
    typeSelectProps: {
      // Using a capturing listener to catch the keydown event before
      // other hooks in order to handle the Spacebar event.
      onKeyDownCapture: keyboardDelegate.getKeyForSearch ? onKeyDown : null
    }
  };
}
function $fb3050f43d946246$var$getStringForKey(key) {
  if (key.length === 1 || !/^[A-Z]/i.test(key))
    return key;
  return "";
}
function $ae20dd8cbca75726$export$d6daf82dcd84e87c(options) {
  let { selectionManager: manager, keyboardDelegate: delegate, ref, autoFocus = false, shouldFocusWrap = false, disallowEmptySelection = false, disallowSelectAll = false, selectOnFocus = manager.selectionBehavior === "replace", disallowTypeAhead = false, shouldUseVirtualFocus, allowsTabNavigation = false, isVirtualized, scrollRef = ref } = options;
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let onKeyDown = (e) => {
    if (e.altKey && e.key === "Tab")
      e.preventDefault();
    if (!ref.current.contains(e.target))
      return;
    const navigateToKey = (key, childFocus) => {
      if (key != null) {
        manager.setFocusedKey(key, childFocus);
        if (e.shiftKey && manager.selectionMode === "multiple")
          manager.extendSelection(key);
        else if (selectOnFocus && !(0, $feb5ffebff200149$export$d3e3bd3e26688c04)(e))
          manager.replaceSelection(key);
      }
    };
    switch (e.key) {
      case "ArrowDown":
        if (delegate.getKeyBelow) {
          var _delegate_getFirstKey, _delegate_getFirstKey1;
          e.preventDefault();
          let nextKey = manager.focusedKey != null ? delegate.getKeyBelow(manager.focusedKey) : (_delegate_getFirstKey = delegate.getFirstKey) === null || _delegate_getFirstKey === void 0 ? void 0 : _delegate_getFirstKey.call(delegate);
          if (nextKey == null && shouldFocusWrap)
            nextKey = (_delegate_getFirstKey1 = delegate.getFirstKey) === null || _delegate_getFirstKey1 === void 0 ? void 0 : _delegate_getFirstKey1.call(delegate, manager.focusedKey);
          navigateToKey(nextKey);
        }
        break;
      case "ArrowUp":
        if (delegate.getKeyAbove) {
          var _delegate_getLastKey, _delegate_getLastKey1;
          e.preventDefault();
          let nextKey = manager.focusedKey != null ? delegate.getKeyAbove(manager.focusedKey) : (_delegate_getLastKey = delegate.getLastKey) === null || _delegate_getLastKey === void 0 ? void 0 : _delegate_getLastKey.call(delegate);
          if (nextKey == null && shouldFocusWrap)
            nextKey = (_delegate_getLastKey1 = delegate.getLastKey) === null || _delegate_getLastKey1 === void 0 ? void 0 : _delegate_getLastKey1.call(delegate, manager.focusedKey);
          navigateToKey(nextKey);
        }
        break;
      case "ArrowLeft":
        if (delegate.getKeyLeftOf) {
          var _delegate_getFirstKey2, _delegate_getLastKey2;
          e.preventDefault();
          let nextKey = delegate.getKeyLeftOf(manager.focusedKey);
          if (nextKey == null && shouldFocusWrap)
            nextKey = direction === "rtl" ? (_delegate_getFirstKey2 = delegate.getFirstKey) === null || _delegate_getFirstKey2 === void 0 ? void 0 : _delegate_getFirstKey2.call(delegate, manager.focusedKey) : (_delegate_getLastKey2 = delegate.getLastKey) === null || _delegate_getLastKey2 === void 0 ? void 0 : _delegate_getLastKey2.call(delegate, manager.focusedKey);
          navigateToKey(nextKey, direction === "rtl" ? "first" : "last");
        }
        break;
      case "ArrowRight":
        if (delegate.getKeyRightOf) {
          var _delegate_getLastKey3, _delegate_getFirstKey3;
          e.preventDefault();
          let nextKey = delegate.getKeyRightOf(manager.focusedKey);
          if (nextKey == null && shouldFocusWrap)
            nextKey = direction === "rtl" ? (_delegate_getLastKey3 = delegate.getLastKey) === null || _delegate_getLastKey3 === void 0 ? void 0 : _delegate_getLastKey3.call(delegate, manager.focusedKey) : (_delegate_getFirstKey3 = delegate.getFirstKey) === null || _delegate_getFirstKey3 === void 0 ? void 0 : _delegate_getFirstKey3.call(delegate, manager.focusedKey);
          navigateToKey(nextKey, direction === "rtl" ? "last" : "first");
        }
        break;
      case "Home":
        if (delegate.getFirstKey) {
          e.preventDefault();
          let firstKey = delegate.getFirstKey(manager.focusedKey, (0, $feb5ffebff200149$export$16792effe837dba3)(e));
          manager.setFocusedKey(firstKey);
          if ((0, $feb5ffebff200149$export$16792effe837dba3)(e) && e.shiftKey && manager.selectionMode === "multiple")
            manager.extendSelection(firstKey);
          else if (selectOnFocus)
            manager.replaceSelection(firstKey);
        }
        break;
      case "End":
        if (delegate.getLastKey) {
          e.preventDefault();
          let lastKey = delegate.getLastKey(manager.focusedKey, (0, $feb5ffebff200149$export$16792effe837dba3)(e));
          manager.setFocusedKey(lastKey);
          if ((0, $feb5ffebff200149$export$16792effe837dba3)(e) && e.shiftKey && manager.selectionMode === "multiple")
            manager.extendSelection(lastKey);
          else if (selectOnFocus)
            manager.replaceSelection(lastKey);
        }
        break;
      case "PageDown":
        if (delegate.getKeyPageBelow) {
          e.preventDefault();
          let nextKey = delegate.getKeyPageBelow(manager.focusedKey);
          navigateToKey(nextKey);
        }
        break;
      case "PageUp":
        if (delegate.getKeyPageAbove) {
          e.preventDefault();
          let nextKey = delegate.getKeyPageAbove(manager.focusedKey);
          navigateToKey(nextKey);
        }
        break;
      case "a":
        if ((0, $feb5ffebff200149$export$16792effe837dba3)(e) && manager.selectionMode === "multiple" && disallowSelectAll !== true) {
          e.preventDefault();
          manager.selectAll();
        }
        break;
      case "Escape":
        e.preventDefault();
        if (!disallowEmptySelection)
          manager.clearSelection();
        break;
      case "Tab":
        if (!allowsTabNavigation) {
          if (e.shiftKey)
            ref.current.focus();
          else {
            let walker = (0, $9bf71ea28793e738$export$2d6ec8fc375ceafa)(ref.current, {
              tabbable: true
            });
            let next;
            let last;
            do {
              last = walker.lastChild();
              if (last)
                next = last;
            } while (last);
            if (next && !next.contains(document.activeElement))
              (0, $7215afc6de606d6b$export$de79e2c695e052f3)(next);
          }
          break;
        }
    }
  };
  let scrollPos = (0, import_react12.useRef)({
    top: 0,
    left: 0
  });
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(scrollRef, "scroll", isVirtualized ? null : () => {
    scrollPos.current = {
      top: scrollRef.current.scrollTop,
      left: scrollRef.current.scrollLeft
    };
  });
  let onFocus = (e) => {
    if (manager.isFocused) {
      if (!e.currentTarget.contains(e.target))
        manager.setFocused(false);
      return;
    }
    if (!e.currentTarget.contains(e.target))
      return;
    manager.setFocused(true);
    if (manager.focusedKey == null) {
      let navigateToFirstKey = (key) => {
        if (key != null) {
          manager.setFocusedKey(key);
          if (selectOnFocus)
            manager.replaceSelection(key);
        }
      };
      let relatedTarget = e.relatedTarget;
      var _manager_lastSelectedKey, _manager_firstSelectedKey;
      if (relatedTarget && e.currentTarget.compareDocumentPosition(relatedTarget) & Node.DOCUMENT_POSITION_FOLLOWING)
        navigateToFirstKey((_manager_lastSelectedKey = manager.lastSelectedKey) !== null && _manager_lastSelectedKey !== void 0 ? _manager_lastSelectedKey : delegate.getLastKey());
      else
        navigateToFirstKey((_manager_firstSelectedKey = manager.firstSelectedKey) !== null && _manager_firstSelectedKey !== void 0 ? _manager_firstSelectedKey : delegate.getFirstKey());
    } else if (!isVirtualized) {
      scrollRef.current.scrollTop = scrollPos.current.top;
      scrollRef.current.scrollLeft = scrollPos.current.left;
    }
    if (!isVirtualized && manager.focusedKey != null) {
      let element = scrollRef.current.querySelector(`[data-key="${manager.focusedKey}"]`);
      if (element) {
        if (!element.contains(document.activeElement))
          (0, $7215afc6de606d6b$export$de79e2c695e052f3)(element);
        let modality = (0, $507fabe10e71c6fb$export$630ff653c5ada6a9)();
        if (modality === "keyboard")
          (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(element, {
            containingElement: ref.current
          });
      }
    }
  };
  let onBlur = (e) => {
    if (!e.currentTarget.contains(e.relatedTarget))
      manager.setFocused(false);
  };
  const autoFocusRef = (0, import_react12.useRef)(autoFocus);
  (0, import_react12.useEffect)(() => {
    if (autoFocusRef.current) {
      let focusedKey = null;
      if (autoFocus === "first")
        focusedKey = delegate.getFirstKey();
      if (autoFocus === "last")
        focusedKey = delegate.getLastKey();
      let selectedKeys = manager.selectedKeys;
      if (selectedKeys.size)
        focusedKey = selectedKeys.values().next().value;
      manager.setFocused(true);
      manager.setFocusedKey(focusedKey);
      if (focusedKey == null && !shouldUseVirtualFocus)
        (0, $6a99195332edec8b$export$80f3e147d781571c)(ref.current);
    }
    autoFocusRef.current = false;
  }, []);
  let lastFocusedKey = (0, import_react12.useRef)(manager.focusedKey);
  (0, import_react12.useEffect)(() => {
    let modality = (0, $507fabe10e71c6fb$export$630ff653c5ada6a9)();
    if (manager.isFocused && manager.focusedKey != null && (scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current)) {
      let element = scrollRef.current.querySelector(`[data-key="${manager.focusedKey}"]`);
      if (element && modality === "keyboard") {
        if (!isVirtualized)
          (0, $2f04cbc44ee30ce0$export$53a0910f038337bd)(scrollRef.current, element);
        (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(element, {
          containingElement: ref.current
        });
      }
    }
    if (manager.isFocused && manager.focusedKey == null && lastFocusedKey.current != null)
      (0, $6a99195332edec8b$export$80f3e147d781571c)(ref.current);
    lastFocusedKey.current = manager.focusedKey;
  }, [
    isVirtualized,
    scrollRef,
    manager.focusedKey,
    manager.isFocused,
    ref
  ]);
  let handlers = {
    onKeyDown,
    onFocus,
    onBlur,
    onMouseDown(e) {
      if (scrollRef.current === e.target)
        e.preventDefault();
    }
  };
  let { typeSelectProps } = (0, $fb3050f43d946246$export$e32c88dfddc6e1d8)({
    keyboardDelegate: delegate,
    selectionManager: manager
  });
  if (!disallowTypeAhead)
    handlers = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(typeSelectProps, handlers);
  let tabIndex;
  if (!shouldUseVirtualFocus)
    tabIndex = manager.focusedKey == null ? 0 : -1;
  return {
    collectionProps: {
      ...handlers,
      tabIndex
    }
  };
}
function $880e95eb8b93ba9a$export$ecf600387e221c37(options) {
  let { selectionManager: manager, key, ref, shouldSelectOnPressUp, shouldUseVirtualFocus, focus, isDisabled, onAction, allowsDifferentPressOrigin } = options;
  let onSelect = (e) => {
    if (e.pointerType === "keyboard" && (0, $feb5ffebff200149$export$d3e3bd3e26688c04)(e))
      manager.toggleSelection(key);
    else {
      if (manager.selectionMode === "none")
        return;
      if (manager.selectionMode === "single") {
        if (manager.isSelected(key) && !manager.disallowEmptySelection)
          manager.toggleSelection(key);
        else
          manager.replaceSelection(key);
      } else if (e && e.shiftKey)
        manager.extendSelection(key);
      else if (manager.selectionBehavior === "toggle" || e && ((0, $feb5ffebff200149$export$16792effe837dba3)(e) || e.pointerType === "touch" || e.pointerType === "virtual"))
        manager.toggleSelection(key);
      else
        manager.replaceSelection(key);
    }
  };
  (0, import_react12.useEffect)(() => {
    let isFocused = key === manager.focusedKey;
    if (isFocused && manager.isFocused && !shouldUseVirtualFocus) {
      if (focus)
        focus();
      else if (document.activeElement !== ref.current)
        (0, $6a99195332edec8b$export$80f3e147d781571c)(ref.current);
    }
  }, [
    ref,
    key,
    manager.focusedKey,
    manager.childFocusStrategy,
    manager.isFocused,
    shouldUseVirtualFocus
  ]);
  isDisabled = isDisabled || manager.isDisabled(key);
  let itemProps = {};
  if (!shouldUseVirtualFocus && !isDisabled)
    itemProps = {
      tabIndex: key === manager.focusedKey ? 0 : -1,
      onFocus(e) {
        if (e.target === ref.current)
          manager.setFocusedKey(key);
      }
    };
  else if (isDisabled)
    itemProps.onMouseDown = (e) => {
      e.preventDefault();
    };
  let allowsSelection = !isDisabled && manager.canSelectItem(key);
  let allowsActions = onAction && !isDisabled;
  let hasPrimaryAction = allowsActions && (manager.selectionBehavior === "replace" ? !allowsSelection : manager.isEmpty);
  let hasSecondaryAction = allowsActions && allowsSelection && manager.selectionBehavior === "replace";
  let hasAction = hasPrimaryAction || hasSecondaryAction;
  let modality = (0, import_react12.useRef)(null);
  let longPressEnabled = hasAction && allowsSelection;
  let longPressEnabledOnPressStart = (0, import_react12.useRef)(false);
  let hadPrimaryActionOnPressStart = (0, import_react12.useRef)(false);
  let itemPressProps = {};
  if (shouldSelectOnPressUp) {
    itemPressProps.onPressStart = (e) => {
      modality.current = e.pointerType;
      longPressEnabledOnPressStart.current = longPressEnabled;
      if (e.pointerType === "keyboard" && (!hasAction || $880e95eb8b93ba9a$var$isSelectionKey()))
        onSelect(e);
    };
    if (!allowsDifferentPressOrigin)
      itemPressProps.onPress = (e) => {
        if (hasPrimaryAction || hasSecondaryAction && e.pointerType !== "mouse") {
          if (e.pointerType === "keyboard" && !$880e95eb8b93ba9a$var$isActionKey())
            return;
          onAction();
        } else if (e.pointerType !== "keyboard")
          onSelect(e);
      };
    else {
      itemPressProps.onPressUp = (e) => {
        if (e.pointerType !== "keyboard")
          onSelect(e);
      };
      itemPressProps.onPress = hasPrimaryAction ? () => onAction() : null;
    }
  } else {
    itemPressProps.onPressStart = (e) => {
      modality.current = e.pointerType;
      longPressEnabledOnPressStart.current = longPressEnabled;
      hadPrimaryActionOnPressStart.current = hasPrimaryAction;
      if (e.pointerType === "mouse" && !hasPrimaryAction || e.pointerType === "keyboard" && (!onAction || $880e95eb8b93ba9a$var$isSelectionKey()))
        onSelect(e);
    };
    itemPressProps.onPress = (e) => {
      if (e.pointerType === "touch" || e.pointerType === "pen" || e.pointerType === "virtual" || e.pointerType === "keyboard" && hasAction && $880e95eb8b93ba9a$var$isActionKey() || e.pointerType === "mouse" && hadPrimaryActionOnPressStart.current) {
        if (hasAction)
          onAction();
        else
          onSelect(e);
      }
    };
  }
  itemProps["data-key"] = key;
  itemPressProps.preventFocusOnPress = shouldUseVirtualFocus;
  let { pressProps, isPressed } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)(itemPressProps);
  let onDoubleClick = hasSecondaryAction ? (e) => {
    if (modality.current === "mouse") {
      e.stopPropagation();
      e.preventDefault();
      onAction();
    }
  } : void 0;
  let { longPressProps } = (0, $8a26561d2877236e$export$c24ed0104d07eab9)({
    isDisabled: !longPressEnabled,
    onLongPress(e) {
      if (e.pointerType === "touch") {
        onSelect(e);
        manager.setSelectionBehavior("toggle");
      }
    }
  });
  let onDragStartCapture = (e) => {
    if (modality.current === "touch" && longPressEnabledOnPressStart.current)
      e.preventDefault();
  };
  return {
    itemProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(itemProps, allowsSelection || hasPrimaryAction ? pressProps : {}, longPressEnabled ? longPressProps : {}, {
      onDoubleClick,
      onDragStartCapture
    }),
    isPressed,
    isSelected: manager.isSelected(key),
    isFocused: manager.isFocused && manager.focusedKey === key,
    isDisabled,
    allowsSelection,
    hasAction
  };
}
function $880e95eb8b93ba9a$var$isActionKey() {
  let event = window.event;
  return (event === null || event === void 0 ? void 0 : event.key) === "Enter";
}
function $880e95eb8b93ba9a$var$isSelectionKey() {
  let event = window.event;
  return (event === null || event === void 0 ? void 0 : event.key) === " " || (event === null || event === void 0 ? void 0 : event.code) === "Space";
}
var $2a25aae57d74318e$export$a05409b8bb224a5a = class {
  getNextKey(key) {
    key = this.collection.getKeyAfter(key);
    while (key != null) {
      let item = this.collection.getItem(key);
      if (item.type === "item" && !this.disabledKeys.has(key))
        return key;
      key = this.collection.getKeyAfter(key);
    }
    return null;
  }
  getPreviousKey(key) {
    key = this.collection.getKeyBefore(key);
    while (key != null) {
      let item = this.collection.getItem(key);
      if (item.type === "item" && !this.disabledKeys.has(key))
        return key;
      key = this.collection.getKeyBefore(key);
    }
    return null;
  }
  findKey(key, nextKey, shouldSkip) {
    let item = this.getItem(key);
    if (!item)
      return null;
    let prevRect = item.getBoundingClientRect();
    do {
      key = nextKey(key);
      item = this.getItem(key);
    } while (item && shouldSkip(prevRect, item.getBoundingClientRect()));
    return key;
  }
  isSameRow(prevRect, itemRect) {
    return prevRect.top === itemRect.top || prevRect.left !== itemRect.left;
  }
  isSameColumn(prevRect, itemRect) {
    return prevRect.left === itemRect.left || prevRect.top !== itemRect.top;
  }
  getKeyBelow(key) {
    if (this.layout === "grid" && this.orientation === "vertical")
      return this.findKey(key, (key2) => this.getNextKey(key2), this.isSameRow);
    else
      return this.getNextKey(key);
  }
  getKeyAbove(key) {
    if (this.layout === "grid" && this.orientation === "vertical")
      return this.findKey(key, (key2) => this.getPreviousKey(key2), this.isSameRow);
    else
      return this.getPreviousKey(key);
  }
  getNextColumn(key, right) {
    return right ? this.getPreviousKey(key) : this.getNextKey(key);
  }
  getKeyRightOf(key) {
    if (this.layout === "grid") {
      if (this.orientation === "vertical")
        return this.getNextColumn(key, this.direction === "rtl");
      else
        return this.findKey(key, (key2) => this.getNextColumn(key2, this.direction === "rtl"), this.isSameColumn);
    } else if (this.orientation === "horizontal")
      return this.getNextColumn(key, this.direction === "rtl");
    return null;
  }
  getKeyLeftOf(key) {
    if (this.layout === "grid") {
      if (this.orientation === "vertical")
        return this.getNextColumn(key, this.direction === "ltr");
      else
        return this.findKey(key, (key2) => this.getNextColumn(key2, this.direction === "ltr"), this.isSameColumn);
    } else if (this.orientation === "horizontal")
      return this.getNextColumn(key, this.direction === "ltr");
    return null;
  }
  getFirstKey() {
    let key = this.collection.getFirstKey();
    while (key != null) {
      let item = this.collection.getItem(key);
      if (item.type === "item" && !this.disabledKeys.has(key))
        return key;
      key = this.collection.getKeyAfter(key);
    }
    return null;
  }
  getLastKey() {
    let key = this.collection.getLastKey();
    while (key != null) {
      let item = this.collection.getItem(key);
      if (item.type === "item" && !this.disabledKeys.has(key))
        return key;
      key = this.collection.getKeyBefore(key);
    }
    return null;
  }
  getItem(key) {
    return this.ref.current.querySelector(`[data-key="${key}"]`);
  }
  getKeyPageAbove(key) {
    let menu = this.ref.current;
    let item = this.getItem(key);
    if (!item)
      return null;
    if (!(0, $62d8ded9296f3872$export$2bb74740c4e19def)(menu))
      return this.getFirstKey();
    let containerRect = menu.getBoundingClientRect();
    let itemRect = item.getBoundingClientRect();
    if (this.orientation === "horizontal") {
      let containerX = containerRect.x - menu.scrollLeft;
      let pageX = Math.max(0, itemRect.x - containerX + itemRect.width - containerRect.width);
      while (item && itemRect.x - containerX > pageX) {
        key = this.getKeyAbove(key);
        item = key == null ? null : this.getItem(key);
        itemRect = item === null || item === void 0 ? void 0 : item.getBoundingClientRect();
      }
    } else {
      let containerY = containerRect.y - menu.scrollTop;
      let pageY = Math.max(0, itemRect.y - containerY + itemRect.height - containerRect.height);
      while (item && itemRect.y - containerY > pageY) {
        key = this.getKeyAbove(key);
        item = key == null ? null : this.getItem(key);
        itemRect = item === null || item === void 0 ? void 0 : item.getBoundingClientRect();
      }
    }
    return key !== null && key !== void 0 ? key : this.getFirstKey();
  }
  getKeyPageBelow(key) {
    let menu = this.ref.current;
    let item = this.getItem(key);
    if (!item)
      return null;
    if (!(0, $62d8ded9296f3872$export$2bb74740c4e19def)(menu))
      return this.getLastKey();
    let containerRect = menu.getBoundingClientRect();
    let itemRect = item.getBoundingClientRect();
    if (this.orientation === "horizontal") {
      let containerX = containerRect.x - menu.scrollLeft;
      let pageX = Math.min(menu.scrollWidth, itemRect.x - containerX - itemRect.width + containerRect.width);
      while (item && itemRect.x - containerX < pageX) {
        key = this.getKeyBelow(key);
        item = key == null ? null : this.getItem(key);
        itemRect = item === null || item === void 0 ? void 0 : item.getBoundingClientRect();
      }
    } else {
      let containerY = containerRect.y - menu.scrollTop;
      let pageY = Math.min(menu.scrollHeight, itemRect.y - containerY - itemRect.height + containerRect.height);
      while (item && itemRect.y - containerY < pageY) {
        key = this.getKeyBelow(key);
        item = key == null ? null : this.getItem(key);
        itemRect = item === null || item === void 0 ? void 0 : item.getBoundingClientRect();
      }
    }
    return key !== null && key !== void 0 ? key : this.getLastKey();
  }
  getKeyForSearch(search, fromKey) {
    if (!this.collator)
      return null;
    let collection = this.collection;
    let key = fromKey || this.getFirstKey();
    while (key != null) {
      let item = collection.getItem(key);
      let substring = item.textValue.slice(0, search.length);
      if (item.textValue && this.collator.compare(substring, search) === 0)
        return key;
      key = this.getKeyBelow(key);
    }
    return null;
  }
  constructor(...args) {
    if (args.length === 1) {
      let opts = args[0];
      this.collection = opts.collection;
      this.ref = opts.ref;
      this.disabledKeys = opts.disabledKeys || /* @__PURE__ */ new Set();
      this.orientation = opts.orientation;
      this.direction = opts.direction;
      this.layout = opts.layout || "stack";
    } else {
      this.collection = args[0];
      this.disabledKeys = args[1];
      this.ref = args[2];
      this.collator = args[3];
      this.layout = "stack";
      this.orientation = "vertical";
    }
    if (this.layout === "stack" && this.orientation === "vertical") {
      this.getKeyLeftOf = void 0;
      this.getKeyRightOf = void 0;
    }
  }
};
function $982254629710d113$export$b95089534ab7c1fd(props) {
  let { selectionManager, collection, disabledKeys, ref, keyboardDelegate, autoFocus, shouldFocusWrap, isVirtualized, disallowEmptySelection, selectOnFocus = selectionManager.selectionBehavior === "replace", disallowTypeAhead, shouldUseVirtualFocus, allowsTabNavigation } = props;
  let collator = (0, $325a3faab7a68acd$export$a16aca283550c30d)({
    usage: "search",
    sensitivity: "base"
  });
  let disabledBehavior = selectionManager.disabledBehavior;
  let delegate = (0, import_react12.useMemo)(() => keyboardDelegate || new (0, $2a25aae57d74318e$export$a05409b8bb224a5a)(collection, disabledBehavior === "selection" ? /* @__PURE__ */ new Set() : disabledKeys, ref, collator), [
    keyboardDelegate,
    collection,
    disabledKeys,
    ref,
    collator,
    disabledBehavior
  ]);
  let { collectionProps } = (0, $ae20dd8cbca75726$export$d6daf82dcd84e87c)({
    ref,
    selectionManager,
    keyboardDelegate: delegate,
    autoFocus,
    shouldFocusWrap,
    disallowEmptySelection,
    selectOnFocus,
    disallowTypeAhead,
    shouldUseVirtualFocus,
    allowsTabNavigation,
    isVirtualized,
    scrollRef: ref
  });
  return {
    listProps: collectionProps
  };
}

// node_modules/.pnpm/@react-stately+collections@3.10.0_react@18.2.0/node_modules/@react-stately/collections/dist/module.js
var import_react13 = __toESM(require_react());
function $c1d7fb2ec91bae71$var$Item(props) {
  return null;
}
$c1d7fb2ec91bae71$var$Item.getCollectionNode = function* getCollectionNode(props, context) {
  let { childItems, title, children } = props;
  let rendered = props.title || props.children;
  let textValue = props.textValue || (typeof rendered === "string" ? rendered : "") || props["aria-label"] || "";
  if (!textValue && !(context === null || context === void 0 ? void 0 : context.suppressTextValueWarning))
    console.warn("<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.");
  yield {
    type: "item",
    props,
    rendered,
    textValue,
    "aria-label": props["aria-label"],
    hasChildNodes: $c1d7fb2ec91bae71$var$hasChildItems(props),
    *childNodes() {
      if (childItems)
        for (let child of childItems)
          yield {
            type: "item",
            value: child
          };
      else if (title) {
        let items = [];
        (0, import_react13.default).Children.forEach(children, (child) => {
          items.push({
            type: "item",
            element: child
          });
        });
        yield* items;
      }
    }
  };
};
function $c1d7fb2ec91bae71$var$hasChildItems(props) {
  if (props.hasChildItems != null)
    return props.hasChildItems;
  if (props.childItems)
    return true;
  if (props.title && (0, import_react13.default).Children.count(props.children) > 0)
    return true;
  return false;
}
function $9fc4852771d079eb$var$Section(props) {
  return null;
}
$9fc4852771d079eb$var$Section.getCollectionNode = function* getCollectionNode2(props) {
  let { children, title, items } = props;
  yield {
    type: "section",
    props,
    hasChildNodes: true,
    rendered: title,
    "aria-label": props["aria-label"],
    *childNodes() {
      if (typeof children === "function") {
        if (!items)
          throw new Error("props.children was a function but props.items is missing");
        for (let item of items)
          yield {
            type: "item",
            value: item,
            renderer: children
          };
      } else {
        let items2 = [];
        (0, import_react13.default).Children.forEach(children, (child) => {
          items2.push({
            type: "item",
            element: child
          });
        });
        yield* items2;
      }
    }
  };
};
var $eb2240fc39a57fa5$export$bf788dd355e3a401 = class {
  build(props, context) {
    this.context = context;
    return $eb2240fc39a57fa5$var$iterable(() => this.iterateCollection(props));
  }
  *iterateCollection(props) {
    let { children, items } = props;
    if (typeof children === "function") {
      if (!items)
        throw new Error("props.children was a function but props.items is missing");
      for (let item of props.items)
        yield* this.getFullNode({
          value: item
        }, {
          renderer: children
        });
    } else {
      let items2 = [];
      (0, import_react13.default).Children.forEach(children, (child) => {
        items2.push(child);
      });
      let index = 0;
      for (let item of items2) {
        let nodes = this.getFullNode({
          element: item,
          index
        }, {});
        for (let node of nodes) {
          index++;
          yield node;
        }
      }
    }
  }
  getKey(item, partialNode, state, parentKey) {
    if (item.key != null)
      return item.key;
    if (partialNode.type === "cell" && partialNode.key != null)
      return `${parentKey}${partialNode.key}`;
    let v = partialNode.value;
    if (v != null) {
      var _v_key;
      let key = (_v_key = v.key) !== null && _v_key !== void 0 ? _v_key : v.id;
      if (key == null)
        throw new Error("No key found for item");
      return key;
    }
    return parentKey ? `${parentKey}.${partialNode.index}` : `$.${partialNode.index}`;
  }
  getChildState(state, partialNode) {
    return {
      renderer: partialNode.renderer || state.renderer
    };
  }
  *getFullNode(partialNode, state, parentKey, parentNode) {
    let element = partialNode.element;
    if (!element && partialNode.value && state && state.renderer) {
      let cached = this.cache.get(partialNode.value);
      if (cached && (!cached.shouldInvalidate || !cached.shouldInvalidate(this.context))) {
        cached.index = partialNode.index;
        cached.parentKey = parentNode ? parentNode.key : null;
        yield cached;
        return;
      }
      element = state.renderer(partialNode.value);
    }
    if ((0, import_react13.default).isValidElement(element)) {
      let type = element.type;
      if (typeof type !== "function" && typeof type.getCollectionNode !== "function") {
        let name = typeof element.type === "function" ? element.type.name : element.type;
        throw new Error(`Unknown element <${name}> in collection.`);
      }
      let childNodes = type.getCollectionNode(element.props, this.context);
      let index = partialNode.index;
      let result = childNodes.next();
      while (!result.done && result.value) {
        let childNode = result.value;
        partialNode.index = index;
        let nodeKey = childNode.key;
        if (!nodeKey)
          nodeKey = childNode.element ? null : this.getKey(element, partialNode, state, parentKey);
        let nodes = this.getFullNode({
          ...childNode,
          key: nodeKey,
          index,
          wrapper: $eb2240fc39a57fa5$var$compose(partialNode.wrapper, childNode.wrapper)
        }, this.getChildState(state, childNode), parentKey ? `${parentKey}${element.key}` : element.key, parentNode);
        let children = [
          ...nodes
        ];
        for (let node2 of children) {
          node2.value = childNode.value || partialNode.value;
          if (node2.value)
            this.cache.set(node2.value, node2);
          if (partialNode.type && node2.type !== partialNode.type)
            throw new Error(`Unsupported type <${$eb2240fc39a57fa5$var$capitalize(node2.type)}> in <${$eb2240fc39a57fa5$var$capitalize(parentNode.type)}>. Only <${$eb2240fc39a57fa5$var$capitalize(partialNode.type)}> is supported.`);
          index++;
          yield node2;
        }
        result = childNodes.next(children);
      }
      return;
    }
    if (partialNode.key == null)
      return;
    let builder = this;
    let node = {
      type: partialNode.type,
      props: partialNode.props,
      key: partialNode.key,
      parentKey: parentNode ? parentNode.key : null,
      value: partialNode.value,
      level: parentNode ? parentNode.level + 1 : 0,
      index: partialNode.index,
      rendered: partialNode.rendered,
      textValue: partialNode.textValue,
      "aria-label": partialNode["aria-label"],
      wrapper: partialNode.wrapper,
      shouldInvalidate: partialNode.shouldInvalidate,
      hasChildNodes: partialNode.hasChildNodes,
      childNodes: $eb2240fc39a57fa5$var$iterable(function* () {
        if (!partialNode.hasChildNodes)
          return;
        let index = 0;
        for (let child of partialNode.childNodes()) {
          if (child.key != null)
            child.key = `${node.key}${child.key}`;
          child.index = index;
          let nodes = builder.getFullNode(child, builder.getChildState(state, child), node.key, node);
          for (let node2 of nodes) {
            index++;
            yield node2;
          }
        }
      })
    };
    yield node;
  }
  constructor() {
    this.cache = /* @__PURE__ */ new WeakMap();
  }
};
function $eb2240fc39a57fa5$var$iterable(iterator) {
  let cache = [];
  let iterable = null;
  return {
    *[Symbol.iterator]() {
      for (let item of cache)
        yield item;
      if (!iterable)
        iterable = iterator();
      for (let item of iterable) {
        cache.push(item);
        yield item;
      }
    }
  };
}
function $eb2240fc39a57fa5$var$compose(outer, inner) {
  if (outer && inner)
    return (element) => outer(inner(element));
  if (outer)
    return outer;
  if (inner)
    return inner;
}
function $eb2240fc39a57fa5$var$capitalize(str) {
  return str[0].toUpperCase() + str.slice(1);
}
function $7613b1592d41b092$export$6cd28814d92fa9c9(props, factory, context) {
  let builder = (0, import_react13.useMemo)(() => new (0, $eb2240fc39a57fa5$export$bf788dd355e3a401)(), []);
  let { children, items, collection } = props;
  let result = (0, import_react13.useMemo)(() => {
    if (collection)
      return collection;
    let nodes = builder.build({
      children,
      items
    }, context);
    return factory(nodes);
  }, [
    builder,
    children,
    items,
    collection,
    context,
    factory
  ]);
  return result;
}
function $c5a24bc478652b5f$export$1005530eda016c13(node, collection) {
  if (typeof collection.getChildren === "function")
    return collection.getChildren(node.key);
  return node.childNodes;
}
function $c5a24bc478652b5f$export$fbdeaa6a76694f71(iterable) {
  return $c5a24bc478652b5f$export$5f3398f8733f90e2(iterable, 0);
}
function $c5a24bc478652b5f$export$5f3398f8733f90e2(iterable, index) {
  if (index < 0)
    return void 0;
  let i = 0;
  for (let item of iterable) {
    if (i === index)
      return item;
    i++;
  }
}
function $c5a24bc478652b5f$export$7475b2c64539e4cf(iterable) {
  let lastItem = void 0;
  for (let value of iterable)
    lastItem = value;
  return lastItem;
}
function $c5a24bc478652b5f$export$8c434b3a7a4dad6(collection, a, b) {
  if (a.parentKey === b.parentKey)
    return a.index - b.index;
  let aAncestors = [
    ...$c5a24bc478652b5f$var$getAncestors(collection, a),
    a
  ];
  let bAncestors = [
    ...$c5a24bc478652b5f$var$getAncestors(collection, b),
    b
  ];
  let firstNonMatchingAncestor = aAncestors.slice(0, bAncestors.length).findIndex((a2, i) => a2 !== bAncestors[i]);
  if (firstNonMatchingAncestor !== -1) {
    a = aAncestors[firstNonMatchingAncestor];
    b = bAncestors[firstNonMatchingAncestor];
    return a.index - b.index;
  }
  if (aAncestors.findIndex((node) => node === b) >= 0)
    return 1;
  else if (bAncestors.findIndex((node) => node === a) >= 0)
    return -1;
  return -1;
}
function $c5a24bc478652b5f$var$getAncestors(collection, node) {
  let parents = [];
  while ((node === null || node === void 0 ? void 0 : node.parentKey) != null) {
    node = collection.getItem(node.parentKey);
    parents.unshift(node);
  }
  return parents;
}
var $453cc9f0df89c0a5$var$cache = /* @__PURE__ */ new WeakMap();
function $453cc9f0df89c0a5$export$77d5aafae4e095b2(collection) {
  let count = $453cc9f0df89c0a5$var$cache.get(collection);
  if (count != null)
    return count;
  count = 0;
  let countItems = (items) => {
    for (let item of items)
      if (item.type === "section")
        countItems((0, $c5a24bc478652b5f$export$1005530eda016c13)(item, collection));
      else
        count++;
  };
  countItems(collection);
  $453cc9f0df89c0a5$var$cache.set(collection, count);
  return count;
}

// node_modules/.pnpm/@react-aria+listbox@3.10.1_react@18.2.0/node_modules/@react-aria/listbox/dist/module.js
var $b1f0cad8af73213b$export$3585ede4d035bf14 = /* @__PURE__ */ new WeakMap();
function $b1f0cad8af73213b$var$normalizeKey(key) {
  if (typeof key === "string")
    return key.replace(/\s*/g, "");
  return "" + key;
}
function $b1f0cad8af73213b$export$9145995848b05025(state, itemKey) {
  let data = $b1f0cad8af73213b$export$3585ede4d035bf14.get(state);
  if (!data)
    throw new Error("Unknown list");
  return `${data.id}-option-${$b1f0cad8af73213b$var$normalizeKey(itemKey)}`;
}
function $c132121280ec012d$export$50eacbbf140a3141(props, state, ref) {
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  let { listProps } = (0, $982254629710d113$export$b95089534ab7c1fd)({
    ...props,
    ref,
    selectionManager: state.selectionManager,
    collection: state.collection,
    disabledKeys: state.disabledKeys
  });
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec)({
    onFocusWithin: props.onFocus,
    onBlurWithin: props.onBlur,
    onFocusWithinChange: props.onFocusChange
  });
  let id = (0, $bdb11010cef70236$export$f680877a34711e37)(props.id);
  (0, $b1f0cad8af73213b$export$3585ede4d035bf14).set(state, {
    id,
    shouldUseVirtualFocus: props.shouldUseVirtualFocus,
    shouldSelectOnPressUp: props.shouldSelectOnPressUp,
    shouldFocusOnHover: props.shouldFocusOnHover,
    isVirtualized: props.isVirtualized,
    onAction: props.onAction
  });
  let { labelProps, fieldProps } = (0, $d191a55c9702f145$export$8467354a121f1b9f)({
    ...props,
    id,
    // listbox is not an HTML input element so it
    // shouldn't be labeled by a <label> element.
    labelElementType: "span"
  });
  return {
    labelProps,
    listBoxProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, focusWithinProps, state.selectionManager.selectionMode === "multiple" ? {
      "aria-multiselectable": "true"
    } : {}, {
      role: "listbox",
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(fieldProps, listProps)
    })
  };
}
function $293f70390ea03370$export$497855f14858aa34(props, state, ref) {
  let { key } = props;
  let data = (0, $b1f0cad8af73213b$export$3585ede4d035bf14).get(state);
  var _props_isDisabled;
  let isDisabled = (_props_isDisabled = props.isDisabled) !== null && _props_isDisabled !== void 0 ? _props_isDisabled : state.disabledKeys.has(key);
  var _props_isSelected;
  let isSelected = (_props_isSelected = props.isSelected) !== null && _props_isSelected !== void 0 ? _props_isSelected : state.selectionManager.isSelected(key);
  var _props_shouldSelectOnPressUp;
  let shouldSelectOnPressUp = (_props_shouldSelectOnPressUp = props.shouldSelectOnPressUp) !== null && _props_shouldSelectOnPressUp !== void 0 ? _props_shouldSelectOnPressUp : data === null || data === void 0 ? void 0 : data.shouldSelectOnPressUp;
  var _props_shouldFocusOnHover;
  let shouldFocusOnHover = (_props_shouldFocusOnHover = props.shouldFocusOnHover) !== null && _props_shouldFocusOnHover !== void 0 ? _props_shouldFocusOnHover : data === null || data === void 0 ? void 0 : data.shouldFocusOnHover;
  var _props_shouldUseVirtualFocus;
  let shouldUseVirtualFocus = (_props_shouldUseVirtualFocus = props.shouldUseVirtualFocus) !== null && _props_shouldUseVirtualFocus !== void 0 ? _props_shouldUseVirtualFocus : data === null || data === void 0 ? void 0 : data.shouldUseVirtualFocus;
  var _props_isVirtualized;
  let isVirtualized = (_props_isVirtualized = props.isVirtualized) !== null && _props_isVirtualized !== void 0 ? _props_isVirtualized : data === null || data === void 0 ? void 0 : data.isVirtualized;
  let labelId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)();
  let descriptionId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)();
  let optionProps = {
    role: "option",
    "aria-disabled": isDisabled || void 0,
    "aria-selected": state.selectionManager.selectionMode !== "none" ? isSelected : void 0
  };
  if (!((0, $c87311424ea30a05$export$9ac100e40613ea10)() && (0, $c87311424ea30a05$export$78551043582a6a98)())) {
    optionProps["aria-label"] = props["aria-label"];
    optionProps["aria-labelledby"] = labelId;
    optionProps["aria-describedby"] = descriptionId;
  }
  if (isVirtualized) {
    var _state_collection_getItem;
    let index = Number((_state_collection_getItem = state.collection.getItem(key)) === null || _state_collection_getItem === void 0 ? void 0 : _state_collection_getItem.index);
    optionProps["aria-posinset"] = Number.isNaN(index) ? void 0 : index + 1;
    optionProps["aria-setsize"] = (0, $453cc9f0df89c0a5$export$77d5aafae4e095b2)(state.collection);
  }
  let { itemProps, isPressed, isFocused, hasAction, allowsSelection } = (0, $880e95eb8b93ba9a$export$ecf600387e221c37)({
    selectionManager: state.selectionManager,
    key,
    ref,
    shouldSelectOnPressUp,
    allowsDifferentPressOrigin: shouldSelectOnPressUp && shouldFocusOnHover,
    isVirtualized,
    shouldUseVirtualFocus,
    isDisabled,
    onAction: (data === null || data === void 0 ? void 0 : data.onAction) ? () => {
      var _data_onAction;
      return data === null || data === void 0 ? void 0 : (_data_onAction = data.onAction) === null || _data_onAction === void 0 ? void 0 : _data_onAction.call(data, key);
    } : void 0
  });
  let { hoverProps } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    isDisabled: isDisabled || !shouldFocusOnHover,
    onHoverStart() {
      if (!(0, $507fabe10e71c6fb$export$b9b3dfddab17db27)()) {
        state.selectionManager.setFocused(true);
        state.selectionManager.setFocusedKey(key);
      }
    }
  });
  return {
    optionProps: {
      ...optionProps,
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(itemProps, hoverProps),
      id: (0, $b1f0cad8af73213b$export$9145995848b05025)(state, key)
    },
    labelProps: {
      id: labelId
    },
    descriptionProps: {
      id: descriptionId
    },
    isFocused,
    isFocusVisible: isFocused && (0, $507fabe10e71c6fb$export$b9b3dfddab17db27)(),
    isSelected,
    isDisabled,
    isPressed,
    allowsSelection,
    hasAction
  };
}
function $af383d3bef1cfdc9$export$c3f9f39876e4bc7(props) {
  let { heading, "aria-label": ariaLabel } = props;
  let headingId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  return {
    itemProps: {
      role: "presentation"
    },
    headingProps: heading ? {
      // Techincally, listbox cannot contain headings according to ARIA.
      // We hide the heading from assistive technology, using role="presentation",
      // and only use it as a visual label for the nested group.
      id: headingId,
      role: "presentation"
    } : {},
    groupProps: {
      role: "group",
      "aria-label": ariaLabel,
      "aria-labelledby": heading ? headingId : void 0
    }
  };
}

// node_modules/.pnpm/@react-aria+combobox@3.6.3_react-dom@18.2.0_react@18.2.0/node_modules/@react-aria/combobox/dist/module.js
var import_react16 = __toESM(require_react());

// node_modules/.pnpm/@react-aria+menu@3.10.1_react-dom@18.2.0_react@18.2.0/node_modules/@react-aria/menu/dist/module.js
var import_react14 = __toESM(require_react());
function $parcel$interopDefault4(a) {
  return a && a.__esModule ? a.default : a;
}
var $2cbb7ca666678a14$exports = {};
var $c0398ad35c3639b7$exports = {};
$c0398ad35c3639b7$exports = {
  "longPressMessage": `اضغط مطولاً أو اضغط على Alt + السهم لأسفل لفتح القائمة`
};
var $7af657c4165927c3$exports = {};
$7af657c4165927c3$exports = {
  "longPressMessage": `Натиснете продължително или натиснете Alt+ стрелка надолу, за да отворите менюто`
};
var $d95d4da6d531ab81$exports = {};
$d95d4da6d531ab81$exports = {
  "longPressMessage": `Dlouhým stiskem nebo stisknutím kláves Alt + šipka dolů otevřete nabídku`
};
var $24ebda9c775dca17$exports = {};
$24ebda9c775dca17$exports = {
  "longPressMessage": `Langt tryk eller tryk på Alt + pil ned for at åbne menuen`
};
var $743e0dfca6cab1e9$exports = {};
$743e0dfca6cab1e9$exports = {
  "longPressMessage": `Drücken Sie lange oder drücken Sie Alt + Nach-unten, um das Menü zu öffnen`
};
var $a2f41026e05f1c84$exports = {};
$a2f41026e05f1c84$exports = {
  "longPressMessage": `Πιέστε παρατεταμένα ή πατήστε Alt + κάτω βέλος για να ανοίξετε το μενού`
};
var $43b800e97c901737$exports = {};
$43b800e97c901737$exports = {
  "longPressMessage": `Long press or press Alt + ArrowDown to open menu`
};
var $442f5f6ac211e29f$exports = {};
$442f5f6ac211e29f$exports = {
  "longPressMessage": `Mantenga pulsado o pulse Alt + flecha abajo para abrir el menú`
};
var $dff280acfeb2d8ac$exports = {};
$dff280acfeb2d8ac$exports = {
  "longPressMessage": `Menüü avamiseks vajutage pikalt või vajutage klahve Alt + allanool`
};
var $51608325613944d7$exports = {};
$51608325613944d7$exports = {
  "longPressMessage": `Avaa valikko painamalla pohjassa tai näppäinyhdistelmällä Alt + Alanuoli`
};
var $c4a1b1eabeaa87be$exports = {};
$c4a1b1eabeaa87be$exports = {
  "longPressMessage": `Appuyez de manière prolongée ou appuyez sur Alt + Flèche vers le bas pour ouvrir le menu.`
};
var $8c74815cdee18d1b$exports = {};
$8c74815cdee18d1b$exports = {
  "longPressMessage": `לחץ לחיצה ארוכה או הקש Alt + ArrowDown כדי לפתוח את התפריט`
};
var $fd0e9ef6a7fe0ec9$exports = {};
$fd0e9ef6a7fe0ec9$exports = {
  "longPressMessage": `Dugo pritisnite ili pritisnite Alt + strelicu prema dolje za otvaranje izbornika`
};
var $a89a74a39eba465a$exports = {};
$a89a74a39eba465a$exports = {
  "longPressMessage": `Nyomja meg hosszan, vagy nyomja meg az Alt + lefele nyíl gombot a menü megnyitásához`
};
var $edc7c66594a0ae8a$exports = {};
$edc7c66594a0ae8a$exports = {
  "longPressMessage": `Premere a lungo o premere Alt + Freccia giù per aprire il menu`
};
var $f1ab51510712db52$exports = {};
$f1ab51510712db52$exports = {
  "longPressMessage": `長押しまたは Alt+下矢印キーでメニューを開く`
};
var $f9b672d9b82fa3d6$exports = {};
$f9b672d9b82fa3d6$exports = {
  "longPressMessage": `길게 누르거나 Alt + 아래쪽 화살표를 눌러 메뉴 열기`
};
var $a385f3910feda499$exports = {};
$a385f3910feda499$exports = {
  "longPressMessage": `Norėdami atidaryti meniu, nuspaudę palaikykite arba paspauskite „Alt + ArrowDown“.`
};
var $4f1bde932c441789$exports = {};
$4f1bde932c441789$exports = {
  "longPressMessage": `Lai atvērtu izvēlni, turiet nospiestu vai nospiediet taustiņu kombināciju Alt + lejupvērstā bultiņa`
};
var $914a51a8a594d5be$exports = {};
$914a51a8a594d5be$exports = {
  "longPressMessage": `Langt trykk eller trykk Alt + PilNed for å åpne menyen`
};
var $89aaf803103bb500$exports = {};
$89aaf803103bb500$exports = {
  "longPressMessage": `Druk lang op Alt + pijl-omlaag of druk op Alt om het menu te openen`
};
var $c685891476dbaaca$exports = {};
$c685891476dbaaca$exports = {
  "longPressMessage": `Naciśnij i przytrzymaj lub naciśnij klawisze Alt + Strzałka w dół, aby otworzyć menu`
};
var $885879b9b10c2959$exports = {};
$885879b9b10c2959$exports = {
  "longPressMessage": `Pressione e segure ou pressione Alt + Seta para baixo para abrir o menu`
};
var $6b39616688a51692$exports = {};
$6b39616688a51692$exports = {
  "longPressMessage": `Prima continuamente ou prima Alt + Seta Para Baixo para abrir o menu`
};
var $f26362aed63f47e2$exports = {};
$f26362aed63f47e2$exports = {
  "longPressMessage": `Apăsați lung sau apăsați pe Alt + săgeată în jos pentru a deschide meniul`
};
var $06cbade644558bf0$exports = {};
$06cbade644558bf0$exports = {
  "longPressMessage": `Нажмите и удерживайте или нажмите Alt + Стрелка вниз, чтобы открыть меню`
};
var $0a391ff68f9d59b1$exports = {};
$0a391ff68f9d59b1$exports = {
  "longPressMessage": `Ponuku otvoríte dlhým stlačením alebo stlačením klávesu Alt + klávesu so šípkou nadol`
};
var $8193cf0e649c7928$exports = {};
$8193cf0e649c7928$exports = {
  "longPressMessage": `Za odprtje menija pritisnite in držite gumb ali pritisnite Alt+puščica navzdol`
};
var $f398debcce5a5c55$exports = {};
$f398debcce5a5c55$exports = {
  "longPressMessage": `Dugo pritisnite ili pritisnite Alt + strelicu prema dole da otvorite meni`
};
var $9e9fef000aa4c013$exports = {};
$9e9fef000aa4c013$exports = {
  "longPressMessage": `Håll nedtryckt eller tryck på Alt + pil nedåt för att öppna menyn`
};
var $c016c8183bbe3d68$exports = {};
$c016c8183bbe3d68$exports = {
  "longPressMessage": `Menüyü açmak için uzun basın veya Alt + Aşağı Ok tuşuna basın`
};
var $ca4f6c8462244e62$exports = {};
$ca4f6c8462244e62$exports = {
  "longPressMessage": `Довго або звичайно натисніть комбінацію клавіш Alt і стрілка вниз, щоб відкрити меню`
};
var $2d9960c02ccac927$exports = {};
$2d9960c02ccac927$exports = {
  "longPressMessage": `长按或按 Alt + 向下方向键以打开菜单`
};
var $f1b682a4c8c5631c$exports = {};
$f1b682a4c8c5631c$exports = {
  "longPressMessage": `長按或按 Alt+向下鍵以開啟功能表`
};
$2cbb7ca666678a14$exports = {
  "ar-AE": $c0398ad35c3639b7$exports,
  "bg-BG": $7af657c4165927c3$exports,
  "cs-CZ": $d95d4da6d531ab81$exports,
  "da-DK": $24ebda9c775dca17$exports,
  "de-DE": $743e0dfca6cab1e9$exports,
  "el-GR": $a2f41026e05f1c84$exports,
  "en-US": $43b800e97c901737$exports,
  "es-ES": $442f5f6ac211e29f$exports,
  "et-EE": $dff280acfeb2d8ac$exports,
  "fi-FI": $51608325613944d7$exports,
  "fr-FR": $c4a1b1eabeaa87be$exports,
  "he-IL": $8c74815cdee18d1b$exports,
  "hr-HR": $fd0e9ef6a7fe0ec9$exports,
  "hu-HU": $a89a74a39eba465a$exports,
  "it-IT": $edc7c66594a0ae8a$exports,
  "ja-JP": $f1ab51510712db52$exports,
  "ko-KR": $f9b672d9b82fa3d6$exports,
  "lt-LT": $a385f3910feda499$exports,
  "lv-LV": $4f1bde932c441789$exports,
  "nb-NO": $914a51a8a594d5be$exports,
  "nl-NL": $89aaf803103bb500$exports,
  "pl-PL": $c685891476dbaaca$exports,
  "pt-BR": $885879b9b10c2959$exports,
  "pt-PT": $6b39616688a51692$exports,
  "ro-RO": $f26362aed63f47e2$exports,
  "ru-RU": $06cbade644558bf0$exports,
  "sk-SK": $0a391ff68f9d59b1$exports,
  "sl-SI": $8193cf0e649c7928$exports,
  "sr-SP": $f398debcce5a5c55$exports,
  "sv-SE": $9e9fef000aa4c013$exports,
  "tr-TR": $c016c8183bbe3d68$exports,
  "uk-UA": $ca4f6c8462244e62$exports,
  "zh-CN": $2d9960c02ccac927$exports,
  "zh-TW": $f1b682a4c8c5631c$exports
};
function $168583247155ddda$export$dc9c12ed27dd1b49(props, state, ref) {
  let { type = "menu", isDisabled, trigger = "press" } = props;
  let menuTriggerId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let { triggerProps, overlayProps } = (0, $628037886ba31236$export$f9d5c8beee7d008d)({
    type
  }, state, ref);
  let onKeyDown = (e) => {
    if (isDisabled)
      return;
    if (trigger === "longPress" && !e.altKey)
      return;
    if (ref && ref.current)
      switch (e.key) {
        case "Enter":
        case " ":
          if (trigger === "longPress")
            return;
        case "ArrowDown":
          if (!("continuePropagation" in e))
            e.stopPropagation();
          e.preventDefault();
          state.toggle("first");
          break;
        case "ArrowUp":
          if (!("continuePropagation" in e))
            e.stopPropagation();
          e.preventDefault();
          state.toggle("last");
          break;
        default:
          if ("continuePropagation" in e)
            e.continuePropagation();
      }
  };
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault4($2cbb7ca666678a14$exports)));
  let { longPressProps } = (0, $8a26561d2877236e$export$c24ed0104d07eab9)({
    isDisabled: isDisabled || trigger !== "longPress",
    accessibilityDescription: stringFormatter.format("longPressMessage"),
    onLongPressStart() {
      state.close();
    },
    onLongPress() {
      state.open("first");
    }
  });
  let pressProps = {
    onPressStart(e) {
      if (e.pointerType !== "touch" && e.pointerType !== "keyboard" && !isDisabled)
        state.toggle(e.pointerType === "virtual" ? "first" : null);
    },
    onPress(e) {
      if (e.pointerType === "touch" && !isDisabled)
        state.toggle();
    }
  };
  delete triggerProps.onPress;
  return {
    menuTriggerProps: {
      ...triggerProps,
      ...trigger === "press" ? pressProps : longPressProps,
      id: menuTriggerId,
      onKeyDown
    },
    menuProps: {
      ...overlayProps,
      "aria-labelledby": menuTriggerId,
      autoFocus: state.focusStrategy || true,
      onClose: state.close
    }
  };
}
var $d5336fe17ce95402$export$6f49b4016bfc8d56 = /* @__PURE__ */ new WeakMap();
function $d5336fe17ce95402$export$38eaa17faae8f579(props, state, ref) {
  let { shouldFocusWrap = true, ...otherProps } = props;
  if (!props["aria-label"] && !props["aria-labelledby"])
    console.warn("An aria-label or aria-labelledby prop is required for accessibility.");
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  let { listProps } = (0, $982254629710d113$export$b95089534ab7c1fd)({
    ...otherProps,
    ref,
    selectionManager: state.selectionManager,
    collection: state.collection,
    disabledKeys: state.disabledKeys,
    shouldFocusWrap
  });
  $d5336fe17ce95402$export$6f49b4016bfc8d56.set(state, {
    onClose: props.onClose,
    onAction: props.onAction
  });
  return {
    menuProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, {
      role: "menu",
      // this forces AT to move their cursors into any open sub dialogs, the sub dialogs contain hidden close buttons in order to come back to this level of the menu
      "aria-hidden": state.expandedKeys.size > 0 ? true : void 0,
      ...listProps,
      onKeyDown: (e) => {
        if (e.key !== "Escape")
          listProps.onKeyDown(e);
      }
    })
  };
}
function $a2e5df62f93c7633$export$9d32628fc2aea7da(props, state, ref) {
  let { key, closeOnSelect, isVirtualized, "aria-haspopup": hasPopup } = props;
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let isTrigger = !!hasPopup;
  let isOpen = state.expandedKeys.has(key);
  var _props_isDisabled;
  let isDisabled = (_props_isDisabled = props.isDisabled) !== null && _props_isDisabled !== void 0 ? _props_isDisabled : state.disabledKeys.has(key);
  var _props_isSelected;
  let isSelected = (_props_isSelected = props.isSelected) !== null && _props_isSelected !== void 0 ? _props_isSelected : state.selectionManager.isSelected(key);
  let openTimeout = (0, import_react14.useRef)();
  let cancelOpenTimeout = (0, import_react14.useCallback)(() => {
    if (openTimeout.current) {
      clearTimeout(openTimeout.current);
      openTimeout.current = void 0;
    }
  }, [
    openTimeout
  ]);
  let onSubmenuOpen = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)(() => {
    cancelOpenTimeout();
    state.setExpandedKeys(/* @__PURE__ */ new Set([
      key
    ]));
  });
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    return () => cancelOpenTimeout();
  }, [
    cancelOpenTimeout
  ]);
  let data = (0, $d5336fe17ce95402$export$6f49b4016bfc8d56).get(state);
  let onClose = props.onClose || data.onClose;
  let onActionMenuDialogTrigger = (0, import_react14.useCallback)(() => {
    onSubmenuOpen();
  }, []);
  let onAction = isTrigger ? onActionMenuDialogTrigger : props.onAction || data.onAction;
  let role = "menuitem";
  if (state.selectionManager.selectionMode === "single")
    role = "menuitemradio";
  else if (state.selectionManager.selectionMode === "multiple")
    role = "menuitemcheckbox";
  let labelId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)();
  let descriptionId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)();
  let keyboardId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)();
  let ariaProps = {
    "aria-disabled": isDisabled || void 0,
    role,
    "aria-label": props["aria-label"],
    "aria-labelledby": labelId,
    "aria-describedby": [
      descriptionId,
      keyboardId
    ].filter(Boolean).join(" ") || void 0
  };
  if (state.selectionManager.selectionMode !== "none")
    ariaProps["aria-checked"] = isSelected;
  if (isVirtualized) {
    ariaProps["aria-posinset"] = state.collection.getItem(key).index;
    ariaProps["aria-setsize"] = (0, $453cc9f0df89c0a5$export$77d5aafae4e095b2)(state.collection);
  }
  if (hasPopup != null) {
    ariaProps["aria-haspopup"] = hasPopup;
    ariaProps["aria-expanded"] = isOpen ? "true" : "false";
  }
  let onPressStart = (e) => {
    if (e.pointerType === "keyboard" && onAction)
      onAction(key);
  };
  let onPressUp = (e) => {
    if (e.pointerType !== "keyboard") {
      if (onAction)
        onAction(key);
      if (!isTrigger && onClose && (closeOnSelect !== null && closeOnSelect !== void 0 ? closeOnSelect : state.selectionManager.selectionMode !== "multiple"))
        onClose();
    }
  };
  let { itemProps, isFocused } = (0, $880e95eb8b93ba9a$export$ecf600387e221c37)({
    selectionManager: state.selectionManager,
    key,
    ref,
    shouldSelectOnPressUp: true,
    allowsDifferentPressOrigin: true
  });
  let { pressProps, isPressed } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    onPressStart,
    onPressUp,
    isDisabled: isDisabled || isTrigger && state.expandedKeys.has(key)
  });
  let { hoverProps } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    isDisabled,
    onHoverStart() {
      if (!(0, $507fabe10e71c6fb$export$b9b3dfddab17db27)() && !(isTrigger && state.expandedKeys.has(key))) {
        state.selectionManager.setFocused(true);
        state.selectionManager.setFocusedKey(key);
        let isFocused2 = key === state.selectionManager.focusedKey;
        if (isFocused2 && state.selectionManager.isFocused && document.activeElement !== ref.current)
          (0, $6a99195332edec8b$export$80f3e147d781571c)(ref.current);
      }
    },
    onHoverChange: (isHovered) => {
      if (isHovered && isTrigger && !state.expandedKeys.has(key)) {
        if (!openTimeout.current)
          openTimeout.current = setTimeout(() => {
            onSubmenuOpen();
          }, 200);
      } else if (!isHovered)
        cancelOpenTimeout();
    }
  });
  let { keyboardProps } = (0, $46d819fcbaf35654$export$8f71654801c2f7cd)({
    onKeyDown: (e) => {
      if (e.repeat) {
        e.continuePropagation();
        return;
      }
      switch (e.key) {
        case " ":
          if (!isDisabled && state.selectionManager.selectionMode === "none" && !isTrigger && closeOnSelect !== false && onClose)
            onClose();
          break;
        case "Enter":
          if (!isDisabled && closeOnSelect !== false && !isTrigger && onClose)
            onClose();
          break;
        case "ArrowRight":
          if (isTrigger && direction === "ltr")
            onSubmenuOpen();
          else
            e.continuePropagation();
          break;
        case "ArrowLeft":
          if (isTrigger && direction === "rtl")
            onSubmenuOpen();
          else
            e.continuePropagation();
          break;
        default:
          e.continuePropagation();
          break;
      }
    }
  });
  return {
    menuItemProps: {
      ...ariaProps,
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(itemProps, pressProps, hoverProps, keyboardProps)
    },
    labelProps: {
      id: labelId
    },
    descriptionProps: {
      id: descriptionId
    },
    keyboardShortcutProps: {
      id: keyboardId
    },
    isFocused,
    isSelected,
    isPressed,
    isDisabled
  };
}
function $3e5eb2498db5b506$export$73f7a44322579622(props) {
  let { heading, "aria-label": ariaLabel } = props;
  let headingId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  return {
    itemProps: {
      role: "presentation"
    },
    headingProps: heading ? {
      // Techincally, menus cannot contain headings according to ARIA.
      // We hide the heading from assistive technology, using role="presentation",
      // and only use it as a label for the nested group.
      id: headingId,
      role: "presentation"
    } : {},
    groupProps: {
      role: "group",
      "aria-label": ariaLabel,
      "aria-labelledby": heading ? headingId : void 0
    }
  };
}

// node_modules/.pnpm/@react-aria+textfield@3.11.0_react@18.2.0/node_modules/@react-aria/textfield/dist/module.js
var import_react15 = __toESM(require_react());
function $2d73ec29415bd339$export$712718f7aec83d5(props, ref) {
  let { inputElementType = "input", isDisabled = false, isRequired = false, isReadOnly = false, validationState, type = "text", value, defaultValue, onChange = () => {
  } } = props;
  let { focusableProps } = (0, $e6afbd83fe6ebbd2$export$4c014de7c8940b4c)(props, ref);
  let { labelProps, fieldProps, descriptionProps, errorMessageProps } = (0, $2baaea4c71418dea$export$294aa081a6c6f55d)(props);
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  const inputOnlyProps = {
    type,
    pattern: props.pattern
  };
  var _ref;
  (0, $99facab73266f662$export$5add1d006293d136)(ref, (_ref = value !== null && value !== void 0 ? value : defaultValue) !== null && _ref !== void 0 ? _ref : "", onChange);
  return {
    labelProps,
    inputProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, inputElementType === "input" && inputOnlyProps, {
      disabled: isDisabled,
      readOnly: isReadOnly,
      "aria-required": isRequired || void 0,
      "aria-invalid": validationState === "invalid" || void 0,
      "aria-errormessage": props["aria-errormessage"],
      "aria-activedescendant": props["aria-activedescendant"],
      "aria-autocomplete": props["aria-autocomplete"],
      "aria-haspopup": props["aria-haspopup"],
      value: props.value,
      defaultValue: props.value ? void 0 : props.defaultValue,
      onChange: (e) => onChange(e.target.value),
      autoComplete: props.autoComplete,
      maxLength: props.maxLength,
      minLength: props.minLength,
      name: props.name,
      placeholder: props.placeholder,
      inputMode: props.inputMode,
      // Clipboard events
      onCopy: props.onCopy,
      onCut: props.onCut,
      onPaste: props.onPaste,
      // Composition events
      onCompositionEnd: props.onCompositionEnd,
      onCompositionStart: props.onCompositionStart,
      onCompositionUpdate: props.onCompositionUpdate,
      // Selection events
      onSelect: props.onSelect,
      // Input events
      onBeforeInput: props.onBeforeInput,
      onInput: props.onInput,
      ...focusableProps,
      ...fieldProps
    }),
    descriptionProps,
    errorMessageProps
  };
}
function $d841c8010a73d545$var$supportsNativeBeforeInputEvent() {
  return typeof window !== "undefined" && window.InputEvent && // @ts-ignore
  typeof InputEvent.prototype.getTargetRanges === "function";
}
function $d841c8010a73d545$export$4f384c9210e583c3(props, state, inputRef) {
  let onBeforeInputFallback = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    let input = inputRef.current;
    let nextValue;
    switch (e.inputType) {
      case "historyUndo":
      case "historyRedo":
        return;
      case "deleteContent":
      case "deleteByCut":
      case "deleteByDrag":
        nextValue = input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);
        break;
      case "deleteContentForward":
        nextValue = input.selectionEnd === input.selectionStart ? input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd + 1) : input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);
        break;
      case "deleteContentBackward":
        nextValue = input.selectionEnd === input.selectionStart ? input.value.slice(0, input.selectionStart - 1) + input.value.slice(input.selectionStart) : input.value.slice(0, input.selectionStart) + input.value.slice(input.selectionEnd);
        break;
      case "deleteSoftLineBackward":
      case "deleteHardLineBackward":
        nextValue = input.value.slice(input.selectionStart);
        break;
      default:
        if (e.data != null)
          nextValue = input.value.slice(0, input.selectionStart) + e.data + input.value.slice(input.selectionEnd);
        break;
    }
    if (nextValue == null || !state.validate(nextValue))
      e.preventDefault();
  });
  (0, import_react15.useEffect)(() => {
    if (!$d841c8010a73d545$var$supportsNativeBeforeInputEvent())
      return;
    let input = inputRef.current;
    input.addEventListener("beforeinput", onBeforeInputFallback, false);
    return () => {
      input.removeEventListener("beforeinput", onBeforeInputFallback, false);
    };
  }, [
    inputRef,
    onBeforeInputFallback
  ]);
  let onBeforeInput = !$d841c8010a73d545$var$supportsNativeBeforeInputEvent() ? (e) => {
    let nextValue = e.target.value.slice(0, e.target.selectionStart) + e.data + e.target.value.slice(e.target.selectionEnd);
    if (!state.validate(nextValue))
      e.preventDefault();
  } : null;
  let { labelProps, inputProps: textFieldProps, descriptionProps, errorMessageProps } = (0, $2d73ec29415bd339$export$712718f7aec83d5)(props, inputRef);
  let compositionStartState = (0, import_react15.useRef)(null);
  return {
    inputProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(textFieldProps, {
      onBeforeInput,
      onCompositionStart() {
        let { value, selectionStart, selectionEnd } = inputRef.current;
        compositionStartState.current = {
          value,
          selectionStart,
          selectionEnd
        };
      },
      onCompositionEnd() {
        if (!state.validate(inputRef.current.value)) {
          let { value, selectionStart, selectionEnd } = compositionStartState.current;
          inputRef.current.value = value;
          inputRef.current.setSelectionRange(selectionStart, selectionEnd);
          state.setInputValue(value);
        }
      }
    }),
    labelProps,
    descriptionProps,
    errorMessageProps
  };
}

// node_modules/.pnpm/@react-aria+combobox@3.6.3_react-dom@18.2.0_react@18.2.0/node_modules/@react-aria/combobox/dist/module.js
function $parcel$interopDefault5(a) {
  return a && a.__esModule ? a.default : a;
}
var $de5926a92e8ebc5b$exports = {};
var $02cb4c75c506befe$exports = {};
$02cb4c75c506befe$exports = {
  "buttonLabel": `عرض المقترحات`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} خيار`,
    other: () => `${formatter.number(args.optionCount)} خيارات`
  })} متاحة.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `المجموعة المدخلة ${args.groupTitle}, مع ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} خيار`,
      other: () => `${formatter.number(args.groupCount)} خيارات`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, محدد`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `مقترحات`,
  "selectedAnnouncement": (args) => `${args.optionText}، محدد`
};
var $568b8163f1e56faf$exports = {};
$568b8163f1e56faf$exports = {
  "buttonLabel": `Покажи предложения`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} опция`,
    other: () => `${formatter.number(args.optionCount)} опции`
  })} на разположение.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Въведена група ${args.groupTitle}, с ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} опция`,
      other: () => `${formatter.number(args.groupCount)} опции`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, избрани`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Предложения`,
  "selectedAnnouncement": (args) => `${args.optionText}, избрани`
};
var $87581c0202d106b8$exports = {};
$87581c0202d106b8$exports = {
  "buttonLabel": `Zobrazit doporučení`,
  "countAnnouncement": (args, formatter) => `K dispozici ${formatter.plural(args.optionCount, {
    one: () => `je ${formatter.number(args.optionCount)} možnost`,
    other: () => `jsou/je ${formatter.number(args.optionCount)} možnosti/-í`
  })}.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Zadaná skupina „${args.groupTitle}“ ${formatter.plural(args.groupCount, {
      one: () => `s ${formatter.number(args.groupCount)} možností`,
      other: () => `se ${formatter.number(args.groupCount)} možnostmi`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: ` (vybráno)`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Návrhy`,
  "selectedAnnouncement": (args) => `${args.optionText}, vybráno`
};
var $a10a0369f5433ed1$exports = {};
$a10a0369f5433ed1$exports = {
  "buttonLabel": `Vis forslag`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} mulighed tilgængelig`,
    other: () => `${formatter.number(args.optionCount)} muligheder tilgængelige`
  })}.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Angivet gruppe ${args.groupTitle}, med ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} mulighed`,
      other: () => `${formatter.number(args.groupCount)} muligheder`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, valgt`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Forslag`,
  "selectedAnnouncement": (args) => `${args.optionText}, valgt`
};
var $bfd288727d5cb166$exports = {};
$bfd288727d5cb166$exports = {
  "buttonLabel": `Empfehlungen anzeigen`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} Option`,
    other: () => `${formatter.number(args.optionCount)} Optionen`
  })} verfügbar.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Eingetretene Gruppe ${args.groupTitle}, mit ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} Option`,
      other: () => `${formatter.number(args.groupCount)} Optionen`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, ausgewählt`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Empfehlungen`,
  "selectedAnnouncement": (args) => `${args.optionText}, ausgewählt`
};
var $ca177778f9a74e3c$exports = {};
$ca177778f9a74e3c$exports = {
  "buttonLabel": `Προβολή προτάσεων`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} επιλογή`,
    other: () => `${formatter.number(args.optionCount)} επιλογές `
  })} διαθέσιμες.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Εισαγμένη ομάδα ${args.groupTitle}, με ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} επιλογή`,
      other: () => `${formatter.number(args.groupCount)} επιλογές`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, επιλεγμένο`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Προτάσεις`,
  "selectedAnnouncement": (args) => `${args.optionText}, επιλέχθηκε`
};
var $9b5aa79ef84beb6c$exports = {};
$9b5aa79ef84beb6c$exports = {
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Entered group ${args.groupTitle}, with ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} option`,
      other: () => `${formatter.number(args.groupCount)} options`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, selected`,
    other: ``
  }, args.isSelected)}`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} option`,
    other: () => `${formatter.number(args.optionCount)} options`
  })} available.`,
  "selectedAnnouncement": (args) => `${args.optionText}, selected`,
  "buttonLabel": `Show suggestions`,
  "listboxLabel": `Suggestions`
};
var $57968e8209de2557$exports = {};
$57968e8209de2557$exports = {
  "buttonLabel": `Mostrar sugerencias`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} opción`,
    other: () => `${formatter.number(args.optionCount)} opciones`
  })} disponible(s).`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Se ha unido al grupo ${args.groupTitle}, con ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} opción`,
      other: () => `${formatter.number(args.groupCount)} opciones`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, seleccionado`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Sugerencias`,
  "selectedAnnouncement": (args) => `${args.optionText}, seleccionado`
};
var $60690790bf4c1c6a$exports = {};
$60690790bf4c1c6a$exports = {
  "buttonLabel": `Kuva soovitused`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} valik`,
    other: () => `${formatter.number(args.optionCount)} valikud`
  })} saadaval.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Sisestatud rühm ${args.groupTitle}, valikuga ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} valik`,
      other: () => `${formatter.number(args.groupCount)} valikud`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, valitud`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Soovitused`,
  "selectedAnnouncement": (args) => `${args.optionText}, valitud`
};
var $1101246e8c7d9357$exports = {};
$1101246e8c7d9357$exports = {
  "buttonLabel": `Näytä ehdotukset`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} vaihtoehto`,
    other: () => `${formatter.number(args.optionCount)} vaihtoehdot`
  })} saatavilla.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Mentiin ryhmään ${args.groupTitle}, ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} vaihtoehdon`,
      other: () => `${formatter.number(args.groupCount)} vaihtoehdon`
    })} kanssa.`,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, valittu`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Ehdotukset`,
  "selectedAnnouncement": (args) => `${args.optionText}, valittu`
};
var $6404b5cb5b241730$exports = {};
$6404b5cb5b241730$exports = {
  "buttonLabel": `Afficher les suggestions`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} option`,
    other: () => `${formatter.number(args.optionCount)} options`
  })} disponible(s).`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Groupe ${args.groupTitle} saisi, avec ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} option`,
      other: () => `${formatter.number(args.groupCount)} options`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, sélectionné(s)`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Suggestions`,
  "selectedAnnouncement": (args) => `${args.optionText}, sélectionné`
};
var $dfeafa702e92e31f$exports = {};
$dfeafa702e92e31f$exports = {
  "buttonLabel": `הצג הצעות`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `אפשרות ${formatter.number(args.optionCount)}`,
    other: () => `${formatter.number(args.optionCount)} אפשרויות`
  })} במצב זמין.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `נכנס לקבוצה ${args.groupTitle}, עם ${formatter.plural(args.groupCount, {
      one: () => `אפשרות ${formatter.number(args.groupCount)}`,
      other: () => `${formatter.number(args.groupCount)} אפשרויות`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, נבחר`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `הצעות`,
  "selectedAnnouncement": (args) => `${args.optionText}, נבחר`
};
var $2d125e0b34676352$exports = {};
$2d125e0b34676352$exports = {
  "buttonLabel": `Prikaži prijedloge`,
  "countAnnouncement": (args, formatter) => `Dostupno još: ${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} opcija`,
    other: () => `${formatter.number(args.optionCount)} opcije/a`
  })}.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Unesena skupina ${args.groupTitle}, s ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} opcijom`,
      other: () => `${formatter.number(args.groupCount)} opcije/a`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, odabranih`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Prijedlozi`,
  "selectedAnnouncement": (args) => `${args.optionText}, odabrano`
};
var $ea029611d7634059$exports = {};
$ea029611d7634059$exports = {
  "buttonLabel": `Javaslatok megjelenítése`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} lehetőség`,
    other: () => `${formatter.number(args.optionCount)} lehetőség`
  })} áll rendelkezésre.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Belépett a(z) ${args.groupTitle} csoportba, amely ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} lehetőséget`,
      other: () => `${formatter.number(args.groupCount)} lehetőséget`
    })} tartalmaz. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, kijelölve`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Javaslatok`,
  "selectedAnnouncement": (args) => `${args.optionText}, kijelölve`
};
var $77f075bb86ad7091$exports = {};
$77f075bb86ad7091$exports = {
  "buttonLabel": `Mostra suggerimenti`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} opzione disponibile`,
    other: () => `${formatter.number(args.optionCount)} opzioni disponibili`
  })}.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Ingresso nel gruppo ${args.groupTitle}, con ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} opzione`,
      other: () => `${formatter.number(args.groupCount)} opzioni`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, selezionato`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Suggerimenti`,
  "selectedAnnouncement": (args) => `${args.optionText}, selezionato`
};
var $6e87462e84907983$exports = {};
$6e87462e84907983$exports = {
  "buttonLabel": `候補を表示`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} 個のオプション`,
    other: () => `${formatter.number(args.optionCount)} 個のオプション`
  })}を利用できます。`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `入力されたグループ ${args.groupTitle}、${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} 個のオプション`,
      other: () => `${formatter.number(args.groupCount)} 個のオプション`
    })}を含む。`,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `、選択済み`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `候補`,
  "selectedAnnouncement": (args) => `${args.optionText}、選択済み`
};
var $9246f2c6edc6b232$exports = {};
$9246f2c6edc6b232$exports = {
  "buttonLabel": `제안 사항 표시`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)}개 옵션`,
    other: () => `${formatter.number(args.optionCount)}개 옵션`
  })}을 사용할 수 있습니다.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `입력한 그룹 ${args.groupTitle}, ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)}개 옵션`,
      other: () => `${formatter.number(args.groupCount)}개 옵션`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, 선택됨`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `제안`,
  "selectedAnnouncement": (args) => `${args.optionText}, 선택됨`
};
var $e587accc6c0a434c$exports = {};
$e587accc6c0a434c$exports = {
  "buttonLabel": `Rodyti pasiūlymus`,
  "countAnnouncement": (args, formatter) => `Yra ${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} parinktis`,
    other: () => `${formatter.number(args.optionCount)} parinktys (-ių)`
  })}.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Įvesta grupė ${args.groupTitle}, su ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} parinktimi`,
      other: () => `${formatter.number(args.groupCount)} parinktimis (-ių)`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, pasirinkta`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Pasiūlymai`,
  "selectedAnnouncement": (args) => `${args.optionText}, pasirinkta`
};
var $03a1900e7400b5ab$exports = {};
$03a1900e7400b5ab$exports = {
  "buttonLabel": `Rādīt ieteikumus`,
  "countAnnouncement": (args, formatter) => `Pieejamo opciju skaits: ${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} opcija`,
    other: () => `${formatter.number(args.optionCount)} opcijas`
  })}.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Ievadīta grupa ${args.groupTitle}, ar ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} opciju`,
      other: () => `${formatter.number(args.groupCount)} opcijām`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, atlasīta`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Ieteikumi`,
  "selectedAnnouncement": (args) => `${args.optionText}, atlasīta`
};
var $1387676441be6cf6$exports = {};
$1387676441be6cf6$exports = {
  "buttonLabel": `Vis forslag`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} alternativ`,
    other: () => `${formatter.number(args.optionCount)} alternativer`
  })} finnes.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Angitt gruppe ${args.groupTitle}, med ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} alternativ`,
      other: () => `${formatter.number(args.groupCount)} alternativer`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, valgt`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Forslag`,
  "selectedAnnouncement": (args) => `${args.optionText}, valgt`
};
var $17e82ebf0f8ab91f$exports = {};
$17e82ebf0f8ab91f$exports = {
  "buttonLabel": `Suggesties weergeven`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} optie`,
    other: () => `${formatter.number(args.optionCount)} opties`
  })} beschikbaar.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Groep ${args.groupTitle} ingevoerd met ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} optie`,
      other: () => `${formatter.number(args.groupCount)} opties`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, geselecteerd`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Suggesties`,
  "selectedAnnouncement": (args) => `${args.optionText}, geselecteerd`
};
var $2f5377d3471630e5$exports = {};
$2f5377d3471630e5$exports = {
  "buttonLabel": `Wyświetlaj sugestie`,
  "countAnnouncement": (args, formatter) => `dostępna/dostępne(-nych) ${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} opcja`,
    other: () => `${formatter.number(args.optionCount)} opcje(-i)`
  })}.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Dołączono do grupy ${args.groupTitle}, z ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} opcją`,
      other: () => `${formatter.number(args.groupCount)} opcjami`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, wybrano`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Sugestie`,
  "selectedAnnouncement": (args) => `${args.optionText}, wybrano`
};
var $dee9868b6fa95ffe$exports = {};
$dee9868b6fa95ffe$exports = {
  "buttonLabel": `Mostrar sugestões`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} opção`,
    other: () => `${formatter.number(args.optionCount)} opções`
  })} disponível.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Grupo inserido ${args.groupTitle}, com ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} opção`,
      other: () => `${formatter.number(args.groupCount)} opções`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, selecionado`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Sugestões`,
  "selectedAnnouncement": (args) => `${args.optionText}, selecionado`
};
var $f8b2e63637cbb5a6$exports = {};
$f8b2e63637cbb5a6$exports = {
  "buttonLabel": `Apresentar sugestões`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} opção`,
    other: () => `${formatter.number(args.optionCount)} opções`
  })} disponível.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Grupo introduzido ${args.groupTitle}, com ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} opção`,
      other: () => `${formatter.number(args.groupCount)} opções`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, selecionado`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Sugestões`,
  "selectedAnnouncement": (args) => `${args.optionText}, selecionado`
};
var $46a885db3b44ea95$exports = {};
$46a885db3b44ea95$exports = {
  "buttonLabel": `Afișare sugestii`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} opțiune`,
    other: () => `${formatter.number(args.optionCount)} opțiuni`
  })} disponibile.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Grup ${args.groupTitle} introdus, cu ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} opțiune`,
      other: () => `${formatter.number(args.groupCount)} opțiuni`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, selectat`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Sugestii`,
  "selectedAnnouncement": (args) => `${args.optionText}, selectat`
};
var $50d8a8f0afa9dee5$exports = {};
$50d8a8f0afa9dee5$exports = {
  "buttonLabel": `Показать предложения`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} параметр`,
    other: () => `${formatter.number(args.optionCount)} параметров`
  })} доступно.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Введенная группа ${args.groupTitle}, с ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} параметром`,
      other: () => `${formatter.number(args.groupCount)} параметрами`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, выбранными`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Предложения`,
  "selectedAnnouncement": (args) => `${args.optionText}, выбрано`
};
var $2867ee6173245507$exports = {};
$2867ee6173245507$exports = {
  "buttonLabel": `Zobraziť návrhy`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} možnosť`,
    other: () => `${formatter.number(args.optionCount)} možnosti/-í`
  })} k dispozícii.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Zadaná skupina ${args.groupTitle}, s ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} možnosťou`,
      other: () => `${formatter.number(args.groupCount)} možnosťami`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, vybraté`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Návrhy`,
  "selectedAnnouncement": (args) => `${args.optionText}, vybraté`
};
var $0631b65beeb09b50$exports = {};
$0631b65beeb09b50$exports = {
  "buttonLabel": `Prikaži predloge`,
  "countAnnouncement": (args, formatter) => `Na voljo je ${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} opcija`,
    other: () => `${formatter.number(args.optionCount)} opcije`
  })}.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Vnesena skupina ${args.groupTitle}, z ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} opcija`,
      other: () => `${formatter.number(args.groupCount)} opcije`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, izbrano`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Predlogi`,
  "selectedAnnouncement": (args) => `${args.optionText}, izbrano`
};
var $65fc749265dcd686$exports = {};
$65fc749265dcd686$exports = {
  "buttonLabel": `Prikaži predloge`,
  "countAnnouncement": (args, formatter) => `Dostupno još: ${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} opcija`,
    other: () => `${formatter.number(args.optionCount)} opcije/a`
  })}.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Unesena grupa ${args.groupTitle}, s ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} opcijom`,
      other: () => `${formatter.number(args.groupCount)} optione/a`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, izabranih`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Predlozi`,
  "selectedAnnouncement": (args) => `${args.optionText}, izabrano`
};
var $69ba655c7853c08e$exports = {};
$69ba655c7853c08e$exports = {
  "buttonLabel": `Visa förslag`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} alternativ`,
    other: () => `${formatter.number(args.optionCount)} alternativ`
  })} tillgängliga.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Ingick i gruppen ${args.groupTitle} med ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} alternativ`,
      other: () => `${formatter.number(args.groupCount)} alternativ`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, valda`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Förslag`,
  "selectedAnnouncement": (args) => `${args.optionText}, valda`
};
var $a79794784d61577c$exports = {};
$a79794784d61577c$exports = {
  "buttonLabel": `Önerileri göster`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} seçenek`,
    other: () => `${formatter.number(args.optionCount)} seçenekler`
  })} kullanılabilir.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Girilen grup ${args.groupTitle}, ile ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} seçenek`,
      other: () => `${formatter.number(args.groupCount)} seçenekler`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, seçildi`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Öneriler`,
  "selectedAnnouncement": (args) => `${args.optionText}, seçildi`
};
var $c2845791417ebaf4$exports = {};
$c2845791417ebaf4$exports = {
  "buttonLabel": `Показати пропозиції`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} параметр`,
    other: () => `${formatter.number(args.optionCount)} параметри(-ів)`
  })} доступно.`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `Введена група ${args.groupTitle}, з ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} параметр`,
      other: () => `${formatter.number(args.groupCount)} параметри(-ів)`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, вибрано`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `Пропозиції`,
  "selectedAnnouncement": (args) => `${args.optionText}, вибрано`
};
var $29b642d0025cc7a4$exports = {};
$29b642d0025cc7a4$exports = {
  "buttonLabel": `显示建议`,
  "countAnnouncement": (args, formatter) => `有 ${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} 个选项`,
    other: () => `${formatter.number(args.optionCount)} 个选项`
  })}可用。`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `进入了 ${args.groupTitle} 组，其中有 ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} 个选项`,
      other: () => `${formatter.number(args.groupCount)} 个选项`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, 已选择`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `建议`,
  "selectedAnnouncement": (args) => `${args.optionText}, 已选择`
};
var $cd36dd33f9d46936$exports = {};
$cd36dd33f9d46936$exports = {
  "buttonLabel": `顯示建議`,
  "countAnnouncement": (args, formatter) => `${formatter.plural(args.optionCount, {
    one: () => `${formatter.number(args.optionCount)} 選項`,
    other: () => `${formatter.number(args.optionCount)} 選項`
  })} 可用。`,
  "focusAnnouncement": (args, formatter) => `${formatter.select({
    true: () => `輸入的群組 ${args.groupTitle}, 有 ${formatter.plural(args.groupCount, {
      one: () => `${formatter.number(args.groupCount)} 選項`,
      other: () => `${formatter.number(args.groupCount)} 選項`
    })}. `,
    other: ``
  }, args.isGroupChange)}${args.optionText}${formatter.select({
    true: `, 已選取`,
    other: ``
  }, args.isSelected)}`,
  "listboxLabel": `建議`,
  "selectedAnnouncement": (args) => `${args.optionText}, 已選取`
};
$de5926a92e8ebc5b$exports = {
  "ar-AE": $02cb4c75c506befe$exports,
  "bg-BG": $568b8163f1e56faf$exports,
  "cs-CZ": $87581c0202d106b8$exports,
  "da-DK": $a10a0369f5433ed1$exports,
  "de-DE": $bfd288727d5cb166$exports,
  "el-GR": $ca177778f9a74e3c$exports,
  "en-US": $9b5aa79ef84beb6c$exports,
  "es-ES": $57968e8209de2557$exports,
  "et-EE": $60690790bf4c1c6a$exports,
  "fi-FI": $1101246e8c7d9357$exports,
  "fr-FR": $6404b5cb5b241730$exports,
  "he-IL": $dfeafa702e92e31f$exports,
  "hr-HR": $2d125e0b34676352$exports,
  "hu-HU": $ea029611d7634059$exports,
  "it-IT": $77f075bb86ad7091$exports,
  "ja-JP": $6e87462e84907983$exports,
  "ko-KR": $9246f2c6edc6b232$exports,
  "lt-LT": $e587accc6c0a434c$exports,
  "lv-LV": $03a1900e7400b5ab$exports,
  "nb-NO": $1387676441be6cf6$exports,
  "nl-NL": $17e82ebf0f8ab91f$exports,
  "pl-PL": $2f5377d3471630e5$exports,
  "pt-BR": $dee9868b6fa95ffe$exports,
  "pt-PT": $f8b2e63637cbb5a6$exports,
  "ro-RO": $46a885db3b44ea95$exports,
  "ru-RU": $50d8a8f0afa9dee5$exports,
  "sk-SK": $2867ee6173245507$exports,
  "sl-SI": $0631b65beeb09b50$exports,
  "sr-SP": $65fc749265dcd686$exports,
  "sv-SE": $69ba655c7853c08e$exports,
  "tr-TR": $a79794784d61577c$exports,
  "uk-UA": $c2845791417ebaf4$exports,
  "zh-CN": $29b642d0025cc7a4$exports,
  "zh-TW": $cd36dd33f9d46936$exports
};
function $c350ade66beef0af$export$8c18d1b4f7232bbf(props, state) {
  let { buttonRef, popoverRef, inputRef, listBoxRef, keyboardDelegate, shouldFocusWrap, isReadOnly, isDisabled } = props;
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault5($de5926a92e8ebc5b$exports)));
  let { menuTriggerProps, menuProps } = (0, $168583247155ddda$export$dc9c12ed27dd1b49)({
    type: "listbox",
    isDisabled: isDisabled || isReadOnly
  }, state, buttonRef);
  (0, $b1f0cad8af73213b$export$3585ede4d035bf14).set(state, {
    id: menuProps.id
  });
  let delegate = (0, import_react16.useMemo)(() => keyboardDelegate || new (0, $2a25aae57d74318e$export$a05409b8bb224a5a)(state.collection, state.disabledKeys, listBoxRef), [
    keyboardDelegate,
    state.collection,
    state.disabledKeys,
    listBoxRef
  ]);
  let { collectionProps } = (0, $ae20dd8cbca75726$export$d6daf82dcd84e87c)({
    selectionManager: state.selectionManager,
    keyboardDelegate: delegate,
    disallowTypeAhead: true,
    disallowEmptySelection: true,
    shouldFocusWrap,
    ref: inputRef,
    // Prevent item scroll behavior from being applied here, should be handled in the user's Popover + ListBox component
    isVirtualized: true
  });
  let onKeyDown = (e) => {
    switch (e.key) {
      case "Enter":
      case "Tab":
        if (state.isOpen && e.key === "Enter")
          e.preventDefault();
        state.commit();
        break;
      case "Escape":
        if (state.selectedKey !== null || state.inputValue === "" || props.allowsCustomValue)
          e.continuePropagation();
        state.revert();
        break;
      case "ArrowDown":
        state.open("first", "manual");
        break;
      case "ArrowUp":
        state.open("last", "manual");
        break;
      case "ArrowLeft":
      case "ArrowRight":
        state.selectionManager.setFocusedKey(null);
        break;
    }
  };
  let onBlur = (e) => {
    var _popoverRef_current;
    if (e.relatedTarget === (buttonRef === null || buttonRef === void 0 ? void 0 : buttonRef.current) || ((_popoverRef_current = popoverRef.current) === null || _popoverRef_current === void 0 ? void 0 : _popoverRef_current.contains(e.relatedTarget)))
      return;
    if (props.onBlur)
      props.onBlur(e);
    state.setFocused(false);
  };
  let onFocus = (e) => {
    if (state.isFocused)
      return;
    if (props.onFocus)
      props.onFocus(e);
    state.setFocused(true);
  };
  let { labelProps, inputProps, descriptionProps, errorMessageProps } = (0, $2d73ec29415bd339$export$712718f7aec83d5)({
    ...props,
    onChange: state.setInputValue,
    onKeyDown: !isReadOnly && (0, $ff5963eb1fccf552$export$e08e3b67e392101e)(state.isOpen && collectionProps.onKeyDown, onKeyDown, props.onKeyDown),
    onBlur,
    value: state.inputValue,
    onFocus,
    autoComplete: "off"
  }, inputRef);
  let onPress = (e) => {
    if (e.pointerType === "touch") {
      inputRef.current.focus();
      state.toggle(null, "manual");
    }
  };
  let onPressStart = (e) => {
    if (e.pointerType !== "touch") {
      inputRef.current.focus();
      state.toggle(e.pointerType === "keyboard" || e.pointerType === "virtual" ? "first" : null, "manual");
    }
  };
  let triggerLabelProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    id: menuTriggerProps.id,
    "aria-label": stringFormatter.format("buttonLabel"),
    "aria-labelledby": props["aria-labelledby"] || labelProps.id
  });
  let listBoxProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    id: menuProps.id,
    "aria-label": stringFormatter.format("listboxLabel"),
    "aria-labelledby": props["aria-labelledby"] || labelProps.id
  });
  let lastEventTime = (0, import_react16.useRef)(0);
  let onTouchEnd = (e) => {
    if (isDisabled || isReadOnly)
      return;
    if (e.timeStamp - lastEventTime.current < 500) {
      e.preventDefault();
      inputRef.current.focus();
      return;
    }
    let rect = e.target.getBoundingClientRect();
    let touch = e.changedTouches[0];
    let centerX = Math.ceil(rect.left + 0.5 * rect.width);
    let centerY = Math.ceil(rect.top + 0.5 * rect.height);
    if (touch.clientX === centerX && touch.clientY === centerY) {
      e.preventDefault();
      inputRef.current.focus();
      state.toggle(null, "manual");
      lastEventTime.current = e.timeStamp;
    }
  };
  let focusedItem = state.selectionManager.focusedKey != null && state.isOpen ? state.collection.getItem(state.selectionManager.focusedKey) : void 0;
  var _focusedItem_parentKey;
  let sectionKey = (_focusedItem_parentKey = focusedItem === null || focusedItem === void 0 ? void 0 : focusedItem.parentKey) !== null && _focusedItem_parentKey !== void 0 ? _focusedItem_parentKey : null;
  var _state_selectionManager_focusedKey;
  let itemKey = (_state_selectionManager_focusedKey = state.selectionManager.focusedKey) !== null && _state_selectionManager_focusedKey !== void 0 ? _state_selectionManager_focusedKey : null;
  let lastSection = (0, import_react16.useRef)(sectionKey);
  let lastItem = (0, import_react16.useRef)(itemKey);
  (0, import_react16.useEffect)(() => {
    if ((0, $c87311424ea30a05$export$e1865c3bedcd822b)() && focusedItem != null && itemKey !== lastItem.current) {
      let isSelected = state.selectionManager.isSelected(itemKey);
      let section = sectionKey != null ? state.collection.getItem(sectionKey) : null;
      let sectionTitle = (section === null || section === void 0 ? void 0 : section["aria-label"]) || (typeof (section === null || section === void 0 ? void 0 : section.rendered) === "string" ? section.rendered : "") || "";
      let announcement = stringFormatter.format("focusAnnouncement", {
        isGroupChange: section && sectionKey !== lastSection.current,
        groupTitle: sectionTitle,
        groupCount: section ? [
          ...(0, $c5a24bc478652b5f$export$1005530eda016c13)(section, state.collection)
        ].length : 0,
        optionText: focusedItem["aria-label"] || focusedItem.textValue || "",
        isSelected
      });
      (0, $319e236875307eab$export$a9b970dcc4ae71a9)(announcement);
    }
    lastSection.current = sectionKey;
    lastItem.current = itemKey;
  });
  let optionCount = (0, $453cc9f0df89c0a5$export$77d5aafae4e095b2)(state.collection);
  let lastSize = (0, import_react16.useRef)(optionCount);
  let lastOpen = (0, import_react16.useRef)(state.isOpen);
  (0, import_react16.useEffect)(() => {
    let didOpenWithoutFocusedItem = state.isOpen !== lastOpen.current && (state.selectionManager.focusedKey == null || (0, $c87311424ea30a05$export$e1865c3bedcd822b)());
    if (state.isOpen && (didOpenWithoutFocusedItem || optionCount !== lastSize.current)) {
      let announcement = stringFormatter.format("countAnnouncement", {
        optionCount
      });
      (0, $319e236875307eab$export$a9b970dcc4ae71a9)(announcement);
    }
    lastSize.current = optionCount;
    lastOpen.current = state.isOpen;
  });
  let lastSelectedKey = (0, import_react16.useRef)(state.selectedKey);
  (0, import_react16.useEffect)(() => {
    if ((0, $c87311424ea30a05$export$e1865c3bedcd822b)() && state.isFocused && state.selectedItem && state.selectedKey !== lastSelectedKey.current) {
      let optionText = state.selectedItem["aria-label"] || state.selectedItem.textValue || "";
      let announcement = stringFormatter.format("selectedAnnouncement", {
        optionText
      });
      (0, $319e236875307eab$export$a9b970dcc4ae71a9)(announcement);
    }
    lastSelectedKey.current = state.selectedKey;
  });
  (0, import_react16.useEffect)(() => {
    if (state.isOpen)
      return (0, $5e3802645cc19319$export$1c3ebcada18427bf)([
        inputRef.current,
        popoverRef.current
      ]);
  }, [
    state.isOpen,
    inputRef,
    popoverRef
  ]);
  return {
    labelProps,
    buttonProps: {
      ...menuTriggerProps,
      ...triggerLabelProps,
      excludeFromTabOrder: true,
      onPress,
      onPressStart,
      isDisabled: isDisabled || isReadOnly
    },
    inputProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(inputProps, {
      role: "combobox",
      "aria-expanded": menuTriggerProps["aria-expanded"],
      "aria-controls": state.isOpen ? menuProps.id : void 0,
      // TODO: readd proper logic for completionMode = complete (aria-autocomplete: both)
      "aria-autocomplete": "list",
      "aria-activedescendant": focusedItem ? (0, $b1f0cad8af73213b$export$9145995848b05025)(state, focusedItem.key) : void 0,
      onTouchEnd,
      // This disable's iOS's autocorrect suggestions, since the combo box provides its own suggestions.
      autoCorrect: "off",
      // This disable's the macOS Safari spell check auto corrections.
      spellCheck: "false"
    }),
    listBoxProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(menuProps, listBoxProps, {
      autoFocus: state.focusStrategy,
      shouldUseVirtualFocus: true,
      shouldSelectOnPressUp: true,
      shouldFocusOnHover: true
    }),
    descriptionProps,
    errorMessageProps
  };
}

// node_modules/.pnpm/@react-aria+datepicker@3.6.0_react-dom@18.2.0_react@18.2.0/node_modules/@react-aria/datepicker/dist/module.js
var import_react18 = __toESM(require_react());

// node_modules/.pnpm/@react-aria+spinbutton@3.5.1_react-dom@18.2.0_react@18.2.0/node_modules/@react-aria/spinbutton/dist/module.js
var import_react17 = __toESM(require_react());
function $parcel$interopDefault6(a) {
  return a && a.__esModule ? a.default : a;
}
var $a99895ee3dc79e61$exports = {};
var $ed6aae4e5f766f1e$exports = {};
$ed6aae4e5f766f1e$exports = {
  "Empty": `فارغ`
};
var $38854e2b175151fa$exports = {};
$38854e2b175151fa$exports = {
  "Empty": `Изпразни`
};
var $15b25ab20f3945b2$exports = {};
$15b25ab20f3945b2$exports = {
  "Empty": `Prázdné`
};
var $692a4298b6b649a2$exports = {};
$692a4298b6b649a2$exports = {
  "Empty": `Tom`
};
var $1c6e1539193f1243$exports = {};
$1c6e1539193f1243$exports = {
  "Empty": `Leer`
};
var $1e8678632c464b6d$exports = {};
$1e8678632c464b6d$exports = {
  "Empty": `Άδειο`
};
var $4adc85d9bf5b9eed$exports = {};
$4adc85d9bf5b9eed$exports = {
  "Empty": `Empty`
};
var $41c4b2bb61dafbca$exports = {};
$41c4b2bb61dafbca$exports = {
  "Empty": `Vacío`
};
var $405f8b24f5dd2a60$exports = {};
$405f8b24f5dd2a60$exports = {
  "Empty": `Tühjenda`
};
var $7efe3ed02b9b9dd4$exports = {};
$7efe3ed02b9b9dd4$exports = {
  "Empty": `Tyhjä`
};
var $99fc4c101d92daf3$exports = {};
$99fc4c101d92daf3$exports = {
  "Empty": `Vide`
};
var $f9e155e6e8cacaa2$exports = {};
$f9e155e6e8cacaa2$exports = {
  "Empty": `ריק`
};
var $c31b5e8e9a249fd5$exports = {};
$c31b5e8e9a249fd5$exports = {
  "Empty": `Prazno`
};
var $9c5435bc17499bd9$exports = {};
$9c5435bc17499bd9$exports = {
  "Empty": `Üres`
};
var $6d1fc8e84d8165e1$exports = {};
$6d1fc8e84d8165e1$exports = {
  "Empty": `Vuoto`
};
var $46ea6b3641b83e71$exports = {};
$46ea6b3641b83e71$exports = {
  "Empty": `空`
};
var $0e3cc9a288289dc5$exports = {};
$0e3cc9a288289dc5$exports = {
  "Empty": `비어 있음`
};
var $4ff2bb25c0089ffb$exports = {};
$4ff2bb25c0089ffb$exports = {
  "Empty": `Tuščias`
};
var $6cf33cd4c010a2fb$exports = {};
$6cf33cd4c010a2fb$exports = {
  "Empty": `Tukšs`
};
var $5a9f8486f8b8837e$exports = {};
$5a9f8486f8b8837e$exports = {
  "Empty": `Tom`
};
var $583f94d807f6ecea$exports = {};
$583f94d807f6ecea$exports = {
  "Empty": `Leeg`
};
var $cc4dcfeea2b4050d$exports = {};
$cc4dcfeea2b4050d$exports = {
  "Empty": `Pusty`
};
var $68ac2954d56e12b4$exports = {};
$68ac2954d56e12b4$exports = {
  "Empty": `Vazio`
};
var $fdb0616f309780b0$exports = {};
$fdb0616f309780b0$exports = {
  "Empty": `Vazio`
};
var $fe1eccf4ee1d6f52$exports = {};
$fe1eccf4ee1d6f52$exports = {
  "Empty": `Gol`
};
var $a38b6c4e18725976$exports = {};
$a38b6c4e18725976$exports = {
  "Empty": `Не заполнено`
};
var $6c14ae2b766b652c$exports = {};
$6c14ae2b766b652c$exports = {
  "Empty": `Prázdne`
};
var $8f1c9692e16dc5eb$exports = {};
$8f1c9692e16dc5eb$exports = {
  "Empty": `Prazen`
};
var $d2aa7abea627cafa$exports = {};
$d2aa7abea627cafa$exports = {
  "Empty": `Prazno`
};
var $676b82e4b56408e6$exports = {};
$676b82e4b56408e6$exports = {
  "Empty": `Tomt`
};
var $14c9042552d7ce08$exports = {};
$14c9042552d7ce08$exports = {
  "Empty": `Boş`
};
var $393254ebcb66c9f5$exports = {};
$393254ebcb66c9f5$exports = {
  "Empty": `Пусто`
};
var $d49d621f310cf6ce$exports = {};
$d49d621f310cf6ce$exports = {
  "Empty": `空`
};
var $94b60c866ca5dfe6$exports = {};
$94b60c866ca5dfe6$exports = {
  "Empty": `空白`
};
$a99895ee3dc79e61$exports = {
  "ar-AE": $ed6aae4e5f766f1e$exports,
  "bg-BG": $38854e2b175151fa$exports,
  "cs-CZ": $15b25ab20f3945b2$exports,
  "da-DK": $692a4298b6b649a2$exports,
  "de-DE": $1c6e1539193f1243$exports,
  "el-GR": $1e8678632c464b6d$exports,
  "en-US": $4adc85d9bf5b9eed$exports,
  "es-ES": $41c4b2bb61dafbca$exports,
  "et-EE": $405f8b24f5dd2a60$exports,
  "fi-FI": $7efe3ed02b9b9dd4$exports,
  "fr-FR": $99fc4c101d92daf3$exports,
  "he-IL": $f9e155e6e8cacaa2$exports,
  "hr-HR": $c31b5e8e9a249fd5$exports,
  "hu-HU": $9c5435bc17499bd9$exports,
  "it-IT": $6d1fc8e84d8165e1$exports,
  "ja-JP": $46ea6b3641b83e71$exports,
  "ko-KR": $0e3cc9a288289dc5$exports,
  "lt-LT": $4ff2bb25c0089ffb$exports,
  "lv-LV": $6cf33cd4c010a2fb$exports,
  "nb-NO": $5a9f8486f8b8837e$exports,
  "nl-NL": $583f94d807f6ecea$exports,
  "pl-PL": $cc4dcfeea2b4050d$exports,
  "pt-BR": $68ac2954d56e12b4$exports,
  "pt-PT": $fdb0616f309780b0$exports,
  "ro-RO": $fe1eccf4ee1d6f52$exports,
  "ru-RU": $a38b6c4e18725976$exports,
  "sk-SK": $6c14ae2b766b652c$exports,
  "sl-SI": $8f1c9692e16dc5eb$exports,
  "sr-SP": $d2aa7abea627cafa$exports,
  "sv-SE": $676b82e4b56408e6$exports,
  "tr-TR": $14c9042552d7ce08$exports,
  "uk-UA": $393254ebcb66c9f5$exports,
  "zh-CN": $d49d621f310cf6ce$exports,
  "zh-TW": $94b60c866ca5dfe6$exports
};
function $d2e8511e6f209edf$export$e908e06f4b8e3402(props) {
  const _async = (0, import_react17.useRef)();
  let { value, textValue, minValue, maxValue, isDisabled, isReadOnly, isRequired, onIncrement, onIncrementPage, onDecrement, onDecrementPage, onDecrementToMin, onIncrementToMax } = props;
  const stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault6($a99895ee3dc79e61$exports)));
  const clearAsync = () => clearTimeout(_async.current);
  (0, import_react17.useEffect)(() => {
    return () => clearAsync();
  }, []);
  let onKeyDown = (e) => {
    if (e.ctrlKey || e.metaKey || e.shiftKey || e.altKey || isReadOnly)
      return;
    switch (e.key) {
      case "PageUp":
        if (onIncrementPage) {
          e.preventDefault();
          onIncrementPage();
          break;
        }
      case "ArrowUp":
      case "Up":
        if (onIncrement) {
          e.preventDefault();
          onIncrement();
        }
        break;
      case "PageDown":
        if (onDecrementPage) {
          e.preventDefault();
          onDecrementPage();
          break;
        }
      case "ArrowDown":
      case "Down":
        if (onDecrement) {
          e.preventDefault();
          onDecrement();
        }
        break;
      case "Home":
        if (onDecrementToMin) {
          e.preventDefault();
          onDecrementToMin();
        }
        break;
      case "End":
        if (onIncrementToMax) {
          e.preventDefault();
          onIncrementToMax();
        }
        break;
    }
  };
  let isFocused = (0, import_react17.useRef)(false);
  let onFocus = () => {
    isFocused.current = true;
  };
  let onBlur = () => {
    isFocused.current = false;
  };
  textValue = textValue === "" ? stringFormatter.format("Empty") : (textValue || `${value}`).replace("-", "−");
  (0, import_react17.useEffect)(() => {
    if (isFocused.current) {
      (0, $319e236875307eab$export$d10ae4f68404609a)("assertive");
      (0, $319e236875307eab$export$a9b970dcc4ae71a9)(textValue, "assertive");
    }
  }, [
    textValue
  ]);
  const onIncrementPressStart = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((initialStepDelay) => {
    clearAsync();
    onIncrement();
    _async.current = window.setTimeout(() => {
      if (isNaN(maxValue) || isNaN(value) || value < maxValue)
        onIncrementPressStart(60);
    }, initialStepDelay);
  });
  const onDecrementPressStart = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((initialStepDelay) => {
    clearAsync();
    onDecrement();
    _async.current = window.setTimeout(() => {
      if (isNaN(minValue) || isNaN(value) || value > minValue)
        onDecrementPressStart(60);
    }, initialStepDelay);
  });
  let cancelContextMenu = (e) => {
    e.preventDefault();
  };
  let { addGlobalListener, removeAllGlobalListeners } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  return {
    spinButtonProps: {
      role: "spinbutton",
      "aria-valuenow": !isNaN(value) ? value : null,
      "aria-valuetext": textValue,
      "aria-valuemin": minValue,
      "aria-valuemax": maxValue,
      "aria-disabled": isDisabled || null,
      "aria-readonly": isReadOnly || null,
      "aria-required": isRequired || null,
      onKeyDown,
      onFocus,
      onBlur
    },
    incrementButtonProps: {
      onPressStart: () => {
        onIncrementPressStart(400);
        addGlobalListener(window, "contextmenu", cancelContextMenu);
      },
      onPressEnd: () => {
        clearAsync();
        removeAllGlobalListeners();
      },
      onFocus,
      onBlur
    },
    decrementButtonProps: {
      onPressStart: () => {
        onDecrementPressStart(400);
        addGlobalListener(window, "contextmenu", cancelContextMenu);
      },
      onPressEnd: () => {
        clearAsync();
        removeAllGlobalListeners();
      },
      onFocus,
      onBlur
    }
  };
}

// node_modules/.pnpm/@react-aria+datepicker@3.6.0_react-dom@18.2.0_react@18.2.0/node_modules/@react-aria/datepicker/dist/module.js
function $parcel$interopDefault7(a) {
  return a && a.__esModule ? a.default : a;
}
var $dfb4eba373ed9493$exports = {};
var $f23889fffbde9058$exports = {};
$f23889fffbde9058$exports = {
  "calendar": `التقويم`,
  "day": `يوم`,
  "dayPeriod": `ص/م`,
  "endDate": `تاريخ الانتهاء`,
  "era": `العصر`,
  "hour": `الساعات`,
  "minute": `الدقائق`,
  "month": `الشهر`,
  "second": `الثواني`,
  "selectedDateDescription": (args) => `تاريخ محدد: ${args.date}`,
  "selectedRangeDescription": (args) => `المدى الزمني المحدد: ${args.startDate} إلى ${args.endDate}`,
  "selectedTimeDescription": (args) => `الوقت المحدد: ${args.time}`,
  "startDate": `تاريخ البدء`,
  "timeZoneName": `التوقيت`,
  "weekday": `اليوم`,
  "year": `السنة`
};
var $09d9badaa8903929$exports = {};
$09d9badaa8903929$exports = {
  "calendar": `Календар`,
  "day": `ден`,
  "dayPeriod": `пр.об./сл.об.`,
  "endDate": `Крайна дата`,
  "era": `ера`,
  "hour": `час`,
  "minute": `минута`,
  "month": `месец`,
  "second": `секунда`,
  "selectedDateDescription": (args) => `Избрана дата: ${args.date}`,
  "selectedRangeDescription": (args) => `Избран диапазон: ${args.startDate} до ${args.endDate}`,
  "selectedTimeDescription": (args) => `Избрано време: ${args.time}`,
  "startDate": `Начална дата`,
  "timeZoneName": `часова зона`,
  "weekday": `ден от седмицата`,
  "year": `година`
};
var $151b77e0fd711730$exports = {};
$151b77e0fd711730$exports = {
  "calendar": `Kalendář`,
  "day": `den`,
  "dayPeriod": `část dne`,
  "endDate": `Konečné datum`,
  "era": `letopočet`,
  "hour": `hodina`,
  "minute": `minuta`,
  "month": `měsíc`,
  "second": `sekunda`,
  "selectedDateDescription": (args) => `Vybrané datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Vybrané období: ${args.startDate} až ${args.endDate}`,
  "selectedTimeDescription": (args) => `Vybraný čas: ${args.time}`,
  "startDate": `Počáteční datum`,
  "timeZoneName": `časové pásmo`,
  "weekday": `den v týdnu`,
  "year": `rok`
};
var $61915aa8630b90a2$exports = {};
$61915aa8630b90a2$exports = {
  "calendar": `Kalender`,
  "day": `dag`,
  "dayPeriod": `AM/PM`,
  "endDate": `Slutdato`,
  "era": `æra`,
  "hour": `time`,
  "minute": `minut`,
  "month": `måned`,
  "second": `sekund`,
  "selectedDateDescription": (args) => `Valgt dato: ${args.date}`,
  "selectedRangeDescription": (args) => `Valgt interval: ${args.startDate} til ${args.endDate}`,
  "selectedTimeDescription": (args) => `Valgt tidspunkt: ${args.time}`,
  "startDate": `Startdato`,
  "timeZoneName": `tidszone`,
  "weekday": `ugedag`,
  "year": `år`
};
var $35cea00159787840$exports = {};
$35cea00159787840$exports = {
  "calendar": `Kalender`,
  "day": `Tag`,
  "dayPeriod": `Tageshälfte`,
  "endDate": `Enddatum`,
  "era": `Epoche`,
  "hour": `Stunde`,
  "minute": `Minute`,
  "month": `Monat`,
  "second": `Sekunde`,
  "selectedDateDescription": (args) => `Ausgewähltes Datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Ausgewählter Bereich: ${args.startDate} bis ${args.endDate}`,
  "selectedTimeDescription": (args) => `Ausgewählte Zeit: ${args.time}`,
  "startDate": `Anfangsdatum`,
  "timeZoneName": `Zeitzone`,
  "weekday": `Wochentag`,
  "year": `Jahr`
};
var $518b4e82b9eacafd$exports = {};
$518b4e82b9eacafd$exports = {
  "calendar": `Ημερολόγιο`,
  "day": `ημέρα`,
  "dayPeriod": `π.μ./μ.μ.`,
  "endDate": `Ημερομηνία λήξης`,
  "era": `περίοδος`,
  "hour": `ώρα`,
  "minute": `λεπτό`,
  "month": `μήνας`,
  "second": `δευτερόλεπτο`,
  "selectedDateDescription": (args) => `Επιλεγμένη ημερομηνία: ${args.date}`,
  "selectedRangeDescription": (args) => `Επιλεγμένο εύρος: ${args.startDate} έως ${args.endDate}`,
  "selectedTimeDescription": (args) => `Επιλεγμένη ώρα: ${args.time}`,
  "startDate": `Ημερομηνία έναρξης`,
  "timeZoneName": `ζώνη ώρας`,
  "weekday": `καθημερινή`,
  "year": `έτος`
};
var $1c2b297f7e2cf474$exports = {};
$1c2b297f7e2cf474$exports = {
  "era": `era`,
  "year": `year`,
  "month": `month`,
  "day": `day`,
  "hour": `hour`,
  "minute": `minute`,
  "second": `second`,
  "dayPeriod": `AM/PM`,
  "calendar": `Calendar`,
  "startDate": `Start Date`,
  "endDate": `End Date`,
  "weekday": `day of the week`,
  "timeZoneName": `time zone`,
  "selectedDateDescription": (args) => `Selected Date: ${args.date}`,
  "selectedRangeDescription": (args) => `Selected Range: ${args.startDate} to ${args.endDate}`,
  "selectedTimeDescription": (args) => `Selected Time: ${args.time}`
};
var $07f628a707cf9b18$exports = {};
$07f628a707cf9b18$exports = {
  "calendar": `Calendario`,
  "day": `día`,
  "dayPeriod": `a. m./p. m.`,
  "endDate": `Fecha final`,
  "era": `era`,
  "hour": `hora`,
  "minute": `minuto`,
  "month": `mes`,
  "second": `segundo`,
  "selectedDateDescription": (args) => `Fecha seleccionada: ${args.date}`,
  "selectedRangeDescription": (args) => `Rango seleccionado: ${args.startDate} a ${args.endDate}`,
  "selectedTimeDescription": (args) => `Hora seleccionada: ${args.time}`,
  "startDate": `Fecha de inicio`,
  "timeZoneName": `zona horaria`,
  "weekday": `día de la semana`,
  "year": `año`
};
var $db553ffe17c7f4db$exports = {};
$db553ffe17c7f4db$exports = {
  "calendar": `Kalender`,
  "day": `päev`,
  "dayPeriod": `enne/pärast lõunat`,
  "endDate": `Lõppkuupäev`,
  "era": `ajastu`,
  "hour": `tund`,
  "minute": `minut`,
  "month": `kuu`,
  "second": `sekund`,
  "selectedDateDescription": (args) => `Valitud kuupäev: ${args.date}`,
  "selectedRangeDescription": (args) => `Valitud vahemik: ${args.startDate} kuni ${args.endDate}`,
  "selectedTimeDescription": (args) => `Valitud aeg: ${args.time}`,
  "startDate": `Alguskuupäev`,
  "timeZoneName": `ajavöönd`,
  "weekday": `nädalapäev`,
  "year": `aasta`
};
var $4afcfe00cd703f83$exports = {};
$4afcfe00cd703f83$exports = {
  "calendar": `Kalenteri`,
  "day": `päivä`,
  "dayPeriod": `vuorokaudenaika`,
  "endDate": `Päättymispäivä`,
  "era": `aikakausi`,
  "hour": `tunti`,
  "minute": `minuutti`,
  "month": `kuukausi`,
  "second": `sekunti`,
  "selectedDateDescription": (args) => `Valittu päivämäärä: ${args.date}`,
  "selectedRangeDescription": (args) => `Valittu aikaväli: ${args.startDate} – ${args.endDate}`,
  "selectedTimeDescription": (args) => `Valittu aika: ${args.time}`,
  "startDate": `Alkamispäivä`,
  "timeZoneName": `aikavyöhyke`,
  "weekday": `viikonpäivä`,
  "year": `vuosi`
};
var $1d2645d18d4c5be0$exports = {};
$1d2645d18d4c5be0$exports = {
  "calendar": `Calendrier`,
  "day": `jour`,
  "dayPeriod": `cadran`,
  "endDate": `Date de fin`,
  "era": `ère`,
  "hour": `heure`,
  "minute": `minute`,
  "month": `mois`,
  "second": `seconde`,
  "selectedDateDescription": (args) => `Date sélectionnée : ${args.date}`,
  "selectedRangeDescription": (args) => `Plage sélectionnée : ${args.startDate} au ${args.endDate}`,
  "selectedTimeDescription": (args) => `Heure choisie : ${args.time}`,
  "startDate": `Date de début`,
  "timeZoneName": `fuseau horaire`,
  "weekday": `jour de la semaine`,
  "year": `année`
};
var $64cb6a9be1f6fa48$exports = {};
$64cb6a9be1f6fa48$exports = {
  "calendar": `לוח שנה`,
  "day": `יום`,
  "dayPeriod": `לפנה״צ/אחה״צ`,
  "endDate": `תאריך סיום`,
  "era": `תקופה`,
  "hour": `שעה`,
  "minute": `דקה`,
  "month": `חודש`,
  "second": `שנייה`,
  "selectedDateDescription": (args) => `תאריך נבחר: ${args.date}`,
  "selectedRangeDescription": (args) => `טווח נבחר: ${args.startDate} עד ${args.endDate}`,
  "selectedTimeDescription": (args) => `זמן נבחר: ${args.time}`,
  "startDate": `תאריך התחלה`,
  "timeZoneName": `אזור זמן`,
  "weekday": `יום בשבוע`,
  "year": `שנה`
};
var $2a1ef2e8050be27a$exports = {};
$2a1ef2e8050be27a$exports = {
  "calendar": `Kalendar`,
  "day": `dan`,
  "dayPeriod": `AM/PM`,
  "endDate": `Datum završetka`,
  "era": `era`,
  "hour": `sat`,
  "minute": `minuta`,
  "month": `mjesec`,
  "second": `sekunda`,
  "selectedDateDescription": (args) => `Odabrani datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Odabrani raspon: ${args.startDate} do ${args.endDate}`,
  "selectedTimeDescription": (args) => `Odabrano vrijeme: ${args.time}`,
  "startDate": `Datum početka`,
  "timeZoneName": `vremenska zona`,
  "weekday": `dan u tjednu`,
  "year": `godina`
};
var $ad429dca102acd0e$exports = {};
$ad429dca102acd0e$exports = {
  "calendar": `Naptár`,
  "day": `nap`,
  "dayPeriod": `napszak`,
  "endDate": `Befejező dátum`,
  "era": `éra`,
  "hour": `óra`,
  "minute": `perc`,
  "month": `hónap`,
  "second": `másodperc`,
  "selectedDateDescription": (args) => `Kijelölt dátum: ${args.date}`,
  "selectedRangeDescription": (args) => `Kijelölt tartomány: ${args.startDate}–${args.endDate}`,
  "selectedTimeDescription": (args) => `Kijelölt idő: ${args.time}`,
  "startDate": `Kezdő dátum`,
  "timeZoneName": `időzóna`,
  "weekday": `hét napja`,
  "year": `év`
};
var $6e68cb5d1cb97bd2$exports = {};
$6e68cb5d1cb97bd2$exports = {
  "calendar": `Calendario`,
  "day": `giorno`,
  "dayPeriod": `AM/PM`,
  "endDate": `Data finale`,
  "era": `era`,
  "hour": `ora`,
  "minute": `minuto`,
  "month": `mese`,
  "second": `secondo`,
  "selectedDateDescription": (args) => `Data selezionata: ${args.date}`,
  "selectedRangeDescription": (args) => `Intervallo selezionato: da ${args.startDate} a ${args.endDate}`,
  "selectedTimeDescription": (args) => `Ora selezionata: ${args.time}`,
  "startDate": `Data iniziale`,
  "timeZoneName": `fuso orario`,
  "weekday": `giorno della settimana`,
  "year": `anno`
};
var $a82ee9af063ee069$exports = {};
$a82ee9af063ee069$exports = {
  "calendar": `カレンダー`,
  "day": `日`,
  "dayPeriod": `午前/午後`,
  "endDate": `終了日`,
  "era": `時代`,
  "hour": `時`,
  "minute": `分`,
  "month": `月`,
  "second": `秒`,
  "selectedDateDescription": (args) => `選択した日付 : ${args.date}`,
  "selectedRangeDescription": (args) => `選択範囲 : ${args.startDate} から ${args.endDate}`,
  "selectedTimeDescription": (args) => `選択した時間 : ${args.time}`,
  "startDate": `開始日`,
  "timeZoneName": `タイムゾーン`,
  "weekday": `曜日`,
  "year": `年`
};
var $67e9091dbf37d4eb$exports = {};
$67e9091dbf37d4eb$exports = {
  "calendar": `달력`,
  "day": `일`,
  "dayPeriod": `오전/오후`,
  "endDate": `종료 날짜`,
  "era": `연호`,
  "hour": `시`,
  "minute": `분`,
  "month": `월`,
  "second": `초`,
  "selectedDateDescription": (args) => `선택 일자: ${args.date}`,
  "selectedRangeDescription": (args) => `선택 범위: ${args.startDate} ~ ${args.endDate}`,
  "selectedTimeDescription": (args) => `선택 시간: ${args.time}`,
  "startDate": `시작 날짜`,
  "timeZoneName": `시간대`,
  "weekday": `요일`,
  "year": `년`
};
var $75834f9729f653d1$exports = {};
$75834f9729f653d1$exports = {
  "calendar": `Kalendorius`,
  "day": `diena`,
  "dayPeriod": `iki pietų / po pietų`,
  "endDate": `Pabaigos data`,
  "era": `era`,
  "hour": `valanda`,
  "minute": `minutė`,
  "month": `mėnuo`,
  "second": `sekundė`,
  "selectedDateDescription": (args) => `Pasirinkta data: ${args.date}`,
  "selectedRangeDescription": (args) => `Pasirinktas intervalas: nuo ${args.startDate} iki ${args.endDate}`,
  "selectedTimeDescription": (args) => `Pasirinktas laikas: ${args.time}`,
  "startDate": `Pradžios data`,
  "timeZoneName": `laiko juosta`,
  "weekday": `savaitės diena`,
  "year": `metai`
};
var $a2df2c2520b4a7f0$exports = {};
$a2df2c2520b4a7f0$exports = {
  "calendar": `Kalendārs`,
  "day": `diena`,
  "dayPeriod": `priekšpusdienā/pēcpusdienā`,
  "endDate": `Beigu datums`,
  "era": `ēra`,
  "hour": `stundas`,
  "minute": `minūtes`,
  "month": `mēnesis`,
  "second": `sekundes`,
  "selectedDateDescription": (args) => `Atlasītais datums: ${args.date}`,
  "selectedRangeDescription": (args) => `Atlasītais diapazons: no ${args.startDate} līdz ${args.endDate}`,
  "selectedTimeDescription": (args) => `Atlasītais laiks: ${args.time}`,
  "startDate": `Sākuma datums`,
  "timeZoneName": `laika josla`,
  "weekday": `nedēļas diena`,
  "year": `gads`
};
var $aedcd71db4933ed5$exports = {};
$aedcd71db4933ed5$exports = {
  "calendar": `Kalender`,
  "day": `dag`,
  "dayPeriod": `a.m./p.m.`,
  "endDate": `Sluttdato`,
  "era": `tidsalder`,
  "hour": `time`,
  "minute": `minutt`,
  "month": `måned`,
  "second": `sekund`,
  "selectedDateDescription": (args) => `Valgt dato: ${args.date}`,
  "selectedRangeDescription": (args) => `Valgt område: ${args.startDate} til ${args.endDate}`,
  "selectedTimeDescription": (args) => `Valgt tid: ${args.time}`,
  "startDate": `Startdato`,
  "timeZoneName": `tidssone`,
  "weekday": `ukedag`,
  "year": `år`
};
var $3b2df9e54353046c$exports = {};
$3b2df9e54353046c$exports = {
  "calendar": `Kalender`,
  "day": `dag`,
  "dayPeriod": `a.m./p.m.`,
  "endDate": `Einddatum`,
  "era": `tijdperk`,
  "hour": `uur`,
  "minute": `minuut`,
  "month": `maand`,
  "second": `seconde`,
  "selectedDateDescription": (args) => `Geselecteerde datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Geselecteerd bereik: ${args.startDate} tot ${args.endDate}`,
  "selectedTimeDescription": (args) => `Geselecteerde tijd: ${args.time}`,
  "startDate": `Startdatum`,
  "timeZoneName": `tijdzone`,
  "weekday": `dag van de week`,
  "year": `jaar`
};
var $c03fe977fcfafe93$exports = {};
$c03fe977fcfafe93$exports = {
  "calendar": `Kalendarz`,
  "day": `dzień`,
  "dayPeriod": `rano / po południu / wieczorem`,
  "endDate": `Data końcowa`,
  "era": `era`,
  "hour": `godzina`,
  "minute": `minuta`,
  "month": `miesiąc`,
  "second": `sekunda`,
  "selectedDateDescription": (args) => `Wybrana data: ${args.date}`,
  "selectedRangeDescription": (args) => `Wybrany zakres: ${args.startDate} do ${args.endDate}`,
  "selectedTimeDescription": (args) => `Wybrany czas: ${args.time}`,
  "startDate": `Data początkowa`,
  "timeZoneName": `strefa czasowa`,
  "weekday": `dzień tygodnia`,
  "year": `rok`
};
var $569f006fc292345f$exports = {};
$569f006fc292345f$exports = {
  "calendar": `Calendário`,
  "day": `dia`,
  "dayPeriod": `AM/PM`,
  "endDate": `Data final`,
  "era": `era`,
  "hour": `hora`,
  "minute": `minuto`,
  "month": `mês`,
  "second": `segundo`,
  "selectedDateDescription": (args) => `Data selecionada: ${args.date}`,
  "selectedRangeDescription": (args) => `Intervalo selecionado: ${args.startDate} a ${args.endDate}`,
  "selectedTimeDescription": (args) => `Hora selecionada: ${args.time}`,
  "startDate": `Data inicial`,
  "timeZoneName": `fuso horário`,
  "weekday": `dia da semana`,
  "year": `ano`
};
var $7c2494e14452f2dd$exports = {};
$7c2494e14452f2dd$exports = {
  "calendar": `Calendário`,
  "day": `dia`,
  "dayPeriod": `am/pm`,
  "endDate": `Data de Término`,
  "era": `era`,
  "hour": `hora`,
  "minute": `minuto`,
  "month": `mês`,
  "second": `segundo`,
  "selectedDateDescription": (args) => `Data selecionada: ${args.date}`,
  "selectedRangeDescription": (args) => `Intervalo selecionado: ${args.startDate} a ${args.endDate}`,
  "selectedTimeDescription": (args) => `Hora selecionada: ${args.time}`,
  "startDate": `Data de Início`,
  "timeZoneName": `fuso horário`,
  "weekday": `dia da semana`,
  "year": `ano`
};
var $eb82ef981b5592bf$exports = {};
$eb82ef981b5592bf$exports = {
  "calendar": `Calendar`,
  "day": `zi`,
  "dayPeriod": `a.m/p.m.`,
  "endDate": `Dată final`,
  "era": `eră`,
  "hour": `oră`,
  "minute": `minut`,
  "month": `lună`,
  "second": `secundă`,
  "selectedDateDescription": (args) => `Dată selectată: ${args.date}`,
  "selectedRangeDescription": (args) => `Interval selectat: de la ${args.startDate} până la ${args.endDate}`,
  "selectedTimeDescription": (args) => `Ora selectată: ${args.time}`,
  "startDate": `Dată început`,
  "timeZoneName": `fus orar`,
  "weekday": `ziua din săptămână`,
  "year": `an`
};
var $6efa0e119f396950$exports = {};
$6efa0e119f396950$exports = {
  "calendar": `Календарь`,
  "day": `день`,
  "dayPeriod": `AM/PM`,
  "endDate": `Дата окончания`,
  "era": `эра`,
  "hour": `час`,
  "minute": `минута`,
  "month": `месяц`,
  "second": `секунда`,
  "selectedDateDescription": (args) => `Выбранная дата: ${args.date}`,
  "selectedRangeDescription": (args) => `Выбранный диапазон: с ${args.startDate} по ${args.endDate}`,
  "selectedTimeDescription": (args) => `Выбранное время: ${args.time}`,
  "startDate": `Дата начала`,
  "timeZoneName": `часовой пояс`,
  "weekday": `день недели`,
  "year": `год`
};
var $7f5e57085d7f5049$exports = {};
$7f5e57085d7f5049$exports = {
  "calendar": `Kalendár`,
  "day": `deň`,
  "dayPeriod": `AM/PM`,
  "endDate": `Dátum ukončenia`,
  "era": `letopočet`,
  "hour": `hodina`,
  "minute": `minúta`,
  "month": `mesiac`,
  "second": `sekunda`,
  "selectedDateDescription": (args) => `Vybratý dátum: ${args.date}`,
  "selectedRangeDescription": (args) => `Vybratý rozsah: od ${args.startDate} do ${args.endDate}`,
  "selectedTimeDescription": (args) => `Vybratý čas: ${args.time}`,
  "startDate": `Dátum začatia`,
  "timeZoneName": `časové pásmo`,
  "weekday": `deň týždňa`,
  "year": `rok`
};
var $578ee7c11dcdde7a$exports = {};
$578ee7c11dcdde7a$exports = {
  "calendar": `Koledar`,
  "day": `dan`,
  "dayPeriod": `dop/pop`,
  "endDate": `Datum konca`,
  "era": `doba`,
  "hour": `ura`,
  "minute": `minuta`,
  "month": `mesec`,
  "second": `sekunda`,
  "selectedDateDescription": (args) => `Izbrani datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Izbrano območje: ${args.startDate} do ${args.endDate}`,
  "selectedTimeDescription": (args) => `Izbrani čas: ${args.time}`,
  "startDate": `Datum začetka`,
  "timeZoneName": `časovni pas`,
  "weekday": `dan v tednu`,
  "year": `leto`
};
var $bbc3fd6cd0bc9d50$exports = {};
$bbc3fd6cd0bc9d50$exports = {
  "calendar": `Kalendar`,
  "day": `дан`,
  "dayPeriod": `пре подне/по подне`,
  "endDate": `Datum završetka`,
  "era": `ера`,
  "hour": `сат`,
  "minute": `минут`,
  "month": `месец`,
  "second": `секунд`,
  "selectedDateDescription": (args) => `Izabrani datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Izabrani opseg: od ${args.startDate} do ${args.endDate}`,
  "selectedTimeDescription": (args) => `Izabrano vreme: ${args.time}`,
  "startDate": `Datum početka`,
  "timeZoneName": `временска зона`,
  "weekday": `дан у недељи`,
  "year": `година`
};
var $0b04512118591d2a$exports = {};
$0b04512118591d2a$exports = {
  "calendar": `Kalender`,
  "day": `dag`,
  "dayPeriod": `fm/em`,
  "endDate": `Slutdatum`,
  "era": `era`,
  "hour": `timme`,
  "minute": `minut`,
  "month": `månad`,
  "second": `sekund`,
  "selectedDateDescription": (args) => `Valt datum: ${args.date}`,
  "selectedRangeDescription": (args) => `Valt intervall: ${args.startDate} till ${args.endDate}`,
  "selectedTimeDescription": (args) => `Vald tid: ${args.time}`,
  "startDate": `Startdatum`,
  "timeZoneName": `tidszon`,
  "weekday": `veckodag`,
  "year": `år`
};
var $3a49d121fe4c9e1d$exports = {};
$3a49d121fe4c9e1d$exports = {
  "calendar": `Takvim`,
  "day": `gün`,
  "dayPeriod": `ÖÖ/ÖS`,
  "endDate": `Bitiş Tarihi`,
  "era": `çağ`,
  "hour": `saat`,
  "minute": `dakika`,
  "month": `ay`,
  "second": `saniye`,
  "selectedDateDescription": (args) => `Seçilen Tarih: ${args.date}`,
  "selectedRangeDescription": (args) => `Seçilen Aralık: ${args.startDate} - ${args.endDate}`,
  "selectedTimeDescription": (args) => `Seçilen Zaman: ${args.time}`,
  "startDate": `Başlangıç Tarihi`,
  "timeZoneName": `saat dilimi`,
  "weekday": `haftanın günü`,
  "year": `yıl`
};
var $5ba21dbb8914919d$exports = {};
$5ba21dbb8914919d$exports = {
  "calendar": `Календар`,
  "day": `день`,
  "dayPeriod": `дп/пп`,
  "endDate": `Дата завершення`,
  "era": `ера`,
  "hour": `година`,
  "minute": `хвилина`,
  "month": `місяць`,
  "second": `секунда`,
  "selectedDateDescription": (args) => `Вибрана дата: ${args.date}`,
  "selectedRangeDescription": (args) => `Вибраний діапазон: ${args.startDate} — ${args.endDate}`,
  "selectedTimeDescription": (args) => `Вибраний час: ${args.time}`,
  "startDate": `Дата початку`,
  "timeZoneName": `часовий пояс`,
  "weekday": `день тижня`,
  "year": `рік`
};
var $51078838e1b16cd7$exports = {};
$51078838e1b16cd7$exports = {
  "calendar": `日历`,
  "day": `日`,
  "dayPeriod": `上午/下午`,
  "endDate": `结束日期`,
  "era": `纪元`,
  "hour": `小时`,
  "minute": `分钟`,
  "month": `月`,
  "second": `秒`,
  "selectedDateDescription": (args) => `选定的日期：${args.date}`,
  "selectedRangeDescription": (args) => `选定的范围：${args.startDate} 至 ${args.endDate}`,
  "selectedTimeDescription": (args) => `选定的时间：${args.time}`,
  "startDate": `开始日期`,
  "timeZoneName": `时区`,
  "weekday": `工作日`,
  "year": `年`
};
var $33fab8219207655a$exports = {};
$33fab8219207655a$exports = {
  "calendar": `日曆`,
  "day": `日`,
  "dayPeriod": `上午/下午`,
  "endDate": `結束日期`,
  "era": `纪元`,
  "hour": `小时`,
  "minute": `分钟`,
  "month": `月`,
  "second": `秒`,
  "selectedDateDescription": (args) => `選定的日期：${args.date}`,
  "selectedRangeDescription": (args) => `選定的範圍：${args.startDate} 至 ${args.endDate}`,
  "selectedTimeDescription": (args) => `選定的時間：${args.time}`,
  "startDate": `開始日期`,
  "timeZoneName": `时区`,
  "weekday": `工作日`,
  "year": `年`
};
$dfb4eba373ed9493$exports = {
  "ar-AE": $f23889fffbde9058$exports,
  "bg-BG": $09d9badaa8903929$exports,
  "cs-CZ": $151b77e0fd711730$exports,
  "da-DK": $61915aa8630b90a2$exports,
  "de-DE": $35cea00159787840$exports,
  "el-GR": $518b4e82b9eacafd$exports,
  "en-US": $1c2b297f7e2cf474$exports,
  "es-ES": $07f628a707cf9b18$exports,
  "et-EE": $db553ffe17c7f4db$exports,
  "fi-FI": $4afcfe00cd703f83$exports,
  "fr-FR": $1d2645d18d4c5be0$exports,
  "he-IL": $64cb6a9be1f6fa48$exports,
  "hr-HR": $2a1ef2e8050be27a$exports,
  "hu-HU": $ad429dca102acd0e$exports,
  "it-IT": $6e68cb5d1cb97bd2$exports,
  "ja-JP": $a82ee9af063ee069$exports,
  "ko-KR": $67e9091dbf37d4eb$exports,
  "lt-LT": $75834f9729f653d1$exports,
  "lv-LV": $a2df2c2520b4a7f0$exports,
  "nb-NO": $aedcd71db4933ed5$exports,
  "nl-NL": $3b2df9e54353046c$exports,
  "pl-PL": $c03fe977fcfafe93$exports,
  "pt-BR": $569f006fc292345f$exports,
  "pt-PT": $7c2494e14452f2dd$exports,
  "ro-RO": $eb82ef981b5592bf$exports,
  "ru-RU": $6efa0e119f396950$exports,
  "sk-SK": $7f5e57085d7f5049$exports,
  "sl-SI": $578ee7c11dcdde7a$exports,
  "sr-SP": $bbc3fd6cd0bc9d50$exports,
  "sv-SE": $0b04512118591d2a$exports,
  "tr-TR": $3a49d121fe4c9e1d$exports,
  "uk-UA": $5ba21dbb8914919d$exports,
  "zh-CN": $51078838e1b16cd7$exports,
  "zh-TW": $33fab8219207655a$exports
};
function $3dfb0f96be0d6a08$export$4a931266a3838b86(state, ref, disableArrowNavigation) {
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let focusManager = (0, import_react18.useMemo)(() => (0, $9bf71ea28793e738$export$c5251b9e124bf29)(ref), [
    ref
  ]);
  let onKeyDown = (e) => {
    if (e.altKey && (e.key === "ArrowDown" || e.key === "ArrowUp") && "setOpen" in state) {
      e.preventDefault();
      e.stopPropagation();
      state.setOpen(true);
    }
    if (disableArrowNavigation)
      return;
    switch (e.key) {
      case "ArrowLeft":
        e.preventDefault();
        e.stopPropagation();
        if (direction === "rtl")
          focusManager.focusNext();
        else
          focusManager.focusPrevious();
        break;
      case "ArrowRight":
        e.preventDefault();
        e.stopPropagation();
        if (direction === "rtl")
          focusManager.focusPrevious();
        else
          focusManager.focusNext();
        break;
    }
  };
  let focusLast = () => {
    var _window_event;
    let target = (_window_event = window.event) === null || _window_event === void 0 ? void 0 : _window_event.target;
    let walker = (0, $9bf71ea28793e738$export$2d6ec8fc375ceafa)(ref.current, {
      tabbable: true
    });
    if (target) {
      walker.currentNode = target;
      target = walker.previousNode();
    }
    if (!target) {
      let last;
      do {
        last = walker.lastChild();
        if (last)
          target = last;
      } while (last);
    }
    while (target === null || target === void 0 ? void 0 : target.hasAttribute("data-placeholder")) {
      let prev = walker.previousNode();
      if (prev && prev.hasAttribute("data-placeholder"))
        target = prev;
      else
        break;
    }
    if (target)
      target.focus();
  };
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    preventFocusOnPress: true,
    allowTextSelectionOnPress: true,
    onPressStart(e) {
      if (e.pointerType === "mouse")
        focusLast();
    },
    onPress(e) {
      if (e.pointerType !== "mouse")
        focusLast();
    }
  });
  return (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(pressProps, {
    onKeyDown
  });
}
var $16f0b7bb276bc17e$export$653eddfc964b0f8a = /* @__PURE__ */ new WeakMap();
var $16f0b7bb276bc17e$export$300019f83c56d282 = "__role_" + Date.now();
var $16f0b7bb276bc17e$export$7b3062cd49e80452 = "__focusManager_" + Date.now();
function $16f0b7bb276bc17e$export$5591b0b878c1a989(props, state, ref) {
  var _state_value;
  let { labelProps, fieldProps, descriptionProps, errorMessageProps } = (0, $2baaea4c71418dea$export$294aa081a6c6f55d)({
    ...props,
    labelElementType: "span"
  });
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec)({
    ...props,
    onBlurWithin: (e) => {
      state.confirmPlaceholder();
      if (props.onBlur)
        props.onBlur(e);
    },
    onFocusWithin: props.onFocus,
    onFocusWithinChange: props.onFocusChange
  });
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault7($dfb4eba373ed9493$exports)));
  let message = state.maxGranularity === "hour" ? "selectedTimeDescription" : "selectedDateDescription";
  let field = state.maxGranularity === "hour" ? "time" : "date";
  let description = state.value ? stringFormatter.format(message, {
    [field]: state.formatValue({
      month: "long"
    })
  }) : "";
  let descProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(description);
  let describedBy = props[$16f0b7bb276bc17e$export$300019f83c56d282] === "presentation" ? fieldProps["aria-describedby"] : [
    descProps["aria-describedby"],
    fieldProps["aria-describedby"]
  ].filter(Boolean).join(" ") || void 0;
  let propsFocusManager = props[$16f0b7bb276bc17e$export$7b3062cd49e80452];
  let focusManager = (0, import_react18.useMemo)(() => propsFocusManager || (0, $9bf71ea28793e738$export$c5251b9e124bf29)(ref), [
    propsFocusManager,
    ref
  ]);
  let groupProps = (0, $3dfb0f96be0d6a08$export$4a931266a3838b86)(state, ref, props[$16f0b7bb276bc17e$export$300019f83c56d282] === "presentation");
  $16f0b7bb276bc17e$export$653eddfc964b0f8a.set(state, {
    ariaLabel: props["aria-label"],
    ariaLabelledBy: [
      labelProps.id,
      props["aria-labelledby"]
    ].filter(Boolean).join(" ") || void 0,
    ariaDescribedBy: describedBy,
    focusManager
  });
  let autoFocusRef = (0, import_react18.useRef)(props.autoFocus);
  let fieldDOMProps;
  if (props[$16f0b7bb276bc17e$export$300019f83c56d282] === "presentation")
    fieldDOMProps = {
      role: "presentation"
    };
  else
    fieldDOMProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(fieldProps, {
      role: "group",
      "aria-disabled": props.isDisabled || void 0,
      "aria-describedby": describedBy
    });
  (0, import_react18.useEffect)(() => {
    if (autoFocusRef.current)
      focusManager.focusFirst();
    autoFocusRef.current = false;
  }, [
    focusManager
  ]);
  (0, $99facab73266f662$export$5add1d006293d136)(props.inputRef, state.value, state.setValue);
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  return {
    labelProps: {
      ...labelProps,
      onClick: () => {
        focusManager.focusFirst();
      }
    },
    fieldProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, fieldDOMProps, groupProps, focusWithinProps, {
      onKeyDown(e) {
        if (props.onKeyDown)
          props.onKeyDown(e);
      },
      onKeyUp(e) {
        if (props.onKeyUp)
          props.onKeyUp(e);
      }
    }),
    inputProps: {
      type: "hidden",
      name: props.name,
      value: ((_state_value = state.value) === null || _state_value === void 0 ? void 0 : _state_value.toString()) || ""
    },
    descriptionProps,
    errorMessageProps
  };
}
function $16f0b7bb276bc17e$export$4c842f6a241dc825(props, state, ref) {
  var _state_timeValue;
  let res = $16f0b7bb276bc17e$export$5591b0b878c1a989(props, state, ref);
  res.inputProps.value = ((_state_timeValue = state.timeValue) === null || _state_timeValue === void 0 ? void 0 : _state_timeValue.toString()) || "";
  return res;
}
function $6057a3d2a53a12fd$export$42df105a73306d51(props, state, ref) {
  let buttonId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let dialogId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let fieldId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault7($dfb4eba373ed9493$exports)));
  let { labelProps, fieldProps, descriptionProps, errorMessageProps } = (0, $2baaea4c71418dea$export$294aa081a6c6f55d)({
    ...props,
    labelElementType: "span"
  });
  let groupProps = (0, $3dfb0f96be0d6a08$export$4a931266a3838b86)(state, ref);
  let labelledBy = fieldProps["aria-labelledby"] || fieldProps.id;
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let date = state.formatValue(locale, {
    month: "long"
  });
  let description = date ? stringFormatter.format("selectedDateDescription", {
    date
  }) : "";
  let descProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(description);
  let ariaDescribedBy = [
    descProps["aria-describedby"],
    fieldProps["aria-describedby"]
  ].filter(Boolean).join(" ") || void 0;
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  let focusManager = (0, import_react18.useMemo)(() => (0, $9bf71ea28793e738$export$c5251b9e124bf29)(ref), [
    ref
  ]);
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec)({
    ...props,
    isDisabled: state.isOpen,
    onBlurWithin: props.onBlur,
    onFocusWithin: props.onFocus,
    onFocusWithinChange: props.onFocusChange
  });
  return {
    groupProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, groupProps, fieldProps, descProps, focusWithinProps, {
      role: "group",
      "aria-disabled": props.isDisabled || null,
      "aria-labelledby": labelledBy,
      "aria-describedby": ariaDescribedBy,
      onKeyDown(e) {
        if (state.isOpen)
          return;
        if (props.onKeyDown)
          props.onKeyDown(e);
      },
      onKeyUp(e) {
        if (state.isOpen)
          return;
        if (props.onKeyUp)
          props.onKeyUp(e);
      }
    }),
    labelProps: {
      ...labelProps,
      onClick: () => {
        focusManager.focusFirst();
      }
    },
    fieldProps: {
      ...fieldProps,
      id: fieldId,
      [(0, $16f0b7bb276bc17e$export$300019f83c56d282)]: "presentation",
      "aria-describedby": ariaDescribedBy,
      value: state.value,
      onChange: state.setValue,
      minValue: props.minValue,
      maxValue: props.maxValue,
      placeholderValue: props.placeholderValue,
      hideTimeZone: props.hideTimeZone,
      hourCycle: props.hourCycle,
      shouldForceLeadingZeros: props.shouldForceLeadingZeros,
      granularity: props.granularity,
      isDisabled: props.isDisabled,
      isReadOnly: props.isReadOnly,
      isRequired: props.isRequired,
      validationState: state.validationState,
      autoFocus: props.autoFocus,
      name: props.name
    },
    descriptionProps,
    errorMessageProps,
    buttonProps: {
      ...descProps,
      id: buttonId,
      "aria-haspopup": "dialog",
      "aria-label": stringFormatter.format("calendar"),
      "aria-labelledby": `${buttonId} ${labelledBy}`,
      "aria-describedby": ariaDescribedBy,
      "aria-expanded": state.isOpen || void 0,
      onPress: () => state.setOpen(true)
    },
    dialogProps: {
      id: dialogId,
      "aria-labelledby": `${buttonId} ${labelledBy}`
    },
    calendarProps: {
      autoFocus: true,
      value: state.dateValue,
      onChange: state.setDateValue,
      minValue: props.minValue,
      maxValue: props.maxValue,
      isDisabled: props.isDisabled,
      isReadOnly: props.isReadOnly,
      isDateUnavailable: props.isDateUnavailable,
      defaultFocusedValue: state.dateValue ? void 0 : props.placeholderValue,
      validationState: state.validationState,
      errorMessage: props.errorMessage
    }
  };
}
function $3aeceb3a64eb8358$export$d42c60378c8168f8() {
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  return (0, import_react18.useMemo)(() => {
    try {
      return new Intl.DisplayNames(locale, {
        type: "dateTimeField"
      });
    } catch (err) {
      return new $3aeceb3a64eb8358$var$DisplayNamesPolyfill(locale);
    }
  }, [
    locale
  ]);
}
var $3aeceb3a64eb8358$var$DisplayNamesPolyfill = class {
  of(field) {
    return this.dictionary.getStringForLocale(field, this.locale);
  }
  constructor(locale) {
    this.locale = locale;
    this.dictionary = new (0, $5b160d28a433310d$export$c17fa47878dc55b6)((0, $parcel$interopDefault7($dfb4eba373ed9493$exports)));
  }
};
function $32489daedd52963e$export$1315d136e6f7581(segment, state, ref) {
  let enteredKeys = (0, import_react18.useRef)("");
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let displayNames = (0, $3aeceb3a64eb8358$export$d42c60378c8168f8)();
  let { ariaLabel, ariaLabelledBy, ariaDescribedBy, focusManager } = (0, $16f0b7bb276bc17e$export$653eddfc964b0f8a).get(state);
  let textValue = segment.isPlaceholder ? "" : segment.text;
  let options = (0, import_react18.useMemo)(() => state.dateFormatter.resolvedOptions(), [
    state.dateFormatter
  ]);
  let monthDateFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    month: "long",
    timeZone: options.timeZone
  });
  let hourDateFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    hour: "numeric",
    hour12: options.hour12,
    timeZone: options.timeZone
  });
  if (segment.type === "month" && !segment.isPlaceholder) {
    let monthTextValue = monthDateFormatter.format(state.dateValue);
    textValue = monthTextValue !== textValue ? `${textValue} – ${monthTextValue}` : monthTextValue;
  } else if (segment.type === "hour" && !segment.isPlaceholder)
    textValue = hourDateFormatter.format(state.dateValue);
  let { spinButtonProps } = (0, $d2e8511e6f209edf$export$e908e06f4b8e3402)({
    // The ARIA spec says aria-valuenow is optional if there's no value, but aXe seems to require it.
    // This doesn't seem to have any negative effects with real AT since we also use aria-valuetext.
    // https://github.com/dequelabs/axe-core/issues/3505
    value: segment.value,
    textValue,
    minValue: segment.minValue,
    maxValue: segment.maxValue,
    isDisabled: state.isDisabled,
    isReadOnly: state.isReadOnly || !segment.isEditable,
    isRequired: state.isRequired,
    onIncrement: () => {
      enteredKeys.current = "";
      state.increment(segment.type);
    },
    onDecrement: () => {
      enteredKeys.current = "";
      state.decrement(segment.type);
    },
    onIncrementPage: () => {
      enteredKeys.current = "";
      state.incrementPage(segment.type);
    },
    onDecrementPage: () => {
      enteredKeys.current = "";
      state.decrementPage(segment.type);
    },
    onIncrementToMax: () => {
      enteredKeys.current = "";
      state.setSegment(segment.type, segment.maxValue);
    },
    onDecrementToMin: () => {
      enteredKeys.current = "";
      state.setSegment(segment.type, segment.minValue);
    }
  });
  let parser = (0, import_react18.useMemo)(() => new (0, $6c7bd7858deea686$export$cd11ab140839f11d)(locale, {
    maximumFractionDigits: 0
  }), [
    locale
  ]);
  let backspace = () => {
    if (parser.isValidPartialNumber(segment.text) && !state.isReadOnly && !segment.isPlaceholder) {
      let newValue = segment.text.slice(0, -1);
      let parsed = parser.parse(newValue);
      if (newValue.length === 0 || parsed === 0)
        state.clearSegment(segment.type);
      else
        state.setSegment(segment.type, parsed);
      enteredKeys.current = newValue;
    } else if (segment.type === "dayPeriod")
      state.clearSegment(segment.type);
  };
  let onKeyDown = (e) => {
    if (e.key === "a" && ((0, $c87311424ea30a05$export$9ac100e40613ea10)() ? e.metaKey : e.ctrlKey))
      e.preventDefault();
    if (e.ctrlKey || e.metaKey || e.shiftKey || e.altKey)
      return;
    switch (e.key) {
      case "Backspace":
      case "Delete":
        e.preventDefault();
        e.stopPropagation();
        backspace();
        break;
    }
  };
  let { startsWith: startsWith4 } = (0, $bb77f239b46e8c72$export$3274cf84b703fff)({
    sensitivity: "base"
  });
  let amPmFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    hour: "numeric",
    hour12: true
  });
  let am = (0, import_react18.useMemo)(() => {
    let date = new Date();
    date.setHours(0);
    return amPmFormatter.formatToParts(date).find((part) => part.type === "dayPeriod").value;
  }, [
    amPmFormatter
  ]);
  let pm = (0, import_react18.useMemo)(() => {
    let date = new Date();
    date.setHours(12);
    return amPmFormatter.formatToParts(date).find((part) => part.type === "dayPeriod").value;
  }, [
    amPmFormatter
  ]);
  let eraFormatter = (0, $896ba0a80a8f4d36$export$85fd5fdf27bacc79)({
    year: "numeric",
    era: "narrow",
    timeZone: "UTC"
  });
  let eras = (0, import_react18.useMemo)(() => {
    if (segment.type !== "era")
      return [];
    let date = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(new (0, $35ea8db9cb2ccb90$export$99faa760c7908e4f)(1, 1, 1), state.calendar);
    let eras2 = state.calendar.getEras().map((era) => {
      let eraDate = date.set({
        year: 1,
        month: 1,
        day: 1,
        era
      }).toDate("UTC");
      let parts = eraFormatter.formatToParts(eraDate);
      let formatted = parts.find((p) => p.type === "era").value;
      return {
        era,
        formatted
      };
    });
    let prefixLength = $32489daedd52963e$var$commonPrefixLength(eras2.map((era) => era.formatted));
    if (prefixLength)
      for (let era of eras2)
        era.formatted = era.formatted.slice(prefixLength);
    return eras2;
  }, [
    eraFormatter,
    state.calendar,
    segment.type
  ]);
  let onInput = (key) => {
    if (state.isDisabled || state.isReadOnly)
      return;
    let newValue = enteredKeys.current + key;
    switch (segment.type) {
      case "dayPeriod":
        if (startsWith4(am, key))
          state.setSegment("dayPeriod", 0);
        else if (startsWith4(pm, key))
          state.setSegment("dayPeriod", 12);
        else
          break;
        focusManager.focusNext();
        break;
      case "era": {
        let matched = eras.find((e) => startsWith4(e.formatted, key));
        if (matched) {
          state.setSegment("era", matched.era);
          focusManager.focusNext();
        }
        break;
      }
      case "day":
      case "hour":
      case "minute":
      case "second":
      case "month":
      case "year": {
        if (!parser.isValidPartialNumber(newValue))
          return;
        let numberValue = parser.parse(newValue);
        let segmentValue = numberValue;
        let allowsZero = segment.minValue === 0;
        if (segment.type === "hour" && state.dateFormatter.resolvedOptions().hour12) {
          switch (state.dateFormatter.resolvedOptions().hourCycle) {
            case "h11":
              if (numberValue > 11)
                segmentValue = parser.parse(key);
              break;
            case "h12":
              allowsZero = false;
              if (numberValue > 12)
                segmentValue = parser.parse(key);
              break;
          }
          if (segment.value >= 12 && numberValue > 1)
            numberValue += 12;
        } else if (numberValue > segment.maxValue)
          segmentValue = parser.parse(key);
        if (isNaN(numberValue))
          return;
        let shouldSetValue = segmentValue !== 0 || allowsZero;
        if (shouldSetValue)
          state.setSegment(segment.type, segmentValue);
        if (Number(numberValue + "0") > segment.maxValue || newValue.length >= String(segment.maxValue).length) {
          enteredKeys.current = "";
          if (shouldSetValue)
            focusManager.focusNext();
        } else
          enteredKeys.current = newValue;
        break;
      }
    }
  };
  let onFocus = () => {
    enteredKeys.current = "";
    (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(ref.current, {
      containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
    });
    let selection = window.getSelection();
    selection.collapse(ref.current);
  };
  let compositionRef = (0, import_react18.useRef)("");
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(ref, "beforeinput", (e) => {
    e.preventDefault();
    switch (e.inputType) {
      case "deleteContentBackward":
      case "deleteContentForward":
        if (parser.isValidPartialNumber(segment.text) && !state.isReadOnly)
          backspace();
        break;
      case "insertCompositionText":
        compositionRef.current = ref.current.textContent;
        ref.current.textContent = ref.current.textContent;
        break;
      default:
        if (e.data != null)
          onInput(e.data);
        break;
    }
  });
  (0, $e9faafb641e167db$export$90fc3a17d93f704c)(ref, "input", (e) => {
    let { inputType, data } = e;
    switch (inputType) {
      case "insertCompositionText":
        ref.current.textContent = compositionRef.current;
        if (startsWith4(am, data) || startsWith4(pm, data))
          onInput(data);
        break;
    }
  });
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    let element = ref.current;
    return () => {
      if (document.activeElement === element) {
        let prev = focusManager.focusPrevious();
        if (!prev)
          focusManager.focusNext();
      }
    };
  }, [
    ref,
    focusManager
  ]);
  let touchPropOverrides = (0, $c87311424ea30a05$export$fedb369cb70207f1)() || segment.type === "timeZoneName" ? {
    role: "textbox",
    "aria-valuemax": null,
    "aria-valuemin": null,
    "aria-valuetext": null,
    "aria-valuenow": null
  } : {};
  let firstSegment = (0, import_react18.useMemo)(() => state.segments.find((s) => s.isEditable), [
    state.segments
  ]);
  if (segment !== firstSegment && state.validationState !== "invalid")
    ariaDescribedBy = void 0;
  let id = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let isEditable = !state.isDisabled && !state.isReadOnly && segment.isEditable;
  let name = segment.type === "literal" ? "" : displayNames.of(segment.type);
  let labelProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    "aria-label": `${name}${ariaLabel ? `, ${ariaLabel}` : ""}${ariaLabelledBy ? ", " : ""}`,
    "aria-labelledby": ariaLabelledBy
  });
  if (segment.type === "literal")
    return {
      segmentProps: {
        "aria-hidden": true
      }
    };
  return {
    segmentProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(spinButtonProps, labelProps, {
      id,
      ...touchPropOverrides,
      "aria-invalid": state.validationState === "invalid" ? "true" : void 0,
      "aria-describedby": ariaDescribedBy,
      "aria-readonly": state.isReadOnly || !segment.isEditable ? "true" : void 0,
      "data-placeholder": segment.isPlaceholder || void 0,
      contentEditable: isEditable,
      suppressContentEditableWarning: isEditable,
      spellCheck: isEditable ? "false" : void 0,
      autoCapitalize: isEditable ? "off" : void 0,
      autoCorrect: isEditable ? "off" : void 0,
      // Capitalization was changed in React 17...
      [parseInt((0, import_react18.default).version, 10) >= 17 ? "enterKeyHint" : "enterkeyhint"]: isEditable ? "next" : void 0,
      inputMode: state.isDisabled || segment.type === "dayPeriod" || segment.type === "era" || !isEditable ? void 0 : "numeric",
      tabIndex: state.isDisabled ? void 0 : 0,
      onKeyDown,
      onFocus,
      style: {
        caretColor: "transparent"
      },
      // Prevent pointer events from reaching useDatePickerGroup, and allow native browser behavior to focus the segment.
      onPointerDown(e) {
        e.stopPropagation();
      },
      onMouseDown(e) {
        e.stopPropagation();
      }
    })
  };
}
function $32489daedd52963e$var$commonPrefixLength(strings) {
  strings.sort();
  let first = strings[0];
  let last = strings[strings.length - 1];
  for (let i = 0; i < first.length; i++) {
    if (first[i] !== last[i])
      return i;
  }
  return 0;
}
function $887cac91b7cc8801$export$12fd5f0e9f4bb192(props, state, ref) {
  var _state_value, _state_value1;
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault7($dfb4eba373ed9493$exports)));
  let { labelProps, fieldProps, descriptionProps, errorMessageProps } = (0, $2baaea4c71418dea$export$294aa081a6c6f55d)({
    ...props,
    labelElementType: "span"
  });
  let labelledBy = fieldProps["aria-labelledby"] || fieldProps.id;
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let range = state.formatValue(locale, {
    month: "long"
  });
  let description = range ? stringFormatter.format("selectedRangeDescription", {
    startDate: range.start,
    endDate: range.end
  }) : "";
  let descProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(description);
  let startFieldProps = {
    "aria-label": stringFormatter.format("startDate"),
    "aria-labelledby": labelledBy
  };
  let endFieldProps = {
    "aria-label": stringFormatter.format("endDate"),
    "aria-labelledby": labelledBy
  };
  let buttonId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let dialogId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let groupProps = (0, $3dfb0f96be0d6a08$export$4a931266a3838b86)(state, ref);
  let ariaDescribedBy = [
    descProps["aria-describedby"],
    fieldProps["aria-describedby"]
  ].filter(Boolean).join(" ") || void 0;
  let focusManager = (0, import_react18.useMemo)(() => (0, $9bf71ea28793e738$export$c5251b9e124bf29)(ref, {
    // Exclude the button from the focus manager.
    accept: (element) => element.id !== buttonId
  }), [
    ref,
    buttonId
  ]);
  let commonFieldProps = {
    [(0, $16f0b7bb276bc17e$export$7b3062cd49e80452)]: focusManager,
    [(0, $16f0b7bb276bc17e$export$300019f83c56d282)]: "presentation",
    "aria-describedby": ariaDescribedBy,
    minValue: props.minValue,
    maxValue: props.maxValue,
    placeholderValue: props.placeholderValue,
    hideTimeZone: props.hideTimeZone,
    hourCycle: props.hourCycle,
    granularity: props.granularity,
    shouldForceLeadingZeros: props.shouldForceLeadingZeros,
    isDisabled: props.isDisabled,
    isReadOnly: props.isReadOnly,
    isRequired: props.isRequired,
    validationState: state.validationState
  };
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec)({
    ...props,
    isDisabled: state.isOpen,
    onBlurWithin: props.onBlur,
    onFocusWithin: props.onFocus,
    onFocusWithinChange: props.onFocusChange
  });
  return {
    groupProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, groupProps, fieldProps, descProps, focusWithinProps, {
      role: "group",
      "aria-disabled": props.isDisabled || null,
      "aria-describedby": ariaDescribedBy,
      onKeyDown(e) {
        if (state.isOpen)
          return;
        if (props.onKeyDown)
          props.onKeyDown(e);
      },
      onKeyUp(e) {
        if (state.isOpen)
          return;
        if (props.onKeyUp)
          props.onKeyUp(e);
      }
    }),
    labelProps: {
      ...labelProps,
      onClick: () => {
        focusManager.focusFirst();
      }
    },
    buttonProps: {
      ...descProps,
      id: buttonId,
      "aria-haspopup": "dialog",
      "aria-label": stringFormatter.format("calendar"),
      "aria-labelledby": `${buttonId} ${labelledBy}`,
      "aria-describedby": ariaDescribedBy,
      "aria-expanded": state.isOpen || void 0,
      onPress: () => state.setOpen(true)
    },
    dialogProps: {
      id: dialogId,
      "aria-labelledby": `${buttonId} ${labelledBy}`
    },
    startFieldProps: {
      ...startFieldProps,
      ...commonFieldProps,
      value: (_state_value = state.value) === null || _state_value === void 0 ? void 0 : _state_value.start,
      onChange: (start) => state.setDateTime("start", start),
      autoFocus: props.autoFocus,
      name: props.startName
    },
    endFieldProps: {
      ...endFieldProps,
      ...commonFieldProps,
      value: (_state_value1 = state.value) === null || _state_value1 === void 0 ? void 0 : _state_value1.end,
      onChange: (end) => state.setDateTime("end", end),
      name: props.endName
    },
    descriptionProps,
    errorMessageProps,
    calendarProps: {
      autoFocus: true,
      value: state.dateRange,
      onChange: state.setDateRange,
      minValue: props.minValue,
      maxValue: props.maxValue,
      isDisabled: props.isDisabled,
      isReadOnly: props.isReadOnly,
      isDateUnavailable: props.isDateUnavailable,
      allowsNonContiguousRanges: props.allowsNonContiguousRanges,
      defaultFocusedValue: state.dateRange ? void 0 : props.placeholderValue,
      validationState: state.validationState,
      errorMessage: props.errorMessage
    }
  };
}

// node_modules/.pnpm/@react-aria+dialog@3.5.4_react-dom@18.2.0_react@18.2.0/node_modules/@react-aria/dialog/dist/module.js
var import_react19 = __toESM(require_react());
function $40df3f8667284809$export$d55e7ee900f34e93(props, ref) {
  let { role = "dialog" } = props;
  let titleId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)();
  titleId = props["aria-label"] ? void 0 : titleId;
  let isRefocusing = (0, import_react19.useRef)(false);
  (0, import_react19.useEffect)(() => {
    if (ref.current && !ref.current.contains(document.activeElement)) {
      (0, $6a99195332edec8b$export$80f3e147d781571c)(ref.current);
      let timeout = setTimeout(() => {
        if (document.activeElement === ref.current) {
          isRefocusing.current = true;
          ref.current.blur();
          (0, $6a99195332edec8b$export$80f3e147d781571c)(ref.current);
          isRefocusing.current = false;
        }
      }, 500);
      return () => {
        clearTimeout(timeout);
      };
    }
  }, [
    ref
  ]);
  (0, $337b884510726a0d$export$14c98a7594375490)();
  return {
    dialogProps: {
      ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
        labelable: true
      }),
      role,
      tabIndex: -1,
      "aria-labelledby": props["aria-labelledby"] || titleId,
      // Prevent blur events from reaching useOverlay, which may cause
      // popovers to close. Since focus is contained within the dialog,
      // we don't want this to occur due to the above useEffect.
      onBlur: (e) => {
        if (isRefocusing.current)
          e.stopPropagation();
      }
    },
    titleProps: {
      id: titleId
    }
  };
}

// node_modules/.pnpm/@react-aria+dnd@3.4.0_react-dom@18.2.0_react@18.2.0/node_modules/@react-aria/dnd/dist/module.js
var import_react20 = __toESM(require_react());
var import_react_dom2 = __toESM(require_react_dom());
function $parcel$interopDefault8(a) {
  return a && a.__esModule ? a.default : a;
}
var $103790afe9474d1c$export$60b7b4bcf3903d8e;
(function(DROP_OPERATION) {
  DROP_OPERATION[DROP_OPERATION["none"] = 0] = "none";
  DROP_OPERATION[DROP_OPERATION["cancel"] = 0] = "cancel";
  DROP_OPERATION[DROP_OPERATION["move"] = 1] = "move";
  DROP_OPERATION[DROP_OPERATION["copy"] = 2] = "copy";
  DROP_OPERATION[DROP_OPERATION["link"] = 4] = "link";
  DROP_OPERATION[DROP_OPERATION["all"] = 7] = "all";
})($103790afe9474d1c$export$60b7b4bcf3903d8e || ($103790afe9474d1c$export$60b7b4bcf3903d8e = {}));
var $103790afe9474d1c$export$9bbdfc78cf083e16 = {
  ...$103790afe9474d1c$export$60b7b4bcf3903d8e,
  copyMove: $103790afe9474d1c$export$60b7b4bcf3903d8e.copy | $103790afe9474d1c$export$60b7b4bcf3903d8e.move,
  copyLink: $103790afe9474d1c$export$60b7b4bcf3903d8e.copy | $103790afe9474d1c$export$60b7b4bcf3903d8e.link,
  linkMove: $103790afe9474d1c$export$60b7b4bcf3903d8e.link | $103790afe9474d1c$export$60b7b4bcf3903d8e.move,
  all: $103790afe9474d1c$export$60b7b4bcf3903d8e.all,
  uninitialized: $103790afe9474d1c$export$60b7b4bcf3903d8e.all
};
var $103790afe9474d1c$export$dd0165308d8bff45 = $103790afe9474d1c$var$invert($103790afe9474d1c$export$9bbdfc78cf083e16);
$103790afe9474d1c$export$dd0165308d8bff45[$103790afe9474d1c$export$60b7b4bcf3903d8e.all] = "all";
var $103790afe9474d1c$export$d7ebf00f36b7a95e = $103790afe9474d1c$var$invert($103790afe9474d1c$export$60b7b4bcf3903d8e);
var $103790afe9474d1c$export$608ecc6f1b23c35d = {
  none: "cancel",
  link: "link",
  copy: "copy",
  move: "move"
};
var $103790afe9474d1c$export$5eacb0769d26d3b2 = $103790afe9474d1c$var$invert($103790afe9474d1c$export$608ecc6f1b23c35d);
function $103790afe9474d1c$var$invert(object) {
  let res = {};
  for (let key in object)
    res[object[key]] = key;
  return res;
}
var $103790afe9474d1c$export$4a7729b856e9a690 = /* @__PURE__ */ new Set([
  "text/plain",
  "text/uri-list",
  "text/html"
]);
var $103790afe9474d1c$export$fd9f9fc120c5402d = "application/vnd.react-aria.items+json";
var $103790afe9474d1c$export$f8fc6581787339b3 = "application/octet-stream";
var $7252cd45fc48c07c$export$dfdf5deeaf27473f = /* @__PURE__ */ new WeakMap();
var $7252cd45fc48c07c$export$990fced5dfac2637 = Symbol();
function $7252cd45fc48c07c$export$3093291712f09a77(state) {
  let { id } = $7252cd45fc48c07c$export$dfdf5deeaf27473f.get(state);
  if (!id)
    throw new Error("Droppable item outside a droppable collection");
  return id;
}
function $7252cd45fc48c07c$export$7e397efd01d3db27(state) {
  let { ref } = $7252cd45fc48c07c$export$dfdf5deeaf27473f.get(state);
  if (!ref)
    throw new Error("Droppable item outside a droppable collection");
  return ref;
}
function $7252cd45fc48c07c$export$e1d41611756c6326(items) {
  let types = /* @__PURE__ */ new Set();
  for (let item of items)
    for (let type of Object.keys(item))
      types.add(type);
  return types;
}
function $7252cd45fc48c07c$var$mapModality(modality) {
  if (!modality)
    modality = "virtual";
  if (modality === "pointer")
    modality = "virtual";
  if (modality === "virtual" && typeof window !== "undefined" && "ontouchstart" in window)
    modality = "touch";
  return modality;
}
function $7252cd45fc48c07c$export$49bac5d6d4b352ea() {
  return $7252cd45fc48c07c$var$mapModality((0, $507fabe10e71c6fb$export$98e20ec92f614cfe)());
}
function $7252cd45fc48c07c$export$1fb2158d224b542c() {
  return $7252cd45fc48c07c$var$mapModality((0, $507fabe10e71c6fb$export$630ff653c5ada6a9)());
}
function $7252cd45fc48c07c$export$f9c1490890ddd063(dataTransfer, items) {
  let groupedByType = /* @__PURE__ */ new Map();
  let needsCustomData = false;
  let customData = [];
  for (let item of items) {
    let types = Object.keys(item);
    if (types.length > 1)
      needsCustomData = true;
    let dataByType = {};
    for (let type of types) {
      let typeItems = groupedByType.get(type);
      if (!typeItems) {
        typeItems = [];
        groupedByType.set(type, typeItems);
      } else
        needsCustomData = true;
      let data = item[type];
      dataByType[type] = data;
      typeItems.push(data);
    }
    customData.push(dataByType);
  }
  for (let [type, items2] of groupedByType)
    if ((0, $103790afe9474d1c$export$4a7729b856e9a690).has(type)) {
      let data = items2.join("\n");
      dataTransfer.items.add(data, type);
    } else
      dataTransfer.items.add(items2[0], type);
  if (needsCustomData) {
    let data = JSON.stringify(customData);
    dataTransfer.items.add(data, (0, $103790afe9474d1c$export$fd9f9fc120c5402d));
  }
}
var $7252cd45fc48c07c$export$7f04ce188c91447c = class {
  has(type) {
    if (this.includesUnknownTypes || type === $7252cd45fc48c07c$export$990fced5dfac2637 && this.types.has((0, $103790afe9474d1c$export$f8fc6581787339b3)))
      return true;
    return typeof type === "string" && this.types.has(type);
  }
  constructor(dataTransfer) {
    this.types = /* @__PURE__ */ new Set();
    let hasFiles = false;
    for (let item of dataTransfer.items)
      if (item.type !== (0, $103790afe9474d1c$export$fd9f9fc120c5402d)) {
        if (item.kind === "file")
          hasFiles = true;
        if (item.type)
          this.types.add(item.type);
        else
          this.types.add((0, $103790afe9474d1c$export$f8fc6581787339b3));
      }
    this.includesUnknownTypes = !hasFiles && dataTransfer.types.includes("Files");
  }
};
function $7252cd45fc48c07c$export$d9e760437831f8b3(dataTransfer) {
  let items = [];
  let hasCustomType = false;
  if (dataTransfer.types.includes((0, $103790afe9474d1c$export$fd9f9fc120c5402d)))
    try {
      let data = dataTransfer.getData((0, $103790afe9474d1c$export$fd9f9fc120c5402d));
      let parsed = JSON.parse(data);
      for (let item of parsed)
        items.push({
          kind: "text",
          types: new Set(Object.keys(item)),
          getText: (type) => Promise.resolve(item[type])
        });
      hasCustomType = true;
    } catch (e) {
    }
  if (!hasCustomType) {
    let stringItems = /* @__PURE__ */ new Map();
    for (let item of dataTransfer.items) {
      if (item.kind === "string")
        stringItems.set(item.type || (0, $103790afe9474d1c$export$f8fc6581787339b3), dataTransfer.getData(item.type));
      else if (item.kind === "file") {
        if (typeof item.webkitGetAsEntry === "function") {
          let entry = item.webkitGetAsEntry();
          if (!entry)
            continue;
          if (entry.isFile)
            items.push($7252cd45fc48c07c$var$createFileItem(item.getAsFile()));
          else if (entry.isDirectory)
            items.push($7252cd45fc48c07c$var$createDirectoryItem(entry));
        } else
          items.push($7252cd45fc48c07c$var$createFileItem(item.getAsFile()));
      }
    }
    if (stringItems.size > 0)
      items.push({
        kind: "text",
        types: new Set(stringItems.keys()),
        getText: (type) => Promise.resolve(stringItems.get(type))
      });
  }
  return items;
}
function $7252cd45fc48c07c$var$blobToString(blob) {
  if (typeof blob.text === "function")
    return blob.text();
  return new Promise((resolve, reject) => {
    let reader = new FileReader();
    reader.onload = () => {
      resolve(reader.result);
    };
    reader.onerror = reject;
    reader.readAsText(blob);
  });
}
function $7252cd45fc48c07c$var$createFileItem(file) {
  return {
    kind: "file",
    type: file.type || (0, $103790afe9474d1c$export$f8fc6581787339b3),
    name: file.name,
    getText: () => $7252cd45fc48c07c$var$blobToString(file),
    getFile: () => Promise.resolve(file)
  };
}
function $7252cd45fc48c07c$var$createDirectoryItem(entry) {
  return {
    kind: "directory",
    name: entry.name,
    getEntries: () => $7252cd45fc48c07c$var$getEntries(entry)
  };
}
async function* $7252cd45fc48c07c$var$getEntries(item) {
  let reader = item.createReader();
  let entries;
  do {
    entries = await new Promise((resolve, reject) => {
      reader.readEntries(resolve, reject);
    });
    for (let entry of entries) {
      if (entry.isFile) {
        let file = await $7252cd45fc48c07c$var$getEntryFile(entry);
        yield $7252cd45fc48c07c$var$createFileItem(file);
      } else if (entry.isDirectory)
        yield $7252cd45fc48c07c$var$createDirectoryItem(entry);
    }
  } while (entries.length > 0);
}
function $7252cd45fc48c07c$var$getEntryFile(entry) {
  return new Promise((resolve, reject) => entry.file(resolve, reject));
}
function $7252cd45fc48c07c$export$97fd558bdc44bea1(dropItem) {
  return dropItem.kind === "text";
}
function $7252cd45fc48c07c$export$a144e1752ebe0aa(dropItem) {
  return dropItem.kind === "file";
}
function $7252cd45fc48c07c$export$2b40a62bdbe6b2b0(dropItem) {
  return dropItem.kind === "directory";
}
var $7252cd45fc48c07c$export$6ca6700462636d0b = {
  draggingKeys: /* @__PURE__ */ new Set()
};
function $7252cd45fc48c07c$export$f2be18a910c0caa6(ref) {
  $7252cd45fc48c07c$export$6ca6700462636d0b.draggingCollectionRef = ref;
}
function $7252cd45fc48c07c$export$72cb63bdda528276(keys) {
  $7252cd45fc48c07c$export$6ca6700462636d0b.draggingKeys = keys;
}
function $7252cd45fc48c07c$export$dac8db29d42db9a1(ref) {
  $7252cd45fc48c07c$export$6ca6700462636d0b.dropCollectionRef = ref;
}
function $7252cd45fc48c07c$export$70936501603e6c57() {
  $7252cd45fc48c07c$export$6ca6700462636d0b = {
    draggingKeys: /* @__PURE__ */ new Set()
  };
}
function $7252cd45fc48c07c$export$6c10d32b362bfa5f(state) {
  $7252cd45fc48c07c$export$6ca6700462636d0b = state;
}
function $7252cd45fc48c07c$export$78bf638634500fa5(ref) {
  let { draggingCollectionRef, dropCollectionRef } = $7252cd45fc48c07c$export$6ca6700462636d0b;
  return (draggingCollectionRef === null || draggingCollectionRef === void 0 ? void 0 : draggingCollectionRef.current) != null && draggingCollectionRef.current === ((ref === null || ref === void 0 ? void 0 : ref.current) || (dropCollectionRef === null || dropCollectionRef === void 0 ? void 0 : dropCollectionRef.current));
}
var $7252cd45fc48c07c$export$8e6636520ac15722;
function $7252cd45fc48c07c$export$64f52ed7349ddb84(dropEffect) {
  $7252cd45fc48c07c$export$8e6636520ac15722 = dropEffect;
}
var $7252cd45fc48c07c$export$f0130eb70b6347b8 = (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).none;
function $7252cd45fc48c07c$export$6539bc8c3a0a2d67(o) {
  $7252cd45fc48c07c$export$f0130eb70b6347b8 = o;
}
var $67560de7c78cb232$var$dropTargets = /* @__PURE__ */ new Map();
var $67560de7c78cb232$var$dropItems = /* @__PURE__ */ new Map();
var $67560de7c78cb232$var$dragSession = null;
var $67560de7c78cb232$var$subscriptions = /* @__PURE__ */ new Set();
function $67560de7c78cb232$export$c28d9fb4a54e471a(target) {
  $67560de7c78cb232$var$dropTargets.set(target.element, target);
  $67560de7c78cb232$var$dragSession === null || $67560de7c78cb232$var$dragSession === void 0 ? void 0 : $67560de7c78cb232$var$dragSession.updateValidDropTargets();
  return () => {
    $67560de7c78cb232$var$dropTargets.delete(target.element);
    $67560de7c78cb232$var$dragSession === null || $67560de7c78cb232$var$dragSession === void 0 ? void 0 : $67560de7c78cb232$var$dragSession.updateValidDropTargets();
  };
}
function $67560de7c78cb232$export$aef80212ac99c003(item) {
  $67560de7c78cb232$var$dropItems.set(item.element, item);
  return () => {
    $67560de7c78cb232$var$dropItems.delete(item.element);
  };
}
function $67560de7c78cb232$export$549dbcf8649bf3b2(target, stringFormatter) {
  if ($67560de7c78cb232$var$dragSession)
    throw new Error("Cannot begin dragging while already dragging");
  $67560de7c78cb232$var$dragSession = new $67560de7c78cb232$var$DragSession(target, stringFormatter);
  requestAnimationFrame(() => {
    $67560de7c78cb232$var$dragSession.setup();
    if ((0, $7252cd45fc48c07c$export$1fb2158d224b542c)() === "keyboard")
      $67560de7c78cb232$var$dragSession.next();
  });
  for (let cb of $67560de7c78cb232$var$subscriptions)
    cb();
}
function $67560de7c78cb232$export$418e185dd3f1b968() {
  let [session, setSession] = (0, import_react20.useState)($67560de7c78cb232$var$dragSession);
  (0, import_react20.useEffect)(() => {
    let cb = () => setSession($67560de7c78cb232$var$dragSession);
    $67560de7c78cb232$var$subscriptions.add(cb);
    return () => {
      $67560de7c78cb232$var$subscriptions.delete(cb);
    };
  }, []);
  return session;
}
function $67560de7c78cb232$var$endDragging() {
  $67560de7c78cb232$var$dragSession = null;
  for (let cb of $67560de7c78cb232$var$subscriptions)
    cb();
}
var $67560de7c78cb232$var$CANCELED_EVENTS = [
  "pointerdown",
  "pointermove",
  "pointerenter",
  "pointerleave",
  "pointerover",
  "pointerout",
  "pointerup",
  "mousedown",
  "mousemove",
  "mouseenter",
  "mouseleave",
  "mouseover",
  "mouseout",
  "mouseup",
  "touchstart",
  "touchmove",
  "touchend",
  "focusin",
  "focusout"
];
var $67560de7c78cb232$var$CLICK_EVENTS = [
  "pointerup",
  "mouseup",
  "touchend"
];
var $67560de7c78cb232$var$MESSAGES = {
  keyboard: "dragStartedKeyboard",
  touch: "dragStartedTouch",
  virtual: "dragStartedVirtual"
};
var $67560de7c78cb232$var$DragSession = class {
  setup() {
    document.addEventListener("keydown", this.onKeyDown, true);
    document.addEventListener("keyup", this.onKeyUp, true);
    window.addEventListener("focus", this.onFocus, true);
    window.addEventListener("blur", this.onBlur, true);
    document.addEventListener("click", this.onClick, true);
    document.addEventListener("pointerdown", this.onPointerDown, true);
    for (let event of $67560de7c78cb232$var$CANCELED_EVENTS)
      document.addEventListener(event, this.cancelEvent, true);
    this.mutationObserver = new MutationObserver(() => this.updateValidDropTargets());
    this.updateValidDropTargets();
    (0, $319e236875307eab$export$a9b970dcc4ae71a9)(this.stringFormatter.format($67560de7c78cb232$var$MESSAGES[(0, $7252cd45fc48c07c$export$1fb2158d224b542c)()]));
  }
  teardown() {
    document.removeEventListener("keydown", this.onKeyDown, true);
    document.removeEventListener("keyup", this.onKeyUp, true);
    window.removeEventListener("focus", this.onFocus, true);
    window.removeEventListener("blur", this.onBlur, true);
    document.removeEventListener("click", this.onClick, true);
    document.removeEventListener("pointerdown", this.onPointerDown, true);
    for (let event of $67560de7c78cb232$var$CANCELED_EVENTS)
      document.removeEventListener(event, this.cancelEvent, true);
    this.mutationObserver.disconnect();
    this.restoreAriaHidden();
  }
  onKeyDown(e) {
    var _this_currentDropTarget;
    this.cancelEvent(e);
    if (e.key === "Escape") {
      this.cancel();
      return;
    }
    if (e.key === "Tab" && !(e.metaKey || e.altKey || e.ctrlKey)) {
      if (e.shiftKey)
        this.previous();
      else
        this.next();
    }
    if (typeof ((_this_currentDropTarget = this.currentDropTarget) === null || _this_currentDropTarget === void 0 ? void 0 : _this_currentDropTarget.onKeyDown) === "function")
      this.currentDropTarget.onKeyDown(e, this.dragTarget);
  }
  onKeyUp(e) {
    this.cancelEvent(e);
    if (e.key === "Enter") {
      if (e.altKey)
        this.activate();
      else
        this.drop();
    }
  }
  onFocus(e) {
    if (e.target !== this.dragTarget.element)
      this.cancelEvent(e);
    if (!(e.target instanceof HTMLElement) || e.target === this.dragTarget.element)
      return;
    let dropTarget = this.validDropTargets.find((target) => target.element === e.target) || this.validDropTargets.find((target) => target.element.contains(e.target));
    if (!dropTarget) {
      if (this.currentDropTarget)
        this.currentDropTarget.element.focus();
      else
        this.dragTarget.element.focus();
      return;
    }
    let item = $67560de7c78cb232$var$dropItems.get(e.target);
    this.setCurrentDropTarget(dropTarget, item);
  }
  onBlur(e) {
    if (e.target !== this.dragTarget.element)
      this.cancelEvent(e);
    if (!e.relatedTarget || !(e.relatedTarget instanceof HTMLElement)) {
      if (this.currentDropTarget)
        this.currentDropTarget.element.focus();
      else
        this.dragTarget.element.focus();
    }
  }
  onClick(e) {
    this.cancelEvent(e);
    if ((0, $6a7db85432448f7f$export$60278871457622de)(e) || this.isVirtualClick) {
      if (e.target === this.dragTarget.element) {
        this.cancel();
        return;
      }
      let dropTarget = this.validDropTargets.find((target) => target.element.contains(e.target));
      if (dropTarget) {
        let item = $67560de7c78cb232$var$dropItems.get(e.target);
        this.setCurrentDropTarget(dropTarget, item);
        this.drop(item);
      }
    }
  }
  onPointerDown(e) {
    this.cancelEvent(e);
    this.isVirtualClick = (0, $6a7db85432448f7f$export$29bf1b5f2c56cf63)(e);
  }
  cancelEvent(e) {
    var _this_dragTarget;
    if ((e.type === "focusin" || e.type === "focusout") && e.target === ((_this_dragTarget = this.dragTarget) === null || _this_dragTarget === void 0 ? void 0 : _this_dragTarget.element))
      return;
    if (!$67560de7c78cb232$var$CLICK_EVENTS.includes(e.type))
      e.preventDefault();
    e.stopPropagation();
    e.stopImmediatePropagation();
  }
  updateValidDropTargets() {
    if (!this.mutationObserver)
      return;
    this.mutationObserver.disconnect();
    if (this.restoreAriaHidden)
      this.restoreAriaHidden();
    this.validDropTargets = $67560de7c78cb232$var$findValidDropTargets(this.dragTarget);
    if (this.validDropTargets.length > 0) {
      let nearestIndex = this.findNearestDropTarget();
      this.validDropTargets = [
        ...this.validDropTargets.slice(nearestIndex),
        ...this.validDropTargets.slice(0, nearestIndex)
      ];
    }
    if (this.currentDropTarget && !this.validDropTargets.includes(this.currentDropTarget))
      this.setCurrentDropTarget(this.validDropTargets[0]);
    let types = (0, $7252cd45fc48c07c$export$e1d41611756c6326)(this.dragTarget.items);
    let validDropItems = [
      ...$67560de7c78cb232$var$dropItems.values()
    ].filter((item) => {
      if (typeof item.getDropOperation === "function")
        return item.getDropOperation(types, this.dragTarget.allowedDropOperations) !== "cancel";
      return true;
    });
    let visibleDropTargets = this.validDropTargets.filter((target) => !validDropItems.some((item) => target.element.contains(item.element)));
    this.restoreAriaHidden = (0, $5e3802645cc19319$export$1c3ebcada18427bf)([
      this.dragTarget.element,
      ...validDropItems.map((item) => item.element),
      ...visibleDropTargets.map((target) => target.element)
    ]);
    this.mutationObserver.observe(document.body, {
      subtree: true,
      attributes: true,
      attributeFilter: [
        "aria-hidden"
      ]
    });
  }
  next() {
    if (!this.currentDropTarget) {
      this.setCurrentDropTarget(this.validDropTargets[0]);
      return;
    }
    let index = this.validDropTargets.indexOf(this.currentDropTarget);
    if (index < 0) {
      this.setCurrentDropTarget(this.validDropTargets[0]);
      return;
    }
    if (index === this.validDropTargets.length - 1) {
      if (!this.dragTarget.element.closest('[aria-hidden="true"]')) {
        this.setCurrentDropTarget(null);
        this.dragTarget.element.focus();
      } else
        this.setCurrentDropTarget(this.validDropTargets[0]);
    } else
      this.setCurrentDropTarget(this.validDropTargets[index + 1]);
  }
  previous() {
    if (!this.currentDropTarget) {
      this.setCurrentDropTarget(this.validDropTargets[this.validDropTargets.length - 1]);
      return;
    }
    let index = this.validDropTargets.indexOf(this.currentDropTarget);
    if (index < 0) {
      this.setCurrentDropTarget(this.validDropTargets[this.validDropTargets.length - 1]);
      return;
    }
    if (index === 0) {
      if (!this.dragTarget.element.closest('[aria-hidden="true"]')) {
        this.setCurrentDropTarget(null);
        this.dragTarget.element.focus();
      } else
        this.setCurrentDropTarget(this.validDropTargets[this.validDropTargets.length - 1]);
    } else
      this.setCurrentDropTarget(this.validDropTargets[index - 1]);
  }
  findNearestDropTarget() {
    let dragTargetRect = this.dragTarget.element.getBoundingClientRect();
    let minDistance = Infinity;
    let nearest = -1;
    for (let i = 0; i < this.validDropTargets.length; i++) {
      let dropTarget = this.validDropTargets[i];
      let rect = dropTarget.element.getBoundingClientRect();
      let dx = rect.left - dragTargetRect.left;
      let dy = rect.top - dragTargetRect.top;
      let dist = dx * dx + dy * dy;
      if (dist < minDistance) {
        minDistance = dist;
        nearest = i;
      }
    }
    return nearest;
  }
  setCurrentDropTarget(dropTarget, item) {
    if (dropTarget !== this.currentDropTarget) {
      if (this.currentDropTarget && typeof this.currentDropTarget.onDropExit === "function") {
        let rect = this.currentDropTarget.element.getBoundingClientRect();
        this.currentDropTarget.onDropExit({
          type: "dropexit",
          x: rect.left + rect.width / 2,
          y: rect.top + rect.height / 2
        });
      }
      this.currentDropTarget = dropTarget;
      if (dropTarget) {
        if (typeof dropTarget.onDropEnter === "function") {
          let rect = dropTarget.element.getBoundingClientRect();
          dropTarget.onDropEnter({
            type: "dropenter",
            x: rect.left + rect.width / 2,
            y: rect.top + rect.height / 2
          }, this.dragTarget);
        }
        if (!item)
          dropTarget === null || dropTarget === void 0 ? void 0 : dropTarget.element.focus();
      }
    }
    if (item !== this.currentDropItem) {
      if (item && typeof this.currentDropTarget.onDropTargetEnter === "function")
        this.currentDropTarget.onDropTargetEnter(item === null || item === void 0 ? void 0 : item.target);
      item === null || item === void 0 ? void 0 : item.element.focus();
      this.currentDropItem = item;
      if (!this.initialFocused) {
        (0, $319e236875307eab$export$a9b970dcc4ae71a9)(item === null || item === void 0 ? void 0 : item.element.getAttribute("aria-label"), "polite");
        this.initialFocused = true;
      }
    }
  }
  end() {
    this.teardown();
    $67560de7c78cb232$var$endDragging();
    if (typeof this.dragTarget.onDragEnd === "function") {
      let target = this.currentDropTarget && this.dropOperation !== "cancel" ? this.currentDropTarget : this.dragTarget;
      let rect = target.element.getBoundingClientRect();
      this.dragTarget.onDragEnd({
        type: "dragend",
        x: rect.x + rect.width / 2,
        y: rect.y + rect.height / 2,
        dropOperation: this.dropOperation || "cancel"
      });
    }
    if (this.currentDropTarget) {
      if (!this.dragTarget.element.contains(this.currentDropTarget.element)) {
        this.dragTarget.element.dispatchEvent(new FocusEvent("blur"));
        this.dragTarget.element.dispatchEvent(new FocusEvent("focusout", {
          bubbles: true
        }));
      }
      (0, import_react_dom2.flushSync)(() => {
        this.currentDropTarget.element.blur();
      });
      this.currentDropTarget.element.focus();
    }
    this.setCurrentDropTarget(null);
  }
  cancel() {
    this.setCurrentDropTarget(null);
    this.end();
    if (!this.dragTarget.element.closest('[aria-hidden="true"]'))
      this.dragTarget.element.focus();
    (0, $319e236875307eab$export$a9b970dcc4ae71a9)(this.stringFormatter.format("dropCanceled"));
  }
  drop(item) {
    if (!this.currentDropTarget) {
      this.cancel();
      return;
    }
    if (typeof (item === null || item === void 0 ? void 0 : item.getDropOperation) === "function") {
      let types = (0, $7252cd45fc48c07c$export$e1d41611756c6326)(this.dragTarget.items);
      this.dropOperation = item.getDropOperation(types, this.dragTarget.allowedDropOperations);
    } else if (typeof this.currentDropTarget.getDropOperation === "function") {
      let types = (0, $7252cd45fc48c07c$export$e1d41611756c6326)(this.dragTarget.items);
      this.dropOperation = this.currentDropTarget.getDropOperation(types, this.dragTarget.allowedDropOperations);
    } else
      this.dropOperation = this.dragTarget.allowedDropOperations[0];
    if (typeof this.currentDropTarget.onDrop === "function") {
      let items = this.dragTarget.items.map((item2) => ({
        kind: "text",
        types: new Set(Object.keys(item2)),
        getText: (type) => Promise.resolve(item2[type])
      }));
      let rect = this.currentDropTarget.element.getBoundingClientRect();
      this.currentDropTarget.onDrop({
        type: "drop",
        x: rect.left + rect.width / 2,
        y: rect.top + rect.height / 2,
        items,
        dropOperation: this.dropOperation
      }, item === null || item === void 0 ? void 0 : item.target);
    }
    this.end();
    (0, $319e236875307eab$export$a9b970dcc4ae71a9)(this.stringFormatter.format("dropComplete"));
  }
  activate() {
    if (this.currentDropTarget && typeof this.currentDropTarget.onDropActivate === "function") {
      let rect = this.currentDropTarget.element.getBoundingClientRect();
      this.currentDropTarget.onDropActivate({
        type: "dropactivate",
        x: rect.left + rect.width / 2,
        y: rect.top + rect.height / 2
      });
    }
  }
  constructor(target, stringFormatter) {
    this.dragTarget = target;
    this.stringFormatter = stringFormatter;
    this.onKeyDown = this.onKeyDown.bind(this);
    this.onKeyUp = this.onKeyUp.bind(this);
    this.onFocus = this.onFocus.bind(this);
    this.onBlur = this.onBlur.bind(this);
    this.onClick = this.onClick.bind(this);
    this.onPointerDown = this.onPointerDown.bind(this);
    this.cancelEvent = this.cancelEvent.bind(this);
    this.initialFocused = false;
  }
};
function $67560de7c78cb232$var$findValidDropTargets(options) {
  let types = (0, $7252cd45fc48c07c$export$e1d41611756c6326)(options.items);
  return [
    ...$67560de7c78cb232$var$dropTargets.values()
  ].filter((target) => {
    if (target.element.closest('[aria-hidden="true"]'))
      return false;
    if (typeof target.getDropOperation === "function")
      return target.getDropOperation(types, options.allowedDropOperations) !== "cancel";
    return true;
  });
}
var $865c2eb7c00a83f1$exports = {};
var $7dfcac1a0c98c789$exports = {};
$7dfcac1a0c98c789$exports = {
  "dragDescriptionKeyboard": `اضغط Enter لبدء السحب.`,
  "dragDescriptionKeyboardAlt": `اضغط على Alt + Enter لبدء السحب.`,
  "dragDescriptionLongPress": `اضغط باستمرار لبدء السحب.`,
  "dragDescriptionTouch": `اضغط مرتين لبدء السحب.`,
  "dragDescriptionVirtual": `انقر لبدء السحب.`,
  "dragItem": (args) => `اسحب ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `اسحب ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} عنصر محدد`,
    other: () => `${formatter.number(args.count)} عناصر محددة`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `اضغط على Enter للسحب ${formatter.plural(args.count, {
    one: `عدد العناصر المختارة`,
    other: `عدد العناصر المختارة`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `اضغط على مفتاحي Alt + Enter للسحب ${formatter.plural(args.count, {
    one: `عدد العناصر المختارة`,
    other: `عدد العناصر المختارة`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `اضغط باستمرار للسحب ${formatter.plural(args.count, {
    one: `عدد العناصر المختارة`,
    other: `عدد العناصر المختارة`
  })}.`,
  "dragStartedKeyboard": `بدأ السحب. اضغط Tab للانتقال إلى موضع الإفلات، ثم اضغط Enter للإفلات، أو اضغط Escape للإلغاء.`,
  "dragStartedTouch": `بدأ السحب. انتقل إلى موضع الإفلات، ثم اضغط مرتين للإفلات.`,
  "dragStartedVirtual": `بدأ السحب. انتقل إلى مكان الإفلات، ثم انقر أو اضغط Enter للإفلات.`,
  "dropCanceled": `تم إلغاء الإفلات.`,
  "dropComplete": `اكتمل الإفلات.`,
  "dropDescriptionKeyboard": `اضغط Enter للإفلات. اضغط Escape لإلغاء السحب.`,
  "dropDescriptionTouch": `اضغط مرتين للإفلات.`,
  "dropDescriptionVirtual": `انقر للإفلات.`,
  "dropIndicator": `مؤشر الإفلات`,
  "dropOnItem": (args) => `إفلات ${args.itemText}`,
  "dropOnRoot": `الإفلات`,
  "endDragKeyboard": `السحب. اضغط Enter لإلغاء السحب.`,
  "endDragTouch": `السحب. اضغط مرتين لإلغاء السحب.`,
  "endDragVirtual": `السحب. انقر لإلغاء السحب.`,
  "insertAfter": (args) => `أدخل بعد ${args.itemText}`,
  "insertBefore": (args) => `أدخل قبل ${args.itemText}`,
  "insertBetween": (args) => `أدخل بين ${args.beforeItemText} و ${args.afterItemText}`
};
var $f311c26671219eca$exports = {};
$f311c26671219eca$exports = {
  "dragDescriptionKeyboard": `Натиснете „Enter“, за да започнете да плъзгате.`,
  "dragDescriptionKeyboardAlt": `Натиснете Alt + Enter, за да започнете да плъзгате.`,
  "dragDescriptionLongPress": `Натиснете продължително, за да започнете да плъзгате.`,
  "dragDescriptionTouch": `Натиснете двукратно, за да започнете да плъзгате.`,
  "dragDescriptionVirtual": `Щракнете, за да започнете да плъзгате.`,
  "dragItem": (args) => `Плъзни ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Плъзни ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} избран елемент`,
    other: () => `${formatter.number(args.count)} избрани елемента`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Натиснете Enter, за да плъзнете ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} избран елемент`,
    other: () => `${formatter.number(args.count)} избрани елементи`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Натиснете Alt и Enter, за да плъзнете ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} избран елемент`,
    other: () => `${formatter.number(args.count)} избрани елементи`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Натиснете продължително, за да плъзнете ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} избран елемент`,
    other: () => `${formatter.number(args.count)} избрани елементи`
  })}.`,
  "dragStartedKeyboard": `Започна плъзгане. Натиснете „Tab“, за да се придвижите до целта, след което натиснете „Enter“ за пускане или натиснете „Escape“ за отмяна.`,
  "dragStartedTouch": `Започна плъзгане. Придвижете се до целта, след което натиснете двукратно, за да пуснете.`,
  "dragStartedVirtual": `Започна плъзгане. Придвижете се до целта, след което щракнете или натиснете „Enter“ за пускане.`,
  "dropCanceled": `Пускането е отменено.`,
  "dropComplete": `Пускането е завършено.`,
  "dropDescriptionKeyboard": `Натиснете „Enter“ за пускане. Натиснете „Escape“ за отмяна на плъзгането.`,
  "dropDescriptionTouch": `Натиснете двукратно за пускане.`,
  "dropDescriptionVirtual": `Щракнете за пускане.`,
  "dropIndicator": `индикатор за пускане`,
  "dropOnItem": (args) => `Пусни върху ${args.itemText}`,
  "dropOnRoot": `Пусни върху`,
  "endDragKeyboard": `Плъзгане. Натиснете „Enter“ за отмяна на плъзгането.`,
  "endDragTouch": `Плъзгане. Натиснете двукратно за отмяна на плъзгането.`,
  "endDragVirtual": `Плъзгане. Щракнете за отмяна.`,
  "insertAfter": (args) => `Вмъкни след ${args.itemText}`,
  "insertBefore": (args) => `Вмъкни преди ${args.itemText}`,
  "insertBetween": (args) => `Вмъкни между ${args.beforeItemText} и ${args.afterItemText}`
};
var $1aa4ade186550f72$exports = {};
$1aa4ade186550f72$exports = {
  "dragDescriptionKeyboard": `Stisknutím klávesy Enter začnete s přetahováním.`,
  "dragDescriptionKeyboardAlt": `Stisknutím Alt + Enter zahájíte přetahování.`,
  "dragDescriptionLongPress": `Dlouhým stisknutím zahájíte přetahování.`,
  "dragDescriptionTouch": `Poklepáním začnete s přetahováním.`,
  "dragDescriptionVirtual": `Kliknutím začnete s přetahováním.`,
  "dragItem": (args) => `Přetáhnout ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Přetáhnout ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} vybranou položku`,
    few: () => `${formatter.number(args.count)} vybrané položky`,
    other: () => `${formatter.number(args.count)} vybraných položek`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Stisknutím klávesy Enter přetáhněte ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} vybranou položku`,
    other: () => `${formatter.number(args.count)} vybrané položky`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Stisknutím Alt + Enter přetáhněte ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} vybranou položku`,
    other: () => `${formatter.number(args.count)} vybrané položky`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Dlouhým stisknutím přetáhnete ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} vybranou položku`,
    other: () => `${formatter.number(args.count)} vybrané položky`
  })}.`,
  "dragStartedKeyboard": `Začněte s přetahováním. Po stisknutí klávesy Tab najděte požadovaný cíl a stisknutím klávesy Enter přetažení dokončete nebo stisknutím klávesy Esc akci zrušte.`,
  "dragStartedTouch": `Začněte s přetahováním. Najděte požadovaný cíl a poklepáním přetažení dokončete.`,
  "dragStartedVirtual": `Začněte s přetahováním. Najděte požadovaný cíl a kliknutím nebo stisknutím klávesy Enter přetažení dokončete.`,
  "dropCanceled": `Přetažení bylo zrušeno.`,
  "dropComplete": `Přetažení bylo dokončeno.`,
  "dropDescriptionKeyboard": `Stisknutím klávesy Enter přetažení dokončete nebo stisknutím klávesy Esc akci zrušte.`,
  "dropDescriptionTouch": `Poklepáním přetažení dokončete.`,
  "dropDescriptionVirtual": `Kliknutím objekt přetáhněte.`,
  "dropIndicator": `indikátor přetažení`,
  "dropOnItem": (args) => `Přetáhnout na ${args.itemText}`,
  "dropOnRoot": `Přetáhnout na`,
  "endDragKeyboard": `Probíhá přetahování. Stisknutím klávesy Enter přetažení zrušíte.`,
  "endDragTouch": `Probíhá přetahování. Poklepáním přetažení zrušíte.`,
  "endDragVirtual": `Probíhá přetahování. Kliknutím přetažení zrušíte.`,
  "insertAfter": (args) => `Vložit za ${args.itemText}`,
  "insertBefore": (args) => `Vložit před ${args.itemText}`,
  "insertBetween": (args) => `Vložit mezi ${args.beforeItemText} a ${args.afterItemText}`
};
var $b6b0ea1b94a7633c$exports = {};
$b6b0ea1b94a7633c$exports = {
  "dragDescriptionKeyboard": `Tryk på Enter for at starte med at trække.`,
  "dragDescriptionKeyboardAlt": `Tryk på Alt + Enter for at starte med at trække.`,
  "dragDescriptionLongPress": `Tryk længe for at starte med at trække.`,
  "dragDescriptionTouch": `Dobbelttryk for at starte med at trække.`,
  "dragDescriptionVirtual": `Klik for at starte med at trække.`,
  "dragItem": (args) => `Træk ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Træk ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valgt element`,
    other: () => `${formatter.number(args.count)} valgte elementer`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Tryk på Enter for at trække ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valgte element`,
    other: () => `${formatter.number(args.count)} valgte elementer`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Tryk på Alt + Enter for at trække ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valgte element`,
    other: () => `${formatter.number(args.count)} valgte elementer`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Tryk længe for at trække ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valgte element`,
    other: () => `${formatter.number(args.count)} valgte elementer`
  })}.`,
  "dragStartedKeyboard": `Startet med at trække. Tryk på Tab for at gå til et slip-mål, tryk derefter på Enter for at slippe, eller tryk på Escape for at annullere.`,
  "dragStartedTouch": `Startet med at trække. Gå til et slip-mål, og dobbelttryk derefter for at slippe.`,
  "dragStartedVirtual": `Startet med at trække. Gå til et slip-mål, og klik eller tryk derefter på enter for at slippe.`,
  "dropCanceled": `Slip annulleret.`,
  "dropComplete": `Slip fuldført.`,
  "dropDescriptionKeyboard": `Tryk på Enter for at slippe. Tryk på Escape for at annullere trækning.`,
  "dropDescriptionTouch": `Dobbelttryk for at slippe.`,
  "dropDescriptionVirtual": `Klik for at slippe.`,
  "dropIndicator": `slip-indikator`,
  "dropOnItem": (args) => `Slip på ${args.itemText}`,
  "dropOnRoot": `Slip på`,
  "endDragKeyboard": `Trækning. Tryk på enter for at annullere træk.`,
  "endDragTouch": `Trækning. Dobbelttryk for at annullere træk.`,
  "endDragVirtual": `Trækning. Klik for at annullere trækning.`,
  "insertAfter": (args) => `Indsæt efter ${args.itemText}`,
  "insertBefore": (args) => `Indsæt før ${args.itemText}`,
  "insertBetween": (args) => `Indsæt mellem ${args.beforeItemText} og ${args.afterItemText}`
};
var $d10e4f47c744ad52$exports = {};
$d10e4f47c744ad52$exports = {
  "dragDescriptionKeyboard": `Drücken Sie die Eingabetaste, um den Ziehvorgang zu starten.`,
  "dragDescriptionKeyboardAlt": `Alt + Eingabe drücken, um den Ziehvorgang zu starten.`,
  "dragDescriptionLongPress": `Lang drücken, um mit dem Ziehen zu beginnen.`,
  "dragDescriptionTouch": `Tippen Sie doppelt, um den Ziehvorgang zu starten.`,
  "dragDescriptionVirtual": `Zum Starten des Ziehvorgangs klicken.`,
  "dragItem": (args) => `${args.itemText} ziehen`,
  "dragSelectedItems": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} ausgewähltes Objekt`,
    other: () => `${formatter.number(args.count)} ausgewählte Objekte`
  })} ziehen`,
  "dragSelectedKeyboard": (args, formatter) => `Eingabetaste drücken, um ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} ausgewähltes Element`,
    other: () => `${formatter.number(args.count)} ausgewählte Elemente`
  })} zu ziehen.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Alt + Eingabetaste drücken, um ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} ausgewähltes Element`,
    other: () => `${formatter.number(args.count)} ausgewählte Elemente`
  })} zu ziehen.`,
  "dragSelectedLongPress": (args, formatter) => `Lang drücken, um ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} ausgewähltes Element`,
    other: () => `${formatter.number(args.count)} ausgewählte Elemente`
  })} zu ziehen.`,
  "dragStartedKeyboard": `Ziehvorgang gestartet. Drücken Sie die Tabulatortaste, um zu einem Ablegeziel zu navigieren und drücken Sie dann die Eingabetaste, um das Objekt abzulegen, oder Escape, um den Vorgang abzubrechen.`,
  "dragStartedTouch": `Ziehvorgang gestartet. Navigieren Sie zu einem Ablegeziel und tippen Sie doppelt, um das Objekt abzulegen.`,
  "dragStartedVirtual": `Ziehvorgang gestartet. Navigieren Sie zu einem Ablegeziel und klicken Sie oder drücken Sie die Eingabetaste, um das Objekt abzulegen.`,
  "dropCanceled": `Ablegen abgebrochen.`,
  "dropComplete": `Ablegen abgeschlossen.`,
  "dropDescriptionKeyboard": `Drücken Sie die Eingabetaste, um das Objekt abzulegen. Drücken Sie Escape, um den Vorgang abzubrechen.`,
  "dropDescriptionTouch": `Tippen Sie doppelt, um das Objekt abzulegen.`,
  "dropDescriptionVirtual": `Zum Ablegen klicken.`,
  "dropIndicator": `Ablegeanzeiger`,
  "dropOnItem": (args) => `Auf ${args.itemText} ablegen`,
  "dropOnRoot": `Ablegen auf`,
  "endDragKeyboard": `Ziehvorgang läuft. Drücken Sie die Eingabetaste, um den Vorgang abzubrechen.`,
  "endDragTouch": `Ziehvorgang läuft. Tippen Sie doppelt, um den Vorgang abzubrechen.`,
  "endDragVirtual": `Ziehvorgang läuft. Klicken Sie, um den Vorgang abzubrechen.`,
  "insertAfter": (args) => `Nach ${args.itemText} einfügen`,
  "insertBefore": (args) => `Vor ${args.itemText} einfügen`,
  "insertBetween": (args) => `Zwischen ${args.beforeItemText} und ${args.afterItemText} einfügen`
};
var $b3d2bb9abce688ab$exports = {};
$b3d2bb9abce688ab$exports = {
  "dragDescriptionKeyboard": `Πατήστε Enter για έναρξη της μεταφοράς.`,
  "dragDescriptionKeyboardAlt": `Πατήστε Alt + Enter για έναρξη της μεταφοράς.`,
  "dragDescriptionLongPress": `Πατήστε παρατεταμένα για να ξεκινήσετε τη μεταφορά.`,
  "dragDescriptionTouch": `Πατήστε δύο φορές για έναρξη της μεταφοράς.`,
  "dragDescriptionVirtual": `Κάντε κλικ για να ξεκινήσετε τη μεταφορά.`,
  "dragItem": (args) => `Μεταφορά ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Μεταφορά σε ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} επιλεγμένο στοιχείο`,
    other: () => `${formatter.number(args.count)} επιλεγμένα στοιχεία`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Πατήστε Enter για να σύρετε ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} επιλεγμένο στοιχείο`,
    other: () => `${formatter.number(args.count)} επιλεγμένα στοιχεία`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Πατήστε Alt + Enter για να σύρετε ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} επιλεγμένο στοιχείο`,
    other: () => `${formatter.number(args.count)} επιλεγμένα στοιχεία`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Πατήστε παρατεταμένα για να σύρετε ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} επιλεγμένο στοιχείο`,
    other: () => `${formatter.number(args.count)} επιλεγμένα στοιχεία`
  })}.`,
  "dragStartedKeyboard": `Η μεταφορά ξεκίνησε. Πατήστε το πλήκτρο Tab για να μεταβείτε σε έναν προορισμό απόθεσης και, στη συνέχεια, πατήστε Enter για απόθεση ή πατήστε Escape για ακύρωση.`,
  "dragStartedTouch": `Η μεταφορά ξεκίνησε. Μεταβείτε σε έναν προορισμό απόθεσης και, στη συνέχεια, πατήστε δύο φορές για απόθεση.`,
  "dragStartedVirtual": `Η μεταφορά ξεκίνησε. Μεταβείτε σε έναν προορισμό απόθεσης και, στη συνέχεια, κάντε κλικ ή πατήστε Enter για απόθεση.`,
  "dropCanceled": `Η απόθεση ακυρώθηκε.`,
  "dropComplete": `Η απόθεση ολοκληρώθηκε.`,
  "dropDescriptionKeyboard": `Πατήστε Enter για απόθεση. Πατήστε Escape για ακύρωση της μεταφοράς.`,
  "dropDescriptionTouch": `Πατήστε δύο φορές για απόθεση.`,
  "dropDescriptionVirtual": `Κάντε κλικ για απόθεση.`,
  "dropIndicator": `δείκτης απόθεσης`,
  "dropOnItem": (args) => `Απόθεση σε ${args.itemText}`,
  "dropOnRoot": `Απόθεση σε`,
  "endDragKeyboard": `Μεταφορά σε εξέλιξη. Πατήστε Enter για ακύρωση της μεταφοράς.`,
  "endDragTouch": `Μεταφορά σε εξέλιξη. Πατήστε δύο φορές για ακύρωση της μεταφοράς.`,
  "endDragVirtual": `Μεταφορά σε εξέλιξη. Κάντε κλικ για ακύρωση της μεταφοράς.`,
  "insertAfter": (args) => `Εισαγωγή μετά από ${args.itemText}`,
  "insertBefore": (args) => `Εισαγωγή πριν από ${args.itemText}`,
  "insertBetween": (args) => `Εισαγωγή μεταξύ ${args.beforeItemText} και ${args.afterItemText}`
};
var $f9b46437e610cca1$exports = {};
$f9b46437e610cca1$exports = {
  "dragItem": (args) => `Drag ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Drag ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} selected item`,
    other: () => `${formatter.number(args.count)} selected items`
  })}`,
  "dragDescriptionKeyboard": `Press Enter to start dragging.`,
  "dragDescriptionKeyboardAlt": `Press Alt + Enter to start dragging.`,
  "dragDescriptionTouch": `Double tap to start dragging.`,
  "dragDescriptionVirtual": `Click to start dragging.`,
  "dragDescriptionLongPress": `Long press to start dragging.`,
  "dragSelectedKeyboard": (args, formatter) => `Press Enter to drag ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} selected item`,
    other: () => `${formatter.number(args.count)} selected items`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Press Alt + Enter to drag ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} selected item`,
    other: () => `${formatter.number(args.count)} selected items`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Long press to drag ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} selected item`,
    other: () => `${formatter.number(args.count)} selected items`
  })}.`,
  "dragStartedKeyboard": `Started dragging. Press Tab to navigate to a drop target, then press Enter to drop, or press Escape to cancel.`,
  "dragStartedTouch": `Started dragging. Navigate to a drop target, then double tap to drop.`,
  "dragStartedVirtual": `Started dragging. Navigate to a drop target, then click or press Enter to drop.`,
  "endDragKeyboard": `Dragging. Press Enter to cancel drag.`,
  "endDragTouch": `Dragging. Double tap to cancel drag.`,
  "endDragVirtual": `Dragging. Click to cancel drag.`,
  "dropDescriptionKeyboard": `Press Enter to drop. Press Escape to cancel drag.`,
  "dropDescriptionTouch": `Double tap to drop.`,
  "dropDescriptionVirtual": `Click to drop.`,
  "dropCanceled": `Drop canceled.`,
  "dropComplete": `Drop complete.`,
  "dropIndicator": `drop indicator`,
  "dropOnRoot": `Drop on`,
  "dropOnItem": (args) => `Drop on ${args.itemText}`,
  "insertBefore": (args) => `Insert before ${args.itemText}`,
  "insertBetween": (args) => `Insert between ${args.beforeItemText} and ${args.afterItemText}`,
  "insertAfter": (args) => `Insert after ${args.itemText}`
};
var $204b5c01bd3acf26$exports = {};
$204b5c01bd3acf26$exports = {
  "dragDescriptionKeyboard": `Pulse Intro para empezar a arrastrar.`,
  "dragDescriptionKeyboardAlt": `Pulse Intro para empezar a arrastrar.`,
  "dragDescriptionLongPress": `Mantenga pulsado para comenzar a arrastrar.`,
  "dragDescriptionTouch": `Pulse dos veces para iniciar el arrastre.`,
  "dragDescriptionVirtual": `Haga clic para iniciar el arrastre.`,
  "dragItem": (args) => `Arrastrar ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Arrastrar ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} elemento seleccionado`,
    other: () => `${formatter.number(args.count)} elementos seleccionados`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Pulse Intro para arrastrar ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} elemento seleccionado`,
    other: () => `${formatter.number(args.count)} elementos seleccionados`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Pulse Alt + Intro para arrastrar ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} elemento seleccionado`,
    other: () => `${formatter.number(args.count)} elementos seleccionados`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Mantenga pulsado para arrastrar ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} elemento seleccionado`,
    other: () => `${formatter.number(args.count)} elementos seleccionados`
  })}.`,
  "dragStartedKeyboard": `Se ha empezado a arrastrar. Pulse el tabulador para ir al público destinatario donde se vaya a colocar y, a continuación, pulse Intro para soltar, o pulse Escape para cancelar.`,
  "dragStartedTouch": `Se ha empezado a arrastrar. Vaya al público destinatario donde se vaya a colocar y, a continuación, pulse dos veces para soltar.`,
  "dragStartedVirtual": `Se ha empezado a arrastrar. Vaya al público destinatario donde se vaya a colocar y, a continuación, haga clic o pulse Intro para soltar.`,
  "dropCanceled": `Se ha cancelado la colocación.`,
  "dropComplete": `Colocación finalizada.`,
  "dropDescriptionKeyboard": `Pulse Intro para soltar. Pulse Escape para cancelar el arrastre.`,
  "dropDescriptionTouch": `Pulse dos veces para soltar.`,
  "dropDescriptionVirtual": `Haga clic para soltar.`,
  "dropIndicator": `indicador de colocación`,
  "dropOnItem": (args) => `Soltar en ${args.itemText}`,
  "dropOnRoot": `Soltar en`,
  "endDragKeyboard": `Arrastrando. Pulse Intro para cancelar el arrastre.`,
  "endDragTouch": `Arrastrando. Pulse dos veces para cancelar el arrastre.`,
  "endDragVirtual": `Arrastrando. Haga clic para cancelar el arrastre.`,
  "insertAfter": (args) => `Insertar después de ${args.itemText}`,
  "insertBefore": (args) => `Insertar antes de ${args.itemText}`,
  "insertBetween": (args) => `Insertar entre ${args.beforeItemText} y ${args.afterItemText}`
};
var $110bdd83348ecbc0$exports = {};
$110bdd83348ecbc0$exports = {
  "dragDescriptionKeyboard": `Lohistamise alustamiseks vajutage klahvi Enter.`,
  "dragDescriptionKeyboardAlt": `Lohistamise alustamiseks vajutage klahvikombinatsiooni Alt + Enter.`,
  "dragDescriptionLongPress": `Vajutage pikalt lohistamise alustamiseks.`,
  "dragDescriptionTouch": `Topeltpuudutage lohistamise alustamiseks.`,
  "dragDescriptionVirtual": `Klõpsake lohistamise alustamiseks.`,
  "dragItem": (args) => `Lohista ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Lohista ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valitud üksust`,
    other: () => `${formatter.number(args.count)} valitud üksust`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valitud üksuse`,
    other: () => `${formatter.number(args.count)} valitud üksuse`
  })} lohistamiseks vajutage sisestusklahvi Enter.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Lohistamiseks vajutage klahvikombinatsiooni Alt + Enter ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valitud üksuse`,
    other: () => `${formatter.number(args.count)} valitud üksuse`
  })} jaoks.`,
  "dragSelectedLongPress": (args, formatter) => `Pikk vajutus ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valitud üksuse`,
    other: () => `${formatter.number(args.count)} valitud üksuse`
  })} lohistamiseks.`,
  "dragStartedKeyboard": `Alustati lohistamist. Kukutamise sihtmärgi juurde navigeerimiseks vajutage klahvi Tab, seejärel vajutage kukutamiseks klahvi Enter või loobumiseks klahvi Escape.`,
  "dragStartedTouch": `Alustati lohistamist. Navigeerige kukutamise sihtmärgi juurde ja topeltpuudutage kukutamiseks.`,
  "dragStartedVirtual": `Alustati lohistamist. Navigeerige kukutamise sihtmärgi juurde ja kukutamiseks klõpsake või vajutage klahvi Enter.`,
  "dropCanceled": `Lohistamisest loobuti.`,
  "dropComplete": `Lohistamine on tehtud.`,
  "dropDescriptionKeyboard": `Kukutamiseks vajutage klahvi Enter. Lohistamisest loobumiseks vajutage klahvi Escape.`,
  "dropDescriptionTouch": `Kukutamiseks topeltpuudutage.`,
  "dropDescriptionVirtual": `Kukutamiseks klõpsake.`,
  "dropIndicator": `lohistamise indikaator`,
  "dropOnItem": (args) => `Kukuta asukohta ${args.itemText}`,
  "dropOnRoot": `Kukuta asukohta`,
  "endDragKeyboard": `Lohistamine. Lohistamisest loobumiseks vajutage klahvi Enter.`,
  "endDragTouch": `Lohistamine. Lohistamisest loobumiseks topeltpuudutage.`,
  "endDragVirtual": `Lohistamine. Lohistamisest loobumiseks klõpsake.`,
  "insertAfter": (args) => `Sisesta ${args.itemText} järele`,
  "insertBefore": (args) => `Sisesta ${args.itemText} ette`,
  "insertBetween": (args) => `Sisesta ${args.beforeItemText} ja ${args.afterItemText} vahele`
};
var $87d3ccd5e347c7cc$exports = {};
$87d3ccd5e347c7cc$exports = {
  "dragDescriptionKeyboard": `Aloita vetäminen painamalla Enter-näppäintä.`,
  "dragDescriptionKeyboardAlt": `Aloita vetäminen painamalla Alt + Enter -näppäinyhdistelmää.`,
  "dragDescriptionLongPress": `Aloita vetäminen pitämällä painettuna.`,
  "dragDescriptionTouch": `Aloita vetäminen kaksoisnapauttamalla.`,
  "dragDescriptionVirtual": `Aloita vetäminen napsauttamalla.`,
  "dragItem": (args) => `Vedä kohdetta ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Vedä ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valittua kohdetta`,
    other: () => `${formatter.number(args.count)} valittua kohdetta`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Vedä painamalla Enter ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valittu kohde`,
    other: () => `${formatter.number(args.count)} valittua kohdetta`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Vedä painamalla Alt + Enter ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valittu kohde`,
    other: () => `${formatter.number(args.count)} valittua kohdetta`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Vedä pitämällä painettuna ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valittu kohde`,
    other: () => `${formatter.number(args.count)} valittua kohdetta`
  })}.`,
  "dragStartedKeyboard": `Vetäminen aloitettu. Siirry pudotuskohteeseen painamalla sarkainnäppäintä ja sitten pudota painamalla Enter-näppäintä tai peruuta painamalla Escape-näppäintä.`,
  "dragStartedTouch": `Vetäminen aloitettu. Siirry pudotuskohteeseen ja pudota kaksoisnapauttamalla.`,
  "dragStartedVirtual": `Vetäminen aloitettu. Siirry pudotuskohteeseen ja pudota napsauttamalla tai painamalla Enter-näppäintä.`,
  "dropCanceled": `Pudotus peruutettu.`,
  "dropComplete": `Pudotus suoritettu.`,
  "dropDescriptionKeyboard": `Pudota painamalla Enter-näppäintä. Peruuta vetäminen painamalla Escape-näppäintä.`,
  "dropDescriptionTouch": `Pudota kaksoisnapauttamalla.`,
  "dropDescriptionVirtual": `Pudota napsauttamalla.`,
  "dropIndicator": `pudotuksen ilmaisin`,
  "dropOnItem": (args) => `Pudota kohteeseen ${args.itemText}`,
  "dropOnRoot": `Pudota kohteeseen`,
  "endDragKeyboard": `Vedetään. Peruuta vetäminen painamalla Enter-näppäintä.`,
  "endDragTouch": `Vedetään. Peruuta vetäminen kaksoisnapauttamalla.`,
  "endDragVirtual": `Vedetään. Peruuta vetäminen napsauttamalla.`,
  "insertAfter": (args) => `Lisää kohteen ${args.itemText} jälkeen`,
  "insertBefore": (args) => `Lisää ennen kohdetta ${args.itemText}`,
  "insertBetween": (args) => `Lisää kohteiden ${args.beforeItemText} ja ${args.afterItemText} väliin`
};
var $a5de891427686596$exports = {};
$a5de891427686596$exports = {
  "dragDescriptionKeyboard": `Appuyez sur Entrée pour commencer le déplacement.`,
  "dragDescriptionKeyboardAlt": `Appuyez sur Alt + Entrée pour commencer à faire glisser.`,
  "dragDescriptionLongPress": `Appuyez de manière prolongée pour commencer à faire glisser.`,
  "dragDescriptionTouch": `Touchez deux fois pour commencer le déplacement.`,
  "dragDescriptionVirtual": `Cliquez pour commencer le déplacement.`,
  "dragItem": (args) => `Déplacer ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Déplacer ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} élément sélectionné`,
    other: () => `${formatter.number(args.count)} éléments sélectionnés`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Appuyez sur Entrée pour faire glisser ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} élément sélectionné`,
    other: () => `${formatter.number(args.count)} éléments sélectionnés`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Appuyez sur Alt + Entrée pour faire glisser ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} élément sélectionné`,
    other: () => `${formatter.number(args.count)} éléments sélectionnés`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Appuyez de manière prolongée pour faire glisser ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} élément sélectionné`,
    other: () => `${formatter.number(args.count)} éléments sélectionnés`
  })}.`,
  "dragStartedKeyboard": `Déplacement commencé. Appuyez sur Tabulation pour accéder à une cible de dépôt, puis appuyez sur Entrée pour déposer, ou appuyez sur Échap pour annuler.`,
  "dragStartedTouch": `Déplacement commencé. Accédez à une cible de dépôt, puis touchez deux fois pour déposer.`,
  "dragStartedVirtual": `Déplacement commencé. Accédez à une cible de dépôt, puis cliquez ou appuyez sur Entrée pour déposer.`,
  "dropCanceled": `Dépôt annulé.`,
  "dropComplete": `Dépôt terminé.`,
  "dropDescriptionKeyboard": `Appuyez sur Entrée pour déposer. Appuyez sur Échap pour annuler le déplacement.`,
  "dropDescriptionTouch": `Touchez deux fois pour déposer.`,
  "dropDescriptionVirtual": `Cliquez pour déposer.`,
  "dropIndicator": `indicateur de dépôt`,
  "dropOnItem": (args) => `Déposer sur ${args.itemText}`,
  "dropOnRoot": `Déposer sur`,
  "endDragKeyboard": `Déplacement. Appuyez sur Entrée pour annuler le déplacement.`,
  "endDragTouch": `Déplacement. Touchez deux fois pour annuler le déplacement.`,
  "endDragVirtual": `Déplacement. Cliquez pour annuler le déplacement.`,
  "insertAfter": (args) => `Insérer après ${args.itemText}`,
  "insertBefore": (args) => `Insérer avant ${args.itemText}`,
  "insertBetween": (args) => `Insérer entre ${args.beforeItemText} et ${args.afterItemText}`
};
var $ad7f4c66d85b4494$exports = {};
$ad7f4c66d85b4494$exports = {
  "dragDescriptionKeyboard": `הקש על Enter כדי להתחיל לגרור.`,
  "dragDescriptionKeyboardAlt": `הקש Alt + Enter כדי להתחיל לגרור.`,
  "dragDescriptionLongPress": `לחץ לחיצה ארוכה כדי להתחיל לגרור.`,
  "dragDescriptionTouch": `הקש פעמיים כדי להתחיל בגרירה.`,
  "dragDescriptionVirtual": `לחץ כדי להתחיל לגרור.`,
  "dragItem": (args) => `גרור את ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `גרור ${formatter.plural(args.count, {
    one: () => `פריט נבחר ${formatter.number(args.count)}`,
    other: () => `${formatter.number(args.count)} פריטים שנבחרו`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `הקש על Enter כדי לגרור ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} פריט שנבחר`,
    other: () => `${formatter.number(args.count)} פריטים שנבחרו`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `הקש Alt + Enter כדי לגרור ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} פריט שנבחר`,
    other: () => `${formatter.number(args.count)} פריטים שנבחרו`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `לחץ לחיצה ארוכה כדי לגרור ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} פריט שנבחר`,
    other: () => `${formatter.number(args.count)} פריטים שנבחרו`
  })}.`,
  "dragStartedKeyboard": `התחלת לגרור. הקש על Tab כדי לנווט לנקודת הגרירה ולאחר מכן הקש על Enter כדי לשחרר או על Escape כדי לבטל.`,
  "dragStartedTouch": `התחלת לגרור. נווט לנקודת השחרור ולאחר מכן הקש פעמיים כדי לשחרר.`,
  "dragStartedVirtual": `התחלת לגרור. נווט לנקודת השחרור ולאחר מכן לחץ או הקש על Enter כדי לשחרר.`,
  "dropCanceled": `השחרור בוטל.`,
  "dropComplete": `השחרור הושלם.`,
  "dropDescriptionKeyboard": `הקש על Enter כדי לשחרר. הקש על Escape כדי לבטל את הגרירה.`,
  "dropDescriptionTouch": `הקש פעמיים כדי לשחרר.`,
  "dropDescriptionVirtual": `לחץ כדי לשחרר.`,
  "dropIndicator": `מחוון שחרור`,
  "dropOnItem": (args) => `שחרר על ${args.itemText}`,
  "dropOnRoot": `שחרר על`,
  "endDragKeyboard": `גורר. הקש על Enter כדי לבטל את הגרירה.`,
  "endDragTouch": `גורר. הקש פעמיים כדי לבטל את הגרירה.`,
  "endDragVirtual": `גורר. לחץ כדי לבטל את הגרירה.`,
  "insertAfter": (args) => `הוסף אחרי ${args.itemText}`,
  "insertBefore": (args) => `הוסף לפני ${args.itemText}`,
  "insertBetween": (args) => `הוסף בין ${args.beforeItemText} לבין ${args.afterItemText}`
};
var $4aa59f3c6a796cae$exports = {};
$4aa59f3c6a796cae$exports = {
  "dragDescriptionKeyboard": `Pritisnite Enter da biste počeli povlačiti.`,
  "dragDescriptionKeyboardAlt": `Pritisnite Alt + Enter za početak povlačenja.`,
  "dragDescriptionLongPress": `Dugo pritisnite za početak povlačenja.`,
  "dragDescriptionTouch": `Dvaput dodirnite da biste počeli povlačiti.`,
  "dragDescriptionVirtual": `Kliknite da biste počeli povlačiti.`,
  "dragItem": (args) => `Povucite stavku ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Povucite ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} odabranu stavku`,
    other: () => `ovoliko odabranih stavki: ${formatter.number(args.count)}`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Pritisnite Enter za povlačenje ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} odabrana stavka`,
    other: () => `${formatter.number(args.count)} odabrane stavke`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Pritisnite Alt + Enter za povlačenje ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} odabrana stavka`,
    other: () => `${formatter.number(args.count)} odabrane stavke`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Dugo pritisnite za povlačenje ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} odabrana stavka`,
    other: () => `${formatter.number(args.count)} odabrane stavke`
  })}.`,
  "dragStartedKeyboard": `Počeli ste povlačiti. Pritisnite tipku tabulatora da biste došli do cilja ispuštanja, a zatim Enter da biste ispustili stavku ili Escape da biste prekinuli povlačenje.`,
  "dragStartedTouch": `Počeli ste povlačiti. Dođite do cilja ispuštanja, a zatim dvaput dodirnite da biste ispustili stavku.`,
  "dragStartedVirtual": `Počeli ste povlačiti. Dođite do cilja ispuštanja, a zatim kliknite ili pritisnite Enter da biste ispustili stavku.`,
  "dropCanceled": `Povlačenje je prekinuto.`,
  "dropComplete": `Ispuštanje je dovršeno.`,
  "dropDescriptionKeyboard": `Pritisnite Enter da biste ispustili stavku. Pritisnite Escape da biste prekinuli povlačenje.`,
  "dropDescriptionTouch": `Dvaput dodirnite da biste ispustili stavku.`,
  "dropDescriptionVirtual": `Kliknite da biste ispustili stavku.`,
  "dropIndicator": `pokazatelj ispuštanja`,
  "dropOnItem": (args) => `Ispustite na stavku ${args.itemText}`,
  "dropOnRoot": `Ispustite na`,
  "endDragKeyboard": `Povlačenje. Pritisnite Enter da biste prekinuli povlačenje.`,
  "endDragTouch": `Povlačenje. Dvaput dodirnite da biste prekinuli povlačenje.`,
  "endDragVirtual": `Povlačenje. Kliknite da biste prekinuli povlačenje.`,
  "insertAfter": (args) => `Umetnite iza stavke ${args.itemText}`,
  "insertBefore": (args) => `Ispustite ispred stavke ${args.itemText}`,
  "insertBetween": (args) => `Umetnite između stavki ${args.beforeItemText} i ${args.afterItemText}`
};
var $d8d3646556c40586$exports = {};
$d8d3646556c40586$exports = {
  "dragDescriptionKeyboard": `Nyomja le az Enter billentyűt a húzás megkezdéséhez.`,
  "dragDescriptionKeyboardAlt": `Nyomja le az Alt + Enter billentyűket a húzás megkezdéséhez.`,
  "dragDescriptionLongPress": `Hosszan nyomja meg a húzás elindításához.`,
  "dragDescriptionTouch": `Koppintson duplán a húzás megkezdéséhez.`,
  "dragDescriptionVirtual": `Kattintson a húzás megkezdéséhez.`,
  "dragItem": (args) => `${args.itemText} húzása`,
  "dragSelectedItems": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} kijelölt elem`,
    other: () => `${formatter.number(args.count)} kijelölt elem`
  })} húzása`,
  "dragSelectedKeyboard": (args, formatter) => `Nyomja meg az Entert ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} kijelölt elem`,
    other: () => `${formatter.number(args.count)} kijelölt elem`
  })} húzásához.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Nyomja meg az Alt + Enter billentyűket ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} kijelölt elem`,
    other: () => `${formatter.number(args.count)} kijelölt elem`
  })} húzásához.`,
  "dragSelectedLongPress": (args, formatter) => `Tartsa lenyomva hosszan ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} kijelölt elem`,
    other: () => `${formatter.number(args.count)} kijelölt elem`
  })} húzásához.`,
  "dragStartedKeyboard": `Húzás megkezdve. Nyomja le a Tab billentyűt az elengedési célhoz navigálásához, majd nyomja le az Enter billentyűt az elengedéshez, vagy nyomja le az Escape billentyűt a megszakításhoz.`,
  "dragStartedTouch": `Húzás megkezdve. Navigáljon egy elengedési célhoz, majd koppintson duplán az elengedéshez.`,
  "dragStartedVirtual": `Húzás megkezdve. Navigáljon egy elengedési célhoz, majd kattintson vagy nyomja le az Enter billentyűt az elengedéshez.`,
  "dropCanceled": `Elengedés megszakítva.`,
  "dropComplete": `Elengedés teljesítve.`,
  "dropDescriptionKeyboard": `Nyomja le az Enter billentyűt az elengedéshez. Nyomja le az Escape billentyűt a húzás megszakításához.`,
  "dropDescriptionTouch": `Koppintson duplán az elengedéshez.`,
  "dropDescriptionVirtual": `Kattintson az elengedéshez.`,
  "dropIndicator": `elengedésjelző`,
  "dropOnItem": (args) => `Elengedés erre: ${args.itemText}`,
  "dropOnRoot": `Elengedés erre:`,
  "endDragKeyboard": `Húzás folyamatban. Nyomja le az Enter billentyűt a húzás megszakításához.`,
  "endDragTouch": `Húzás folyamatban. Koppintson duplán a húzás megszakításához.`,
  "endDragVirtual": `Húzás folyamatban. Kattintson a húzás megszakításához.`,
  "insertAfter": (args) => `Beszúrás ${args.itemText} után`,
  "insertBefore": (args) => `Beszúrás ${args.itemText} elé`,
  "insertBetween": (args) => `Beszúrás ${args.beforeItemText} és ${args.afterItemText} közé`
};
var $982d558b45395246$exports = {};
$982d558b45395246$exports = {
  "dragDescriptionKeyboard": `Premi Invio per iniziare a trascinare.`,
  "dragDescriptionKeyboardAlt": `Premi Alt + Invio per iniziare a trascinare.`,
  "dragDescriptionLongPress": `Premi a lungo per iniziare a trascinare.`,
  "dragDescriptionTouch": `Tocca due volte per iniziare a trascinare.`,
  "dragDescriptionVirtual": `Fai clic per iniziare a trascinare.`,
  "dragItem": (args) => `Trascina ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Trascina ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} altro elemento selezionato`,
    other: () => `${formatter.number(args.count)} altri elementi selezionati`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Premi Invio per trascinare ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} elemento selezionato`,
    other: () => `${formatter.number(args.count)} elementi selezionati`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Premi Alt + Invio per trascinare ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} elemento selezionato`,
    other: () => `${formatter.number(args.count)} elementi selezionati`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Premi a lungo per trascinare ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} elemento selezionato`,
    other: () => `${formatter.number(args.count)} elementi selezionati`
  })}.`,
  "dragStartedKeyboard": `Hai iniziato a trascinare. Premi Tab per arrivare sull’area di destinazione, quindi premi Invio per rilasciare o Esc per annullare.`,
  "dragStartedTouch": `Hai iniziato a trascinare. Arriva sull’area di destinazione, quindi tocca due volte per rilasciare.`,
  "dragStartedVirtual": `Hai iniziato a trascinare. Arriva sull’area di destinazione, quindi fai clic o premi Invio per rilasciare.`,
  "dropCanceled": `Rilascio annullato.`,
  "dropComplete": `Rilascio completato.`,
  "dropDescriptionKeyboard": `Premi Invio per rilasciare. Premi Esc per annullare.`,
  "dropDescriptionTouch": `Tocca due volte per rilasciare.`,
  "dropDescriptionVirtual": `Fai clic per rilasciare.`,
  "dropIndicator": `indicatore di rilascio`,
  "dropOnItem": (args) => `Rilascia su ${args.itemText}`,
  "dropOnRoot": `Rilascia su`,
  "endDragKeyboard": `Trascinamento. Premi Invio per annullare.`,
  "endDragTouch": `Trascinamento. Tocca due volte per annullare.`,
  "endDragVirtual": `Trascinamento. Fai clic per annullare.`,
  "insertAfter": (args) => `Inserisci dopo ${args.itemText}`,
  "insertBefore": (args) => `Inserisci prima di ${args.itemText}`,
  "insertBetween": (args) => `Inserisci tra ${args.beforeItemText} e ${args.afterItemText}`
};
var $6a0cf387b9de036c$exports = {};
$6a0cf387b9de036c$exports = {
  "dragDescriptionKeyboard": `Enter キーを押してドラッグを開始してください。`,
  "dragDescriptionKeyboardAlt": `Alt+Enter キーを押してドラッグを開始します。`,
  "dragDescriptionLongPress": `長押ししてドラッグを開始します。`,
  "dragDescriptionTouch": `ダブルタップしてドラッグを開始します。`,
  "dragDescriptionVirtual": `クリックしてドラッグを開始します。`,
  "dragItem": (args) => `${args.itemText} をドラッグ`,
  "dragSelectedItems": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 個の選択項目`,
    other: () => `${formatter.number(args.count)} 個の選択項目`
  })} をドラッグ`,
  "dragSelectedKeyboard": (args, formatter) => `Enter キーを押して、${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 選択した項目`,
    other: () => `${formatter.number(args.count)} 選択した項目`
  })}をドラッグします。`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Alt+Enter キーを押して、${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 選択した項目`,
    other: () => `${formatter.number(args.count)} 選択した項目`
  })}をドラッグします。`,
  "dragSelectedLongPress": (args, formatter) => `長押しして、${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 選択した項目`,
    other: () => `${formatter.number(args.count)} 選択した項目`
  })}をドラッグします。`,
  "dragStartedKeyboard": `ドラッグを開始します。Tab キーを押してドロップターゲットにいどうし、Enter キーを押してドロップするか、Esc キーを押してキャンセルします。`,
  "dragStartedTouch": `ドラッグを開始しました。ドロップのターゲットに移動し、ダブルタップしてドロップします。`,
  "dragStartedVirtual": `ドラッグを開始しました。ドロップのターゲットに移動し、クリックまたは Enter キーを押してドロップします。`,
  "dropCanceled": `ドロップがキャンセルされました。`,
  "dropComplete": `ドロップが完了しました。`,
  "dropDescriptionKeyboard": `Enter キーを押してドロップします。Esc キーを押してドラッグをキャンセルします。`,
  "dropDescriptionTouch": `ダブルタップしてドロップします。`,
  "dropDescriptionVirtual": `クリックしてドロップします。`,
  "dropIndicator": `ドロップインジケーター`,
  "dropOnItem": (args) => `${args.itemText} にドロップ`,
  "dropOnRoot": `ドロップ場所`,
  "endDragKeyboard": `ドラッグしています。Enter キーを押してドラッグをキャンセルします。`,
  "endDragTouch": `ドラッグしています。ダブルタップしてドラッグをキャンセルします。`,
  "endDragVirtual": `ドラッグしています。クリックしてドラッグをキャンセルします。`,
  "insertAfter": (args) => `${args.itemText} の後に挿入`,
  "insertBefore": (args) => `${args.itemText} の前に挿入`,
  "insertBetween": (args) => `${args.beforeItemText} と ${args.afterItemText} の間に挿入`
};
var $a97fefa2956f4bcb$exports = {};
$a97fefa2956f4bcb$exports = {
  "dragDescriptionKeyboard": `드래그를 시작하려면 Enter를 누르세요.`,
  "dragDescriptionKeyboardAlt": `드래그를 시작하려면 Alt + Enter를 누르십시오.`,
  "dragDescriptionLongPress": `드래그를 시작하려면 길게 누르십시오.`,
  "dragDescriptionTouch": `드래그를 시작하려면 더블 탭하세요.`,
  "dragDescriptionVirtual": `드래그를 시작하려면 클릭하세요.`,
  "dragItem": (args) => `${args.itemText} 드래그`,
  "dragSelectedItems": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)}개 선택 항목`,
    other: () => `${formatter.number(args.count)}개 선택 항목`
  })} 드래그`,
  "dragSelectedKeyboard": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)}개 선택 항목`,
    other: () => `${formatter.number(args.count)}개 선택 항목`
  })}을 드래그하려면 Enter를 누르십시오.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)}개 선택 항목`,
    other: () => `${formatter.number(args.count)}개 선택 항목`
  })}을 드래그하려면 Alt + Enter를 누르십시오.`,
  "dragSelectedLongPress": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)}개 선택 항목`,
    other: () => `${formatter.number(args.count)}개 선택 항목`
  })}을 드래그하려면 길게 누르십시오.`,
  "dragStartedKeyboard": `드래그가 시작되었습니다. Tab을 눌러 드롭 대상으로 이동한 다음 Enter를 눌러 드롭하거나 Esc를 눌러 취소하세요.`,
  "dragStartedTouch": `드래그가 시작되었습니다. 드롭 대상으로 이동한 다음 더블 탭하여 드롭하세요.`,
  "dragStartedVirtual": `드래그가 시작되었습니다. 드롭 대상으로 이동한 다음 클릭하거나 Enter를 눌러 드롭하세요.`,
  "dropCanceled": `드롭이 취소되었습니다.`,
  "dropComplete": `드롭이 완료되었습니다.`,
  "dropDescriptionKeyboard": `드롭하려면 Enter를 누르세요. 드래그를 취소하려면 Esc를 누르세요.`,
  "dropDescriptionTouch": `더블 탭하여 드롭하세요.`,
  "dropDescriptionVirtual": `드롭하려면 클릭하세요.`,
  "dropIndicator": `드롭 표시기`,
  "dropOnItem": (args) => `${args.itemText}에 드롭`,
  "dropOnRoot": `드롭 대상`,
  "endDragKeyboard": `드래그 중입니다. 드래그를 취소하려면 Enter를 누르세요.`,
  "endDragTouch": `드래그 중입니다. 드래그를 취소하려면 더블 탭하세요.`,
  "endDragVirtual": `드래그 중입니다. 드래그를 취소하려면 클릭하세요.`,
  "insertAfter": (args) => `${args.itemText} 이후에 삽입`,
  "insertBefore": (args) => `${args.itemText} 이전에 삽입`,
  "insertBetween": (args) => `${args.beforeItemText} 및 ${args.afterItemText} 사이에 삽입`
};
var $5fb5837f94e1c150$exports = {};
$5fb5837f94e1c150$exports = {
  "dragDescriptionKeyboard": `Paspauskite „Enter“, kad pradėtumėte vilkti.`,
  "dragDescriptionKeyboardAlt": `Paspauskite „Alt + Enter“, kad pradėtumėte vilkti.`,
  "dragDescriptionLongPress": `Palaikykite nuspaudę, kad pradėtumėte vilkti.`,
  "dragDescriptionTouch": `Palieskite dukart, kad pradėtumėte vilkti.`,
  "dragDescriptionVirtual": `Spustelėkite, kad pradėtumėte vilkti.`,
  "dragItem": (args) => `Vilkti ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Vilkti ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} pasirinktą elementą`,
    other: () => `${formatter.number(args.count)} pasirinktus elementus`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Paspauskite „Enter“, jei norite nuvilkti ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} pasirinktą elementą`,
    other: () => `${formatter.number(args.count)} pasirinktus elementus`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Paspauskite „Alt + Enter“, kad nuvilktumėte ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} pasirinktą elementą`,
    other: () => `${formatter.number(args.count)} pasirinktus elementus`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Nuspaudę palaikykite, kad nuvilktumėte ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} pasirinktą elementą`,
    other: () => `${formatter.number(args.count)} pasirinktus elementus`
  })}.`,
  "dragStartedKeyboard": `Pradėta vilkti. Paspauskite „Tab“, kad pereitumėte į tiesioginę paskirties vietą, tada paspauskite „Enter“, kad numestumėte, arba „Escape“, kad atšauktumėte.`,
  "dragStartedTouch": `Pradėta vilkti. Eikite į tiesioginę paskirties vietą, tada palieskite dukart, kad numestumėte.`,
  "dragStartedVirtual": `Pradėta vilkti. Eikite į tiesioginę paskirties vietą ir spustelėkite arba paspauskite „Enter“, kad numestumėte.`,
  "dropCanceled": `Numetimas atšauktas.`,
  "dropComplete": `Numesta.`,
  "dropDescriptionKeyboard": `Paspauskite „Enter“, kad numestumėte. Paspauskite „Escape“, kad atšauktumėte vilkimą.`,
  "dropDescriptionTouch": `Palieskite dukart, kad numestumėte.`,
  "dropDescriptionVirtual": `Spustelėkite, kad numestumėte.`,
  "dropIndicator": `numetimo indikatorius`,
  "dropOnItem": (args) => `Numesti ant ${args.itemText}`,
  "dropOnRoot": `Numesti ant`,
  "endDragKeyboard": `Velkama. Paspauskite „Enter“, kad atšauktumėte vilkimą.`,
  "endDragTouch": `Velkama. Spustelėkite dukart, kad atšauktumėte vilkimą.`,
  "endDragVirtual": `Velkama. Spustelėkite, kad atšauktumėte vilkimą.`,
  "insertAfter": (args) => `Įterpti po ${args.itemText}`,
  "insertBefore": (args) => `Įterpti prieš ${args.itemText}`,
  "insertBetween": (args) => `Įterpti tarp ${args.beforeItemText} ir ${args.afterItemText}`
};
var $5b2e5709864cc922$exports = {};
$5b2e5709864cc922$exports = {
  "dragDescriptionKeyboard": `Nospiediet Enter, lai sāktu vilkšanu.`,
  "dragDescriptionKeyboardAlt": `Nospiediet taustiņu kombināciju Alt+Enter, lai sāktu vilkšanu.`,
  "dragDescriptionLongPress": `Turiet nospiestu, lai sāktu vilkšanu.`,
  "dragDescriptionTouch": `Veiciet dubultskārienu, lai sāktu vilkšanu.`,
  "dragDescriptionVirtual": `Noklikšķiniet, lai sāktu vilkšanu.`,
  "dragItem": (args) => `Velciet ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Velciet ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} atlasīto vienumu`,
    other: () => `${formatter.number(args.count)} atlasītos vienumus`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Nospiediet taustiņu Enter, lai vilktu ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} atlasīto vienumu`,
    other: () => `${formatter.number(args.count)} atlasītos vienumus`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Nospiediet taustiņu kombināciju Alt+Enter, lai vilktu ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} atlasīto vienumu`,
    other: () => `${formatter.number(args.count)} atlasītos vienumus`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Turiet nospiestu, lai vilktu ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} atlasīto vienumu`,
    other: () => `${formatter.number(args.count)} atlasītos vienumus`
  })}.`,
  "dragStartedKeyboard": `Uzsākta vilkšana. Nospiediet taustiņu Tab, lai pārietu uz nomešanas mērķi, pēc tam nospiediet Enter, lai nomestu, vai nospiediet Escape, lai atceltu.`,
  "dragStartedTouch": `Uzsākta vilkšana. Pārejiet uz nomešanas mērķi, pēc tam veiciet dubultskārienu, lai nomestu.`,
  "dragStartedVirtual": `Uzsākta vilkšana. Pārejiet uz nomešanas mērķi, pēc tam nospiediet Enter, lai nomestu.`,
  "dropCanceled": `Nomešana atcelta.`,
  "dropComplete": `Nomešana pabeigta.`,
  "dropDescriptionKeyboard": `Nospiediet Enter, lai nomestu. Nospiediet Escape, lai atceltu vilkšanu.`,
  "dropDescriptionTouch": `Veiciet dubultskārienu, lai nomestu.`,
  "dropDescriptionVirtual": `Noklikšķiniet, lai nomestu.`,
  "dropIndicator": `nomešanas indikators`,
  "dropOnItem": (args) => `Nometiet uz ${args.itemText}`,
  "dropOnRoot": `Nometiet uz`,
  "endDragKeyboard": `Notiek vilkšana. Nospiediet Enter, lai atceltu vilkšanu.`,
  "endDragTouch": `Notiek vilkšana. Veiciet dubultskārienu, lai atceltu vilkšanu.`,
  "endDragVirtual": `Notiek vilkšana. Noklikšķiniet, lai atceltu vilkšanu.`,
  "insertAfter": (args) => `Ievietojiet pēc ${args.itemText}`,
  "insertBefore": (args) => `Ievietojiet pirms ${args.itemText}`,
  "insertBetween": (args) => `Ievietojiet starp ${args.beforeItemText} un ${args.afterItemText}`
};
var $ee15bb8efb18cc69$exports = {};
$ee15bb8efb18cc69$exports = {
  "dragDescriptionKeyboard": `Trykk på Enter for å begynne å dra.`,
  "dragDescriptionKeyboardAlt": `Trykk på Alt + Enter for å begynne å dra.`,
  "dragDescriptionLongPress": `Trykk lenge for å begynne å dra.`,
  "dragDescriptionTouch": `Dobbelttrykk for å begynne å dra.`,
  "dragDescriptionVirtual": `Klikk for å begynne å dra.`,
  "dragItem": (args) => `Dra ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Dra ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} merket element`,
    other: () => `${formatter.number(args.count)} merkede elementer`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Trykk Enter for å dra ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valgt element`,
    other: () => `${formatter.number(args.count)} valgte elementer`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Trykk på Alt + Enter for å dra ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valgt element`,
    other: () => `${formatter.number(args.count)} valgte elementer`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Trykk lenge for å dra ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valgt element`,
    other: () => `${formatter.number(args.count)} valgte elementer`
  })}.`,
  "dragStartedKeyboard": `Begynte å dra. Trykk på Tab for å navigere til et mål, og trykk deretter på Enter for å slippe eller på Esc for å avbryte.`,
  "dragStartedTouch": `Begynte å dra. Naviger til et mål, og dobbelttrykk for å slippe.`,
  "dragStartedVirtual": `Begynte å dra. Naviger til et mål, og klikk eller trykk på Enter for å slippe.`,
  "dropCanceled": `Avbrøt slipping.`,
  "dropComplete": `Slippingen er fullført.`,
  "dropDescriptionKeyboard": `Trykk på Enter for å slippe. Trykk på Esc hvis du vil avbryte draingen.`,
  "dropDescriptionTouch": `Dobbelttrykk for å slippe.`,
  "dropDescriptionVirtual": `Klikk for å slippe.`,
  "dropIndicator": `slippeindikator`,
  "dropOnItem": (args) => `Slipp på ${args.itemText}`,
  "dropOnRoot": `Slipp på`,
  "endDragKeyboard": `Drar. Trykk på Enter hvis du vil avbryte.`,
  "endDragTouch": `Drar. Dobbelttrykk hvis du vil avbryte.`,
  "endDragVirtual": `Drar. Klikk hvis du vil avbryte.`,
  "insertAfter": (args) => `Sett inn etter ${args.itemText}`,
  "insertBefore": (args) => `Sett inn før ${args.itemText}`,
  "insertBetween": (args) => `Sett inn mellom ${args.beforeItemText} og ${args.afterItemText}`
};
var $1daf2d4602e26ac4$exports = {};
$1daf2d4602e26ac4$exports = {
  "dragDescriptionKeyboard": `Druk op Enter om te slepen.`,
  "dragDescriptionKeyboardAlt": `Druk op Alt + Enter om te slepen.`,
  "dragDescriptionLongPress": `Houd lang ingedrukt om te slepen.`,
  "dragDescriptionTouch": `Dubbeltik om te slepen.`,
  "dragDescriptionVirtual": `Klik om met slepen te starten.`,
  "dragItem": (args) => `${args.itemText} slepen`,
  "dragSelectedItems": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} geselecteerd item`,
    other: () => `${formatter.number(args.count)} geselecteerde items`
  })} slepen`,
  "dragSelectedKeyboard": (args, formatter) => `Druk op Enter om ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} geselecteerd item`,
    other: () => `${formatter.number(args.count)} geselecteerde items`
  })} te slepen.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Druk op Alt + Enter om ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} geselecteerd item`,
    other: () => `${formatter.number(args.count)} geselecteerde items`
  })} te slepen.`,
  "dragSelectedLongPress": (args, formatter) => `Houd lang ingedrukt om ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} geselecteerd item`,
    other: () => `${formatter.number(args.count)} geselecteerde items`
  })} te slepen.`,
  "dragStartedKeyboard": `Begonnen met slepen. Druk op Tab om naar een locatie te gaan. Druk dan op Enter om neer te zetten, of op Esc om te annuleren.`,
  "dragStartedTouch": `Begonnen met slepen. Ga naar de gewenste locatie en dubbeltik om neer te zetten.`,
  "dragStartedVirtual": `Begonnen met slepen. Ga naar de gewenste locatie en klik of druk op Enter om neer te zetten.`,
  "dropCanceled": `Neerzetten geannuleerd.`,
  "dropComplete": `Neerzetten voltooid.`,
  "dropDescriptionKeyboard": `Druk op Enter om neer te zetten. Druk op Esc om het slepen te annuleren.`,
  "dropDescriptionTouch": `Dubbeltik om neer te zetten.`,
  "dropDescriptionVirtual": `Klik om neer te zetten.`,
  "dropIndicator": `aanwijzer voor neerzetten`,
  "dropOnItem": (args) => `Neerzetten op ${args.itemText}`,
  "dropOnRoot": `Neerzetten op`,
  "endDragKeyboard": `Bezig met slepen. Druk op Enter om te annuleren.`,
  "endDragTouch": `Bezig met slepen. Dubbeltik om te annuleren.`,
  "endDragVirtual": `Bezig met slepen. Klik om te annuleren.`,
  "insertAfter": (args) => `Plaatsen na ${args.itemText}`,
  "insertBefore": (args) => `Plaatsen vóór ${args.itemText}`,
  "insertBetween": (args) => `Plaatsen tussen ${args.beforeItemText} en ${args.afterItemText}`
};
var $7115429b0f60511f$exports = {};
$7115429b0f60511f$exports = {
  "dragDescriptionKeyboard": `Naciśnij Enter, aby rozpocząć przeciąganie.`,
  "dragDescriptionKeyboardAlt": `Naciśnij Alt + Enter, aby rozpocząć przeciąganie.`,
  "dragDescriptionLongPress": `Naciśnij i przytrzymaj, aby rozpocząć przeciąganie.`,
  "dragDescriptionTouch": `Dotknij dwukrotnie, aby rozpocząć przeciąganie.`,
  "dragDescriptionVirtual": `Kliknij, aby rozpocząć przeciąganie.`,
  "dragItem": (args) => `Przeciągnij ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Przeciągnij ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} wybrany element`,
    other: () => `${formatter.number(args.count)} wybranych elementów`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Naciśnij Enter, aby przeciągnąć ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} wybrany element`,
    other: () => `${formatter.number(args.count)} wybrane(-ych) elementy(-ów)`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Naciśnij Alt + Enter, aby przeciągnąć ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} wybrany element`,
    other: () => `${formatter.number(args.count)} wybrane(-ych) elementy(-ów)`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Naciśnij i przytrzymaj, aby przeciągnąć ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} wybrany element`,
    other: () => `${formatter.number(args.count)} wybrane(-ych) elementy(-ów)`
  })}.`,
  "dragStartedKeyboard": `Rozpoczęto przeciąganie. Naciśnij Tab, aby wybrać miejsce docelowe, a następnie naciśnij Enter, aby upuścić, lub Escape, aby anulować.`,
  "dragStartedTouch": `Rozpoczęto przeciąganie. Wybierz miejsce, w którym chcesz upuścić element, a następnie dotknij dwukrotnie, aby upuścić.F`,
  "dragStartedVirtual": `Rozpoczęto przeciąganie. Wybierz miejsce, w którym chcesz upuścić element, a następnie kliknij lub naciśnij Enter, aby upuścić.`,
  "dropCanceled": `Anulowano upuszczenie.`,
  "dropComplete": `Zakończono upuszczanie.`,
  "dropDescriptionKeyboard": `Naciśnij Enter, aby upuścić. Naciśnij Escape, aby anulować przeciągnięcie.`,
  "dropDescriptionTouch": `Dotknij dwukrotnie, aby upuścić.`,
  "dropDescriptionVirtual": `Kliknij, aby upuścić.`,
  "dropIndicator": `wskaźnik upuszczenia`,
  "dropOnItem": (args) => `Upuść na ${args.itemText}`,
  "dropOnRoot": `Upuść`,
  "endDragKeyboard": `Przeciąganie. Naciśnij Enter, aby anulować przeciągnięcie.`,
  "endDragTouch": `Przeciąganie. Kliknij dwukrotnie, aby anulować przeciągnięcie.`,
  "endDragVirtual": `Przeciąganie. Kliknij, aby anulować przeciąganie.`,
  "insertAfter": (args) => `Umieść za ${args.itemText}`,
  "insertBefore": (args) => `Umieść przed ${args.itemText}`,
  "insertBetween": (args) => `Umieść między ${args.beforeItemText} i ${args.afterItemText}`
};
var $5edd453ae5d4a8bc$exports = {};
$5edd453ae5d4a8bc$exports = {
  "dragDescriptionKeyboard": `Pressione Enter para começar a arrastar.`,
  "dragDescriptionKeyboardAlt": `Pressione Alt + Enter para começar a arrastar.`,
  "dragDescriptionLongPress": `Pressione e segure para começar a arrastar.`,
  "dragDescriptionTouch": `Toque duas vezes para começar a arrastar.`,
  "dragDescriptionVirtual": `Clique para começar a arrastar.`,
  "dragItem": (args) => `Arrastar ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Arrastar ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} item selecionado`,
    other: () => `${formatter.number(args.count)} itens selecionados`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Pressione Enter para arrastar ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} o item selecionado`,
    other: () => `${formatter.number(args.count)} os itens selecionados`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Pressione Alt + Enter para arrastar ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} o item selecionado`,
    other: () => `${formatter.number(args.count)} os itens selecionados`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Pressione e segure para arrastar ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} o item selecionado`,
    other: () => `${formatter.number(args.count)} os itens selecionados`
  })}.`,
  "dragStartedKeyboard": `Comece a arrastar. Pressione Tab para navegar até um alvo e, em seguida, pressione Enter para soltar ou pressione Escape para cancelar.`,
  "dragStartedTouch": `Comece a arrastar. Navegue até um alvo e toque duas vezes para soltar.`,
  "dragStartedVirtual": `Comece a arrastar. Navegue até um alvo e clique ou pressione Enter para soltar.`,
  "dropCanceled": `Liberação cancelada.`,
  "dropComplete": `Liberação concluída.`,
  "dropDescriptionKeyboard": `Pressione Enter para soltar. Pressione Escape para cancelar.`,
  "dropDescriptionTouch": `Toque duas vezes para soltar.`,
  "dropDescriptionVirtual": `Clique para soltar.`,
  "dropIndicator": `indicador de liberação`,
  "dropOnItem": (args) => `Soltar em ${args.itemText}`,
  "dropOnRoot": `Soltar`,
  "endDragKeyboard": `Arrastando. Pressione Enter para cancelar.`,
  "endDragTouch": `Arrastando. Toque duas vezes para cancelar.`,
  "endDragVirtual": `Arrastando. Clique para cancelar.`,
  "insertAfter": (args) => `Inserir após ${args.itemText}`,
  "insertBefore": (args) => `Inserir antes de ${args.itemText}`,
  "insertBetween": (args) => `Inserir entre ${args.beforeItemText} e ${args.afterItemText}`
};
var $5f431994f708535e$exports = {};
$5f431994f708535e$exports = {
  "dragDescriptionKeyboard": `Prima Enter para iniciar o arrasto.`,
  "dragDescriptionKeyboardAlt": `Prima Alt + Enter para iniciar o arrasto.`,
  "dragDescriptionLongPress": `Prima longamente para começar a arrastar.`,
  "dragDescriptionTouch": `Faça duplo toque para começar a arrastar.`,
  "dragDescriptionVirtual": `Clique para iniciar o arrasto.`,
  "dragItem": (args) => `Arrastar ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Arrastar ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} item selecionado`,
    other: () => `${formatter.number(args.count)} itens selecionados`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Prima Enter para arrastar ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} o item selecionado`,
    other: () => `${formatter.number(args.count)} os itens selecionados`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Prima Alt + Enter para arrastar ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} o item selecionado`,
    other: () => `${formatter.number(args.count)} os itens selecionados`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Prima longamente para arrastar ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} o item selecionado`,
    other: () => `${formatter.number(args.count)} os itens selecionados`
  })}.`,
  "dragStartedKeyboard": `Arrasto iniciado. Prima a tecla de tabulação para navegar para um destino para largar, e em seguida prima Enter para largar ou prima Escape para cancelar.`,
  "dragStartedTouch": `Arrasto iniciado. Navegue para um destino para largar, e em seguida faça duplo toque para largar.`,
  "dragStartedVirtual": `Arrasto iniciado. Navegue para um destino para largar, e em seguida clique ou prima Enter para largar.`,
  "dropCanceled": `Largar cancelado.`,
  "dropComplete": `Largar completo.`,
  "dropDescriptionKeyboard": `Prima Enter para largar. Prima Escape para cancelar o arrasto.`,
  "dropDescriptionTouch": `Faça duplo toque para largar.`,
  "dropDescriptionVirtual": `Clique para largar.`,
  "dropIndicator": `Indicador de largar`,
  "dropOnItem": (args) => `Largar em ${args.itemText}`,
  "dropOnRoot": `Largar em`,
  "endDragKeyboard": `A arrastar. Prima Enter para cancelar o arrasto.`,
  "endDragTouch": `A arrastar. Faça duplo toque para cancelar o arrasto.`,
  "endDragVirtual": `A arrastar. Clique para cancelar o arrasto.`,
  "insertAfter": (args) => `Inserir depois de ${args.itemText}`,
  "insertBefore": (args) => `Inserir antes de ${args.itemText}`,
  "insertBetween": (args) => `Inserir entre ${args.beforeItemText} e ${args.afterItemText}`
};
var $107b5e2e45e971f1$exports = {};
$107b5e2e45e971f1$exports = {
  "dragDescriptionKeyboard": `Apăsați pe Enter pentru a începe glisarea.`,
  "dragDescriptionKeyboardAlt": `Apăsați pe Alt + Enter pentru a începe glisarea.`,
  "dragDescriptionLongPress": `Apăsați lung pentru a începe glisarea.`,
  "dragDescriptionTouch": `Atingeți de două ori pentru a începe să glisați.`,
  "dragDescriptionVirtual": `Faceți clic pentru a începe glisarea.`,
  "dragItem": (args) => `Glisați ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Glisați ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} element selectat`,
    other: () => `${formatter.number(args.count)} elemente selectate`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Apăsați pe Enter pentru a glisa ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} element selectat`,
    other: () => `${formatter.number(args.count)} elemente selectate`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Apăsați pe Alt + Enter pentru a glisa ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} element selectat`,
    other: () => `${formatter.number(args.count)} elemente selectate`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Apăsați lung pentru a glisa ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} element selectat`,
    other: () => `${formatter.number(args.count)} elemente selectate`
  })}.`,
  "dragStartedKeyboard": `A început glisarea. Apăsați pe Tab pentru a naviga la o țintă de fixare, apoi apăsați pe Enter pentru a fixa sau apăsați pe Escape pentru a anula glisarea.`,
  "dragStartedTouch": `A început glisarea. Navigați la o țintă de fixare, apoi atingeți de două ori pentru a fixa.`,
  "dragStartedVirtual": `A început glisarea. Navigați la o țintă de fixare, apoi faceți clic sau apăsați pe Enter pentru a fixa.`,
  "dropCanceled": `Fixare anulată.`,
  "dropComplete": `Fixare finalizată.`,
  "dropDescriptionKeyboard": `Apăsați pe Enter pentru a fixa. Apăsați pe Escape pentru a anula glisarea.`,
  "dropDescriptionTouch": `Atingeți de două ori pentru a fixa.`,
  "dropDescriptionVirtual": `Faceți clic pentru a fixa.`,
  "dropIndicator": `indicator de fixare`,
  "dropOnItem": (args) => `Fixați pe ${args.itemText}`,
  "dropOnRoot": `Fixare pe`,
  "endDragKeyboard": `Se glisează. Apăsați pe Enter pentru a anula glisarea.`,
  "endDragTouch": `Se glisează. Atingeți de două ori pentru a anula glisarea.`,
  "endDragVirtual": `Se glisează. Faceți clic pentru a anula glisarea.`,
  "insertAfter": (args) => `Inserați după ${args.itemText}`,
  "insertBefore": (args) => `Inserați înainte de ${args.itemText}`,
  "insertBetween": (args) => `Inserați între ${args.beforeItemText} și ${args.afterItemText}`
};
var $d4b9c2f01c1892f7$exports = {};
$d4b9c2f01c1892f7$exports = {
  "dragDescriptionKeyboard": `Нажмите клавишу Enter для начала перетаскивания.`,
  "dragDescriptionKeyboardAlt": `Нажмите Alt + Enter, чтобы начать перетаскивать.`,
  "dragDescriptionLongPress": `Нажмите и удерживайте, чтобы начать перетаскивать.`,
  "dragDescriptionTouch": `Дважды нажмите для начала перетаскивания.`,
  "dragDescriptionVirtual": `Щелкните для начала перетаскивания.`,
  "dragItem": (args) => `Перетащить ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Перетащить ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} выбранный элемент`,
    other: () => `${formatter.number(args.count)} выбранных элем`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Нажмите Enter для перетаскивания ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} выбранного элемента`,
    other: () => `${formatter.number(args.count)} выбранных элементов`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Нажмите Alt + Enter для перетаскивания ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} выбранного элемента`,
    other: () => `${formatter.number(args.count)} выбранных элементов`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Нажмите и удерживайте для перетаскивания ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} выбранного элемента`,
    other: () => `${formatter.number(args.count)} выбранных элементов`
  })}.`,
  "dragStartedKeyboard": `Начато перетаскивание. Нажмите клавишу Tab для выбора цели, затем нажмите клавишу Enter, чтобы применить перетаскивание, или клавишу Escape для отмены действия.`,
  "dragStartedTouch": `Начато перетаскивание. Выберите цель, затем дважды нажмите, чтобы применить перетаскивание.`,
  "dragStartedVirtual": `Начато перетаскивание. Нажмите клавишу Tab для выбора цели, затем нажмите клавишу Enter, чтобы применить перетаскивание.`,
  "dropCanceled": `Перетаскивание отменено.`,
  "dropComplete": `Перетаскивание завершено.`,
  "dropDescriptionKeyboard": `Нажмите клавишу Enter, чтобы применить перетаскивание. Нажмите клавишу Escape для отмены.`,
  "dropDescriptionTouch": `Дважды нажмите, чтобы применить перетаскивание.`,
  "dropDescriptionVirtual": `Щелкните, чтобы применить перетаскивание.`,
  "dropIndicator": `индикатор перетаскивания`,
  "dropOnItem": (args) => `Перетащить на ${args.itemText}`,
  "dropOnRoot": `Перетащить на`,
  "endDragKeyboard": `Перетаскивание. Нажмите клавишу Enter для отмены.`,
  "endDragTouch": `Перетаскивание. Дважды нажмите для отмены.`,
  "endDragVirtual": `Перетаскивание. Щелкните для отмены.`,
  "insertAfter": (args) => `Вставить после ${args.itemText}`,
  "insertBefore": (args) => `Вставить перед ${args.itemText}`,
  "insertBetween": (args) => `Вставить между ${args.beforeItemText} и ${args.afterItemText}`
};
var $dbdc1942894e83e4$exports = {};
$dbdc1942894e83e4$exports = {
  "dragDescriptionKeyboard": `Stlačením klávesu Enter začnete presúvanie.`,
  "dragDescriptionKeyboardAlt": `Stlačením klávesov Alt + Enter začnete presúvanie.`,
  "dragDescriptionLongPress": `Dlhým stlačením začnete presúvanie.`,
  "dragDescriptionTouch": `Dvojitým kliknutím začnete presúvanie.`,
  "dragDescriptionVirtual": `Kliknutím začnete presúvanie.`,
  "dragItem": (args) => `Presunúť položku ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Presunúť ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} vybratú položku`,
    other: () => `${formatter.number(args.count)} vybraté položky`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Stlačením klávesu Enter presuniete ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} vybratú položku`,
    other: () => `${formatter.number(args.count)} vybratých položiek`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Stlačením klávesov Alt + Enter presuniete ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} vybratú položku`,
    other: () => `${formatter.number(args.count)} vybratých položiek`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Dlhým stlačením presuniete ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} vybratú položku`,
    other: () => `${formatter.number(args.count)} vybratých položiek`
  })}.`,
  "dragStartedKeyboard": `Presúvanie sa začalo. Do cieľového umiestnenia prejdete stlačením klávesu Tab. Ak chcete položku umiestniť, stlačte kláves Enter alebo stlačte kláves Esc, ak chcete presúvanie zrušiť.`,
  "dragStartedTouch": `Presúvanie sa začalo. Prejdite na cieľové umiestnenie a dvojitým kliknutím umiestnite položku.`,
  "dragStartedVirtual": `Presúvanie sa začalo. Prejdite na cieľové umiestnenie a kliknutím alebo stlačením klávesu Enter umiestnite položku.`,
  "dropCanceled": `Umiestnenie zrušené.`,
  "dropComplete": `Umiestnenie dokončené.`,
  "dropDescriptionKeyboard": `Stlačením klávesu Enter umiestnite položku. Stlačením klávesu Esc zrušíte presúvanie.`,
  "dropDescriptionTouch": `Dvojitým kliknutím umiestnite položku.`,
  "dropDescriptionVirtual": `Kliknutím umiestnite položku.`,
  "dropIndicator": `indikátor umiestnenia`,
  "dropOnItem": (args) => `Umiestniť na položku ${args.itemText}`,
  "dropOnRoot": `Umiestniť na`,
  "endDragKeyboard": `Prebieha presúvanie. Ak ho chcete zrušiť, stlačte kláves Enter.`,
  "endDragTouch": `Prebieha presúvanie. Dvojitým kliknutím ho môžete zrušiť.`,
  "endDragVirtual": `Prebieha presúvanie.`,
  "insertAfter": (args) => `Vložiť za položku ${args.itemText}`,
  "insertBefore": (args) => `Vložiť pred položku ${args.itemText}`,
  "insertBetween": (args) => `Vložiť medzi položky ${args.beforeItemText} a ${args.afterItemText}`
};
var $fbaaaaebd547d998$exports = {};
$fbaaaaebd547d998$exports = {
  "dragDescriptionKeyboard": `Pritisnite tipko Enter za začetek vlečenja.`,
  "dragDescriptionKeyboardAlt": `Pritisnite tipki Alt + Enter za začetek vlečenja.`,
  "dragDescriptionLongPress": `Pritisnite in zadržite za začetek vlečenja.`,
  "dragDescriptionTouch": `Dvotapnite za začetek vlečenja.`,
  "dragDescriptionVirtual": `Kliknite za začetek vlečenja.`,
  "dragItem": (args) => `Povleci ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Povlecite ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} izbran element`,
    other: () => `izbrane elemente (${formatter.number(args.count)})`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Pritisnite tipko Enter, da povlečete ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} izbrani element`,
    other: () => `${formatter.number(args.count)} izbranih elementov`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Pritisnite tipki Alt + Enter, da povlečete ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} izbrani element`,
    other: () => `${formatter.number(args.count)} izbranih elementov`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Pritisnite in zadržite, da povlečete ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} izbrani element`,
    other: () => `${formatter.number(args.count)} izbranih elementov`
  })}.`,
  "dragStartedKeyboard": `Vlečenje se je začelo. Pritisnite tipko Tab za pomik na mesto, kamor želite spustiti elemente, in pritisnite tipko Enter, da jih spustite, ali tipko Escape, da prekličete postopek.`,
  "dragStartedTouch": `Vlečenje se je začelo. Pomaknite se na mesto, kamor želite spustiti elemente, in dvotapnite, da jih spustite.`,
  "dragStartedVirtual": `Vlečenje se je začelo. Pomaknite se na mesto, kamor želite spustiti elemente, in kliknite ali pritisnite tipko Enter, da jih spustite.`,
  "dropCanceled": `Spust je preklican.`,
  "dropComplete": `Spust je končan.`,
  "dropDescriptionKeyboard": `Pritisnite tipko Enter, da spustite. Pritisnite tipko Escape, da prekličete vlečenje.`,
  "dropDescriptionTouch": `Dvotapnite, da spustite.`,
  "dropDescriptionVirtual": `Kliknite, da spustite.`,
  "dropIndicator": `indikator spusta`,
  "dropOnItem": (args) => `Spusti na mesto ${args.itemText}`,
  "dropOnRoot": `Spusti na mesto`,
  "endDragKeyboard": `Vlečenje. Pritisnite tipko Enter za preklic vlečenja.`,
  "endDragTouch": `Vlečenje. Dvotapnite za preklic vlečenja.`,
  "endDragVirtual": `Vlečenje. Kliknite, da prekličete vlečenje.`,
  "insertAfter": (args) => `Vstavi za ${args.itemText}`,
  "insertBefore": (args) => `Vstavi pred ${args.itemText}`,
  "insertBetween": (args) => `Vstavi med ${args.beforeItemText} in ${args.afterItemText}`
};
var $a0caa33f1e264489$exports = {};
$a0caa33f1e264489$exports = {
  "dragItem": (args) => `Prevucite ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Prevucite ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} izabranu stavku`,
    other: () => `${formatter.number(args.count)} izabrane stavke`
  })}`,
  "dragDescriptionKeyboard": `Pritisnite Enter da biste započeli prevlačenje..`,
  "dragDescriptionKeyboardAlt": `Pritisnite Alt + Enter da biste započeli prevlačenje.`,
  "dragDescriptionLongPress": `Pritisnite dugo da biste započeli prevlačenje.`,
  "dragDescriptionTouch": `Dvaput dodirnite za otpuštanje.`,
  "dragDescriptionVirtual": `Kliknite da biste započeli prevlačenje.`,
  "dragStartedKeyboard": `Prevlačenje je započeto. Pritisnite Tab da biste otišli do cilja za otpuštanje, zatim pritisnite Enter za ispuštanje ili pritisnite Escape za otkazivanje.`,
  "dragStartedTouch": `Prevlačenje je započeto. Idite do cilja za otpuštanje, a zatim dvaput dodirnite za otpuštanje.`,
  "dragStartedVirtual": `Prevlačenje je započeto. Idite do cilja za otpuštanje, a zatim kliknite ili pritinite Enter za otpuštanje.`,
  "endDragKeyboard": `Prevlačenje u toku. Pritisnite Enter da biste otkazali prevlačenje.`,
  "endDragTouch": `Prevlačenje u toku. Dvaput dodirnite da biste otkazali prevlačenje.`,
  "endDragVirtual": `Prevlačenje u toku. Kliknite da biste otkazali prevlačenje.`,
  "dragSelectedKeyboard": (args, formatter) => `Pritisnite Enter da biste prevukli ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} izabranu stavku`,
    other: () => `${formatter.number(args.count)} izabranih stavki`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Pritisnite Alt + Enter da biste prevukli ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} izabranu stavku`,
    other: () => `${formatter.number(args.count)} izabranih stavki`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Pritisnite dugo da biste prevukli ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} izabranu stavku`,
    other: () => `${formatter.number(args.count)} izabranih stavki`
  })}.`,
  "dropDescriptionKeyboard": `Pritisnite Enter da biste otpustili. Pritisnite Escape da biste otkazali prevlačenje.`,
  "dropDescriptionTouch": `Dvaput dodirnite za otpuštanje.`,
  "dropDescriptionVirtual": `Kliknite za otpuštanje.`,
  "dropCanceled": `Otpuštanje je otkazano.`,
  "dropComplete": `Prevlačenje je završeno.`,
  "dropIndicator": `Indikator otpuštanja`,
  "dropOnRoot": `Otpusti na`,
  "dropOnItem": (args) => `Otpusti na ${args.itemText}`,
  "insertBefore": (args) => `Umetnite ispred ${args.itemText}`,
  "insertBetween": (args) => `Umetnite između ${args.beforeItemText} i ${args.afterItemText}`,
  "insertAfter": (args) => `Umetnite posle ${args.itemText}`
};
var $d576b66176f5c0ff$exports = {};
$d576b66176f5c0ff$exports = {
  "dragDescriptionKeyboard": `Tryck på enter för att börja dra.`,
  "dragDescriptionKeyboardAlt": `Tryck på Alt + Retur för att börja dra.`,
  "dragDescriptionLongPress": `Tryck länge för att börja dra.`,
  "dragDescriptionTouch": `Dubbeltryck för att börja dra.`,
  "dragDescriptionVirtual": `Klicka för att börja dra.`,
  "dragItem": (args) => `Dra ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Dra ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} valt objekt`,
    other: () => `${formatter.number(args.count)} valda objekt`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Tryck på Retur för att dra ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} markerat objekt`,
    other: () => `${formatter.number(args.count)} markerade objekt`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Tryck på Alt + Retur för att dra ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} markerat objekt`,
    other: () => `${formatter.number(args.count)} markerade objekt`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Tryck länge för att dra ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} markerat objekt`,
    other: () => `${formatter.number(args.count)} markerade objekt`
  })}.`,
  "dragStartedKeyboard": `Börja dra. Tryck på tabb för att navigera till målet, tryck på enter för att släppa eller på escape för att avbryta.`,
  "dragStartedTouch": `Börja dra. Navigera till ett mål och dubbeltryck för att släppa.`,
  "dragStartedVirtual": `Börja dra. Navigera till ett mål och klicka eller tryck på enter för att släppa.`,
  "dropCanceled": `Släppåtgärd avbröts.`,
  "dropComplete": `Släppåtgärd klar.`,
  "dropDescriptionKeyboard": `Tryck på enter för att släppa. Tryck på escape för att avbryta dragåtgärd.`,
  "dropDescriptionTouch": `Dubbeltryck för att släppa.`,
  "dropDescriptionVirtual": `Klicka för att släppa.`,
  "dropIndicator": `släppindikator`,
  "dropOnItem": (args) => `Släpp på ${args.itemText}`,
  "dropOnRoot": `Släpp på`,
  "endDragKeyboard": `Drar. Tryck på enter för att avbryta dragåtgärd.`,
  "endDragTouch": `Drar. Dubbeltryck för att avbryta dragåtgärd.`,
  "endDragVirtual": `Drar. Klicka för att avbryta dragåtgärd.`,
  "insertAfter": (args) => `Infoga efter ${args.itemText}`,
  "insertBefore": (args) => `Infoga före ${args.itemText}`,
  "insertBetween": (args) => `Infoga mellan ${args.beforeItemText} och ${args.afterItemText}`
};
var $0681f168c13d8f2a$exports = {};
$0681f168c13d8f2a$exports = {
  "dragDescriptionKeyboard": `Sürüklemeyi başlatmak için Enter'a basın.`,
  "dragDescriptionKeyboardAlt": `Sürüklemeyi başlatmak için Alt + Enter'a basın.`,
  "dragDescriptionLongPress": `Sürüklemeye başlamak için uzun basın.`,
  "dragDescriptionTouch": `Sürüklemeyi başlatmak için çift tıklayın.`,
  "dragDescriptionVirtual": `Sürüklemeyi başlatmak için tıklayın.`,
  "dragItem": (args) => `${args.itemText}’i sürükle`,
  "dragSelectedItems": (args, formatter) => `Sürükle ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} seçili öge`,
    other: () => `${formatter.number(args.count)} seçili öge`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} seçilmiş öğe`,
    other: () => `${formatter.number(args.count)} seçilmiş öğe`
  })} öğesini sürüklemek için Enter'a basın.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} seçilmiş öğe`,
    other: () => `${formatter.number(args.count)} seçilmiş öğe`
  })} öğesini sürüklemek için Alt + Enter tuşuna basın.`,
  "dragSelectedLongPress": (args, formatter) => `${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} seçilmiş öğe`,
    other: () => `${formatter.number(args.count)} seçilmiş öğe`
  })} öğesini sürüklemek için uzun basın.`,
  "dragStartedKeyboard": `Sürükleme başlatıldı. Bir bırakma hedefine gitmek için Tab’a basın, ardından bırakmak için Enter’a basın veya iptal etmek için Escape’e basın.`,
  "dragStartedTouch": `Sürükleme başlatıldı. Bir bırakma hedefine gidin, ardından bırakmak için çift tıklayın.`,
  "dragStartedVirtual": `Sürükleme başlatıldı. Bir bırakma hedefine gidin, ardından bırakmak için Enter’a tıklayın veya basın.`,
  "dropCanceled": `Bırakma iptal edildi.`,
  "dropComplete": `Bırakma tamamlandı.`,
  "dropDescriptionKeyboard": `Bırakmak için Enter'a basın. Sürüklemeyi iptal etmek için Escape'e basın.`,
  "dropDescriptionTouch": `Bırakmak için çift tıklayın.`,
  "dropDescriptionVirtual": `Bırakmak için tıklayın.`,
  "dropIndicator": `bırakma göstergesi`,
  "dropOnItem": (args) => `${args.itemText} üzerine bırak`,
  "dropOnRoot": `Bırakın`,
  "endDragKeyboard": `Sürükleme. Sürüklemeyi iptal etmek için Enter'a basın.`,
  "endDragTouch": `Sürükleme. Sürüklemeyi iptal etmek için çift tıklayın.`,
  "endDragVirtual": `Sürükleme. Sürüklemeyi iptal etmek için tıklayın.`,
  "insertAfter": (args) => `${args.itemText}’den sonra gir`,
  "insertBefore": (args) => `${args.itemText}’den önce gir`,
  "insertBetween": (args) => `${args.beforeItemText} ve ${args.afterItemText} arasına gir`
};
var $2bfbc1f42c1cf5a7$exports = {};
$2bfbc1f42c1cf5a7$exports = {
  "dragDescriptionKeyboard": `Натисніть Enter, щоб почати перетягування.`,
  "dragDescriptionKeyboardAlt": `Натисніть Alt + Enter, щоб почати перетягування.`,
  "dragDescriptionLongPress": `Натисніть і утримуйте, щоб почати перетягування.`,
  "dragDescriptionTouch": `Натисніть двічі, щоб почати перетягування.`,
  "dragDescriptionVirtual": `Натисніть, щоб почати перетягування.`,
  "dragItem": (args) => `Перетягнути ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `Перетягніть ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} вибраний елемент`,
    other: () => `${formatter.number(args.count)} вибраних елем`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `Натисніть Enter, щоб перетягнути ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} вибраний елемент`,
    other: () => `${formatter.number(args.count)} вибраних елементи(-ів)`
  })}.`,
  "dragSelectedKeyboardAlt": (args, formatter) => `Натисніть Alt + Enter, щоб перетягнути ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} вибраний елемент`,
    other: () => `${formatter.number(args.count)} вибраних елементи(-ів)`
  })}.`,
  "dragSelectedLongPress": (args, formatter) => `Утримуйте, щоб перетягнути ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} вибраний елемент`,
    other: () => `${formatter.number(args.count)} вибраних елементи(-ів)`
  })}.`,
  "dragStartedKeyboard": `Перетягування почалося. Натисніть Tab, щоб перейти до цілі перетягування, потім натисніть Enter, щоб перетягнути, або Escape, щоб скасувати.`,
  "dragStartedTouch": `Перетягування почалося. Перейдіть до цілі перетягування, потім натисніть двічі, щоб перетягнути.`,
  "dragStartedVirtual": `Перетягування почалося. Перейдіть до цілі перетягування, потім натисніть Enter, щоб перетягнути.`,
  "dropCanceled": `Перетягування скасовано.`,
  "dropComplete": `Перетягування завершено.`,
  "dropDescriptionKeyboard": `Натисніть Enter, щоб перетягнути. Натисніть Escape, щоб скасувати перетягування.`,
  "dropDescriptionTouch": `Натисніть двічі, щоб перетягнути.`,
  "dropDescriptionVirtual": `Натисніть, щоб перетягнути.`,
  "dropIndicator": `індикатор перетягування`,
  "dropOnItem": (args) => `Перетягнути на ${args.itemText}`,
  "dropOnRoot": `Перетягнути на`,
  "endDragKeyboard": `Триває перетягування. Натисніть Enter, щоб скасувати перетягування.`,
  "endDragTouch": `Триває перетягування. Натисніть двічі, щоб скасувати перетягування.`,
  "endDragVirtual": `Триває перетягування. Натисніть, щоб скасувати перетягування.`,
  "insertAfter": (args) => `Вставити після ${args.itemText}`,
  "insertBefore": (args) => `Вставити перед ${args.itemText}`,
  "insertBetween": (args) => `Вставити між ${args.beforeItemText} і ${args.afterItemText}`
};
var $d0f488d433b55b8a$exports = {};
$d0f488d433b55b8a$exports = {
  "dragDescriptionKeyboard": `按 Enter 开始拖动。`,
  "dragDescriptionKeyboardAlt": `按 Alt + Enter 开始拖动。`,
  "dragDescriptionLongPress": `长按以开始拖动。`,
  "dragDescriptionTouch": `双击开始拖动。`,
  "dragDescriptionVirtual": `单击开始拖动。`,
  "dragItem": (args) => `拖动 ${args.itemText}`,
  "dragSelectedItems": (args, formatter) => `拖动 ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 选中项目`,
    other: () => `${formatter.number(args.count)} 选中项目`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `按 Enter 以拖动 ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 个选定项`,
    other: () => `${formatter.number(args.count)} 个选定项`
  })}。`,
  "dragSelectedKeyboardAlt": (args, formatter) => `按 Alt + Enter 以拖动 ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 个选定项`,
    other: () => `${formatter.number(args.count)} 个选定项`
  })}。`,
  "dragSelectedLongPress": (args, formatter) => `长按以拖动 ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 个选定项`,
    other: () => `${formatter.number(args.count)} 个选定项`
  })}。`,
  "dragStartedKeyboard": `已开始拖动。按 Tab 导航到放置目标，然后按 Enter 放置或按 Escape 取消。`,
  "dragStartedTouch": `已开始拖动。导航到放置目标，然后双击放置。`,
  "dragStartedVirtual": `已开始拖动。导航到放置目标，然后单击或按 Enter 放置。`,
  "dropCanceled": `放置已取消。`,
  "dropComplete": `放置已完成。`,
  "dropDescriptionKeyboard": `按 Enter 放置。按 Escape 取消拖动。`,
  "dropDescriptionTouch": `双击放置。`,
  "dropDescriptionVirtual": `单击放置。`,
  "dropIndicator": `放置标记`,
  "dropOnItem": (args) => `放置于 ${args.itemText}`,
  "dropOnRoot": `放置于`,
  "endDragKeyboard": `正在拖动。按 Enter 取消拖动。`,
  "endDragTouch": `正在拖动。双击取消拖动。`,
  "endDragVirtual": `正在拖动。单击取消拖动。`,
  "insertAfter": (args) => `插入到 ${args.itemText} 之后`,
  "insertBefore": (args) => `插入到 ${args.itemText} 之前`,
  "insertBetween": (args) => `插入到 ${args.beforeItemText} 和 ${args.afterItemText} 之间`
};
var $46168b0dce85301e$exports = {};
$46168b0dce85301e$exports = {
  "dragDescriptionKeyboard": `按 Enter 鍵以開始拖曳。`,
  "dragDescriptionKeyboardAlt": `按 Alt+Enter 鍵以開始拖曳。`,
  "dragDescriptionLongPress": `長按以開始拖曳。`,
  "dragDescriptionTouch": `輕點兩下以開始拖曳。`,
  "dragDescriptionVirtual": `按一下滑鼠以開始拖曳。`,
  "dragItem": (args) => `拖曳「${args.itemText}」`,
  "dragSelectedItems": (args, formatter) => `拖曳 ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 個選定項目`,
    other: () => `${formatter.number(args.count)} 個選定項目`
  })}`,
  "dragSelectedKeyboard": (args, formatter) => `按 Enter 鍵以拖曳 ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 個選定項目`,
    other: () => `${formatter.number(args.count)} 個選定項目`
  })}。`,
  "dragSelectedKeyboardAlt": (args, formatter) => `按 Alt+Enter 鍵以拖曳 ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 個選定項目`,
    other: () => `${formatter.number(args.count)} 個選定項目`
  })}。`,
  "dragSelectedLongPress": (args, formatter) => `長按以拖曳 ${formatter.plural(args.count, {
    one: () => `${formatter.number(args.count)} 個選定項目`,
    other: () => `${formatter.number(args.count)} 個選定項目`
  })}。`,
  "dragStartedKeyboard": `已開始拖曳。按 Tab 鍵以瀏覽至放置目標，然後按 Enter 鍵以放置，或按 Escape 鍵以取消。`,
  "dragStartedTouch": `已開始拖曳。瀏覽至放置目標，然後輕點兩下以放置。`,
  "dragStartedVirtual": `已開始拖曳。瀏覽至放置目標，然後按一下滑鼠或按 Enter 鍵以放置。`,
  "dropCanceled": `放置已取消。`,
  "dropComplete": `放置已完成。`,
  "dropDescriptionKeyboard": `按 Enter 鍵以放置。按 Escape 鍵以取消拖曳。`,
  "dropDescriptionTouch": `輕點兩下以放置。`,
  "dropDescriptionVirtual": `按一下滑鼠以放置。`,
  "dropIndicator": `放置指示器`,
  "dropOnItem": (args) => `放置在「${args.itemText}」上`,
  "dropOnRoot": `放置在`,
  "endDragKeyboard": `拖曳中。按 Enter 鍵以取消拖曳。`,
  "endDragTouch": `拖曳中。輕點兩下以取消拖曳。`,
  "endDragVirtual": `拖曳中。按一下滑鼠以取消拖曳。`,
  "insertAfter": (args) => `插入至「${args.itemText}」之後`,
  "insertBefore": (args) => `插入至「${args.itemText}」之前`,
  "insertBetween": (args) => `插入至「${args.beforeItemText}」和「${args.afterItemText}」之間`
};
$865c2eb7c00a83f1$exports = {
  "ar-AE": $7dfcac1a0c98c789$exports,
  "bg-BG": $f311c26671219eca$exports,
  "cs-CZ": $1aa4ade186550f72$exports,
  "da-DK": $b6b0ea1b94a7633c$exports,
  "de-DE": $d10e4f47c744ad52$exports,
  "el-GR": $b3d2bb9abce688ab$exports,
  "en-US": $f9b46437e610cca1$exports,
  "es-ES": $204b5c01bd3acf26$exports,
  "et-EE": $110bdd83348ecbc0$exports,
  "fi-FI": $87d3ccd5e347c7cc$exports,
  "fr-FR": $a5de891427686596$exports,
  "he-IL": $ad7f4c66d85b4494$exports,
  "hr-HR": $4aa59f3c6a796cae$exports,
  "hu-HU": $d8d3646556c40586$exports,
  "it-IT": $982d558b45395246$exports,
  "ja-JP": $6a0cf387b9de036c$exports,
  "ko-KR": $a97fefa2956f4bcb$exports,
  "lt-LT": $5fb5837f94e1c150$exports,
  "lv-LV": $5b2e5709864cc922$exports,
  "nb-NO": $ee15bb8efb18cc69$exports,
  "nl-NL": $1daf2d4602e26ac4$exports,
  "pl-PL": $7115429b0f60511f$exports,
  "pt-BR": $5edd453ae5d4a8bc$exports,
  "pt-PT": $5f431994f708535e$exports,
  "ro-RO": $107b5e2e45e971f1$exports,
  "ru-RU": $d4b9c2f01c1892f7$exports,
  "sk-SK": $dbdc1942894e83e4$exports,
  "sl-SI": $fbaaaaebd547d998$exports,
  "sr-SP": $a0caa33f1e264489$exports,
  "sv-SE": $d576b66176f5c0ff$exports,
  "tr-TR": $0681f168c13d8f2a$exports,
  "uk-UA": $2bfbc1f42c1cf5a7$exports,
  "zh-CN": $d0f488d433b55b8a$exports,
  "zh-TW": $46168b0dce85301e$exports
};
var $8253ed7ece74b463$var$MESSAGES = {
  keyboard: {
    start: "dragDescriptionKeyboard",
    end: "endDragKeyboard"
  },
  touch: {
    start: "dragDescriptionTouch",
    end: "endDragTouch"
  },
  virtual: {
    start: "dragDescriptionVirtual",
    end: "endDragVirtual"
  }
};
function $8253ed7ece74b463$export$7941f8aafa4b6021(options) {
  let { hasDragButton } = options;
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault8($865c2eb7c00a83f1$exports)));
  let state = (0, import_react20.useRef)({
    options,
    x: 0,
    y: 0
  }).current;
  state.options = options;
  let isDraggingRef = (0, import_react20.useRef)(false);
  let [isDragging, setDraggingState] = (0, import_react20.useState)(false);
  let setDragging = (isDragging2) => {
    isDraggingRef.current = isDragging2;
    setDraggingState(isDragging2);
  };
  let { addGlobalListener, removeAllGlobalListeners } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  let modalityOnPointerDown = (0, import_react20.useRef)(null);
  let onDragStart = (e) => {
    var _options_preview;
    if (e.defaultPrevented)
      return;
    e.stopPropagation();
    if (modalityOnPointerDown.current === "virtual") {
      e.preventDefault();
      startDragging(e.target);
      modalityOnPointerDown.current = null;
      return;
    }
    if (typeof options.onDragStart === "function")
      options.onDragStart({
        type: "dragstart",
        x: e.clientX,
        y: e.clientY
      });
    let items = options.getItems();
    (0, $7252cd45fc48c07c$export$f9c1490890ddd063)(e.dataTransfer, items);
    let allowed = (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).all;
    if (typeof options.getAllowedDropOperations === "function") {
      let allowedOperations = options.getAllowedDropOperations();
      allowed = (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).none;
      for (let operation of allowedOperations)
        allowed |= (0, $103790afe9474d1c$export$60b7b4bcf3903d8e)[operation] || (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).none;
    }
    (0, $7252cd45fc48c07c$export$6539bc8c3a0a2d67)(allowed);
    e.dataTransfer.effectAllowed = (0, $103790afe9474d1c$export$dd0165308d8bff45)[allowed] || "none";
    if (typeof ((_options_preview = options.preview) === null || _options_preview === void 0 ? void 0 : _options_preview.current) === "function")
      options.preview.current(items, (node) => {
        let size = node.getBoundingClientRect();
        let rect = e.currentTarget.getBoundingClientRect();
        let x = e.clientX - rect.x;
        let y = e.clientY - rect.y;
        if (x > size.width || y > size.height) {
          x = size.width / 2;
          y = size.height / 2;
        }
        let height = 2 * Math.round(size.height / 2);
        node.style.height = `${height}px`;
        e.dataTransfer.setDragImage(node, x, y);
      });
    addGlobalListener(window, "drop", (e2) => {
      e2.preventDefault();
      e2.stopPropagation();
      console.warn("Drags initiated from the React Aria useDrag hook may only be dropped on a target created with useDrop. This ensures that a keyboard and screen reader accessible alternative is available.");
    }, {
      once: true
    });
    state.x = e.clientX;
    state.y = e.clientY;
    requestAnimationFrame(() => {
      setDragging(true);
    });
  };
  let onDrag = (e) => {
    e.stopPropagation();
    if (e.clientX === state.x && e.clientY === state.y)
      return;
    if (typeof options.onDragMove === "function")
      options.onDragMove({
        type: "dragmove",
        x: e.clientX,
        y: e.clientY
      });
    state.x = e.clientX;
    state.y = e.clientY;
  };
  let onDragEnd = (e) => {
    e.stopPropagation();
    if (typeof options.onDragEnd === "function") {
      let event = {
        type: "dragend",
        x: e.clientX,
        y: e.clientY,
        dropOperation: (0, $103790afe9474d1c$export$608ecc6f1b23c35d)[e.dataTransfer.dropEffect]
      };
      if (0, $7252cd45fc48c07c$export$8e6636520ac15722)
        event.dropOperation = (0, $103790afe9474d1c$export$608ecc6f1b23c35d)[0, $7252cd45fc48c07c$export$8e6636520ac15722];
      options.onDragEnd(event);
    }
    setDragging(false);
    removeAllGlobalListeners();
    (0, $7252cd45fc48c07c$export$6539bc8c3a0a2d67)((0, $103790afe9474d1c$export$60b7b4bcf3903d8e).none);
    (0, $7252cd45fc48c07c$export$64f52ed7349ddb84)(void 0);
  };
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    return () => {
      if (isDraggingRef.current) {
        if (typeof state.options.onDragEnd === "function") {
          let event = {
            type: "dragend",
            x: 0,
            y: 0,
            dropOperation: (0, $103790afe9474d1c$export$608ecc6f1b23c35d)[(0, $7252cd45fc48c07c$export$8e6636520ac15722) || "none"]
          };
          state.options.onDragEnd(event);
        }
        setDragging(false);
        (0, $7252cd45fc48c07c$export$6539bc8c3a0a2d67)((0, $103790afe9474d1c$export$60b7b4bcf3903d8e).none);
        (0, $7252cd45fc48c07c$export$64f52ed7349ddb84)(void 0);
      }
    };
  }, [
    state
  ]);
  let onPress = (e) => {
    if (e.pointerType !== "keyboard" && e.pointerType !== "virtual")
      return;
    startDragging(e.target);
  };
  let startDragging = (target) => {
    if (typeof state.options.onDragStart === "function") {
      let rect = target.getBoundingClientRect();
      state.options.onDragStart({
        type: "dragstart",
        x: rect.x + rect.width / 2,
        y: rect.y + rect.height / 2
      });
    }
    $67560de7c78cb232$export$549dbcf8649bf3b2({
      element: target,
      items: state.options.getItems(),
      allowedDropOperations: typeof state.options.getAllowedDropOperations === "function" ? state.options.getAllowedDropOperations() : [
        "move",
        "copy",
        "link"
      ],
      onDragEnd(e) {
        setDragging(false);
        if (typeof state.options.onDragEnd === "function")
          state.options.onDragEnd(e);
      }
    }, stringFormatter);
    setDragging(true);
  };
  let modality = (0, $7252cd45fc48c07c$export$49bac5d6d4b352ea)();
  let message = !isDragging ? $8253ed7ece74b463$var$MESSAGES[modality].start : $8253ed7ece74b463$var$MESSAGES[modality].end;
  let descriptionProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(stringFormatter.format(message));
  let interactions;
  if (!hasDragButton)
    interactions = {
      ...descriptionProps,
      onPointerDown(e) {
        modalityOnPointerDown.current = (0, $6a7db85432448f7f$export$29bf1b5f2c56cf63)(e.nativeEvent) ? "virtual" : e.pointerType;
        if (e.width < 1 && e.height < 1)
          modalityOnPointerDown.current = "virtual";
        else {
          let rect = e.currentTarget.getBoundingClientRect();
          let offsetX = e.clientX - rect.x;
          let offsetY = e.clientY - rect.y;
          let centerX = rect.width / 2;
          let centerY = rect.height / 2;
          if (Math.abs(offsetX - centerX) <= 0.5 && Math.abs(offsetY - centerY) <= 0.5)
            modalityOnPointerDown.current = "virtual";
          else
            modalityOnPointerDown.current = e.pointerType;
        }
      },
      onKeyDownCapture(e) {
        if (e.target === e.currentTarget && e.key === "Enter") {
          e.preventDefault();
          e.stopPropagation();
        }
      },
      onKeyUpCapture(e) {
        if (e.target === e.currentTarget && e.key === "Enter") {
          e.preventDefault();
          e.stopPropagation();
          startDragging(e.target);
        }
      },
      onClick(e) {
        if ((0, $6a7db85432448f7f$export$60278871457622de)(e.nativeEvent) || modalityOnPointerDown.current === "virtual") {
          e.preventDefault();
          e.stopPropagation();
          startDragging(e.target);
        }
      }
    };
  return {
    dragProps: {
      ...interactions,
      draggable: "true",
      onDragStart,
      onDrag,
      onDragEnd
    },
    dragButtonProps: {
      ...descriptionProps,
      onPress
    },
    isDragging
  };
}
var $224594fe3e57ff1e$var$MESSAGES = {
  keyboard: "dropDescriptionKeyboard",
  touch: "dropDescriptionTouch",
  virtual: "dropDescriptionVirtual"
};
function $224594fe3e57ff1e$export$62447ad3d2ec7da6() {
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault8($865c2eb7c00a83f1$exports)));
  let modality = (0, $7252cd45fc48c07c$export$49bac5d6d4b352ea)();
  let dragSession = $67560de7c78cb232$export$418e185dd3f1b968();
  let descriptionProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(dragSession ? stringFormatter.format($224594fe3e57ff1e$var$MESSAGES[modality]) : "");
  return {
    dropProps: {
      ...descriptionProps,
      // Mobile Safari does not properly bubble click events on elements except links or inputs
      // unless there is an onclick handler bound directly to the element itself. By adding this
      // handler, React will take care of adding that for us, and we are able to handle document
      // level click events in the DragManager.
      // See https://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
      onClick: () => {
      }
    }
  };
}
var $5c06e4929e123553$var$DROP_ACTIVATE_TIMEOUT = 800;
function $5c06e4929e123553$export$ccdee5eaf73cf661(options) {
  let { hasDropButton } = options;
  let [isDropTarget, setDropTarget] = (0, import_react20.useState)(false);
  let state = (0, import_react20.useRef)({
    x: 0,
    y: 0,
    dragOverElements: /* @__PURE__ */ new Set(),
    dropEffect: "none",
    allowedOperations: (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).all,
    dropActivateTimer: null
  }).current;
  let fireDropEnter = (e) => {
    setDropTarget(true);
    if (typeof options.onDropEnter === "function") {
      let rect = e.currentTarget.getBoundingClientRect();
      options.onDropEnter({
        type: "dropenter",
        x: e.clientX - rect.x,
        y: e.clientY - rect.y
      });
    }
  };
  let fireDropExit = (e) => {
    setDropTarget(false);
    if (typeof options.onDropExit === "function") {
      let rect = e.currentTarget.getBoundingClientRect();
      options.onDropExit({
        type: "dropexit",
        x: e.clientX - rect.x,
        y: e.clientY - rect.y
      });
    }
  };
  let onDragOver = (e) => {
    e.preventDefault();
    e.stopPropagation();
    let allowedOperations = $5c06e4929e123553$var$getAllowedOperations(e);
    if (e.clientX === state.x && e.clientY === state.y && allowedOperations === state.allowedOperations) {
      e.dataTransfer.dropEffect = state.dropEffect;
      return;
    }
    state.x = e.clientX;
    state.y = e.clientY;
    let prevDropEffect = state.dropEffect;
    if (allowedOperations !== state.allowedOperations) {
      let allowedOps = $5c06e4929e123553$var$allowedOperationsToArray(allowedOperations);
      let dropOperation = allowedOps[0];
      if (typeof options.getDropOperation === "function") {
        let types = new (0, $7252cd45fc48c07c$export$7f04ce188c91447c)(e.dataTransfer);
        dropOperation = $5c06e4929e123553$var$getDropOperation(allowedOperations, options.getDropOperation(types, allowedOps));
      }
      state.dropEffect = (0, $103790afe9474d1c$export$5eacb0769d26d3b2)[dropOperation] || "none";
    }
    if (typeof options.getDropOperationForPoint === "function") {
      let types = new (0, $7252cd45fc48c07c$export$7f04ce188c91447c)(e.dataTransfer);
      let rect = e.currentTarget.getBoundingClientRect();
      let dropOperation = $5c06e4929e123553$var$getDropOperation(allowedOperations, options.getDropOperationForPoint(types, $5c06e4929e123553$var$allowedOperationsToArray(allowedOperations), state.x - rect.x, state.y - rect.y));
      state.dropEffect = (0, $103790afe9474d1c$export$5eacb0769d26d3b2)[dropOperation] || "none";
    }
    state.allowedOperations = allowedOperations;
    e.dataTransfer.dropEffect = state.dropEffect;
    if (state.dropEffect === "none" && prevDropEffect !== "none")
      fireDropExit(e);
    else if (state.dropEffect !== "none" && prevDropEffect === "none")
      fireDropEnter(e);
    if (typeof options.onDropMove === "function" && state.dropEffect !== "none") {
      let rect = e.currentTarget.getBoundingClientRect();
      options.onDropMove({
        type: "dropmove",
        x: state.x - rect.x,
        y: state.y - rect.y
      });
    }
    clearTimeout(state.dropActivateTimer);
    if (typeof options.onDropActivate === "function" && state.dropEffect !== "none") {
      let rect = e.currentTarget.getBoundingClientRect();
      state.dropActivateTimer = setTimeout(() => {
        options.onDropActivate({
          type: "dropactivate",
          x: state.x - rect.x,
          y: state.y - rect.y
        });
      }, $5c06e4929e123553$var$DROP_ACTIVATE_TIMEOUT);
    }
  };
  let onDragEnter = (e) => {
    e.preventDefault();
    e.stopPropagation();
    state.dragOverElements.add(e.target);
    if (state.dragOverElements.size > 1)
      return;
    let allowedOperationsBits = $5c06e4929e123553$var$getAllowedOperations(e);
    let allowedOperations = $5c06e4929e123553$var$allowedOperationsToArray(allowedOperationsBits);
    let dropOperation = allowedOperations[0];
    if (typeof options.getDropOperation === "function") {
      let types = new (0, $7252cd45fc48c07c$export$7f04ce188c91447c)(e.dataTransfer);
      dropOperation = $5c06e4929e123553$var$getDropOperation(allowedOperationsBits, options.getDropOperation(types, allowedOperations));
    }
    if (typeof options.getDropOperationForPoint === "function") {
      let types = new (0, $7252cd45fc48c07c$export$7f04ce188c91447c)(e.dataTransfer);
      let rect = e.currentTarget.getBoundingClientRect();
      dropOperation = $5c06e4929e123553$var$getDropOperation(allowedOperationsBits, options.getDropOperationForPoint(types, allowedOperations, e.clientX - rect.x, e.clientY - rect.y));
    }
    state.x = e.clientX;
    state.y = e.clientY;
    state.allowedOperations = allowedOperationsBits;
    state.dropEffect = (0, $103790afe9474d1c$export$5eacb0769d26d3b2)[dropOperation] || "none";
    e.dataTransfer.dropEffect = state.dropEffect;
    if (dropOperation !== "cancel")
      fireDropEnter(e);
  };
  let onDragLeave = (e) => {
    e.preventDefault();
    e.stopPropagation();
    state.dragOverElements.delete(e.target);
    for (let element of state.dragOverElements)
      if (!e.currentTarget.contains(element))
        state.dragOverElements.delete(element);
    if (state.dragOverElements.size > 0)
      return;
    if (state.dropEffect !== "none")
      fireDropExit(e);
    clearTimeout(state.dropActivateTimer);
  };
  let onDrop = (e) => {
    e.preventDefault();
    e.stopPropagation();
    (0, $7252cd45fc48c07c$export$64f52ed7349ddb84)(state.dropEffect);
    if (typeof options.onDrop === "function") {
      let dropOperation = (0, $103790afe9474d1c$export$608ecc6f1b23c35d)[state.dropEffect];
      let items = (0, $7252cd45fc48c07c$export$d9e760437831f8b3)(e.dataTransfer);
      let rect = e.currentTarget.getBoundingClientRect();
      let event = {
        type: "drop",
        x: e.clientX - rect.x,
        y: e.clientY - rect.y,
        items,
        dropOperation
      };
      options.onDrop(event);
    }
    let dndStateSnapshot = {
      ...(0, $7252cd45fc48c07c$export$6ca6700462636d0b)
    };
    state.dragOverElements.clear();
    fireDropExit(e);
    clearTimeout(state.dropActivateTimer);
    if (dndStateSnapshot.draggingCollectionRef == null)
      (0, $7252cd45fc48c07c$export$64f52ed7349ddb84)(void 0);
    else
      (0, $7252cd45fc48c07c$export$6c10d32b362bfa5f)(dndStateSnapshot);
  };
  let onDropEnter = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (typeof options.onDropEnter === "function")
      options.onDropEnter(e);
  });
  let onDropExit = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (typeof options.onDropExit === "function")
      options.onDropExit(e);
  });
  let onDropActivate = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (typeof options.onDropActivate === "function")
      options.onDropActivate(e);
  });
  let onKeyboardDrop = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (typeof options.onDrop === "function")
      options.onDrop(e);
  });
  let getDropOperationKeyboard = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((types, allowedOperations) => {
    if (options.getDropOperation)
      return options.getDropOperation(types, allowedOperations);
    return allowedOperations[0];
  });
  let { ref } = options;
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => $67560de7c78cb232$export$c28d9fb4a54e471a({
    element: ref.current,
    getDropOperation: getDropOperationKeyboard,
    onDropEnter(e) {
      setDropTarget(true);
      onDropEnter(e);
    },
    onDropExit(e) {
      setDropTarget(false);
      onDropExit(e);
    },
    onDrop: onKeyboardDrop,
    onDropActivate
  }), [
    ref,
    getDropOperationKeyboard,
    onDropEnter,
    onDropExit,
    onKeyboardDrop,
    onDropActivate
  ]);
  let { dropProps } = (0, $224594fe3e57ff1e$export$62447ad3d2ec7da6)();
  return {
    dropProps: {
      ...!hasDropButton && dropProps,
      onDragEnter,
      onDragOver,
      onDragLeave,
      onDrop
    },
    dropButtonProps: {
      ...hasDropButton && dropProps
    },
    isDropTarget
  };
}
function $5c06e4929e123553$var$getAllowedOperations(e) {
  let allowedOperations = (0, $103790afe9474d1c$export$9bbdfc78cf083e16)[e.dataTransfer.effectAllowed];
  if (0, $7252cd45fc48c07c$export$f0130eb70b6347b8)
    allowedOperations &= (0, $7252cd45fc48c07c$export$f0130eb70b6347b8);
  let allowedModifiers = (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).none;
  if ((0, $c87311424ea30a05$export$9ac100e40613ea10)()) {
    if (e.altKey)
      allowedModifiers |= (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).copy;
    if (e.ctrlKey && !(0, $c87311424ea30a05$export$7bef049ce92e4224)())
      allowedModifiers |= (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).link;
    if (e.metaKey)
      allowedModifiers |= (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).move;
  } else {
    if (e.altKey)
      allowedModifiers |= (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).link;
    if (e.shiftKey)
      allowedModifiers |= (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).move;
    if (e.ctrlKey)
      allowedModifiers |= (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).copy;
  }
  if (allowedModifiers)
    return allowedOperations & allowedModifiers;
  return allowedOperations;
}
function $5c06e4929e123553$var$allowedOperationsToArray(allowedOperationsBits) {
  let allowedOperations = [];
  if (allowedOperationsBits & (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).move)
    allowedOperations.push("move");
  if (allowedOperationsBits & (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).copy)
    allowedOperations.push("copy");
  if (allowedOperationsBits & (0, $103790afe9474d1c$export$60b7b4bcf3903d8e).link)
    allowedOperations.push("link");
  return allowedOperations;
}
function $5c06e4929e123553$var$getDropOperation(allowedOperations, operation) {
  let op = (0, $103790afe9474d1c$export$60b7b4bcf3903d8e)[operation];
  return allowedOperations & op ? operation : "cancel";
}
var $80d9daea3067eff3$var$AUTOSCROLL_AREA_SIZE = 20;
function $80d9daea3067eff3$export$6323452ca4533ed8(ref) {
  let scrollableRef = (0, import_react20.useRef)(null);
  (0, import_react20.useEffect)(() => {
    if (ref.current)
      scrollableRef.current = (0, $62d8ded9296f3872$export$2bb74740c4e19def)(ref.current) ? ref.current : (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current);
  }, [
    ref
  ]);
  let state = (0, import_react20.useRef)({
    timer: null,
    dx: 0,
    dy: 0
  }).current;
  (0, import_react20.useEffect)(() => {
    return () => {
      if (state.timer) {
        cancelAnimationFrame(state.timer);
        state.timer = null;
      }
    };
  }, [
    state
  ]);
  let scroll = (0, import_react20.useCallback)(() => {
    scrollableRef.current.scrollLeft += state.dx;
    scrollableRef.current.scrollTop += state.dy;
    if (state.timer)
      state.timer = requestAnimationFrame(scroll);
  }, [
    scrollableRef,
    state
  ]);
  return {
    move(x, y) {
      if (!(0, $c87311424ea30a05$export$78551043582a6a98)() || (0, $c87311424ea30a05$export$fedb369cb70207f1)() || !scrollableRef.current)
        return;
      let box = scrollableRef.current.getBoundingClientRect();
      let left = $80d9daea3067eff3$var$AUTOSCROLL_AREA_SIZE;
      let top = $80d9daea3067eff3$var$AUTOSCROLL_AREA_SIZE;
      let bottom = box.height - $80d9daea3067eff3$var$AUTOSCROLL_AREA_SIZE;
      let right = box.width - $80d9daea3067eff3$var$AUTOSCROLL_AREA_SIZE;
      if (x < left || x > right || y < top || y > bottom) {
        if (x < left)
          state.dx = x - left;
        else if (x > right)
          state.dx = x - right;
        if (y < top)
          state.dy = y - top;
        else if (y > bottom)
          state.dy = y - bottom;
        if (!state.timer)
          state.timer = requestAnimationFrame(scroll);
      } else
        this.stop();
    },
    stop() {
      if (state.timer) {
        cancelAnimationFrame(state.timer);
        state.timer = null;
      }
    }
  };
}
var $4b52e4eff84e5217$var$DROP_POSITIONS = [
  "before",
  "on",
  "after"
];
var $4b52e4eff84e5217$var$DROP_POSITIONS_RTL = [
  "after",
  "on",
  "before"
];
function $4b52e4eff84e5217$export$f4e2f423c21f7b04(props, state, ref) {
  let localState = (0, import_react20.useRef)({
    props,
    state,
    nextTarget: null,
    dropOperation: null
  }).current;
  localState.props = props;
  localState.state = state;
  let defaultOnDrop = (0, import_react20.useCallback)(async (e) => {
    let { onInsert, onRootDrop, onItemDrop, onReorder, acceptedDragTypes = "all", shouldAcceptItemDrop } = localState.props;
    let { draggingKeys } = (0, $7252cd45fc48c07c$export$6ca6700462636d0b);
    let isInternal = (0, $7252cd45fc48c07c$export$78bf638634500fa5)(ref);
    let { target, dropOperation, items } = e;
    let filteredItems = items;
    if (acceptedDragTypes !== "all" || shouldAcceptItemDrop)
      filteredItems = items.filter((item) => {
        let itemTypes;
        if (item.kind === "directory")
          itemTypes = /* @__PURE__ */ new Set([
            (0, $7252cd45fc48c07c$export$990fced5dfac2637)
          ]);
        else
          itemTypes = item.kind === "file" ? /* @__PURE__ */ new Set([
            item.type
          ]) : item.types;
        if (acceptedDragTypes === "all" || acceptedDragTypes.some((type) => itemTypes.has(type))) {
          if (target.type === "item" && target.dropPosition === "on" && shouldAcceptItemDrop)
            return shouldAcceptItemDrop(target, itemTypes);
          return true;
        }
        return false;
      });
    if (filteredItems.length > 0) {
      if (target.type === "root" && onRootDrop)
        await onRootDrop({
          items: filteredItems,
          dropOperation
        });
      if (target.type === "item") {
        if (target.dropPosition === "on" && onItemDrop)
          await onItemDrop({
            items: filteredItems,
            dropOperation,
            isInternal,
            target
          });
        if (target.dropPosition !== "on") {
          if (!isInternal && onInsert)
            await onInsert({
              items: filteredItems,
              dropOperation,
              target
            });
          if (isInternal && onReorder)
            await onReorder({
              keys: draggingKeys,
              dropOperation,
              target
            });
        }
      }
    }
  }, [
    localState,
    ref
  ]);
  let autoScroll = (0, $80d9daea3067eff3$export$6323452ca4533ed8)(ref);
  let { dropProps } = (0, $5c06e4929e123553$export$ccdee5eaf73cf661)({
    ref,
    onDropEnter() {
      state.setTarget(localState.nextTarget);
    },
    onDropMove(e) {
      state.setTarget(localState.nextTarget);
      autoScroll.move(e.x, e.y);
    },
    getDropOperationForPoint(types, allowedOperations, x, y) {
      let { draggingKeys, dropCollectionRef } = (0, $7252cd45fc48c07c$export$6ca6700462636d0b);
      let isInternal = (0, $7252cd45fc48c07c$export$78bf638634500fa5)(ref);
      let isValidDropTarget = (target2) => state.getDropOperation({
        target: target2,
        types,
        allowedOperations,
        isInternal,
        draggingKeys
      }) !== "cancel";
      let target = props.dropTargetDelegate.getDropTargetFromPoint(x, y, isValidDropTarget);
      if (!target) {
        localState.dropOperation = "cancel";
        localState.nextTarget = null;
        return "cancel";
      }
      localState.dropOperation = state.getDropOperation({
        target,
        types,
        allowedOperations,
        isInternal,
        draggingKeys
      });
      if (localState.dropOperation === "cancel") {
        let rootTarget = {
          type: "root"
        };
        let dropOperation = state.getDropOperation({
          target: rootTarget,
          types,
          allowedOperations,
          isInternal,
          draggingKeys
        });
        if (dropOperation !== "cancel") {
          target = rootTarget;
          localState.dropOperation = dropOperation;
        }
      }
      if (target && localState.dropOperation !== "cancel" && (ref === null || ref === void 0 ? void 0 : ref.current) !== (dropCollectionRef === null || dropCollectionRef === void 0 ? void 0 : dropCollectionRef.current))
        (0, $7252cd45fc48c07c$export$dac8db29d42db9a1)(ref);
      localState.nextTarget = localState.dropOperation === "cancel" ? null : target;
      return localState.dropOperation;
    },
    onDropExit() {
      (0, $7252cd45fc48c07c$export$dac8db29d42db9a1)(void 0);
      state.setTarget(null);
      autoScroll.stop();
    },
    onDropActivate(e) {
      var _state_target, _state_target1;
      if (((_state_target = state.target) === null || _state_target === void 0 ? void 0 : _state_target.type) === "item" && ((_state_target1 = state.target) === null || _state_target1 === void 0 ? void 0 : _state_target1.dropPosition) === "on" && typeof props.onDropActivate === "function")
        props.onDropActivate({
          type: "dropactivate",
          x: e.x,
          y: e.y,
          target: state.target
        });
    },
    onDrop(e) {
      (0, $7252cd45fc48c07c$export$dac8db29d42db9a1)(ref);
      if (state.target)
        onDrop(e, state.target);
      let { draggingCollectionRef } = (0, $7252cd45fc48c07c$export$6ca6700462636d0b);
      if (draggingCollectionRef == null)
        (0, $7252cd45fc48c07c$export$70936501603e6c57)();
    }
  });
  let droppingState = (0, import_react20.useRef)(null);
  let onDrop = (0, import_react20.useCallback)((e, target) => {
    var _state_collection_getItem;
    let { state: state2 } = localState;
    state2.selectionManager.setFocused(true);
    let focusedKey = state2.selectionManager.focusedKey;
    if ((0, $7252cd45fc48c07c$export$6ca6700462636d0b).draggingKeys.has((_state_collection_getItem = state2.collection.getItem(focusedKey)) === null || _state_collection_getItem === void 0 ? void 0 : _state_collection_getItem.parentKey)) {
      focusedKey = state2.collection.getItem(focusedKey).parentKey;
      state2.selectionManager.setFocusedKey(focusedKey);
    }
    droppingState.current = {
      timeout: null,
      focusedKey,
      collection: state2.collection,
      selectedKeys: state2.selectionManager.selectedKeys
    };
    let onDropFn = localState.props.onDrop || defaultOnDrop;
    onDropFn({
      type: "drop",
      x: e.x,
      y: e.y,
      target,
      items: e.items,
      dropOperation: e.dropOperation
    });
    droppingState.current.timeout = setTimeout(() => {
      let { state: state3 } = localState;
      if (target.type === "item" && target.dropPosition === "on" && state3.collection.getItem(target.key) != null) {
        state3.selectionManager.setFocusedKey(target.key);
        state3.selectionManager.setFocused(true);
        (0, $507fabe10e71c6fb$export$8397ddfc504fdb9a)("keyboard");
      } else if (!state3.selectionManager.isSelected(focusedKey))
        (0, $507fabe10e71c6fb$export$8397ddfc504fdb9a)("keyboard");
      droppingState.current = null;
    }, 50);
  }, [
    localState,
    defaultOnDrop
  ]);
  (0, import_react20.useEffect)(() => {
    return () => {
      if (droppingState.current)
        clearTimeout(droppingState.current.timeout);
    };
  }, []);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (droppingState.current && state.selectionManager.isFocused && state.collection.size > droppingState.current.collection.size && state.selectionManager.isSelectionEqual(droppingState.current.selectedKeys)) {
      let newKeys = /* @__PURE__ */ new Set();
      for (let key of state.collection.getKeys())
        if (!droppingState.current.collection.getItem(key))
          newKeys.add(key);
      state.selectionManager.setSelectedKeys(newKeys);
      if (state.selectionManager.focusedKey === droppingState.current.focusedKey) {
        let first = newKeys.keys().next().value;
        let item = state.collection.getItem(first);
        if ((item === null || item === void 0 ? void 0 : item.type) === "cell")
          first = item.parentKey;
        state.selectionManager.setFocusedKey(first);
        if (state.selectionManager.selectionMode === "none")
          (0, $507fabe10e71c6fb$export$8397ddfc504fdb9a)("keyboard");
      }
      droppingState.current = null;
    }
  });
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  (0, import_react20.useEffect)(() => {
    let getNextTarget = (target, wrap = true, horizontal = false) => {
      if (!target)
        return {
          type: "root"
        };
      let { keyboardDelegate } = localState.props;
      let nextKey;
      if ((target === null || target === void 0 ? void 0 : target.type) === "item")
        nextKey = horizontal ? keyboardDelegate.getKeyRightOf(target.key) : keyboardDelegate.getKeyBelow(target.key);
      else
        nextKey = horizontal && direction === "rtl" ? keyboardDelegate.getLastKey() : keyboardDelegate.getFirstKey();
      let dropPositions = horizontal && direction === "rtl" ? $4b52e4eff84e5217$var$DROP_POSITIONS_RTL : $4b52e4eff84e5217$var$DROP_POSITIONS;
      let dropPosition = dropPositions[0];
      if (target.type === "item") {
        let nextCollectionKey = horizontal && direction === "rtl" ? localState.state.collection.getKeyBefore(target.key) : localState.state.collection.getKeyAfter(target.key);
        if (nextKey == null || nextKey === nextCollectionKey) {
          let positionIndex = dropPositions.indexOf(target.dropPosition);
          let nextDropPosition = dropPositions[positionIndex + 1];
          if (positionIndex < dropPositions.length - 1 && !(nextDropPosition === dropPositions[2] && nextKey != null))
            return {
              type: "item",
              key: target.key,
              dropPosition: nextDropPosition
            };
          if (target.dropPosition === dropPositions[2])
            dropPosition = "on";
        } else
          dropPosition = target.dropPosition;
      }
      if (nextKey == null) {
        if (wrap)
          return {
            type: "root"
          };
        return null;
      }
      return {
        type: "item",
        key: nextKey,
        dropPosition
      };
    };
    let getPreviousTarget = (target, wrap = true, horizontal = false) => {
      let { keyboardDelegate } = localState.props;
      let nextKey;
      if ((target === null || target === void 0 ? void 0 : target.type) === "item")
        nextKey = horizontal ? keyboardDelegate.getKeyLeftOf(target.key) : keyboardDelegate.getKeyAbove(target.key);
      else
        nextKey = horizontal && direction === "rtl" ? keyboardDelegate.getFirstKey() : keyboardDelegate.getLastKey();
      let dropPositions = horizontal && direction === "rtl" ? $4b52e4eff84e5217$var$DROP_POSITIONS_RTL : $4b52e4eff84e5217$var$DROP_POSITIONS;
      let dropPosition = !target || target.type === "root" ? dropPositions[2] : "on";
      if ((target === null || target === void 0 ? void 0 : target.type) === "item") {
        let prevCollectionKey = horizontal && direction === "rtl" ? localState.state.collection.getKeyAfter(target.key) : localState.state.collection.getKeyBefore(target.key);
        if (nextKey == null || nextKey === prevCollectionKey) {
          let positionIndex = dropPositions.indexOf(target.dropPosition);
          let nextDropPosition = dropPositions[positionIndex - 1];
          if (positionIndex > 0 && nextDropPosition !== dropPositions[2])
            return {
              type: "item",
              key: target.key,
              dropPosition: nextDropPosition
            };
          if (target.dropPosition === dropPositions[0])
            dropPosition = "on";
        } else
          dropPosition = target.dropPosition;
      }
      if (nextKey == null) {
        if (wrap)
          return {
            type: "root"
          };
        return null;
      }
      return {
        type: "item",
        key: nextKey,
        dropPosition
      };
    };
    let nextValidTarget = (target, types, allowedDropOperations, getNextTarget2, wrap = true) => {
      let seenRoot = 0;
      let operation;
      let { draggingKeys } = (0, $7252cd45fc48c07c$export$6ca6700462636d0b);
      let isInternal = (0, $7252cd45fc48c07c$export$78bf638634500fa5)(ref);
      do {
        let nextTarget = getNextTarget2(target, wrap);
        if (!nextTarget)
          return null;
        target = nextTarget;
        operation = localState.state.getDropOperation({
          target: nextTarget,
          types,
          allowedOperations: allowedDropOperations,
          isInternal,
          draggingKeys
        });
        if (target.type === "root")
          seenRoot++;
      } while (operation === "cancel" && !localState.state.isDropTarget(target) && seenRoot < 2);
      if (operation === "cancel")
        return null;
      return target;
    };
    return $67560de7c78cb232$export$c28d9fb4a54e471a({
      element: ref.current,
      getDropOperation(types, allowedOperations) {
        if (localState.state.target) {
          let { draggingKeys } = (0, $7252cd45fc48c07c$export$6ca6700462636d0b);
          let isInternal = (0, $7252cd45fc48c07c$export$78bf638634500fa5)(ref);
          return localState.state.getDropOperation({
            target: localState.state.target,
            types,
            allowedOperations,
            isInternal,
            draggingKeys
          });
        }
        let target = nextValidTarget(null, types, allowedOperations, getNextTarget);
        return target ? "move" : "cancel";
      },
      onDropEnter(e, drag) {
        let types = (0, $7252cd45fc48c07c$export$e1d41611756c6326)(drag.items);
        let selectionManager = localState.state.selectionManager;
        let target;
        (0, $7252cd45fc48c07c$export$dac8db29d42db9a1)(ref);
        let key = selectionManager.focusedKey;
        let dropPosition = "after";
        let item = localState.state.collection.getItem(key);
        if ((item === null || item === void 0 ? void 0 : item.type) === "cell")
          key = item.parentKey;
        if (selectionManager.isSelected(key)) {
          if (selectionManager.selectedKeys.size > 1 && selectionManager.firstSelectedKey === key)
            dropPosition = "before";
          else
            key = selectionManager.lastSelectedKey;
        }
        if (key != null) {
          target = {
            type: "item",
            key,
            dropPosition
          };
          let { draggingKeys } = (0, $7252cd45fc48c07c$export$6ca6700462636d0b);
          let isInternal = (0, $7252cd45fc48c07c$export$78bf638634500fa5)(ref);
          var _nextValidTarget;
          if (localState.state.getDropOperation({
            target,
            types,
            allowedOperations: drag.allowedDropOperations,
            isInternal,
            draggingKeys
          }) === "cancel")
            target = (_nextValidTarget = nextValidTarget(target, types, drag.allowedDropOperations, getNextTarget, false)) !== null && _nextValidTarget !== void 0 ? _nextValidTarget : nextValidTarget(target, types, drag.allowedDropOperations, getPreviousTarget, false);
        }
        if (!target)
          target = nextValidTarget(null, types, drag.allowedDropOperations, getNextTarget);
        localState.state.setTarget(target);
      },
      onDropExit() {
        (0, $7252cd45fc48c07c$export$dac8db29d42db9a1)(void 0);
        localState.state.setTarget(null);
      },
      onDropTargetEnter(target) {
        localState.state.setTarget(target);
      },
      onDropActivate(e) {
        var _localState_state_target, _localState_state_target1;
        if (((_localState_state_target = localState.state.target) === null || _localState_state_target === void 0 ? void 0 : _localState_state_target.type) === "item" && ((_localState_state_target1 = localState.state.target) === null || _localState_state_target1 === void 0 ? void 0 : _localState_state_target1.dropPosition) === "on" && typeof localState.props.onDropActivate === "function")
          localState.props.onDropActivate({
            type: "dropactivate",
            x: e.x,
            y: e.y,
            target: localState.state.target
          });
      },
      onDrop(e, target) {
        (0, $7252cd45fc48c07c$export$dac8db29d42db9a1)(ref);
        if (localState.state.target)
          onDrop(e, target || localState.state.target);
      },
      onKeyDown(e, drag) {
        let { keyboardDelegate } = localState.props;
        let types = (0, $7252cd45fc48c07c$export$e1d41611756c6326)(drag.items);
        switch (e.key) {
          case "ArrowDown":
            if (keyboardDelegate.getKeyBelow) {
              let target = nextValidTarget(localState.state.target, types, drag.allowedDropOperations, getNextTarget);
              localState.state.setTarget(target);
            }
            break;
          case "ArrowUp":
            if (keyboardDelegate.getKeyAbove) {
              let target = nextValidTarget(localState.state.target, types, drag.allowedDropOperations, getPreviousTarget);
              localState.state.setTarget(target);
            }
            break;
          case "ArrowLeft":
            if (keyboardDelegate.getKeyLeftOf) {
              let target = nextValidTarget(localState.state.target, types, drag.allowedDropOperations, (target2, wrap) => getPreviousTarget(target2, wrap, true));
              localState.state.setTarget(target);
            }
            break;
          case "ArrowRight":
            if (keyboardDelegate.getKeyRightOf) {
              let target = nextValidTarget(localState.state.target, types, drag.allowedDropOperations, (target2, wrap) => getNextTarget(target2, wrap, true));
              localState.state.setTarget(target);
            }
            break;
          case "Home":
            if (keyboardDelegate.getFirstKey) {
              let target = nextValidTarget(null, types, drag.allowedDropOperations, getNextTarget);
              localState.state.setTarget(target);
            }
            break;
          case "End":
            if (keyboardDelegate.getLastKey) {
              let target = nextValidTarget(null, types, drag.allowedDropOperations, getPreviousTarget);
              localState.state.setTarget(target);
            }
            break;
          case "PageDown":
            if (keyboardDelegate.getKeyPageBelow) {
              let target = localState.state.target;
              if (!target)
                target = nextValidTarget(null, types, drag.allowedDropOperations, getNextTarget);
              else {
                let nextKey = keyboardDelegate.getKeyPageBelow(target.type === "item" ? target.key : keyboardDelegate.getFirstKey());
                let dropPosition = target.type === "item" ? target.dropPosition : "after";
                if (nextKey == null || target.type === "item" && target.key === keyboardDelegate.getLastKey()) {
                  nextKey = keyboardDelegate.getLastKey();
                  dropPosition = "after";
                }
                target = {
                  type: "item",
                  key: nextKey,
                  dropPosition
                };
                let { draggingCollectionRef, draggingKeys } = (0, $7252cd45fc48c07c$export$6ca6700462636d0b);
                let isInternal = (draggingCollectionRef === null || draggingCollectionRef === void 0 ? void 0 : draggingCollectionRef.current) === (ref === null || ref === void 0 ? void 0 : ref.current);
                let operation = localState.state.getDropOperation({
                  target,
                  types,
                  allowedOperations: drag.allowedDropOperations,
                  isInternal,
                  draggingKeys
                });
                var _nextValidTarget;
                if (operation === "cancel")
                  target = (_nextValidTarget = nextValidTarget(target, types, drag.allowedDropOperations, getNextTarget, false)) !== null && _nextValidTarget !== void 0 ? _nextValidTarget : nextValidTarget(target, types, drag.allowedDropOperations, getPreviousTarget, false);
              }
              localState.state.setTarget(target !== null && target !== void 0 ? target : localState.state.target);
            }
            break;
          case "PageUp": {
            if (!keyboardDelegate.getKeyPageAbove)
              break;
            let target = localState.state.target;
            if (!target)
              target = nextValidTarget(null, types, drag.allowedDropOperations, getPreviousTarget);
            else if (target.type === "item") {
              if (target.key === keyboardDelegate.getFirstKey())
                target = {
                  type: "root"
                };
              else {
                let nextKey = keyboardDelegate.getKeyPageAbove(target.key);
                let dropPosition = target.dropPosition;
                if (nextKey == null) {
                  nextKey = keyboardDelegate.getFirstKey();
                  dropPosition = "before";
                }
                target = {
                  type: "item",
                  key: nextKey,
                  dropPosition
                };
              }
              let { draggingKeys } = (0, $7252cd45fc48c07c$export$6ca6700462636d0b);
              let isInternal = (0, $7252cd45fc48c07c$export$78bf638634500fa5)(ref);
              let operation = localState.state.getDropOperation({
                target,
                types,
                allowedOperations: drag.allowedDropOperations,
                isInternal,
                draggingKeys
              });
              var _nextValidTarget1;
              if (operation === "cancel")
                target = (_nextValidTarget1 = nextValidTarget(target, types, drag.allowedDropOperations, getPreviousTarget, false)) !== null && _nextValidTarget1 !== void 0 ? _nextValidTarget1 : nextValidTarget(target, types, drag.allowedDropOperations, getNextTarget, false);
            }
            localState.state.setTarget(target !== null && target !== void 0 ? target : localState.state.target);
            break;
          }
        }
      }
    });
  }, [
    localState,
    ref,
    onDrop,
    direction
  ]);
  let id = (0, $bdb11010cef70236$export$f680877a34711e37)();
  (0, $7252cd45fc48c07c$export$dfdf5deeaf27473f).set(state, {
    id,
    ref
  });
  return {
    collectionProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(dropProps, {
      id,
      // Remove description from collection element. If dropping on the entire collection,
      // there should be a drop indicator that has this description, so no need to double announce.
      "aria-describedby": null
    })
  };
}
function $bfaab576ce1c580e$export$f7b0c5d28b66b6a5(options, state, ref) {
  let { dropProps } = (0, $224594fe3e57ff1e$export$62447ad3d2ec7da6)();
  let droppableCollectionRef = (0, $7252cd45fc48c07c$export$7e397efd01d3db27)(state);
  (0, import_react20.useEffect)(() => {
    if (ref.current)
      return $67560de7c78cb232$export$aef80212ac99c003({
        element: ref.current,
        target: options.target,
        getDropOperation(types, allowedOperations) {
          let { draggingKeys: draggingKeys2 } = (0, $7252cd45fc48c07c$export$6ca6700462636d0b);
          let isInternal2 = (0, $7252cd45fc48c07c$export$78bf638634500fa5)(droppableCollectionRef);
          return state.getDropOperation({
            target: options.target,
            types,
            allowedOperations,
            isInternal: isInternal2,
            draggingKeys: draggingKeys2
          });
        }
      });
  }, [
    ref,
    options.target,
    state,
    droppableCollectionRef
  ]);
  let dragSession = $67560de7c78cb232$export$418e185dd3f1b968();
  let { draggingKeys } = (0, $7252cd45fc48c07c$export$6ca6700462636d0b);
  let isInternal = (0, $7252cd45fc48c07c$export$78bf638634500fa5)(droppableCollectionRef);
  let isValidDropTarget = dragSession && state.getDropOperation({
    target: options.target,
    types: (0, $7252cd45fc48c07c$export$e1d41611756c6326)(dragSession.dragTarget.items),
    allowedOperations: dragSession.dragTarget.allowedDropOperations,
    isInternal,
    draggingKeys
  }) !== "cancel";
  let isDropTarget = state.isDropTarget(options.target);
  (0, import_react20.useEffect)(() => {
    if (dragSession && isDropTarget && ref.current)
      ref.current.focus();
  }, [
    isDropTarget,
    dragSession,
    ref
  ]);
  return {
    dropProps: {
      ...dropProps,
      "aria-hidden": !dragSession || isValidDropTarget ? void 0 : "true"
    },
    isDropTarget
  };
}
function $ddf25448c71fc93a$export$8d0e41d2815afac5(props, state, ref) {
  let { target } = props;
  let { collection } = state;
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault8($865c2eb7c00a83f1$exports)));
  let dragSession = $67560de7c78cb232$export$418e185dd3f1b968();
  let { dropProps } = (0, $bfaab576ce1c580e$export$f7b0c5d28b66b6a5)(props, state, ref);
  let id = (0, $bdb11010cef70236$export$f680877a34711e37)();
  var _collection_getTextValue;
  let getText = (key) => {
    var _collection_getTextValue1, _collection_getItem;
    return (_collection_getTextValue = (_collection_getTextValue1 = collection.getTextValue) === null || _collection_getTextValue1 === void 0 ? void 0 : _collection_getTextValue1.call(collection, key)) !== null && _collection_getTextValue !== void 0 ? _collection_getTextValue : (_collection_getItem = collection.getItem(key)) === null || _collection_getItem === void 0 ? void 0 : _collection_getItem.textValue;
  };
  let label = "";
  let labelledBy;
  if (target.type === "root") {
    label = stringFormatter.format("dropOnRoot");
    labelledBy = `${id} ${(0, $7252cd45fc48c07c$export$3093291712f09a77)(state)}`;
  } else if (target.dropPosition === "on")
    label = stringFormatter.format("dropOnItem", {
      itemText: getText(target.key)
    });
  else {
    let before;
    let after;
    if (collection.getFirstKey() === target.key && target.dropPosition === "before")
      before = null;
    else
      before = target.dropPosition === "before" ? collection.getKeyBefore(target.key) : target.key;
    if (collection.getLastKey() === target.key && target.dropPosition === "after")
      after = null;
    else
      after = target.dropPosition === "after" ? collection.getKeyAfter(target.key) : target.key;
    if (before && after)
      label = stringFormatter.format("insertBetween", {
        beforeItemText: getText(before),
        afterItemText: getText(after)
      });
    else if (before)
      label = stringFormatter.format("insertAfter", {
        itemText: getText(before)
      });
    else if (after)
      label = stringFormatter.format("insertBefore", {
        itemText: getText(after)
      });
  }
  let isDropTarget = state.isDropTarget(target);
  let ariaHidden = !dragSession ? "true" : dropProps["aria-hidden"];
  return {
    dropIndicatorProps: {
      ...dropProps,
      id,
      "aria-roledescription": stringFormatter.format("dropIndicator"),
      "aria-label": label,
      "aria-labelledby": labelledBy,
      "aria-hidden": ariaHidden,
      tabIndex: -1
    },
    isDropTarget,
    // If aria-hidden, we are either not in a drag session or the drop target is invalid.
    // In that case, there's no need to render anything at all unless we need to show the indicator visually.
    // This can happen when dragging using the native DnD API as opposed to keyboard dragging.
    isHidden: !isDropTarget && !!ariaHidden
  };
}
var $fd98cf7cbf233429$var$MESSAGES = {
  keyboard: {
    selected: "dragSelectedKeyboard",
    notSelected: "dragDescriptionKeyboard"
  },
  touch: {
    selected: "dragSelectedLongPress",
    notSelected: "dragDescriptionLongPress"
  },
  virtual: {
    selected: "dragDescriptionVirtual",
    notSelected: "dragDescriptionVirtual"
  }
};
function $fd98cf7cbf233429$export$b35afafff42da2d9(props, state) {
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault8($865c2eb7c00a83f1$exports)));
  let isDisabled = state.selectionManager.isDisabled(props.key);
  let { dragProps, dragButtonProps } = (0, $8253ed7ece74b463$export$7941f8aafa4b6021)({
    getItems() {
      return state.getItems(props.key);
    },
    preview: state.preview,
    getAllowedDropOperations: state.getAllowedDropOperations,
    hasDragButton: props.hasDragButton,
    onDragStart(e) {
      state.startDrag(props.key, e);
      (0, $7252cd45fc48c07c$export$72cb63bdda528276)(state.draggingKeys);
    },
    onDragMove(e) {
      state.moveDrag(e);
    },
    onDragEnd(e) {
      let { dropOperation } = e;
      let isInternal = dropOperation === "cancel" ? false : (0, $7252cd45fc48c07c$export$78bf638634500fa5)();
      state.endDrag({
        ...e,
        keys: state.draggingKeys,
        isInternal
      });
      (0, $7252cd45fc48c07c$export$70936501603e6c57)();
    }
  });
  let item = state.collection.getItem(props.key);
  let numKeysForDrag = state.getKeysForDrag(props.key).size;
  let isSelected = numKeysForDrag > 1 && state.selectionManager.isSelected(props.key);
  let dragButtonLabel;
  let description;
  let modality = (0, $7252cd45fc48c07c$export$49bac5d6d4b352ea)();
  if (!props.hasDragButton && state.selectionManager.selectionMode !== "none") {
    let msg = $fd98cf7cbf233429$var$MESSAGES[modality][isSelected ? "selected" : "notSelected"];
    if (props.hasAction && modality === "keyboard")
      msg += "Alt";
    if (isSelected)
      description = stringFormatter.format(msg, {
        count: numKeysForDrag
      });
    else
      description = stringFormatter.format(msg);
    delete dragProps.onClick;
  } else if (isSelected)
    dragButtonLabel = stringFormatter.format("dragSelectedItems", {
      count: numKeysForDrag
    });
  else {
    var _state_collection, _state_collection_getTextValue;
    var _state_collection_getTextValue1, _ref;
    let itemText = (_ref = (_state_collection_getTextValue1 = (_state_collection_getTextValue = (_state_collection = state.collection).getTextValue) === null || _state_collection_getTextValue === void 0 ? void 0 : _state_collection_getTextValue.call(_state_collection, props.key)) !== null && _state_collection_getTextValue1 !== void 0 ? _state_collection_getTextValue1 : item === null || item === void 0 ? void 0 : item.textValue) !== null && _ref !== void 0 ? _ref : "";
    dragButtonLabel = stringFormatter.format("dragItem", {
      itemText
    });
  }
  let descriptionProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(description);
  if (description)
    Object.assign(dragProps, descriptionProps);
  if (!props.hasDragButton && props.hasAction) {
    let { onKeyDownCapture, onKeyUpCapture } = dragProps;
    if (modality === "touch")
      delete dragProps["aria-describedby"];
    dragProps.onKeyDownCapture = (e) => {
      if (e.altKey)
        onKeyDownCapture(e);
    };
    dragProps.onKeyUpCapture = (e) => {
      if (e.altKey)
        onKeyUpCapture(e);
    };
  }
  return {
    dragProps: isDisabled ? {} : dragProps,
    dragButtonProps: {
      ...dragButtonProps,
      isDisabled,
      "aria-label": dragButtonLabel
    }
  };
}
function $4ac1fdc3a0fcd564$export$2962a7984b2f0a80(props, state, ref) {
  let { draggingCollectionRef } = (0, $7252cd45fc48c07c$export$6ca6700462636d0b);
  if (state.draggingKeys.size > 0 && (draggingCollectionRef === null || draggingCollectionRef === void 0 ? void 0 : draggingCollectionRef.current) !== ref.current)
    (0, $7252cd45fc48c07c$export$f2be18a910c0caa6)(ref);
}
var $9fcc7f0d70d084ee$var$globalEvents = /* @__PURE__ */ new Map();
function $9fcc7f0d70d084ee$var$addGlobalEventListener(event, fn) {
  let eventData = $9fcc7f0d70d084ee$var$globalEvents.get(event);
  if (!eventData) {
    let handlers = /* @__PURE__ */ new Set();
    let listener = (e) => {
      for (let handler of handlers)
        handler(e);
    };
    eventData = {
      listener,
      handlers
    };
    $9fcc7f0d70d084ee$var$globalEvents.set(event, eventData);
    document.addEventListener(event, listener);
  }
  eventData.handlers.add(fn);
  return () => {
    eventData.handlers.delete(fn);
    if (eventData.handlers.size === 0) {
      document.removeEventListener(event, eventData.listener);
      $9fcc7f0d70d084ee$var$globalEvents.delete(event);
    }
  };
}
function $9fcc7f0d70d084ee$export$2314ca2a3e892862(options) {
  let isFocusedRef = (0, import_react20.useRef)(false);
  let { focusProps } = (0, $a1ea59d68270f0dd$export$f8168d8dd8fd66e6)({
    onFocusChange: (isFocused) => {
      isFocusedRef.current = isFocused;
    }
  });
  let onBeforeCopy = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (isFocusedRef.current && options.getItems)
      e.preventDefault();
  });
  let onCopy = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    var _options_onCopy;
    if (!isFocusedRef.current || !options.getItems)
      return;
    e.preventDefault();
    (0, $7252cd45fc48c07c$export$f9c1490890ddd063)(e.clipboardData, options.getItems());
    (_options_onCopy = options.onCopy) === null || _options_onCopy === void 0 ? void 0 : _options_onCopy.call(options);
  });
  let onBeforeCut = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (isFocusedRef.current && options.onCut && options.getItems)
      e.preventDefault();
  });
  let onCut = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (!isFocusedRef.current || !options.onCut || !options.getItems)
      return;
    e.preventDefault();
    (0, $7252cd45fc48c07c$export$f9c1490890ddd063)(e.clipboardData, options.getItems());
    options.onCut();
  });
  let onBeforePaste = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (isFocusedRef.current && options.onPaste)
      e.preventDefault();
  });
  let onPaste = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((e) => {
    if (!isFocusedRef.current || !options.onPaste)
      return;
    e.preventDefault();
    let items = (0, $7252cd45fc48c07c$export$d9e760437831f8b3)(e.clipboardData);
    options.onPaste(items);
  });
  (0, import_react20.useEffect)(() => {
    return (0, $ff5963eb1fccf552$export$e08e3b67e392101e)($9fcc7f0d70d084ee$var$addGlobalEventListener("beforecopy", onBeforeCopy), $9fcc7f0d70d084ee$var$addGlobalEventListener("copy", onCopy), $9fcc7f0d70d084ee$var$addGlobalEventListener("beforecut", onBeforeCut), $9fcc7f0d70d084ee$var$addGlobalEventListener("cut", onCut), $9fcc7f0d70d084ee$var$addGlobalEventListener("beforepaste", onBeforePaste), $9fcc7f0d70d084ee$var$addGlobalEventListener("paste", onPaste));
  }, [
    onBeforeCopy,
    onCopy,
    onBeforeCut,
    onCut,
    onBeforePaste,
    onPaste
  ]);
  return {
    clipboardProps: focusProps
  };
}
function $ad0e3f3d9c50e4ba$var$DragPreview(props, ref) {
  let render = props.children;
  let [children, setChildren] = (0, import_react20.useState)(null);
  let domRef = (0, import_react20.useRef)(null);
  (0, import_react20.useImperativeHandle)(ref, () => (items, callback) => {
    (0, import_react_dom2.flushSync)(() => {
      setChildren(render(items));
    });
    callback(domRef.current);
    requestAnimationFrame(() => {
      setChildren(null);
    });
  }, [
    render
  ]);
  if (!children)
    return null;
  return (0, import_react20.default).createElement("div", {
    style: {
      zIndex: -100,
      position: "absolute",
      top: 0,
      left: -1e5
    },
    ref: domRef
  }, children);
}
var $ad0e3f3d9c50e4ba$export$905ab40ac2179daa = (0, import_react20.default).forwardRef($ad0e3f3d9c50e4ba$var$DragPreview);
var $3ca85212bf8898e4$export$fbd65d14c79e28cc = class {
  getPrimaryStart(rect) {
    return this.orientation === "horizontal" ? rect.left : rect.top;
  }
  getPrimaryEnd(rect) {
    return this.orientation === "horizontal" ? rect.right : rect.bottom;
  }
  getSecondaryStart(rect) {
    return this.orientation === "horizontal" ? rect.top : rect.left;
  }
  getSecondaryEnd(rect) {
    return this.orientation === "horizontal" ? rect.bottom : rect.right;
  }
  getFlowStart(rect) {
    return this.layout === "stack" ? this.getPrimaryStart(rect) : this.getSecondaryStart(rect);
  }
  getFlowEnd(rect) {
    return this.layout === "stack" ? this.getPrimaryEnd(rect) : this.getSecondaryEnd(rect);
  }
  getFlowSize(rect) {
    return this.getFlowEnd(rect) - this.getFlowStart(rect);
  }
  getDropTargetFromPoint(x, y, isValidDropTarget) {
    if (this.collection.size === 0)
      return {
        type: "root"
      };
    let rect = this.ref.current.getBoundingClientRect();
    let primary = this.orientation === "horizontal" ? x : y;
    let secondary = this.orientation === "horizontal" ? y : x;
    primary += this.getPrimaryStart(rect);
    secondary += this.getSecondaryStart(rect);
    let flow = this.layout === "stack" ? primary : secondary;
    let isPrimaryRTL = this.orientation === "horizontal" && this.direction === "rtl";
    let isSecondaryRTL = this.layout === "grid" && this.orientation === "vertical" && this.direction === "rtl";
    let isFlowRTL = this.layout === "stack" ? isPrimaryRTL : isSecondaryRTL;
    let elements = this.ref.current.querySelectorAll("[data-key]");
    let elementMap = /* @__PURE__ */ new Map();
    for (let item2 of elements)
      if (item2 instanceof HTMLElement)
        elementMap.set(item2.dataset.key, item2);
    let items = [
      ...this.collection
    ];
    let low = 0;
    let high = items.length;
    while (low < high) {
      let mid = Math.floor((low + high) / 2);
      let item2 = items[mid];
      let element2 = elementMap.get(String(item2.key));
      let rect2 = element2.getBoundingClientRect();
      let update = (isGreater) => {
        if (isGreater)
          low = mid + 1;
        else
          high = mid;
      };
      if (primary < this.getPrimaryStart(rect2))
        update(isPrimaryRTL);
      else if (primary > this.getPrimaryEnd(rect2))
        update(!isPrimaryRTL);
      else if (secondary < this.getSecondaryStart(rect2))
        update(isSecondaryRTL);
      else if (secondary > this.getSecondaryEnd(rect2))
        update(!isSecondaryRTL);
      else {
        let target = {
          type: "item",
          key: item2.key,
          dropPosition: "on"
        };
        if (isValidDropTarget(target)) {
          if (flow <= this.getFlowStart(rect2) + 5 && isValidDropTarget({
            ...target,
            dropPosition: "before"
          }))
            target.dropPosition = isFlowRTL ? "after" : "before";
          else if (flow >= this.getFlowEnd(rect2) - 5 && isValidDropTarget({
            ...target,
            dropPosition: "after"
          }))
            target.dropPosition = isFlowRTL ? "before" : "after";
        } else {
          let mid2 = this.getFlowStart(rect2) + this.getFlowSize(rect2) / 2;
          if (flow <= mid2 && isValidDropTarget({
            ...target,
            dropPosition: "before"
          }))
            target.dropPosition = isFlowRTL ? "after" : "before";
          else if (flow >= mid2 && isValidDropTarget({
            ...target,
            dropPosition: "after"
          }))
            target.dropPosition = isFlowRTL ? "before" : "after";
        }
        return target;
      }
    }
    let item = items[Math.min(low, items.length - 1)];
    let element = elementMap.get(String(item.key));
    rect = element.getBoundingClientRect();
    if (primary < this.getPrimaryStart(rect) || Math.abs(flow - this.getFlowStart(rect)) < Math.abs(flow - this.getFlowEnd(rect)))
      return {
        type: "item",
        key: item.key,
        dropPosition: isFlowRTL ? "after" : "before"
      };
    return {
      type: "item",
      key: item.key,
      dropPosition: isFlowRTL ? "before" : "after"
    };
  }
  constructor(collection, ref, options) {
    this.collection = collection;
    this.ref = ref;
    this.layout = (options === null || options === void 0 ? void 0 : options.layout) || "stack";
    this.orientation = (options === null || options === void 0 ? void 0 : options.orientation) || "vertical";
    this.direction = (options === null || options === void 0 ? void 0 : options.direction) || "ltr";
  }
};

// node_modules/.pnpm/@react-stately+virtualizer@3.6.1_react@18.2.0/node_modules/@react-stately/virtualizer/dist/module.js
var import_react21 = __toESM(require_react());
var $3041db3296945e6e$export$baf26146a414f24a = class {
  /**
  * Returns a copy of this point.
  */
  copy() {
    return new $3041db3296945e6e$export$baf26146a414f24a(this.x, this.y);
  }
  /**
  * Checks if two points are equal.
  */
  equals(point) {
    return this.x === point.x && this.y === point.y;
  }
  /**
  * Returns true if this point is the origin.
  */
  isOrigin() {
    return this.x === 0 && this.y === 0;
  }
  constructor(x = 0, y = 0) {
    this.x = x;
    this.y = y;
  }
};
var $60423f92c7f9ad87$export$c79fc6492f3af13d = class {
  /**
  * The maximum x-coordinate in the rectangle.
  */
  get maxX() {
    return this.x + this.width;
  }
  /**
  * The maximum y-coordinate in the rectangle.
  */
  get maxY() {
    return this.y + this.height;
  }
  /**
  * The area of the rectangle.
  */
  get area() {
    return this.width * this.height;
  }
  /**
  * The top left corner of the rectangle.
  */
  get topLeft() {
    return new (0, $3041db3296945e6e$export$baf26146a414f24a)(this.x, this.y);
  }
  /**
  * The top right corner of the rectangle.
  */
  get topRight() {
    return new (0, $3041db3296945e6e$export$baf26146a414f24a)(this.maxX, this.y);
  }
  /**
  * The bottom left corner of the rectangle.
  */
  get bottomLeft() {
    return new (0, $3041db3296945e6e$export$baf26146a414f24a)(this.x, this.maxY);
  }
  /**
  * The bottom right corner of the rectangle.
  */
  get bottomRight() {
    return new (0, $3041db3296945e6e$export$baf26146a414f24a)(this.maxX, this.maxY);
  }
  /**
  * Returns whether this rectangle intersects another rectangle.
  * @param rect - The rectangle to check.
  */
  intersects(rect) {
    return this.x <= rect.x + rect.width && rect.x <= this.x + this.width && this.y <= rect.y + rect.height && rect.y <= this.y + this.height;
  }
  /**
  * Returns whether this rectangle fully contains another rectangle.
  * @param rect - The rectangle to check.
  */
  containsRect(rect) {
    return this.x <= rect.x && this.y <= rect.y && this.maxX >= rect.maxX && this.maxY >= rect.maxY;
  }
  /**
  * Returns whether the rectangle contains the given point.
  * @param point - The point to check.
  */
  containsPoint(point) {
    return this.x <= point.x && this.y <= point.y && this.maxX >= point.x && this.maxY >= point.y;
  }
  /**
  * Returns the first corner of this rectangle (from top to bottom, left to right)
  * that is contained in the given rectangle, or null of the rectangles do not intersect.
  * @param rect - The rectangle to check.
  */
  getCornerInRect(rect) {
    for (let key of [
      "topLeft",
      "topRight",
      "bottomLeft",
      "bottomRight"
    ]) {
      if (rect.containsPoint(this[key]))
        return key;
    }
    return null;
  }
  equals(rect) {
    return rect.x === this.x && rect.y === this.y && rect.width === this.width && rect.height === this.height;
  }
  pointEquals(point) {
    return this.x === point.x && this.y === point.y;
  }
  sizeEquals(size) {
    return this.width === size.width && this.height === size.height;
  }
  /**
  * Returns the union of this Rect and another.
  */
  union(other) {
    let x = Math.min(this.x, other.x);
    let y = Math.min(this.y, other.y);
    let width = Math.max(this.maxX, other.maxX) - x;
    let height = Math.max(this.maxY, other.maxY) - y;
    return new $60423f92c7f9ad87$export$c79fc6492f3af13d(x, y, width, height);
  }
  /**
  * Returns the intersection of this Rect with another.
  * If the rectangles do not intersect, an all zero Rect is returned.
  */
  intersection(other) {
    if (!this.intersects(other))
      return new $60423f92c7f9ad87$export$c79fc6492f3af13d(0, 0, 0, 0);
    let x = Math.max(this.x, other.x);
    let y = Math.max(this.y, other.y);
    return new $60423f92c7f9ad87$export$c79fc6492f3af13d(x, y, Math.min(this.maxX, other.maxX) - x, Math.min(this.maxY, other.maxY) - y);
  }
  /**
  * Returns a copy of this rectangle.
  */
  copy() {
    return new $60423f92c7f9ad87$export$c79fc6492f3af13d(this.x, this.y, this.width, this.height);
  }
  constructor(x = 0, y = 0, width = 0, height = 0) {
    this.x = x;
    this.y = y;
    this.width = width;
    this.height = height;
  }
};
var $3eb131dcf37ad5f8$var$perf = typeof window !== "undefined" ? window.performance : null;
var $3eb131dcf37ad5f8$var$perfNow = $3eb131dcf37ad5f8$var$perf && ($3eb131dcf37ad5f8$var$perf.now || $3eb131dcf37ad5f8$var$perf.webkitNow || $3eb131dcf37ad5f8$var$perf.msNow || $3eb131dcf37ad5f8$var$perf.mozNow);
var $3eb131dcf37ad5f8$var$getTime = $3eb131dcf37ad5f8$var$perfNow ? $3eb131dcf37ad5f8$var$perfNow.bind($3eb131dcf37ad5f8$var$perf) : function() {
  return Date.now ? Date.now() : new Date().getTime();
};

// node_modules/.pnpm/@react-aria+grid@3.8.1_react-dom@18.2.0_react@18.2.0/node_modules/@react-aria/grid/dist/module.js
var import_react22 = __toESM(require_react());
function $parcel$interopDefault9(a) {
  return a && a.__esModule ? a.default : a;
}
var $d1c300d9c497e402$export$de9feff04fda126e = class {
  isCell(node) {
    return node.type === "cell";
  }
  isRow(node) {
    return node.type === "row" || node.type === "item";
  }
  findPreviousKey(fromKey, pred) {
    let key = fromKey != null ? this.collection.getKeyBefore(fromKey) : this.collection.getLastKey();
    while (key != null) {
      let item = this.collection.getItem(key);
      if (!this.disabledKeys.has(key) && (!pred || pred(item)))
        return key;
      key = this.collection.getKeyBefore(key);
    }
  }
  findNextKey(fromKey, pred) {
    let key = fromKey != null ? this.collection.getKeyAfter(fromKey) : this.collection.getFirstKey();
    while (key != null) {
      let item = this.collection.getItem(key);
      if (!this.disabledKeys.has(key) && (!pred || pred(item)))
        return key;
      key = this.collection.getKeyAfter(key);
    }
  }
  getKeyBelow(key) {
    let startItem = this.collection.getItem(key);
    if (!startItem)
      return;
    if (this.isCell(startItem))
      key = startItem.parentKey;
    key = this.findNextKey(key);
    if (key != null) {
      if (this.isCell(startItem)) {
        let item = this.collection.getItem(key);
        return (0, $c5a24bc478652b5f$export$5f3398f8733f90e2)((0, $c5a24bc478652b5f$export$1005530eda016c13)(item, this.collection), startItem.index).key;
      }
      if (this.focusMode === "row")
        return key;
    }
  }
  getKeyAbove(key) {
    let startItem = this.collection.getItem(key);
    if (!startItem)
      return;
    if (this.isCell(startItem))
      key = startItem.parentKey;
    key = this.findPreviousKey(key);
    if (key != null) {
      if (this.isCell(startItem)) {
        let item = this.collection.getItem(key);
        return (0, $c5a24bc478652b5f$export$5f3398f8733f90e2)((0, $c5a24bc478652b5f$export$1005530eda016c13)(item, this.collection), startItem.index).key;
      }
      if (this.focusMode === "row")
        return key;
    }
  }
  getKeyRightOf(key) {
    let item = this.collection.getItem(key);
    if (!item)
      return;
    if (this.isRow(item)) {
      let children = (0, $c5a24bc478652b5f$export$1005530eda016c13)(item, this.collection);
      return this.direction === "rtl" ? (0, $c5a24bc478652b5f$export$7475b2c64539e4cf)(children).key : (0, $c5a24bc478652b5f$export$fbdeaa6a76694f71)(children).key;
    }
    if (this.isCell(item)) {
      let parent = this.collection.getItem(item.parentKey);
      let children = (0, $c5a24bc478652b5f$export$1005530eda016c13)(parent, this.collection);
      let next = this.direction === "rtl" ? (0, $c5a24bc478652b5f$export$5f3398f8733f90e2)(children, item.index - 1) : (0, $c5a24bc478652b5f$export$5f3398f8733f90e2)(children, item.index + 1);
      if (next)
        return next.key;
      if (this.focusMode === "row")
        return item.parentKey;
      return this.direction === "rtl" ? this.getFirstKey(key) : this.getLastKey(key);
    }
  }
  getKeyLeftOf(key) {
    let item = this.collection.getItem(key);
    if (!item)
      return;
    if (this.isRow(item)) {
      let children = (0, $c5a24bc478652b5f$export$1005530eda016c13)(item, this.collection);
      return this.direction === "rtl" ? (0, $c5a24bc478652b5f$export$fbdeaa6a76694f71)(children).key : (0, $c5a24bc478652b5f$export$7475b2c64539e4cf)(children).key;
    }
    if (this.isCell(item)) {
      let parent = this.collection.getItem(item.parentKey);
      let children = (0, $c5a24bc478652b5f$export$1005530eda016c13)(parent, this.collection);
      let prev = this.direction === "rtl" ? (0, $c5a24bc478652b5f$export$5f3398f8733f90e2)(children, item.index + 1) : (0, $c5a24bc478652b5f$export$5f3398f8733f90e2)(children, item.index - 1);
      if (prev)
        return prev.key;
      if (this.focusMode === "row")
        return item.parentKey;
      return this.direction === "rtl" ? this.getLastKey(key) : this.getFirstKey(key);
    }
  }
  getFirstKey(key, global) {
    let item;
    if (key != null) {
      item = this.collection.getItem(key);
      if (!item)
        return;
      if (this.isCell(item) && !global) {
        let parent = this.collection.getItem(item.parentKey);
        return (0, $c5a24bc478652b5f$export$fbdeaa6a76694f71)((0, $c5a24bc478652b5f$export$1005530eda016c13)(parent, this.collection)).key;
      }
    }
    key = this.findNextKey();
    if (key != null && item && this.isCell(item) && global || this.focusMode === "cell") {
      let item2 = this.collection.getItem(key);
      key = (0, $c5a24bc478652b5f$export$fbdeaa6a76694f71)((0, $c5a24bc478652b5f$export$1005530eda016c13)(item2, this.collection)).key;
    }
    return key;
  }
  getLastKey(key, global) {
    let item;
    if (key != null) {
      item = this.collection.getItem(key);
      if (!item)
        return;
      if (this.isCell(item) && !global) {
        let parent = this.collection.getItem(item.parentKey);
        let children = (0, $c5a24bc478652b5f$export$1005530eda016c13)(parent, this.collection);
        return (0, $c5a24bc478652b5f$export$7475b2c64539e4cf)(children).key;
      }
    }
    key = this.findPreviousKey();
    if (key != null && item && this.isCell(item) && global || this.focusMode === "cell") {
      let item2 = this.collection.getItem(key);
      let children = (0, $c5a24bc478652b5f$export$1005530eda016c13)(item2, this.collection);
      key = (0, $c5a24bc478652b5f$export$7475b2c64539e4cf)(children).key;
    }
    return key;
  }
  getItem(key) {
    return this.ref.current.querySelector(`[data-key="${key}"]`);
  }
  getItemRect(key) {
    var _this_layout_getLayoutInfo;
    if (this.layout)
      return (_this_layout_getLayoutInfo = this.layout.getLayoutInfo(key)) === null || _this_layout_getLayoutInfo === void 0 ? void 0 : _this_layout_getLayoutInfo.rect;
    let item = this.getItem(key);
    if (item)
      return new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(item.offsetLeft, item.offsetTop, item.offsetWidth, item.offsetHeight);
  }
  getPageHeight() {
    var _this_layout_virtualizer, _this_ref, _this_ref_current;
    if (this.layout)
      return (_this_layout_virtualizer = this.layout.virtualizer) === null || _this_layout_virtualizer === void 0 ? void 0 : _this_layout_virtualizer.visibleRect.height;
    return (_this_ref = this.ref) === null || _this_ref === void 0 ? void 0 : (_this_ref_current = _this_ref.current) === null || _this_ref_current === void 0 ? void 0 : _this_ref_current.offsetHeight;
  }
  getContentHeight() {
    var _this_ref, _this_ref_current;
    if (this.layout)
      return this.layout.getContentSize().height;
    return (_this_ref = this.ref) === null || _this_ref === void 0 ? void 0 : (_this_ref_current = _this_ref.current) === null || _this_ref_current === void 0 ? void 0 : _this_ref_current.scrollHeight;
  }
  getKeyPageAbove(key) {
    let itemRect = this.getItemRect(key);
    if (!itemRect)
      return null;
    let pageY = Math.max(0, itemRect.maxY - this.getPageHeight());
    while (itemRect && itemRect.y > pageY) {
      key = this.getKeyAbove(key);
      itemRect = this.getItemRect(key);
    }
    return key;
  }
  getKeyPageBelow(key) {
    let itemRect = this.getItemRect(key);
    if (!itemRect)
      return null;
    let pageHeight = this.getPageHeight();
    let pageY = Math.min(this.getContentHeight(), itemRect.y + pageHeight);
    while (itemRect && itemRect.maxY < pageY) {
      let nextKey = this.getKeyBelow(key);
      itemRect = this.getItemRect(nextKey);
      if (nextKey != null)
        key = nextKey;
    }
    return key;
  }
  getKeyForSearch(search, fromKey) {
    if (!this.collator)
      return null;
    let collection = this.collection;
    let key = fromKey !== null && fromKey !== void 0 ? fromKey : this.getFirstKey();
    let startItem = collection.getItem(key);
    if (startItem.type === "cell")
      key = startItem.parentKey;
    let hasWrapped = false;
    while (key != null) {
      let item = collection.getItem(key);
      if (item.textValue) {
        let substring = item.textValue.slice(0, search.length);
        if (this.collator.compare(substring, search) === 0) {
          if (this.isRow(item) && this.focusMode === "cell")
            return (0, $c5a24bc478652b5f$export$fbdeaa6a76694f71)((0, $c5a24bc478652b5f$export$1005530eda016c13)(item, this.collection)).key;
          return item.key;
        }
      }
      key = this.findNextKey(key);
      if (key == null && !hasWrapped) {
        key = this.getFirstKey();
        hasWrapped = true;
      }
    }
    return null;
  }
  constructor(options) {
    this.collection = options.collection;
    this.disabledKeys = options.disabledKeys;
    this.ref = options.ref;
    this.direction = options.direction;
    this.collator = options.collator;
    this.layout = options.layout;
    this.focusMode = options.focusMode || "row";
  }
};
var $1af922eb41e03c8f$export$e6235c0d09b995d0 = /* @__PURE__ */ new WeakMap();
var $835c96616a7cb4f9$exports = {};
var $682989befd4f478d$exports = {};
$682989befd4f478d$exports = {
  "deselectedItem": (args) => `${args.item} غير المحدد`,
  "longPressToSelect": `اضغط مطولًا للدخول إلى وضع التحديد.`,
  "select": `تحديد`,
  "selectedAll": `جميع العناصر المحددة.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `لم يتم تحديد عناصر`,
    one: () => `${formatter.number(args.count)} عنصر محدد`,
    other: () => `${formatter.number(args.count)} عنصر محدد`
  })}.`,
  "selectedItem": (args) => `${args.item} المحدد`
};
var $f7fca02019afd941$exports = {};
$f7fca02019afd941$exports = {
  "deselectedItem": (args) => `${args.item} не е избран.`,
  "longPressToSelect": `Натиснете и задръжте за да влезете в избирателен режим.`,
  "select": `Изберете`,
  "selectedAll": `Всички елементи са избрани.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Няма избрани елементи`,
    one: () => `${formatter.number(args.count)} избран елемент`,
    other: () => `${formatter.number(args.count)} избрани елементи`
  })}.`,
  "selectedItem": (args) => `${args.item} избран.`
};
var $8f86f40be75387f1$exports = {};
$8f86f40be75387f1$exports = {
  "deselectedItem": (args) => `Položka ${args.item} není vybrána.`,
  "longPressToSelect": `Dlouhým stisknutím přejdete do režimu výběru.`,
  "select": `Vybrat`,
  "selectedAll": `Vybrány všechny položky.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nevybrány žádné položky`,
    one: () => `Vybrána ${formatter.number(args.count)} položka`,
    other: () => `Vybráno ${formatter.number(args.count)} položek`
  })}.`,
  "selectedItem": (args) => `Vybrána položka ${args.item}.`
};
var $db24ba43c8d652ee$exports = {};
$db24ba43c8d652ee$exports = {
  "deselectedItem": (args) => `${args.item} ikke valgt.`,
  "longPressToSelect": `Lav et langt tryk for at aktivere valgtilstand.`,
  "select": `Vælg`,
  "selectedAll": `Alle elementer valgt.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Ingen elementer valgt`,
    one: () => `${formatter.number(args.count)} element valgt`,
    other: () => `${formatter.number(args.count)} elementer valgt`
  })}.`,
  "selectedItem": (args) => `${args.item} valgt.`
};
var $f8f1e72c8b5447d6$exports = {};
$f8f1e72c8b5447d6$exports = {
  "deselectedItem": (args) => `${args.item} nicht ausgewählt.`,
  "longPressToSelect": `Gedrückt halten, um Auswahlmodus zu öffnen.`,
  "select": `Auswählen`,
  "selectedAll": `Alle Elemente ausgewählt.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Keine Elemente ausgewählt`,
    one: () => `${formatter.number(args.count)} Element ausgewählt`,
    other: () => `${formatter.number(args.count)} Elemente ausgewählt`
  })}.`,
  "selectedItem": (args) => `${args.item} ausgewählt.`
};
var $9a73ed2983c3ab0b$exports = {};
$9a73ed2983c3ab0b$exports = {
  "deselectedItem": (args) => `Δεν επιλέχθηκε το στοιχείο ${args.item}.`,
  "longPressToSelect": `Πατήστε παρατεταμένα για να μπείτε σε λειτουργία επιλογής.`,
  "select": `Επιλογή`,
  "selectedAll": `Επιλέχθηκαν όλα τα στοιχεία.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Δεν επιλέχθηκαν στοιχεία`,
    one: () => `Επιλέχθηκε ${formatter.number(args.count)} στοιχείο`,
    other: () => `Επιλέχθηκαν ${formatter.number(args.count)} στοιχεία`
  })}.`,
  "selectedItem": (args) => `Επιλέχθηκε το στοιχείο ${args.item}.`
};
var $583de0b3587601b9$exports = {};
$583de0b3587601b9$exports = {
  "deselectedItem": (args) => `${args.item} not selected.`,
  "select": `Select`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `No items selected`,
    one: () => `${formatter.number(args.count)} item selected`,
    other: () => `${formatter.number(args.count)} items selected`
  })}.`,
  "selectedAll": `All items selected.`,
  "selectedItem": (args) => `${args.item} selected.`,
  "longPressToSelect": `Long press to enter selection mode.`
};
var $147159c978043442$exports = {};
$147159c978043442$exports = {
  "deselectedItem": (args) => `${args.item} no seleccionado.`,
  "longPressToSelect": `Mantenga pulsado para abrir el modo de selección.`,
  "select": `Seleccionar`,
  "selectedAll": `Todos los elementos seleccionados.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Ningún elemento seleccionado`,
    one: () => `${formatter.number(args.count)} elemento seleccionado`,
    other: () => `${formatter.number(args.count)} elementos seleccionados`
  })}.`,
  "selectedItem": (args) => `${args.item} seleccionado.`
};
var $5cbb62c8a19173ac$exports = {};
$5cbb62c8a19173ac$exports = {
  "deselectedItem": (args) => `${args.item} pole valitud.`,
  "longPressToSelect": `Valikurežiimi sisenemiseks vajutage pikalt.`,
  "select": `Vali`,
  "selectedAll": `Kõik üksused valitud.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Üksusi pole valitud`,
    one: () => `${formatter.number(args.count)} üksus valitud`,
    other: () => `${formatter.number(args.count)} üksust valitud`
  })}.`,
  "selectedItem": (args) => `${args.item} valitud.`
};
var $a33d71dc804cc59e$exports = {};
$a33d71dc804cc59e$exports = {
  "deselectedItem": (args) => `Kohdetta ${args.item} ei valittu.`,
  "longPressToSelect": `Siirry valintatilaan painamalla pitkään.`,
  "select": `Valitse`,
  "selectedAll": `Kaikki kohteet valittu.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Ei yhtään kohdetta valittu`,
    one: () => `${formatter.number(args.count)} kohde valittu`,
    other: () => `${formatter.number(args.count)} kohdetta valittu`
  })}.`,
  "selectedItem": (args) => `${args.item} valittu.`
};
var $92d800447793d084$exports = {};
$92d800447793d084$exports = {
  "deselectedItem": (args) => `${args.item} non sélectionné.`,
  "longPressToSelect": `Appuyez de manière prolongée pour passer en mode de sélection.`,
  "select": `Sélectionner`,
  "selectedAll": `Tous les éléments sélectionnés.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Aucun élément sélectionné`,
    one: () => `${formatter.number(args.count)} élément sélectionné`,
    other: () => `${formatter.number(args.count)} éléments sélectionnés`
  })}.`,
  "selectedItem": (args) => `${args.item} sélectionné.`
};
var $fe732cdb32124ea8$exports = {};
$fe732cdb32124ea8$exports = {
  "deselectedItem": (args) => `${args.item} לא נבחר.`,
  "longPressToSelect": `הקשה ארוכה לכניסה למצב בחירה.`,
  "select": `בחר`,
  "selectedAll": `כל הפריטים נבחרו.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `לא נבחרו פריטים`,
    one: () => `פריט ${formatter.number(args.count)} נבחר`,
    other: () => `${formatter.number(args.count)} פריטים נבחרו`
  })}.`,
  "selectedItem": (args) => `${args.item} נבחר.`
};
var $e41234e934efb4f5$exports = {};
$e41234e934efb4f5$exports = {
  "deselectedItem": (args) => `Stavka ${args.item} nije odabrana.`,
  "longPressToSelect": `Dugo pritisnite za ulazak u način odabira.`,
  "select": `Odaberite`,
  "selectedAll": `Odabrane su sve stavke.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nije odabrana nijedna stavka`,
    one: () => `Odabrana je ${formatter.number(args.count)} stavka`,
    other: () => `Odabrano je ${formatter.number(args.count)} stavki`
  })}.`,
  "selectedItem": (args) => `Stavka ${args.item} je odabrana.`
};
var $1b0393182473bf9e$exports = {};
$1b0393182473bf9e$exports = {
  "deselectedItem": (args) => `${args.item} nincs kijelölve.`,
  "longPressToSelect": `Nyomja hosszan a kijelöléshez.`,
  "select": `Kijelölés`,
  "selectedAll": `Az összes elem kijelölve.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Egy elem sincs kijelölve`,
    one: () => `${formatter.number(args.count)} elem kijelölve`,
    other: () => `${formatter.number(args.count)} elem kijelölve`
  })}.`,
  "selectedItem": (args) => `${args.item} kijelölve.`
};
var $2eed782c1c110ce7$exports = {};
$2eed782c1c110ce7$exports = {
  "deselectedItem": (args) => `${args.item} non selezionato.`,
  "longPressToSelect": `Premi a lungo per passare alla modalità di selezione.`,
  "select": `Seleziona`,
  "selectedAll": `Tutti gli elementi selezionati.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nessun elemento selezionato`,
    one: () => `${formatter.number(args.count)} elemento selezionato`,
    other: () => `${formatter.number(args.count)} elementi selezionati`
  })}.`,
  "selectedItem": (args) => `${args.item} selezionato.`
};
var $8b5d459f86e9b23c$exports = {};
$8b5d459f86e9b23c$exports = {
  "deselectedItem": (args) => `${args.item} が選択されていません。`,
  "longPressToSelect": `長押しして選択モードを開きます。`,
  "select": `選択`,
  "selectedAll": `すべての項目を選択しました。`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `項目が選択されていません`,
    one: () => `${formatter.number(args.count)} 項目を選択しました`,
    other: () => `${formatter.number(args.count)} 項目を選択しました`
  })}。`,
  "selectedItem": (args) => `${args.item} を選択しました。`
};
var $1949c3ad17295fd4$exports = {};
$1949c3ad17295fd4$exports = {
  "deselectedItem": (args) => `${args.item}이(가) 선택되지 않았습니다.`,
  "longPressToSelect": `선택 모드로 들어가려면 길게 누르십시오.`,
  "select": `선택`,
  "selectedAll": `모든 항목이 선택되었습니다.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `선택된 항목이 없습니다`,
    one: () => `${formatter.number(args.count)}개 항목이 선택되었습니다`,
    other: () => `${formatter.number(args.count)}개 항목이 선택되었습니다`
  })}.`,
  "selectedItem": (args) => `${args.item}이(가) 선택되었습니다.`
};
var $f5e3df4dc8aa7b54$exports = {};
$f5e3df4dc8aa7b54$exports = {
  "deselectedItem": (args) => `${args.item} nepasirinkta.`,
  "longPressToSelect": `Norėdami įjungti pasirinkimo režimą, paspauskite ir palaikykite.`,
  "select": `Pasirinkti`,
  "selectedAll": `Pasirinkti visi elementai.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nepasirinktas nė vienas elementas`,
    one: () => `Pasirinktas ${formatter.number(args.count)} elementas`,
    other: () => `Pasirinkta elementų: ${formatter.number(args.count)}`
  })}.`,
  "selectedItem": (args) => `Pasirinkta: ${args.item}.`
};
var $9dd86690a5c2b2c5$exports = {};
$9dd86690a5c2b2c5$exports = {
  "deselectedItem": (args) => `Vienums ${args.item} nav atlasīts.`,
  "longPressToSelect": `Ilgi turiet nospiestu. lai ieslēgtu atlases režīmu.`,
  "select": `Atlasīt`,
  "selectedAll": `Atlasīti visi vienumi.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nav atlasīts neviens vienums`,
    one: () => `Atlasīto vienumu skaits: ${formatter.number(args.count)}`,
    other: () => `Atlasīto vienumu skaits: ${formatter.number(args.count)}`
  })}.`,
  "selectedItem": (args) => `Atlasīts vienums ${args.item}.`
};
var $843964c3bf9a7d24$exports = {};
$843964c3bf9a7d24$exports = {
  "deselectedItem": (args) => `${args.item} er ikke valgt.`,
  "longPressToSelect": `Bruk et langt trykk for å gå inn i valgmodus.`,
  "select": `Velg`,
  "selectedAll": `Alle elementer er valgt.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Ingen elementer er valgt`,
    one: () => `${formatter.number(args.count)} element er valgt`,
    other: () => `${formatter.number(args.count)} elementer er valgt`
  })}.`,
  "selectedItem": (args) => `${args.item} er valgt.`
};
var $73f50e845f9ef3b4$exports = {};
$73f50e845f9ef3b4$exports = {
  "deselectedItem": (args) => `${args.item} niet geselecteerd.`,
  "longPressToSelect": `Druk lang om de selectiemodus te openen.`,
  "select": `Selecteren`,
  "selectedAll": `Alle items geselecteerd.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Geen items geselecteerd`,
    one: () => `${formatter.number(args.count)} item geselecteerd`,
    other: () => `${formatter.number(args.count)} items geselecteerd`
  })}.`,
  "selectedItem": (args) => `${args.item} geselecteerd.`
};
var $87f92a7e077514b2$exports = {};
$87f92a7e077514b2$exports = {
  "deselectedItem": (args) => `Nie zaznaczono ${args.item}.`,
  "longPressToSelect": `Naciśnij i przytrzymaj, aby wejść do trybu wyboru.`,
  "select": `Zaznacz`,
  "selectedAll": `Wszystkie zaznaczone elementy.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nie zaznaczono żadnych elementów`,
    one: () => `${formatter.number(args.count)} zaznaczony element`,
    other: () => `${formatter.number(args.count)} zaznaczonych elementów`
  })}.`,
  "selectedItem": (args) => `Zaznaczono ${args.item}.`
};
var $c28c98d58ee9ff6f$exports = {};
$c28c98d58ee9ff6f$exports = {
  "deselectedItem": (args) => `${args.item} não selecionado.`,
  "longPressToSelect": `Mantenha pressionado para entrar no modo de seleção.`,
  "select": `Selecionar`,
  "selectedAll": `Todos os itens selecionados.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nenhum item selecionado`,
    one: () => `${formatter.number(args.count)} item selecionado`,
    other: () => `${formatter.number(args.count)} itens selecionados`
  })}.`,
  "selectedItem": (args) => `${args.item} selecionado.`
};
var $b6b1503b17b2254d$exports = {};
$b6b1503b17b2254d$exports = {
  "deselectedItem": (args) => `${args.item} não selecionado.`,
  "longPressToSelect": `Prima continuamente para entrar no modo de seleção.`,
  "select": `Selecionar`,
  "selectedAll": `Todos os itens selecionados.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nenhum item selecionado`,
    one: () => `${formatter.number(args.count)} item selecionado`,
    other: () => `${formatter.number(args.count)} itens selecionados`
  })}.`,
  "selectedItem": (args) => `${args.item} selecionado.`
};
var $8bdaeb71e50c3e1a$exports = {};
$8bdaeb71e50c3e1a$exports = {
  "deselectedItem": (args) => `${args.item} neselectat.`,
  "longPressToSelect": `Apăsați lung pentru a intra în modul de selectare.`,
  "select": `Selectare`,
  "selectedAll": `Toate elementele selectate.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Niciun element selectat`,
    one: () => `${formatter.number(args.count)} element selectat`,
    other: () => `${formatter.number(args.count)} elemente selectate`
  })}.`,
  "selectedItem": (args) => `${args.item} selectat.`
};
var $ec2b852dd7c3d1f2$exports = {};
$ec2b852dd7c3d1f2$exports = {
  "deselectedItem": (args) => `${args.item} не выбрано.`,
  "longPressToSelect": `Нажмите и удерживайте для входа в режим выбора.`,
  "select": `Выбрать`,
  "selectedAll": `Выбраны все элементы.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Нет выбранных элементов`,
    one: () => `${formatter.number(args.count)} элемент выбран`,
    other: () => `${formatter.number(args.count)} элементов выбрано`
  })}.`,
  "selectedItem": (args) => `${args.item} выбрано.`
};
var $79e6d900d6a4f82d$exports = {};
$79e6d900d6a4f82d$exports = {
  "deselectedItem": (args) => `Nevybraté položky: ${args.item}.`,
  "longPressToSelect": `Dlhším stlačením prejdite do režimu výberu.`,
  "select": `Vybrať`,
  "selectedAll": `Všetky vybraté položky.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Žiadne vybraté položky`,
    one: () => `${formatter.number(args.count)} vybratá položka`,
    other: () => `Počet vybratých položiek:${formatter.number(args.count)}`
  })}.`,
  "selectedItem": (args) => `Vybraté položky: ${args.item}.`
};
var $f4c1f0d5d4d03d80$exports = {};
$f4c1f0d5d4d03d80$exports = {
  "deselectedItem": (args) => `Element ${args.item} ni izbran.`,
  "longPressToSelect": `Za izbirni način pritisnite in dlje časa držite.`,
  "select": `Izberite`,
  "selectedAll": `Vsi elementi so izbrani.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Noben element ni izbran`,
    one: () => `${formatter.number(args.count)} element je izbran`,
    other: () => `${formatter.number(args.count)} elementov je izbranih`
  })}.`,
  "selectedItem": (args) => `Element ${args.item} je izbran.`
};
var $46252cd87269b10b$exports = {};
$46252cd87269b10b$exports = {
  "deselectedItem": (args) => `${args.item} nije izabrano.`,
  "longPressToSelect": `Dugo pritisnite za ulazak u režim biranja.`,
  "select": `Izaberite`,
  "selectedAll": `Izabrane su sve stavke.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nije izabrana nijedna stavka`,
    one: () => `Izabrana je ${formatter.number(args.count)} stavka`,
    other: () => `Izabrano je ${formatter.number(args.count)} stavki`
  })}.`,
  "selectedItem": (args) => `${args.item} je izabrano.`
};
var $d4d5d8dab362555c$exports = {};
$d4d5d8dab362555c$exports = {
  "deselectedItem": (args) => `${args.item} ej markerat.`,
  "longPressToSelect": `Tryck länge när du vill öppna väljarläge.`,
  "select": `Markera`,
  "selectedAll": `Alla markerade objekt.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Inga markerade objekt`,
    one: () => `${formatter.number(args.count)} markerat objekt`,
    other: () => `${formatter.number(args.count)} markerade objekt`
  })}.`,
  "selectedItem": (args) => `${args.item} markerat.`
};
var $3d55d1f97c377e83$exports = {};
$3d55d1f97c377e83$exports = {
  "deselectedItem": (args) => `${args.item} seçilmedi.`,
  "longPressToSelect": `Seçim moduna girmek için uzun basın.`,
  "select": `Seç`,
  "selectedAll": `Tüm ögeler seçildi.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Hiçbir öge seçilmedi`,
    one: () => `${formatter.number(args.count)} öge seçildi`,
    other: () => `${formatter.number(args.count)} öge seçildi`
  })}.`,
  "selectedItem": (args) => `${args.item} seçildi.`
};
var $5368512f1c703a3f$exports = {};
$5368512f1c703a3f$exports = {
  "deselectedItem": (args) => `${args.item} не вибрано.`,
  "longPressToSelect": `Виконайте довге натиснення, щоб перейти в режим вибору.`,
  "select": `Вибрати`,
  "selectedAll": `Усі елементи вибрано.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Жодних елементів не вибрано`,
    one: () => `${formatter.number(args.count)} елемент вибрано`,
    other: () => `Вибрано елементів: ${formatter.number(args.count)}`
  })}.`,
  "selectedItem": (args) => `${args.item} вибрано.`
};
var $f1316b1074463583$exports = {};
$f1316b1074463583$exports = {
  "deselectedItem": (args) => `未选择 ${args.item}。`,
  "longPressToSelect": `长按以进入选择模式。`,
  "select": `选择`,
  "selectedAll": `已选择所有项目。`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `未选择项目`,
    one: () => `已选择 ${formatter.number(args.count)} 个项目`,
    other: () => `已选择 ${formatter.number(args.count)} 个项目`
  })}。`,
  "selectedItem": (args) => `已选择 ${args.item}。`
};
var $7e60654723031b6f$exports = {};
$7e60654723031b6f$exports = {
  "deselectedItem": (args) => `未選取「${args.item}」。`,
  "longPressToSelect": `長按以進入選擇模式。`,
  "select": `選取`,
  "selectedAll": `已選取所有項目。`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `未選取任何項目`,
    one: () => `已選取 ${formatter.number(args.count)} 個項目`,
    other: () => `已選取 ${formatter.number(args.count)} 個項目`
  })}。`,
  "selectedItem": (args) => `已選取「${args.item}」。`
};
$835c96616a7cb4f9$exports = {
  "ar-AE": $682989befd4f478d$exports,
  "bg-BG": $f7fca02019afd941$exports,
  "cs-CZ": $8f86f40be75387f1$exports,
  "da-DK": $db24ba43c8d652ee$exports,
  "de-DE": $f8f1e72c8b5447d6$exports,
  "el-GR": $9a73ed2983c3ab0b$exports,
  "en-US": $583de0b3587601b9$exports,
  "es-ES": $147159c978043442$exports,
  "et-EE": $5cbb62c8a19173ac$exports,
  "fi-FI": $a33d71dc804cc59e$exports,
  "fr-FR": $92d800447793d084$exports,
  "he-IL": $fe732cdb32124ea8$exports,
  "hr-HR": $e41234e934efb4f5$exports,
  "hu-HU": $1b0393182473bf9e$exports,
  "it-IT": $2eed782c1c110ce7$exports,
  "ja-JP": $8b5d459f86e9b23c$exports,
  "ko-KR": $1949c3ad17295fd4$exports,
  "lt-LT": $f5e3df4dc8aa7b54$exports,
  "lv-LV": $9dd86690a5c2b2c5$exports,
  "nb-NO": $843964c3bf9a7d24$exports,
  "nl-NL": $73f50e845f9ef3b4$exports,
  "pl-PL": $87f92a7e077514b2$exports,
  "pt-BR": $c28c98d58ee9ff6f$exports,
  "pt-PT": $b6b1503b17b2254d$exports,
  "ro-RO": $8bdaeb71e50c3e1a$exports,
  "ru-RU": $ec2b852dd7c3d1f2$exports,
  "sk-SK": $79e6d900d6a4f82d$exports,
  "sl-SI": $f4c1f0d5d4d03d80$exports,
  "sr-SP": $46252cd87269b10b$exports,
  "sv-SE": $d4d5d8dab362555c$exports,
  "tr-TR": $3d55d1f97c377e83$exports,
  "uk-UA": $5368512f1c703a3f$exports,
  "zh-CN": $f1316b1074463583$exports,
  "zh-TW": $7e60654723031b6f$exports
};
function $92599c3fd427b763$export$137e594ef3218a10(props, state) {
  var _state_collection_getTextValue;
  let { getRowText = (key) => {
    var _state_collection, _state_collection_getTextValue1, _state_collection_getItem;
    return (_state_collection_getTextValue = (_state_collection_getTextValue1 = (_state_collection = state.collection).getTextValue) === null || _state_collection_getTextValue1 === void 0 ? void 0 : _state_collection_getTextValue1.call(_state_collection, key)) !== null && _state_collection_getTextValue !== void 0 ? _state_collection_getTextValue : (_state_collection_getItem = state.collection.getItem(key)) === null || _state_collection_getItem === void 0 ? void 0 : _state_collection_getItem.textValue;
  } } = props;
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault9($835c96616a7cb4f9$exports)));
  let selection = state.selectionManager.rawSelection;
  let lastSelection = (0, import_react22.useRef)(selection);
  (0, $4f58c5f72bcf79f7$export$496315a1608d9602)(() => {
    var _lastSelection_current;
    if (!state.selectionManager.isFocused) {
      lastSelection.current = selection;
      return;
    }
    let addedKeys = $92599c3fd427b763$var$diffSelection(selection, lastSelection.current);
    let removedKeys = $92599c3fd427b763$var$diffSelection(lastSelection.current, selection);
    let isReplace = state.selectionManager.selectionBehavior === "replace";
    let messages = [];
    if (state.selectionManager.selectedKeys.size === 1 && isReplace) {
      if (state.collection.getItem(state.selectionManager.selectedKeys.keys().next().value)) {
        let currentSelectionText = getRowText(state.selectionManager.selectedKeys.keys().next().value);
        if (currentSelectionText)
          messages.push(stringFormatter.format("selectedItem", {
            item: currentSelectionText
          }));
      }
    } else if (addedKeys.size === 1 && removedKeys.size === 0) {
      let addedText = getRowText(addedKeys.keys().next().value);
      if (addedText)
        messages.push(stringFormatter.format("selectedItem", {
          item: addedText
        }));
    } else if (removedKeys.size === 1 && addedKeys.size === 0) {
      if (state.collection.getItem(removedKeys.keys().next().value)) {
        let removedText = getRowText(removedKeys.keys().next().value);
        if (removedText)
          messages.push(stringFormatter.format("deselectedItem", {
            item: removedText
          }));
      }
    }
    if (state.selectionManager.selectionMode === "multiple") {
      if (messages.length === 0 || selection === "all" || selection.size > 1 || lastSelection.current === "all" || ((_lastSelection_current = lastSelection.current) === null || _lastSelection_current === void 0 ? void 0 : _lastSelection_current.size) > 1)
        messages.push(selection === "all" ? stringFormatter.format("selectedAll") : stringFormatter.format("selectedCount", {
          count: selection.size
        }));
    }
    if (messages.length > 0)
      (0, $319e236875307eab$export$a9b970dcc4ae71a9)(messages.join(" "));
    lastSelection.current = selection;
  }, [
    selection
  ]);
}
function $92599c3fd427b763$var$diffSelection(a, b) {
  let res = /* @__PURE__ */ new Set();
  if (a === "all" || b === "all")
    return res;
  for (let key of a.keys())
    if (!b.has(key))
      res.add(key);
  return res;
}
function $5b9b5b5723db6ae1$export$be42ebdab07ae4c2(props) {
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault9($835c96616a7cb4f9$exports)));
  let modality = (0, $507fabe10e71c6fb$export$98e20ec92f614cfe)();
  let shouldLongPress = (modality === "pointer" || modality === "virtual" || modality == null) && typeof window !== "undefined" && "ontouchstart" in window;
  let interactionDescription = (0, import_react22.useMemo)(() => {
    let selectionMode = props.selectionManager.selectionMode;
    let selectionBehavior = props.selectionManager.selectionBehavior;
    let message = void 0;
    if (shouldLongPress)
      message = stringFormatter.format("longPressToSelect");
    return selectionBehavior === "replace" && selectionMode !== "none" && props.hasItemActions ? message : void 0;
  }, [
    props.selectionManager.selectionMode,
    props.selectionManager.selectionBehavior,
    props.hasItemActions,
    stringFormatter,
    shouldLongPress
  ]);
  let descriptionProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(interactionDescription);
  return descriptionProps;
}
function $83c6e2eafa584c67$export$f6b86a04e5d66d90(props, state, ref) {
  let { isVirtualized, keyboardDelegate, focusMode, scrollRef, getRowText, onRowAction, onCellAction } = props;
  let { selectionManager: manager } = state;
  if (!props["aria-label"] && !props["aria-labelledby"])
    console.warn("An aria-label or aria-labelledby prop is required for accessibility.");
  let collator = (0, $325a3faab7a68acd$export$a16aca283550c30d)({
    usage: "search",
    sensitivity: "base"
  });
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let disabledBehavior = state.selectionManager.disabledBehavior;
  let delegate = (0, import_react22.useMemo)(() => keyboardDelegate || new (0, $d1c300d9c497e402$export$de9feff04fda126e)({
    collection: state.collection,
    disabledKeys: disabledBehavior === "selection" ? /* @__PURE__ */ new Set() : state.disabledKeys,
    ref,
    direction,
    collator,
    focusMode
  }), [
    keyboardDelegate,
    state.collection,
    state.disabledKeys,
    disabledBehavior,
    ref,
    direction,
    collator,
    focusMode
  ]);
  let { collectionProps } = (0, $ae20dd8cbca75726$export$d6daf82dcd84e87c)({
    ref,
    selectionManager: manager,
    keyboardDelegate: delegate,
    isVirtualized,
    scrollRef
  });
  let id = (0, $bdb11010cef70236$export$f680877a34711e37)(props.id);
  (0, $1af922eb41e03c8f$export$e6235c0d09b995d0).set(state, {
    keyboardDelegate: delegate,
    actions: {
      onRowAction,
      onCellAction
    }
  });
  let descriptionProps = (0, $5b9b5b5723db6ae1$export$be42ebdab07ae4c2)({
    selectionManager: manager,
    hasItemActions: !!(onRowAction || onCellAction)
  });
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  let onFocus = (0, import_react22.useCallback)((e) => {
    if (manager.isFocused) {
      if (!e.currentTarget.contains(e.target))
        manager.setFocused(false);
      return;
    }
    if (!e.currentTarget.contains(e.target))
      return;
    manager.setFocused(true);
  }, [
    manager
  ]);
  let navDisabledHandlers = (0, import_react22.useMemo)(() => ({
    onBlur: collectionProps.onBlur,
    onFocus
  }), [
    onFocus,
    collectionProps.onBlur
  ]);
  let hasTabbableChild = (0, $83013635b024ae3d$export$eac1895992b9f3d6)(ref, {
    isDisabled: state.collection.size !== 0
  });
  let gridProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(
    domProps,
    {
      role: "grid",
      id,
      "aria-multiselectable": manager.selectionMode === "multiple" ? "true" : void 0
    },
    state.isKeyboardNavigationDisabled ? navDisabledHandlers : collectionProps,
    // If collection is empty, make sure the grid is tabbable unless there is a child tabbable element.
    state.collection.size === 0 && {
      tabIndex: hasTabbableChild ? -1 : 0
    },
    descriptionProps
  );
  if (isVirtualized) {
    gridProps["aria-rowcount"] = state.collection.size;
    gridProps["aria-colcount"] = state.collection.columnCount;
  }
  (0, $92599c3fd427b763$export$137e594ef3218a10)({
    getRowText
  }, state);
  return {
    gridProps
  };
}
function $e45487f8ba1cbdbf$export$d3037f5d3f3e51bf() {
  return {
    rowGroupProps: {
      role: "rowgroup"
    }
  };
}
function $4159a7a9cbb0cc18$export$96357d5a73f686fa(props, state, ref) {
  let { node, isVirtualized, shouldSelectOnPressUp, onAction } = props;
  let { actions: { onRowAction } } = (0, $1af922eb41e03c8f$export$e6235c0d09b995d0).get(state);
  let { itemProps, ...states } = (0, $880e95eb8b93ba9a$export$ecf600387e221c37)({
    selectionManager: state.selectionManager,
    key: node.key,
    ref,
    isVirtualized,
    shouldSelectOnPressUp,
    onAction: onRowAction ? () => onRowAction(node.key) : onAction,
    isDisabled: state.collection.size === 0
  });
  let isSelected = state.selectionManager.isSelected(node.key);
  let rowProps = {
    role: "row",
    "aria-selected": state.selectionManager.selectionMode !== "none" ? isSelected : void 0,
    "aria-disabled": states.isDisabled || void 0,
    ...itemProps
  };
  if (isVirtualized)
    rowProps["aria-rowindex"] = node.index + 1;
  return {
    rowProps,
    ...states
  };
}
function $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c(props, state, ref) {
  let { node, isVirtualized, focusMode = "child", shouldSelectOnPressUp, onAction } = props;
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let { keyboardDelegate, actions: { onCellAction } } = (0, $1af922eb41e03c8f$export$e6235c0d09b995d0).get(state);
  let keyWhenFocused = (0, import_react22.useRef)(null);
  let focus = () => {
    let treeWalker = (0, $9bf71ea28793e738$export$2d6ec8fc375ceafa)(ref.current);
    if (focusMode === "child") {
      if (ref.current.contains(document.activeElement) && ref.current !== document.activeElement)
        return;
      let focusable = state.selectionManager.childFocusStrategy === "last" ? $ab90dcbc1b5466d0$var$last(treeWalker) : treeWalker.firstChild();
      if (focusable) {
        (0, $6a99195332edec8b$export$80f3e147d781571c)(focusable);
        return;
      }
    }
    if (keyWhenFocused.current != null && node.key !== keyWhenFocused.current || !ref.current.contains(document.activeElement))
      (0, $6a99195332edec8b$export$80f3e147d781571c)(ref.current);
  };
  let { itemProps, isPressed } = (0, $880e95eb8b93ba9a$export$ecf600387e221c37)({
    selectionManager: state.selectionManager,
    key: node.key,
    ref,
    isVirtualized,
    focus,
    shouldSelectOnPressUp,
    onAction: onCellAction ? () => onCellAction(node.key) : onAction,
    isDisabled: state.collection.size === 0
  });
  let onKeyDownCapture = (e) => {
    if (!e.currentTarget.contains(e.target) || state.isKeyboardNavigationDisabled)
      return;
    let walker = (0, $9bf71ea28793e738$export$2d6ec8fc375ceafa)(ref.current);
    walker.currentNode = document.activeElement;
    switch (e.key) {
      case "ArrowLeft": {
        let focusable = direction === "rtl" ? walker.nextNode() : walker.previousNode();
        if (focusMode === "child" && focusable === ref.current)
          focusable = null;
        if (focusable) {
          e.preventDefault();
          e.stopPropagation();
          (0, $6a99195332edec8b$export$80f3e147d781571c)(focusable);
          (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(focusable, {
            containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
          });
        } else {
          let prev = keyboardDelegate.getKeyLeftOf(node.key);
          if (prev !== node.key)
            break;
          e.preventDefault();
          e.stopPropagation();
          if (focusMode === "cell" && direction === "rtl") {
            (0, $6a99195332edec8b$export$80f3e147d781571c)(ref.current);
            (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(ref.current, {
              containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
            });
          } else {
            walker.currentNode = ref.current;
            focusable = direction === "rtl" ? walker.firstChild() : $ab90dcbc1b5466d0$var$last(walker);
            if (focusable) {
              (0, $6a99195332edec8b$export$80f3e147d781571c)(focusable);
              (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(focusable, {
                containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
              });
            }
          }
        }
        break;
      }
      case "ArrowRight": {
        let focusable = direction === "rtl" ? walker.previousNode() : walker.nextNode();
        if (focusMode === "child" && focusable === ref.current)
          focusable = null;
        if (focusable) {
          e.preventDefault();
          e.stopPropagation();
          (0, $6a99195332edec8b$export$80f3e147d781571c)(focusable);
          (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(focusable, {
            containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
          });
        } else {
          let next = keyboardDelegate.getKeyRightOf(node.key);
          if (next !== node.key)
            break;
          e.preventDefault();
          e.stopPropagation();
          if (focusMode === "cell" && direction === "ltr") {
            (0, $6a99195332edec8b$export$80f3e147d781571c)(ref.current);
            (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(ref.current, {
              containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
            });
          } else {
            walker.currentNode = ref.current;
            focusable = direction === "rtl" ? $ab90dcbc1b5466d0$var$last(walker) : walker.firstChild();
            if (focusable) {
              (0, $6a99195332edec8b$export$80f3e147d781571c)(focusable);
              (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(focusable, {
                containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
              });
            }
          }
        }
        break;
      }
      case "ArrowUp":
      case "ArrowDown":
        if (!e.altKey && ref.current.contains(e.target)) {
          e.stopPropagation();
          e.preventDefault();
          ref.current.parentElement.dispatchEvent(new KeyboardEvent(e.nativeEvent.type, e.nativeEvent));
        }
        break;
    }
  };
  let onFocus = (e) => {
    keyWhenFocused.current = node.key;
    if (e.target !== ref.current) {
      if (!(0, $507fabe10e71c6fb$export$b9b3dfddab17db27)())
        state.selectionManager.setFocusedKey(node.key);
      return;
    }
    requestAnimationFrame(() => {
      if (focusMode === "child" && document.activeElement === ref.current)
        focus();
    });
  };
  let gridCellProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(itemProps, {
    role: "gridcell",
    onKeyDownCapture,
    onFocus
  });
  var _node_colIndex;
  if (isVirtualized)
    gridCellProps["aria-colindex"] = ((_node_colIndex = node.colIndex) !== null && _node_colIndex !== void 0 ? _node_colIndex : node.index) + 1;
  if (shouldSelectOnPressUp && gridCellProps.tabIndex != null && gridCellProps.onPointerDown == null)
    gridCellProps.onPointerDown = (e) => {
      let el = e.currentTarget;
      let tabindex = el.getAttribute("tabindex");
      el.removeAttribute("tabindex");
      requestAnimationFrame(() => {
        el.setAttribute("tabindex", tabindex);
      });
    };
  return {
    gridCellProps,
    isPressed
  };
}
function $ab90dcbc1b5466d0$var$last(walker) {
  let next;
  let last;
  do {
    last = walker.lastChild();
    if (last)
      next = last;
  } while (last);
  return next;
}
function $7cb39d07f245a780$export$70e2eed1a92976ad(props, state) {
  let { key } = props;
  let manager = state.selectionManager;
  let checkboxId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let isDisabled = !state.selectionManager.canSelectItem(key);
  let isSelected = state.selectionManager.isSelected(key);
  let onChange = () => manager.select(key);
  const stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault9($835c96616a7cb4f9$exports)));
  return {
    checkboxProps: {
      id: checkboxId,
      "aria-label": stringFormatter.format("select"),
      isSelected,
      isDisabled,
      onChange
    }
  };
}

// node_modules/.pnpm/@react-aria+gridlist@3.5.1_react-dom@18.2.0_react@18.2.0/node_modules/@react-aria/gridlist/dist/module.js
var import_react23 = __toESM(require_react());
var $ce9b18daab526bbd$export$5b9bb410392e3991 = /* @__PURE__ */ new WeakMap();
function $ce9b18daab526bbd$export$f45c25170b9a99c2(state, key) {
  let { id } = $ce9b18daab526bbd$export$5b9bb410392e3991.get(state);
  if (!id)
    throw new Error("Unknown list");
  return `${id}-${$ce9b18daab526bbd$export$e0c709538cb8ae18(key)}`;
}
function $ce9b18daab526bbd$export$e0c709538cb8ae18(key) {
  if (typeof key === "string")
    return key.replace(/\s*/g, "");
  return "" + key;
}
function $f47efb0c3a859cf2$export$664f9155035607eb(props, state, ref) {
  let { isVirtualized, keyboardDelegate, onAction } = props;
  if (!props["aria-label"] && !props["aria-labelledby"])
    console.warn("An aria-label or aria-labelledby prop is required for accessibility.");
  let { listProps } = (0, $982254629710d113$export$b95089534ab7c1fd)({
    selectionManager: state.selectionManager,
    collection: state.collection,
    disabledKeys: state.disabledKeys,
    ref,
    keyboardDelegate,
    isVirtualized,
    selectOnFocus: state.selectionManager.selectionBehavior === "replace",
    shouldFocusWrap: props.shouldFocusWrap
  });
  let id = (0, $bdb11010cef70236$export$f680877a34711e37)(props.id);
  (0, $ce9b18daab526bbd$export$5b9bb410392e3991).set(state, {
    id,
    onAction
  });
  let descriptionProps = (0, $5b9b5b5723db6ae1$export$be42ebdab07ae4c2)({
    selectionManager: state.selectionManager,
    hasItemActions: !!onAction
  });
  let hasTabbableChild = (0, $83013635b024ae3d$export$eac1895992b9f3d6)(ref, {
    isDisabled: state.collection.size !== 0
  });
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  let gridProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(
    domProps,
    {
      role: "grid",
      id,
      "aria-multiselectable": state.selectionManager.selectionMode === "multiple" ? "true" : void 0
    },
    // If collection is empty, make sure the grid is tabbable unless there is a child tabbable element.
    state.collection.size === 0 ? {
      tabIndex: hasTabbableChild ? -1 : 0
    } : listProps,
    descriptionProps
  );
  if (isVirtualized) {
    gridProps["aria-rowcount"] = state.collection.size;
    gridProps["aria-colcount"] = 1;
  }
  (0, $92599c3fd427b763$export$137e594ef3218a10)({}, state);
  return {
    gridProps
  };
}
function $4e8b0456ef72939f$export$9610e69494fadfd2(props, state, ref) {
  let { node, isVirtualized, shouldSelectOnPressUp } = props;
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let { onAction } = (0, $ce9b18daab526bbd$export$5b9bb410392e3991).get(state);
  let descriptionId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)();
  let keyWhenFocused = (0, import_react23.useRef)(null);
  let focus = () => {
    if (keyWhenFocused.current != null && node.key !== keyWhenFocused.current || !ref.current.contains(document.activeElement))
      (0, $6a99195332edec8b$export$80f3e147d781571c)(ref.current);
  };
  let { itemProps, ...itemStates } = (0, $880e95eb8b93ba9a$export$ecf600387e221c37)({
    selectionManager: state.selectionManager,
    key: node.key,
    ref,
    isVirtualized,
    shouldSelectOnPressUp,
    onAction: onAction ? () => onAction(node.key) : void 0,
    focus
  });
  let onKeyDown = (e) => {
    if (!e.currentTarget.contains(e.target))
      return;
    let walker = (0, $9bf71ea28793e738$export$2d6ec8fc375ceafa)(ref.current);
    walker.currentNode = document.activeElement;
    switch (e.key) {
      case "ArrowLeft": {
        let focusable = direction === "rtl" ? walker.nextNode() : walker.previousNode();
        if (focusable) {
          e.preventDefault();
          e.stopPropagation();
          (0, $6a99195332edec8b$export$80f3e147d781571c)(focusable);
          (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(focusable, {
            containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
          });
        } else {
          e.preventDefault();
          e.stopPropagation();
          if (direction === "rtl") {
            (0, $6a99195332edec8b$export$80f3e147d781571c)(ref.current);
            (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(ref.current, {
              containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
            });
          } else {
            walker.currentNode = ref.current;
            let lastElement = $4e8b0456ef72939f$var$last(walker);
            if (lastElement) {
              (0, $6a99195332edec8b$export$80f3e147d781571c)(lastElement);
              (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(lastElement, {
                containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
              });
            }
          }
        }
        break;
      }
      case "ArrowRight": {
        let focusable = direction === "rtl" ? walker.previousNode() : walker.nextNode();
        if (focusable) {
          e.preventDefault();
          e.stopPropagation();
          (0, $6a99195332edec8b$export$80f3e147d781571c)(focusable);
          (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(focusable, {
            containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
          });
        } else {
          e.preventDefault();
          e.stopPropagation();
          if (direction === "ltr") {
            (0, $6a99195332edec8b$export$80f3e147d781571c)(ref.current);
            (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(ref.current, {
              containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
            });
          } else {
            walker.currentNode = ref.current;
            let lastElement = $4e8b0456ef72939f$var$last(walker);
            if (lastElement) {
              (0, $6a99195332edec8b$export$80f3e147d781571c)(lastElement);
              (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(lastElement, {
                containingElement: (0, $62d8ded9296f3872$export$cfa2225e87938781)(ref.current)
              });
            }
          }
        }
        break;
      }
      case "ArrowUp":
      case "ArrowDown":
        if (!e.altKey && ref.current.contains(e.target)) {
          e.stopPropagation();
          e.preventDefault();
          ref.current.parentElement.dispatchEvent(new KeyboardEvent(e.nativeEvent.type, e.nativeEvent));
        }
        break;
    }
  };
  let onFocus = (e) => {
    keyWhenFocused.current = node.key;
    if (e.target !== ref.current) {
      if (!(0, $507fabe10e71c6fb$export$b9b3dfddab17db27)())
        state.selectionManager.setFocusedKey(node.key);
      return;
    }
  };
  let rowProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(itemProps, {
    role: "row",
    onKeyDownCapture: onKeyDown,
    onFocus,
    "aria-label": node.textValue || void 0,
    "aria-selected": state.selectionManager.canSelectItem(node.key) ? state.selectionManager.isSelected(node.key) : void 0,
    "aria-disabled": state.selectionManager.isDisabled(node.key) || void 0,
    "aria-labelledby": descriptionId && node.textValue ? `${(0, $ce9b18daab526bbd$export$f45c25170b9a99c2)(state, node.key)} ${descriptionId}` : void 0,
    id: (0, $ce9b18daab526bbd$export$f45c25170b9a99c2)(state, node.key)
  });
  if (isVirtualized)
    rowProps["aria-rowindex"] = node.index + 1;
  let gridCellProps = {
    role: "gridcell",
    "aria-colindex": 1
  };
  return {
    rowProps,
    gridCellProps,
    descriptionProps: {
      id: descriptionId
    },
    ...itemStates
  };
}
function $4e8b0456ef72939f$var$last(walker) {
  let next;
  let last;
  do {
    last = walker.lastChild();
    if (last)
      next = last;
  } while (last);
  return next;
}
function $e52ffc04a4adbd52$export$e29f2573fabbf7b9(props, state) {
  let { key } = props;
  const { checkboxProps } = (0, $7cb39d07f245a780$export$70e2eed1a92976ad)(props, state);
  return {
    checkboxProps: {
      ...checkboxProps,
      "aria-labelledby": `${checkboxProps.id} ${(0, $ce9b18daab526bbd$export$f45c25170b9a99c2)(state, key)}`
    }
  };
}

// node_modules/.pnpm/@react-aria+progress@3.4.4_react@18.2.0/node_modules/@react-aria/progress/dist/module.js
function $204d9ebcedfb8806$export$ed5abd763a836edc(props) {
  let { value = 0, minValue = 0, maxValue = 100, valueLabel, isIndeterminate, formatOptions = {
    style: "percent"
  } } = props;
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  let { labelProps, fieldProps } = (0, $d191a55c9702f145$export$8467354a121f1b9f)({
    ...props,
    // Progress bar is not an HTML input element so it
    // shouldn't be labeled by a <label> element.
    labelElementType: "span"
  });
  value = (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(value, minValue, maxValue);
  let percentage = (value - minValue) / (maxValue - minValue);
  let formatter = (0, $a916eb452884faea$export$b7a616150fdb9f44)(formatOptions);
  if (!isIndeterminate && !valueLabel) {
    let valueToFormat = formatOptions.style === "percent" ? percentage : value;
    valueLabel = formatter.format(valueToFormat);
  }
  return {
    progressBarProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, {
      ...fieldProps,
      "aria-valuenow": isIndeterminate ? void 0 : value,
      "aria-valuemin": minValue,
      "aria-valuemax": maxValue,
      "aria-valuetext": isIndeterminate ? void 0 : valueLabel,
      role: "progressbar"
    }),
    labelProps
  };
}

// node_modules/.pnpm/@react-aria+meter@3.4.4_react@18.2.0/node_modules/@react-aria/meter/dist/module.js
function $0002d7e1d16de204$export$e969dbfa146870ff(props) {
  let { progressBarProps, labelProps } = (0, $204d9ebcedfb8806$export$ed5abd763a836edc)(props);
  return {
    meterProps: {
      ...progressBarProps,
      // Use the meter role if available, but fall back to progressbar if not
      // Chrome currently falls back from meter automatically, and Firefox
      // does not support meter at all. Safari 13+ seems to support meter properly.
      // https://bugs.chromium.org/p/chromium/issues/detail?id=944542
      // https://bugzilla.mozilla.org/show_bug.cgi?id=1460378
      role: "meter progressbar"
    },
    labelProps
  };
}

// node_modules/.pnpm/@react-aria+numberfield@3.7.0_react-dom@18.2.0_react@18.2.0/node_modules/@react-aria/numberfield/dist/module.js
var import_react24 = __toESM(require_react());
function $parcel$interopDefault10(a) {
  return a && a.__esModule ? a.default : a;
}
var $280a227d7cb94b92$exports = {};
var $fb78e0f6ab6349ed$exports = {};
$fb78e0f6ab6349ed$exports = {
  "decrease": (args) => `خفض ${args.fieldLabel}`,
  "increase": (args) => `زيادة ${args.fieldLabel}`,
  "numberField": `حقل رقمي`
};
var $2776acdd9959a647$exports = {};
$2776acdd9959a647$exports = {
  "decrease": (args) => `Намаляване ${args.fieldLabel}`,
  "increase": (args) => `Усилване ${args.fieldLabel}`,
  "numberField": `Номер на полето`
};
var $741954410a365ad3$exports = {};
$741954410a365ad3$exports = {
  "decrease": (args) => `Snížit ${args.fieldLabel}`,
  "increase": (args) => `Zvýšit ${args.fieldLabel}`,
  "numberField": `Číselné pole`
};
var $8321ed0f8ab642f0$exports = {};
$8321ed0f8ab642f0$exports = {
  "decrease": (args) => `Reducer ${args.fieldLabel}`,
  "increase": (args) => `Øg ${args.fieldLabel}`,
  "numberField": `Talfelt`
};
var $92978e0c4ecafa32$exports = {};
$92978e0c4ecafa32$exports = {
  "decrease": (args) => `${args.fieldLabel} verringern`,
  "increase": (args) => `${args.fieldLabel} erhöhen`,
  "numberField": `Nummernfeld`
};
var $ac5ff71962864a84$exports = {};
$ac5ff71962864a84$exports = {
  "decrease": (args) => `Μείωση ${args.fieldLabel}`,
  "increase": (args) => `Αύξηση ${args.fieldLabel}`,
  "numberField": `Πεδίο αριθμού`
};
var $efe4685e2440d8be$exports = {};
$efe4685e2440d8be$exports = {
  "decrease": (args) => `Decrease ${args.fieldLabel}`,
  "increase": (args) => `Increase ${args.fieldLabel}`,
  "numberField": `Number field`
};
var $e50a9a48739b90e1$exports = {};
$e50a9a48739b90e1$exports = {
  "decrease": (args) => `Reducir ${args.fieldLabel}`,
  "increase": (args) => `Aumentar ${args.fieldLabel}`,
  "numberField": `Campo de número`
};
var $6e0d5294ecbb8ab6$exports = {};
$6e0d5294ecbb8ab6$exports = {
  "decrease": (args) => `Vähenda ${args.fieldLabel}`,
  "increase": (args) => `Suurenda ${args.fieldLabel}`,
  "numberField": `Numbri väli`
};
var $e7129d65f607f77f$exports = {};
$e7129d65f607f77f$exports = {
  "decrease": (args) => `Vähennä ${args.fieldLabel}`,
  "increase": (args) => `Lisää ${args.fieldLabel}`,
  "numberField": `Numerokenttä`
};
var $d72adf5b20573e34$exports = {};
$d72adf5b20573e34$exports = {
  "decrease": (args) => `Diminuer ${args.fieldLabel}`,
  "increase": (args) => `Augmenter ${args.fieldLabel}`,
  "numberField": `Champ de nombre`
};
var $a25c707e88b844a7$exports = {};
$a25c707e88b844a7$exports = {
  "decrease": (args) => `הקטן ${args.fieldLabel}`,
  "increase": (args) => `הגדל ${args.fieldLabel}`,
  "numberField": `שדה מספר`
};
var $69b41140b9a4ca54$exports = {};
$69b41140b9a4ca54$exports = {
  "decrease": (args) => `Smanji ${args.fieldLabel}`,
  "increase": (args) => `Povećaj ${args.fieldLabel}`,
  "numberField": `Polje broja`
};
var $81dab28f37f59d1a$exports = {};
$81dab28f37f59d1a$exports = {
  "decrease": (args) => `${args.fieldLabel} csökkentése`,
  "increase": (args) => `${args.fieldLabel} növelése`,
  "numberField": `Számmező`
};
var $866555b31f2d7711$exports = {};
$866555b31f2d7711$exports = {
  "decrease": (args) => `Riduci ${args.fieldLabel}`,
  "increase": (args) => `Aumenta ${args.fieldLabel}`,
  "numberField": `Campo numero`
};
var $dafcd55d52b9d371$exports = {};
$dafcd55d52b9d371$exports = {
  "decrease": (args) => `${args.fieldLabel}を縮小`,
  "increase": (args) => `${args.fieldLabel}を拡大`,
  "numberField": `数値フィールド`
};
var $f090c1f8c5da0145$exports = {};
$f090c1f8c5da0145$exports = {
  "decrease": (args) => `${args.fieldLabel} 감소`,
  "increase": (args) => `${args.fieldLabel} 증가`,
  "numberField": `번호 필드`
};
var $6f10f3a13360a75c$exports = {};
$6f10f3a13360a75c$exports = {
  "decrease": (args) => `Sumažinti ${args.fieldLabel}`,
  "increase": (args) => `Padidinti ${args.fieldLabel}`,
  "numberField": `Numerio laukas`
};
var $47432cefd4b7bd1b$exports = {};
$47432cefd4b7bd1b$exports = {
  "decrease": (args) => `Samazināšana ${args.fieldLabel}`,
  "increase": (args) => `Palielināšana ${args.fieldLabel}`,
  "numberField": `Skaitļu lauks`
};
var $dc578a950a2bf23d$exports = {};
$dc578a950a2bf23d$exports = {
  "decrease": (args) => `Reduser ${args.fieldLabel}`,
  "increase": (args) => `Øk ${args.fieldLabel}`,
  "numberField": `Tallfelt`
};
var $353f1bfca4dc395a$exports = {};
$353f1bfca4dc395a$exports = {
  "decrease": (args) => `${args.fieldLabel} verlagen`,
  "increase": (args) => `${args.fieldLabel} verhogen`,
  "numberField": `Getalveld`
};
var $241bc0bbd870e982$exports = {};
$241bc0bbd870e982$exports = {
  "decrease": (args) => `Zmniejsz ${args.fieldLabel}`,
  "increase": (args) => `Zwiększ ${args.fieldLabel}`,
  "numberField": `Pole numeru`
};
var $da3005c7bd72b0a8$exports = {};
$da3005c7bd72b0a8$exports = {
  "decrease": (args) => `Diminuir ${args.fieldLabel}`,
  "increase": (args) => `Aumentar ${args.fieldLabel}`,
  "numberField": `Campo de número`
};
var $cf48bfc540882310$exports = {};
$cf48bfc540882310$exports = {
  "decrease": (args) => `Diminuir ${args.fieldLabel}`,
  "increase": (args) => `Aumentar ${args.fieldLabel}`,
  "numberField": `Campo numérico`
};
var $b63a28c481ab9ee3$exports = {};
$b63a28c481ab9ee3$exports = {
  "decrease": (args) => `Scădere ${args.fieldLabel}`,
  "increase": (args) => `Creștere ${args.fieldLabel}`,
  "numberField": `Câmp numeric`
};
var $19f9df95c2464ab6$exports = {};
$19f9df95c2464ab6$exports = {
  "decrease": (args) => `Уменьшение ${args.fieldLabel}`,
  "increase": (args) => `Увеличение ${args.fieldLabel}`,
  "numberField": `Числовое поле`
};
var $b272932a685e8482$exports = {};
$b272932a685e8482$exports = {
  "decrease": (args) => `Znížiť ${args.fieldLabel}`,
  "increase": (args) => `Zvýšiť ${args.fieldLabel}`,
  "numberField": `Číselné pole`
};
var $cbaf8b5b61f9e544$exports = {};
$cbaf8b5b61f9e544$exports = {
  "decrease": (args) => `Upadati ${args.fieldLabel}`,
  "increase": (args) => `Povečajte ${args.fieldLabel}`,
  "numberField": `Številčno polje`
};
var $e0a3af6ac1449b2f$exports = {};
$e0a3af6ac1449b2f$exports = {
  "decrease": (args) => `Decrease ${args.fieldLabel}`,
  "increase": (args) => `Increase ${args.fieldLabel}`,
  "numberField": `Number field`
};
var $71e167d2458a6019$exports = {};
$71e167d2458a6019$exports = {
  "decrease": (args) => `Minska ${args.fieldLabel}`,
  "increase": (args) => `Öka ${args.fieldLabel}`,
  "numberField": `Nummerfält`
};
var $3719245abc082946$exports = {};
$3719245abc082946$exports = {
  "decrease": (args) => `${args.fieldLabel} azalt`,
  "increase": (args) => `${args.fieldLabel} arttır`,
  "numberField": `Sayı alanı`
};
var $2ccc589e2f51824d$exports = {};
$2ccc589e2f51824d$exports = {
  "decrease": (args) => `Зменшити ${args.fieldLabel}`,
  "increase": (args) => `Збільшити ${args.fieldLabel}`,
  "numberField": `Поле номера`
};
var $e1103cb9b4c13942$exports = {};
$e1103cb9b4c13942$exports = {
  "decrease": (args) => `降低 ${args.fieldLabel}`,
  "increase": (args) => `提高 ${args.fieldLabel}`,
  "numberField": `数字字段`
};
var $448607634f80dccb$exports = {};
$448607634f80dccb$exports = {
  "decrease": (args) => `縮小 ${args.fieldLabel}`,
  "increase": (args) => `放大 ${args.fieldLabel}`,
  "numberField": `數字欄位`
};
$280a227d7cb94b92$exports = {
  "ar-AE": $fb78e0f6ab6349ed$exports,
  "bg-BG": $2776acdd9959a647$exports,
  "cs-CZ": $741954410a365ad3$exports,
  "da-DK": $8321ed0f8ab642f0$exports,
  "de-DE": $92978e0c4ecafa32$exports,
  "el-GR": $ac5ff71962864a84$exports,
  "en-US": $efe4685e2440d8be$exports,
  "es-ES": $e50a9a48739b90e1$exports,
  "et-EE": $6e0d5294ecbb8ab6$exports,
  "fi-FI": $e7129d65f607f77f$exports,
  "fr-FR": $d72adf5b20573e34$exports,
  "he-IL": $a25c707e88b844a7$exports,
  "hr-HR": $69b41140b9a4ca54$exports,
  "hu-HU": $81dab28f37f59d1a$exports,
  "it-IT": $866555b31f2d7711$exports,
  "ja-JP": $dafcd55d52b9d371$exports,
  "ko-KR": $f090c1f8c5da0145$exports,
  "lt-LT": $6f10f3a13360a75c$exports,
  "lv-LV": $47432cefd4b7bd1b$exports,
  "nb-NO": $dc578a950a2bf23d$exports,
  "nl-NL": $353f1bfca4dc395a$exports,
  "pl-PL": $241bc0bbd870e982$exports,
  "pt-BR": $da3005c7bd72b0a8$exports,
  "pt-PT": $cf48bfc540882310$exports,
  "ro-RO": $b63a28c481ab9ee3$exports,
  "ru-RU": $19f9df95c2464ab6$exports,
  "sk-SK": $b272932a685e8482$exports,
  "sl-SI": $cbaf8b5b61f9e544$exports,
  "sr-SP": $e0a3af6ac1449b2f$exports,
  "sv-SE": $71e167d2458a6019$exports,
  "tr-TR": $3719245abc082946$exports,
  "uk-UA": $2ccc589e2f51824d$exports,
  "zh-CN": $e1103cb9b4c13942$exports,
  "zh-TW": $448607634f80dccb$exports
};
function $81397a9303501bda$export$23f548e970bdf099(props, state, inputRef) {
  let { id, decrementAriaLabel, incrementAriaLabel, isDisabled, isReadOnly, isRequired, minValue, maxValue, autoFocus, validationState, label, formatOptions, onBlur = () => {
  }, onFocus, onFocusChange, onKeyDown, onKeyUp, description, errorMessage, ...otherProps } = props;
  let { increment, incrementToMax, decrement, decrementToMin, numberValue, inputValue, commit } = state;
  const stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault10($280a227d7cb94b92$exports)));
  let inputId = (0, $bdb11010cef70236$export$f680877a34711e37)(id);
  let { focusProps } = (0, $a1ea59d68270f0dd$export$f8168d8dd8fd66e6)({
    onBlur: () => {
      commit();
    }
  });
  let numberFormatter = (0, $a916eb452884faea$export$b7a616150fdb9f44)(formatOptions);
  let intlOptions = (0, import_react24.useMemo)(() => numberFormatter.resolvedOptions(), [
    numberFormatter
  ]);
  let textValueFormatter = (0, $a916eb452884faea$export$b7a616150fdb9f44)({
    ...formatOptions,
    currencySign: void 0
  });
  let textValue = (0, import_react24.useMemo)(() => isNaN(numberValue) ? "" : textValueFormatter.format(numberValue), [
    textValueFormatter,
    numberValue
  ]);
  let { spinButtonProps, incrementButtonProps: incButtonProps, decrementButtonProps: decButtonProps } = (0, $d2e8511e6f209edf$export$e908e06f4b8e3402)({
    isDisabled,
    isReadOnly,
    isRequired,
    maxValue,
    minValue,
    onIncrement: increment,
    onIncrementToMax: incrementToMax,
    onDecrement: decrement,
    onDecrementToMin: decrementToMin,
    value: numberValue,
    textValue
  });
  let [focusWithin, setFocusWithin] = (0, import_react24.useState)(false);
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec)({
    isDisabled,
    onFocusWithinChange: setFocusWithin
  });
  let onWheel = (0, import_react24.useCallback)((e) => {
    if (Math.abs(e.deltaY) <= Math.abs(e.deltaX))
      return;
    if (e.deltaY > 0)
      increment();
    else if (e.deltaY < 0)
      decrement();
  }, [
    decrement,
    increment
  ]);
  let scrollingDisabled = isDisabled || isReadOnly || !focusWithin;
  (0, $7d0a636d7a4dcefd$export$2123ff2b87c81ca)({
    onScroll: onWheel,
    isDisabled: scrollingDisabled
  }, inputRef);
  let hasDecimals = intlOptions.maximumFractionDigits > 0;
  let hasNegative = isNaN(state.minValue) || state.minValue < 0;
  let inputMode = "numeric";
  if ((0, $c87311424ea30a05$export$186c6964ca17d99)()) {
    if (hasNegative)
      inputMode = "text";
    else if (hasDecimals)
      inputMode = "decimal";
  } else if ((0, $c87311424ea30a05$export$a11b0059900ceec8)()) {
    if (hasNegative)
      inputMode = "numeric";
    else if (hasDecimals)
      inputMode = "decimal";
  }
  let onChange = (value) => {
    if (state.validate(value))
      state.setInputValue(value);
  };
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  let { labelProps, inputProps: textFieldProps, descriptionProps, errorMessageProps } = (0, $d841c8010a73d545$export$4f384c9210e583c3)({
    ...otherProps,
    ...domProps,
    name: void 0,
    label,
    autoFocus,
    isDisabled,
    isReadOnly,
    isRequired,
    validationState,
    value: inputValue,
    defaultValue: void 0,
    autoComplete: "off",
    "aria-label": props["aria-label"] || null,
    "aria-labelledby": props["aria-labelledby"] || null,
    id: inputId,
    type: "text",
    inputMode,
    onChange,
    onBlur,
    onFocus,
    onFocusChange,
    onKeyDown,
    onKeyUp,
    description,
    errorMessage
  }, state, inputRef);
  (0, $99facab73266f662$export$5add1d006293d136)(inputRef, state.numberValue, state.setNumberValue);
  let inputProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(spinButtonProps, focusProps, textFieldProps, {
    // override the spinbutton role, we can't focus a spin button with VO
    role: null,
    // ignore aria-roledescription on iOS so that required state will announce when it is present
    "aria-roledescription": !(0, $c87311424ea30a05$export$fedb369cb70207f1)() ? stringFormatter.format("numberField") : null,
    "aria-valuemax": null,
    "aria-valuemin": null,
    "aria-valuenow": null,
    "aria-valuetext": null,
    autoCorrect: "off",
    spellCheck: "false"
  });
  let onButtonPressStart = (e) => {
    if (document.activeElement === inputRef.current)
      return;
    if (e.pointerType === "mouse")
      inputRef.current.focus();
    else
      e.target.focus();
  };
  let fieldLabel = props["aria-label"] || (typeof props.label === "string" ? props.label : "");
  let ariaLabelledby;
  if (!fieldLabel)
    ariaLabelledby = props.label != null ? labelProps.id : props["aria-labelledby"];
  let incrementId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let decrementId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let incrementButtonProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(incButtonProps, {
    "aria-label": incrementAriaLabel || stringFormatter.format("increase", {
      fieldLabel
    }).trim(),
    id: ariaLabelledby && !incrementAriaLabel ? incrementId : null,
    "aria-labelledby": ariaLabelledby && !incrementAriaLabel ? `${incrementId} ${ariaLabelledby}` : null,
    "aria-controls": inputId,
    excludeFromTabOrder: true,
    preventFocusOnPress: true,
    allowFocusWhenDisabled: true,
    isDisabled: !state.canIncrement,
    onPressStart: onButtonPressStart
  });
  let decrementButtonProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(decButtonProps, {
    "aria-label": decrementAriaLabel || stringFormatter.format("decrease", {
      fieldLabel
    }).trim(),
    id: ariaLabelledby && !decrementAriaLabel ? decrementId : null,
    "aria-labelledby": ariaLabelledby && !decrementAriaLabel ? `${decrementId} ${ariaLabelledby}` : null,
    "aria-controls": inputId,
    excludeFromTabOrder: true,
    preventFocusOnPress: true,
    allowFocusWhenDisabled: true,
    isDisabled: !state.canDecrement,
    onPressStart: onButtonPressStart
  });
  return {
    groupProps: {
      role: "group",
      "aria-disabled": isDisabled,
      "aria-invalid": validationState === "invalid" ? "true" : void 0,
      ...focusWithinProps
    },
    labelProps,
    inputProps,
    incrementButtonProps,
    decrementButtonProps,
    errorMessageProps,
    descriptionProps
  };
}

// node_modules/.pnpm/@react-aria+radio@3.7.0_react@18.2.0/node_modules/@react-aria/radio/dist/module.js
var $884aeceb3d67f00f$export$3b7b268d09480394 = /* @__PURE__ */ new WeakMap();
var $884aeceb3d67f00f$export$8e8b214e06dd397d = /* @__PURE__ */ new WeakMap();
var $884aeceb3d67f00f$export$61c8d3f0151e21b2 = /* @__PURE__ */ new WeakMap();
function $0d5c49892c1215da$export$37b0961d2f4751e2(props, state, ref) {
  let { value, children, "aria-label": ariaLabel, "aria-labelledby": ariaLabelledby } = props;
  const isDisabled = props.isDisabled || state.isDisabled;
  let hasChildren = children != null;
  let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;
  if (!hasChildren && !hasAriaLabel)
    console.warn("If you do not provide children, you must specify an aria-label for accessibility");
  let checked = state.selectedValue === value;
  let onChange = (e) => {
    e.stopPropagation();
    state.setSelectedValue(value);
  };
  let { pressProps, isPressed } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    isDisabled
  });
  let { focusableProps } = (0, $e6afbd83fe6ebbd2$export$4c014de7c8940b4c)((0, $3ef42575df84b30b$export$9d1611c77c2fe928)(props, {
    onFocus: () => state.setLastFocusedValue(value)
  }), ref);
  let interactions = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(pressProps, focusableProps);
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  let tabIndex = state.lastFocusedValue === value || state.lastFocusedValue == null ? 0 : -1;
  if (isDisabled)
    tabIndex = void 0;
  (0, $99facab73266f662$export$5add1d006293d136)(ref, state.selectedValue, state.setSelectedValue);
  return {
    inputProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, {
      ...interactions,
      type: "radio",
      name: (0, $884aeceb3d67f00f$export$3b7b268d09480394).get(state),
      tabIndex,
      disabled: isDisabled,
      checked,
      value,
      onChange,
      "aria-describedby": [
        props["aria-describedby"],
        state.validationState === "invalid" ? (0, $884aeceb3d67f00f$export$61c8d3f0151e21b2).get(state) : null,
        (0, $884aeceb3d67f00f$export$8e8b214e06dd397d).get(state)
      ].filter(Boolean).join(" ") || void 0
    }),
    isDisabled,
    isSelected: checked,
    isPressed
  };
}
function $430f30ed08ec25fa$export$62b9571f283ff5c2(props, state) {
  let { name, validationState, isReadOnly, isRequired, isDisabled, orientation = "vertical" } = props;
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let { labelProps, fieldProps, descriptionProps, errorMessageProps } = (0, $2baaea4c71418dea$export$294aa081a6c6f55d)({
    ...props,
    // Radio group is not an HTML input element so it
    // shouldn't be labeled by a <label> element.
    labelElementType: "span"
  });
  (0, $884aeceb3d67f00f$export$8e8b214e06dd397d).set(state, descriptionProps.id);
  (0, $884aeceb3d67f00f$export$61c8d3f0151e21b2).set(state, errorMessageProps.id);
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec)({
    onBlurWithin() {
      if (!state.selectedValue)
        state.setLastFocusedValue(null);
    }
  });
  let onKeyDown = (e) => {
    let nextDir;
    switch (e.key) {
      case "ArrowRight":
        if (direction === "rtl" && orientation !== "vertical")
          nextDir = "prev";
        else
          nextDir = "next";
        break;
      case "ArrowLeft":
        if (direction === "rtl" && orientation !== "vertical")
          nextDir = "next";
        else
          nextDir = "prev";
        break;
      case "ArrowDown":
        nextDir = "next";
        break;
      case "ArrowUp":
        nextDir = "prev";
        break;
      default:
        return;
    }
    e.preventDefault();
    let walker = (0, $9bf71ea28793e738$export$2d6ec8fc375ceafa)(e.currentTarget, {
      from: e.target
    });
    let nextElem;
    if (nextDir === "next") {
      nextElem = walker.nextNode();
      if (!nextElem) {
        walker.currentNode = e.currentTarget;
        nextElem = walker.firstChild();
      }
    } else {
      nextElem = walker.previousNode();
      if (!nextElem) {
        walker.currentNode = e.currentTarget;
        nextElem = walker.lastChild();
      }
    }
    if (nextElem) {
      nextElem.focus();
      state.setSelectedValue(nextElem.value);
    }
  };
  let groupName = (0, $bdb11010cef70236$export$f680877a34711e37)(name);
  (0, $884aeceb3d67f00f$export$3b7b268d09480394).set(state, groupName);
  return {
    radioGroupProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, {
      // https://www.w3.org/TR/wai-aria-1.2/#radiogroup
      role: "radiogroup",
      onKeyDown,
      "aria-invalid": validationState === "invalid" || void 0,
      "aria-errormessage": props["aria-errormessage"],
      "aria-readonly": isReadOnly || void 0,
      "aria-required": isRequired || void 0,
      "aria-disabled": isDisabled || void 0,
      "aria-orientation": orientation,
      ...fieldProps,
      ...focusWithinProps
    }),
    labelProps,
    descriptionProps,
    errorMessageProps
  };
}

// node_modules/.pnpm/@react-aria+searchfield@3.5.4_react@18.2.0/node_modules/@react-aria/searchfield/dist/module.js
function $parcel$interopDefault11(a) {
  return a && a.__esModule ? a.default : a;
}
var $8112f8b883c0272d$exports = {};
var $03c9a1a10de12f06$exports = {};
$03c9a1a10de12f06$exports = {
  "Clear search": `مسح البحث`
};
var $4da0c2ffa4ba4159$exports = {};
$4da0c2ffa4ba4159$exports = {
  "Clear search": `Изчистване на търсене`
};
var $8c59fd0c2c96821b$exports = {};
$8c59fd0c2c96821b$exports = {
  "Clear search": `Vymazat hledání`
};
var $0a371f9c1df8120f$exports = {};
$0a371f9c1df8120f$exports = {
  "Clear search": `Ryd søgning`
};
var $67f4d0b0de9f8a52$exports = {};
$67f4d0b0de9f8a52$exports = {
  "Clear search": `Suche zurücksetzen`
};
var $72a312d948f0214b$exports = {};
$72a312d948f0214b$exports = {
  "Clear search": `Απαλοιφή αναζήτησης`
};
var $5012d21d933388c1$exports = {};
$5012d21d933388c1$exports = {
  "Clear search": `Clear search`
};
var $0159854399308e2e$exports = {};
$0159854399308e2e$exports = {
  "Clear search": `Borrar búsqueda`
};
var $390613981d970276$exports = {};
$390613981d970276$exports = {
  "Clear search": `Tühjenda otsing`
};
var $961ae0833f811705$exports = {};
$961ae0833f811705$exports = {
  "Clear search": `Tyhjennä haku`
};
var $26d76742decfd829$exports = {};
$26d76742decfd829$exports = {
  "Clear search": `Effacer la recherche`
};
var $92ef254c82a5c769$exports = {};
$92ef254c82a5c769$exports = {
  "Clear search": `נקה חיפוש`
};
var $e0321b43bdefb8b3$exports = {};
$e0321b43bdefb8b3$exports = {
  "Clear search": `Obriši pretragu`
};
var $0c1ee0b8d50940d9$exports = {};
$0c1ee0b8d50940d9$exports = {
  "Clear search": `Keresés törlése`
};
var $b09198915a38946f$exports = {};
$b09198915a38946f$exports = {
  "Clear search": `Cancella ricerca`
};
var $3a9a3d180c3145c0$exports = {};
$3a9a3d180c3145c0$exports = {
  "Clear search": `検索をクリア`
};
var $b7a611726449f4a3$exports = {};
$b7a611726449f4a3$exports = {
  "Clear search": `검색 지우기`
};
var $d9a3d49db610dd5c$exports = {};
$d9a3d49db610dd5c$exports = {
  "Clear search": `Išvalyti iešką`
};
var $3ab64b73ea27c23a$exports = {};
$3ab64b73ea27c23a$exports = {
  "Clear search": `Notīrīt meklēšanu`
};
var $bf5cce1b47d23baf$exports = {};
$bf5cce1b47d23baf$exports = {
  "Clear search": `Tøm søk`
};
var $4e0c9a9a010e4598$exports = {};
$4e0c9a9a010e4598$exports = {
  "Clear search": `Zoekactie wissen`
};
var $63cf4a75ec270508$exports = {};
$63cf4a75ec270508$exports = {
  "Clear search": `Wyczyść zawartość wyszukiwania`
};
var $083b0cad27fdbd06$exports = {};
$083b0cad27fdbd06$exports = {
  "Clear search": `Limpar pesquisa`
};
var $1b7f0864d830ba6d$exports = {};
$1b7f0864d830ba6d$exports = {
  "Clear search": `Limpar pesquisa`
};
var $d6d2588377fc9718$exports = {};
$d6d2588377fc9718$exports = {
  "Clear search": `Ştergeţi căutarea`
};
var $701c918a4653e946$exports = {};
$701c918a4653e946$exports = {
  "Clear search": `Очистить поиск`
};
var $7cacc29a1e5f4fbe$exports = {};
$7cacc29a1e5f4fbe$exports = {
  "Clear search": `Vymazať vyhľadávanie`
};
var $c63231bcc300d0df$exports = {};
$c63231bcc300d0df$exports = {
  "Clear search": `Počisti iskanje`
};
var $b61510478bc0e6f6$exports = {};
$b61510478bc0e6f6$exports = {
  "Clear search": `Obriši pretragu`
};
var $ce325e6dd3f9c37a$exports = {};
$ce325e6dd3f9c37a$exports = {
  "Clear search": `Rensa sökning`
};
var $1f7e1cf2285af2b2$exports = {};
$1f7e1cf2285af2b2$exports = {
  "Clear search": `Aramayı temizle`
};
var $2d999353ca652e34$exports = {};
$2d999353ca652e34$exports = {
  "Clear search": `Очистити пошук`
};
var $117b536bfb1ae554$exports = {};
$117b536bfb1ae554$exports = {
  "Clear search": `清除搜索`
};
var $525f6fa4ac26e278$exports = {};
$525f6fa4ac26e278$exports = {
  "Clear search": `清除搜尋條件`
};
$8112f8b883c0272d$exports = {
  "ar-AE": $03c9a1a10de12f06$exports,
  "bg-BG": $4da0c2ffa4ba4159$exports,
  "cs-CZ": $8c59fd0c2c96821b$exports,
  "da-DK": $0a371f9c1df8120f$exports,
  "de-DE": $67f4d0b0de9f8a52$exports,
  "el-GR": $72a312d948f0214b$exports,
  "en-US": $5012d21d933388c1$exports,
  "es-ES": $0159854399308e2e$exports,
  "et-EE": $390613981d970276$exports,
  "fi-FI": $961ae0833f811705$exports,
  "fr-FR": $26d76742decfd829$exports,
  "he-IL": $92ef254c82a5c769$exports,
  "hr-HR": $e0321b43bdefb8b3$exports,
  "hu-HU": $0c1ee0b8d50940d9$exports,
  "it-IT": $b09198915a38946f$exports,
  "ja-JP": $3a9a3d180c3145c0$exports,
  "ko-KR": $b7a611726449f4a3$exports,
  "lt-LT": $d9a3d49db610dd5c$exports,
  "lv-LV": $3ab64b73ea27c23a$exports,
  "nb-NO": $bf5cce1b47d23baf$exports,
  "nl-NL": $4e0c9a9a010e4598$exports,
  "pl-PL": $63cf4a75ec270508$exports,
  "pt-BR": $083b0cad27fdbd06$exports,
  "pt-PT": $1b7f0864d830ba6d$exports,
  "ro-RO": $d6d2588377fc9718$exports,
  "ru-RU": $701c918a4653e946$exports,
  "sk-SK": $7cacc29a1e5f4fbe$exports,
  "sl-SI": $c63231bcc300d0df$exports,
  "sr-SP": $b61510478bc0e6f6$exports,
  "sv-SE": $ce325e6dd3f9c37a$exports,
  "tr-TR": $1f7e1cf2285af2b2$exports,
  "uk-UA": $2d999353ca652e34$exports,
  "zh-CN": $117b536bfb1ae554$exports,
  "zh-TW": $525f6fa4ac26e278$exports
};
function $4d52238874b24f86$export$9bb30bbe003b82e0(props, state, inputRef) {
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault11($8112f8b883c0272d$exports)));
  let { isDisabled, isReadOnly, onSubmit = () => {
  }, onClear, type = "search" } = props;
  let onKeyDown = (e) => {
    const key = e.key;
    if (key === "Enter" || key === "Escape")
      e.preventDefault();
    if (isDisabled || isReadOnly)
      return;
    if (key === "Enter")
      onSubmit(state.value);
    if (key === "Escape") {
      state.setValue("");
      if (onClear)
        onClear();
    }
  };
  let onClearButtonClick = () => {
    state.setValue("");
    if (onClear)
      onClear();
  };
  let onPressStart = () => {
    inputRef.current.focus();
  };
  let { labelProps, inputProps, descriptionProps, errorMessageProps } = (0, $2d73ec29415bd339$export$712718f7aec83d5)({
    ...props,
    value: state.value,
    onChange: state.setValue,
    onKeyDown: (0, $ff5963eb1fccf552$export$e08e3b67e392101e)(onKeyDown, props.onKeyDown),
    type
  }, inputRef);
  return {
    labelProps,
    inputProps: {
      ...inputProps,
      // already handled by useSearchFieldState
      defaultValue: void 0
    },
    clearButtonProps: {
      "aria-label": stringFormatter.format("Clear search"),
      excludeFromTabOrder: true,
      // @ts-ignore
      preventFocusOnPress: true,
      isDisabled: isDisabled || isReadOnly,
      onPress: onClearButtonClick,
      onPressStart
    },
    descriptionProps,
    errorMessageProps
  };
}

// node_modules/.pnpm/@react-aria+select@3.12.0_react-dom@18.2.0_react@18.2.0/node_modules/@react-aria/select/dist/module.js
var import_react25 = __toESM(require_react());
function $58aed456727eb0f3$export$e64b2f635402ca43(props, state, ref) {
  let { keyboardDelegate, isDisabled } = props;
  let collator = (0, $325a3faab7a68acd$export$a16aca283550c30d)({
    usage: "search",
    sensitivity: "base"
  });
  let delegate = (0, import_react25.useMemo)(() => keyboardDelegate || new (0, $2a25aae57d74318e$export$a05409b8bb224a5a)(state.collection, state.disabledKeys, null, collator), [
    keyboardDelegate,
    state.collection,
    state.disabledKeys,
    collator
  ]);
  let { menuTriggerProps, menuProps } = (0, $168583247155ddda$export$dc9c12ed27dd1b49)({
    isDisabled,
    type: "listbox"
  }, state, ref);
  let onKeyDown = (e) => {
    switch (e.key) {
      case "ArrowLeft": {
        e.preventDefault();
        let key = state.selectedKey != null ? delegate.getKeyAbove(state.selectedKey) : delegate.getFirstKey();
        if (key)
          state.setSelectedKey(key);
        break;
      }
      case "ArrowRight": {
        e.preventDefault();
        let key = state.selectedKey != null ? delegate.getKeyBelow(state.selectedKey) : delegate.getFirstKey();
        if (key)
          state.setSelectedKey(key);
        break;
      }
    }
  };
  let { typeSelectProps } = (0, $fb3050f43d946246$export$e32c88dfddc6e1d8)({
    keyboardDelegate: delegate,
    selectionManager: state.selectionManager,
    onTypeSelect(key) {
      state.setSelectedKey(key);
    }
  });
  let { labelProps, fieldProps, descriptionProps, errorMessageProps } = (0, $2baaea4c71418dea$export$294aa081a6c6f55d)({
    ...props,
    labelElementType: "span"
  });
  typeSelectProps.onKeyDown = typeSelectProps.onKeyDownCapture;
  delete typeSelectProps.onKeyDownCapture;
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  let triggerProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(typeSelectProps, menuTriggerProps, fieldProps);
  let valueId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  return {
    labelProps: {
      ...labelProps,
      onClick: () => {
        if (!props.isDisabled) {
          ref.current.focus();
          (0, $507fabe10e71c6fb$export$8397ddfc504fdb9a)("keyboard");
        }
      }
    },
    triggerProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, {
      ...triggerProps,
      isDisabled,
      onKeyDown: (0, $ff5963eb1fccf552$export$e08e3b67e392101e)(triggerProps.onKeyDown, onKeyDown, props.onKeyDown),
      onKeyUp: props.onKeyUp,
      "aria-labelledby": [
        valueId,
        triggerProps["aria-labelledby"],
        triggerProps["aria-label"] && !triggerProps["aria-labelledby"] ? triggerProps.id : null
      ].filter(Boolean).join(" "),
      onFocus(e) {
        if (state.isFocused)
          return;
        if (props.onFocus)
          props.onFocus(e);
        if (props.onFocusChange)
          props.onFocusChange(true);
        state.setFocused(true);
      },
      onBlur(e) {
        if (state.isOpen)
          return;
        if (props.onBlur)
          props.onBlur(e);
        if (props.onFocusChange)
          props.onFocusChange(false);
        state.setFocused(false);
      }
    }),
    valueProps: {
      id: valueId
    },
    menuProps: {
      ...menuProps,
      autoFocus: state.focusStrategy || true,
      shouldSelectOnPressUp: true,
      shouldFocusOnHover: true,
      disallowEmptySelection: true,
      onBlur: (e) => {
        if (e.currentTarget.contains(e.relatedTarget))
          return;
        if (props.onBlur)
          props.onBlur(e);
        if (props.onFocusChange)
          props.onFocusChange(false);
        state.setFocused(false);
      },
      "aria-labelledby": [
        fieldProps["aria-labelledby"],
        triggerProps["aria-label"] && !fieldProps["aria-labelledby"] ? triggerProps.id : null
      ].filter(Boolean).join(" ")
    },
    descriptionProps,
    errorMessageProps
  };
}
function $bdd25dc72710631f$export$f809e80f58e251d1(props, state, triggerRef) {
  let { autoComplete, name, isDisabled } = props;
  let modality = (0, $507fabe10e71c6fb$export$98e20ec92f614cfe)();
  let { visuallyHiddenProps } = (0, $5c3e21d68f1c4674$export$a966af930f325cab)();
  (0, $99facab73266f662$export$5add1d006293d136)(props.selectRef, state.selectedKey, state.setSelectedKey);
  var _state_selectedKey;
  return {
    containerProps: {
      ...visuallyHiddenProps,
      "aria-hidden": true,
      ["data-a11y-ignore"]: "aria-hidden-focus"
    },
    inputProps: {
      type: "text",
      tabIndex: modality == null || state.isFocused || state.isOpen ? -1 : 0,
      style: {
        fontSize: 16
      },
      onFocus: () => triggerRef.current.focus(),
      disabled: isDisabled
    },
    selectProps: {
      tabIndex: -1,
      autoComplete,
      disabled: isDisabled,
      name,
      size: state.collection.size,
      value: (_state_selectedKey = state.selectedKey) !== null && _state_selectedKey !== void 0 ? _state_selectedKey : "",
      onChange: (e) => state.setSelectedKey(e.target.value)
    }
  };
}
function $bdd25dc72710631f$export$cbd84cdb2e668835(props) {
  let { state, triggerRef, label, name, isDisabled } = props;
  let selectRef = (0, import_react25.useRef)(null);
  let { containerProps, inputProps, selectProps } = $bdd25dc72710631f$export$f809e80f58e251d1({
    ...props,
    selectRef
  }, state, triggerRef);
  var _state_selectedKey;
  if (state.collection.size <= 300)
    return (0, import_react25.default).createElement("div", {
      ...containerProps,
      "data-testid": "hidden-select-container"
    }, (0, import_react25.default).createElement("input", inputProps), (0, import_react25.default).createElement("label", null, label, (0, import_react25.default).createElement("select", {
      ...selectProps,
      ref: selectRef
    }, (0, import_react25.default).createElement("option", null), [
      ...state.collection.getKeys()
    ].map((key) => {
      let item = state.collection.getItem(key);
      if (item.type === "item")
        return (0, import_react25.default).createElement("option", {
          key: item.key,
          value: item.key
        }, item.textValue);
    }))));
  else if (name)
    return (0, import_react25.default).createElement("input", {
      type: "hidden",
      autoComplete: selectProps.autoComplete,
      name,
      disabled: isDisabled,
      value: (_state_selectedKey = state.selectedKey) !== null && _state_selectedKey !== void 0 ? _state_selectedKey : ""
    });
  return null;
}

// node_modules/.pnpm/@react-aria+separator@3.3.4_react@18.2.0/node_modules/@react-aria/separator/dist/module.js
function $f4b273590fab9f93$export$52210f68a14655d0(props) {
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  let ariaOrientation;
  if (props.orientation === "vertical")
    ariaOrientation = "vertical";
  if (props.elementType !== "hr")
    return {
      separatorProps: {
        ...domProps,
        role: "separator",
        "aria-orientation": ariaOrientation
      }
    };
  return {
    separatorProps: domProps
  };
}

// node_modules/.pnpm/@react-aria+slider@3.6.0_react@18.2.0/node_modules/@react-aria/slider/dist/module.js
var import_react26 = __toESM(require_react());
var $aa519ee6cf463259$export$7a8d2b02c9371cbf = /* @__PURE__ */ new WeakMap();
function $aa519ee6cf463259$export$68e648cbec363a18(state, index) {
  let id = $aa519ee6cf463259$export$7a8d2b02c9371cbf.get(state);
  if (!id)
    throw new Error("Unknown slider state");
  return `${id}-${index}`;
}
function $bcca50147b47f54d$export$56b2c08e277f365(props, state, trackRef) {
  let { labelProps, fieldProps } = (0, $d191a55c9702f145$export$8467354a121f1b9f)(props);
  let isVertical = props.orientation === "vertical";
  var _labelProps_id;
  (0, $aa519ee6cf463259$export$7a8d2b02c9371cbf).set(state, (_labelProps_id = labelProps.id) !== null && _labelProps_id !== void 0 ? _labelProps_id : fieldProps.id);
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let { addGlobalListener, removeGlobalListener } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  const realTimeTrackDraggingIndex = (0, import_react26.useRef)(null);
  const reverseX = direction === "rtl";
  const currentPosition = (0, import_react26.useRef)(null);
  const { moveProps } = (0, $e8a7022cf87cba2a$export$36da96379f79f245)({
    onMoveStart() {
      currentPosition.current = null;
    },
    onMove({ deltaX, deltaY }) {
      let { height, width } = trackRef.current.getBoundingClientRect();
      let size = isVertical ? height : width;
      if (currentPosition.current == null)
        currentPosition.current = state.getThumbPercent(realTimeTrackDraggingIndex.current) * size;
      let delta = isVertical ? deltaY : deltaX;
      if (isVertical || reverseX)
        delta = -delta;
      currentPosition.current += delta;
      if (realTimeTrackDraggingIndex.current != null && trackRef.current) {
        const percent = (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(currentPosition.current / size, 0, 1);
        state.setThumbPercent(realTimeTrackDraggingIndex.current, percent);
      }
    },
    onMoveEnd() {
      if (realTimeTrackDraggingIndex.current != null) {
        state.setThumbDragging(realTimeTrackDraggingIndex.current, false);
        realTimeTrackDraggingIndex.current = null;
      }
    }
  });
  let currentPointer = (0, import_react26.useRef)(void 0);
  let onDownTrack = (e, id, clientX, clientY) => {
    if (trackRef.current && !props.isDisabled && state.values.every((_, i) => !state.isThumbDragging(i))) {
      let { height, width, top, left } = trackRef.current.getBoundingClientRect();
      let size = isVertical ? height : width;
      const trackPosition = isVertical ? top : left;
      const clickPosition = isVertical ? clientY : clientX;
      const offset = clickPosition - trackPosition;
      let percent = offset / size;
      if (direction === "rtl" || isVertical)
        percent = 1 - percent;
      let value = state.getPercentValue(percent);
      let closestThumb;
      let split = state.values.findIndex((v) => value - v < 0);
      if (split === 0)
        closestThumb = split;
      else if (split === -1)
        closestThumb = state.values.length - 1;
      else {
        let lastLeft = state.values[split - 1];
        let firstRight = state.values[split];
        if (Math.abs(lastLeft - value) < Math.abs(firstRight - value))
          closestThumb = split - 1;
        else
          closestThumb = split;
      }
      if (closestThumb >= 0 && state.isThumbEditable(closestThumb)) {
        e.preventDefault();
        realTimeTrackDraggingIndex.current = closestThumb;
        state.setFocusedThumb(closestThumb);
        currentPointer.current = id;
        state.setThumbDragging(realTimeTrackDraggingIndex.current, true);
        state.setThumbValue(closestThumb, value);
        addGlobalListener(window, "mouseup", onUpTrack, false);
        addGlobalListener(window, "touchend", onUpTrack, false);
        addGlobalListener(window, "pointerup", onUpTrack, false);
      } else
        realTimeTrackDraggingIndex.current = null;
    }
  };
  let onUpTrack = (e) => {
    var _e_changedTouches;
    var _e_pointerId;
    let id = (_e_pointerId = e.pointerId) !== null && _e_pointerId !== void 0 ? _e_pointerId : (_e_changedTouches = e.changedTouches) === null || _e_changedTouches === void 0 ? void 0 : _e_changedTouches[0].identifier;
    if (id === currentPointer.current) {
      if (realTimeTrackDraggingIndex.current != null) {
        state.setThumbDragging(realTimeTrackDraggingIndex.current, false);
        realTimeTrackDraggingIndex.current = null;
      }
      removeGlobalListener(window, "mouseup", onUpTrack, false);
      removeGlobalListener(window, "touchend", onUpTrack, false);
      removeGlobalListener(window, "pointerup", onUpTrack, false);
    }
  };
  if ("htmlFor" in labelProps && labelProps.htmlFor) {
    delete labelProps.htmlFor;
    labelProps.onClick = () => {
      var _document_getElementById;
      (_document_getElementById = document.getElementById((0, $aa519ee6cf463259$export$68e648cbec363a18)(state, 0))) === null || _document_getElementById === void 0 ? void 0 : _document_getElementById.focus();
      (0, $507fabe10e71c6fb$export$8397ddfc504fdb9a)("keyboard");
    };
  }
  return {
    labelProps,
    // The root element of the Slider will have role="group" to group together
    // all the thumb inputs in the Slider.  The label of the Slider will
    // be used to label the group.
    groupProps: {
      role: "group",
      ...fieldProps
    },
    trackProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)({
      onMouseDown(e) {
        if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)
          return;
        onDownTrack(e, void 0, e.clientX, e.clientY);
      },
      onPointerDown(e) {
        if (e.pointerType === "mouse" && (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey))
          return;
        onDownTrack(e, e.pointerId, e.clientX, e.clientY);
      },
      onTouchStart(e) {
        onDownTrack(e, e.changedTouches[0].identifier, e.changedTouches[0].clientX, e.changedTouches[0].clientY);
      },
      style: {
        position: "relative",
        touchAction: "none"
      }
    }, moveProps),
    outputProps: {
      htmlFor: state.values.map((_, index) => (0, $aa519ee6cf463259$export$68e648cbec363a18)(state, index)).join(" "),
      "aria-live": "off"
    }
  };
}
function $47b897dc8cdb026b$export$8d15029008292ae(opts, state) {
  let { index = 0, isRequired, validationState, trackRef, inputRef, orientation = state.orientation, name } = opts;
  let isDisabled = opts.isDisabled || state.isDisabled;
  let isVertical = orientation === "vertical";
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let { addGlobalListener, removeGlobalListener } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  let labelId = (0, $aa519ee6cf463259$export$7a8d2b02c9371cbf).get(state);
  var _opts_arialabelledby;
  const { labelProps, fieldProps } = (0, $d191a55c9702f145$export$8467354a121f1b9f)({
    ...opts,
    id: (0, $aa519ee6cf463259$export$68e648cbec363a18)(state, index),
    "aria-labelledby": `${labelId} ${(_opts_arialabelledby = opts["aria-labelledby"]) !== null && _opts_arialabelledby !== void 0 ? _opts_arialabelledby : ""}`.trim()
  });
  const value = state.values[index];
  const focusInput = (0, import_react26.useCallback)(() => {
    if (inputRef.current)
      (0, $7215afc6de606d6b$export$de79e2c695e052f3)(inputRef.current);
  }, [
    inputRef
  ]);
  const isFocused = state.focusedThumb === index;
  (0, import_react26.useEffect)(() => {
    if (isFocused)
      focusInput();
  }, [
    isFocused,
    focusInput
  ]);
  let reverseX = direction === "rtl";
  let currentPosition = (0, import_react26.useRef)(null);
  let { keyboardProps } = (0, $46d819fcbaf35654$export$8f71654801c2f7cd)({
    onKeyDown(e) {
      let { getThumbMaxValue, getThumbMinValue, decrementThumb, incrementThumb, setThumbValue, setThumbDragging, pageSize } = state;
      if (!/^(PageUp|PageDown|Home|End)$/.test(e.key)) {
        e.continuePropagation();
        return;
      }
      e.preventDefault();
      setThumbDragging(index, true);
      switch (e.key) {
        case "PageUp":
          incrementThumb(index, pageSize);
          break;
        case "PageDown":
          decrementThumb(index, pageSize);
          break;
        case "Home":
          setThumbValue(index, getThumbMinValue(index));
          break;
        case "End":
          setThumbValue(index, getThumbMaxValue(index));
          break;
      }
      setThumbDragging(index, false);
    }
  });
  let { moveProps } = (0, $e8a7022cf87cba2a$export$36da96379f79f245)({
    onMoveStart() {
      currentPosition.current = null;
      state.setThumbDragging(index, true);
    },
    onMove({ deltaX, deltaY, pointerType, shiftKey }) {
      const { getThumbPercent, setThumbPercent, decrementThumb, incrementThumb, step, pageSize } = state;
      let { width, height } = trackRef.current.getBoundingClientRect();
      let size = isVertical ? height : width;
      if (currentPosition.current == null)
        currentPosition.current = getThumbPercent(index) * size;
      if (pointerType === "keyboard") {
        if (deltaX > 0 && reverseX || deltaX < 0 && !reverseX || deltaY > 0)
          decrementThumb(index, shiftKey ? pageSize : step);
        else
          incrementThumb(index, shiftKey ? pageSize : step);
      } else {
        let delta = isVertical ? deltaY : deltaX;
        if (isVertical || reverseX)
          delta = -delta;
        currentPosition.current += delta;
        setThumbPercent(index, (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(currentPosition.current / size, 0, 1));
      }
    },
    onMoveEnd() {
      state.setThumbDragging(index, false);
    }
  });
  state.setThumbEditable(index, !isDisabled);
  const { focusableProps } = (0, $e6afbd83fe6ebbd2$export$4c014de7c8940b4c)((0, $3ef42575df84b30b$export$9d1611c77c2fe928)(opts, {
    onFocus: () => state.setFocusedThumb(index),
    onBlur: () => state.setFocusedThumb(void 0)
  }), inputRef);
  let currentPointer = (0, import_react26.useRef)(void 0);
  let onDown = (id) => {
    focusInput();
    currentPointer.current = id;
    state.setThumbDragging(index, true);
    addGlobalListener(window, "mouseup", onUp, false);
    addGlobalListener(window, "touchend", onUp, false);
    addGlobalListener(window, "pointerup", onUp, false);
  };
  let onUp = (e) => {
    var _e_changedTouches;
    var _e_pointerId;
    let id = (_e_pointerId = e.pointerId) !== null && _e_pointerId !== void 0 ? _e_pointerId : (_e_changedTouches = e.changedTouches) === null || _e_changedTouches === void 0 ? void 0 : _e_changedTouches[0].identifier;
    if (id === currentPointer.current) {
      focusInput();
      state.setThumbDragging(index, false);
      removeGlobalListener(window, "mouseup", onUp, false);
      removeGlobalListener(window, "touchend", onUp, false);
      removeGlobalListener(window, "pointerup", onUp, false);
    }
  };
  let thumbPosition = state.getThumbPercent(index);
  if (isVertical || direction === "rtl")
    thumbPosition = 1 - thumbPosition;
  let interactions = !isDisabled ? (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(keyboardProps, moveProps, {
    onMouseDown: (e) => {
      if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)
        return;
      onDown();
    },
    onPointerDown: (e) => {
      if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)
        return;
      onDown(e.pointerId);
    },
    onTouchStart: (e) => {
      onDown(e.changedTouches[0].identifier);
    }
  }) : {};
  (0, $99facab73266f662$export$5add1d006293d136)(inputRef, value, (v) => {
    state.setThumbValue(index, v);
  });
  return {
    inputProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(focusableProps, fieldProps, {
      type: "range",
      tabIndex: !isDisabled ? 0 : void 0,
      min: state.getThumbMinValue(index),
      max: state.getThumbMaxValue(index),
      step: state.step,
      value,
      name,
      disabled: isDisabled,
      "aria-orientation": orientation,
      "aria-valuetext": state.getThumbValueLabel(index),
      "aria-required": isRequired || void 0,
      "aria-invalid": validationState === "invalid" || void 0,
      "aria-errormessage": opts["aria-errormessage"],
      onChange: (e) => {
        state.setThumbValue(index, parseFloat(e.target.value));
      }
    }),
    thumbProps: {
      ...interactions,
      style: {
        position: "absolute",
        [isVertical ? "top" : "left"]: `${thumbPosition * 100}%`,
        transform: "translate(-50%, -50%)",
        touchAction: "none"
      }
    },
    labelProps,
    isDragging: state.isThumbDragging(index),
    isDisabled,
    isFocused
  };
}

// node_modules/.pnpm/@react-aria+switch@3.5.3_react@18.2.0/node_modules/@react-aria/switch/dist/module.js
function $b418ec0c85c52f27$export$d853f7095ae95f88(props, state, ref) {
  let { inputProps, isSelected, isPressed, isDisabled, isReadOnly } = (0, $d2c8e2b0480f3f34$export$cbe85ee05b554577)(props, state, ref);
  return {
    inputProps: {
      ...inputProps,
      role: "switch",
      checked: isSelected
    },
    isSelected,
    isPressed,
    isDisabled,
    isReadOnly
  };
}

// node_modules/.pnpm/@react-aria+table@3.11.0_react-dom@18.2.0_react@18.2.0/node_modules/@react-aria/table/dist/module.js
var import_react27 = __toESM(require_react());

// node_modules/.pnpm/@react-stately+flags@3.0.0/node_modules/@react-stately/flags/dist/module.js
var $f4e2df6bd15f8569$var$_tableNestedRows = false;
function $f4e2df6bd15f8569$export$1b00cb14a96194e6() {
  return $f4e2df6bd15f8569$var$_tableNestedRows;
}

// node_modules/.pnpm/@react-aria+table@3.11.0_react-dom@18.2.0_react@18.2.0/node_modules/@react-aria/table/dist/module.js
function $parcel$interopDefault12(a) {
  return a && a.__esModule ? a.default : a;
}
var $2140fb2337097f2d$export$552312adfd451dab = /* @__PURE__ */ new WeakMap();
function $2140fb2337097f2d$var$normalizeKey(key) {
  if (typeof key === "string")
    return key.replace(/\s*/g, "");
  return "" + key;
}
function $2140fb2337097f2d$export$37cd4213f2ad742e(state, columnKey) {
  let gridId = $2140fb2337097f2d$export$552312adfd451dab.get(state);
  if (!gridId)
    throw new Error("Unknown grid");
  return `${gridId}-${$2140fb2337097f2d$var$normalizeKey(columnKey)}`;
}
function $2140fb2337097f2d$export$19baff3266315d44(state, rowKey, columnKey) {
  let gridId = $2140fb2337097f2d$export$552312adfd451dab.get(state);
  if (!gridId)
    throw new Error("Unknown grid");
  return `${gridId}-${$2140fb2337097f2d$var$normalizeKey(rowKey)}-${$2140fb2337097f2d$var$normalizeKey(columnKey)}`;
}
function $2140fb2337097f2d$export$85069b70317f543(state, rowKey) {
  return [
    ...state.collection.rowHeaderColumnKeys
  ].map((columnKey) => $2140fb2337097f2d$export$19baff3266315d44(state, rowKey, columnKey)).join(" ");
}
var $7476b46781682bf5$exports = {};
var $ce3de3ff2fd66848$exports = {};
$ce3de3ff2fd66848$exports = {
  "ascending": `تصاعدي`,
  "ascendingSort": (args) => `ترتيب حسب العمود ${args.columnName} بترتيب تصاعدي`,
  "columnSize": (args) => `${args.value} بالبكسل`,
  "descending": `تنازلي`,
  "descendingSort": (args) => `ترتيب حسب العمود ${args.columnName} بترتيب تنازلي`,
  "resizerDescription": `اضغط على مفتاح Enter لبدء تغيير الحجم`,
  "select": `تحديد`,
  "selectAll": `تحديد الكل`,
  "sortable": `عمود قابل للترتيب`
};
var $cb80dcce530985b9$exports = {};
$cb80dcce530985b9$exports = {
  "ascending": `възходящ`,
  "ascendingSort": (args) => `сортирано по колона ${args.columnName} във възходящ ред`,
  "columnSize": (args) => `${args.value} пиксела`,
  "descending": `низходящ`,
  "descendingSort": (args) => `сортирано по колона ${args.columnName} в низходящ ред`,
  "resizerDescription": `Натиснете „Enter“, за да започнете да преоразмерявате`,
  "select": `Изберете`,
  "selectAll": `Изберете всичко`,
  "sortable": `сортираща колона`
};
var $68ac86749db4c0fb$exports = {};
$68ac86749db4c0fb$exports = {
  "ascending": `vzestupně`,
  "ascendingSort": (args) => `řazeno vzestupně podle sloupce ${args.columnName}`,
  "columnSize": (args) => `${args.value} pixelů`,
  "descending": `sestupně`,
  "descendingSort": (args) => `řazeno sestupně podle sloupce ${args.columnName}`,
  "resizerDescription": `Stisknutím klávesy Enter začnete měnit velikost`,
  "select": `Vybrat`,
  "selectAll": `Vybrat vše`,
  "sortable": `sloupec s možností řazení`
};
var $9a6cbac08487e661$exports = {};
$9a6cbac08487e661$exports = {
  "ascending": `stigende`,
  "ascendingSort": (args) => `sorteret efter kolonne ${args.columnName} i stigende rækkefølge`,
  "columnSize": (args) => `${args.value} pixels`,
  "descending": `faldende`,
  "descendingSort": (args) => `sorteret efter kolonne ${args.columnName} i faldende rækkefølge`,
  "resizerDescription": `Tryk på Enter for at ændre størrelse`,
  "select": `Vælg`,
  "selectAll": `Vælg alle`,
  "sortable": `sorterbar kolonne`
};
var $c963661d89486e72$exports = {};
$c963661d89486e72$exports = {
  "ascending": `aufsteigend`,
  "ascendingSort": (args) => `sortiert nach Spalte ${args.columnName} in aufsteigender Reihenfolge`,
  "columnSize": (args) => `${args.value} Pixel`,
  "descending": `absteigend`,
  "descendingSort": (args) => `sortiert nach Spalte ${args.columnName} in absteigender Reihenfolge`,
  "resizerDescription": `Eingabetaste zum Starten der Größenänderung drücken`,
  "select": `Auswählen`,
  "selectAll": `Alles auswählen`,
  "sortable": `sortierbare Spalte`
};
var $ac03861c6e8605f4$exports = {};
$ac03861c6e8605f4$exports = {
  "ascending": `αύξουσα`,
  "ascendingSort": (args) => `διαλογή ανά στήλη ${args.columnName} σε αύξουσα σειρά`,
  "columnSize": (args) => `${args.value} pixel`,
  "descending": `φθίνουσα`,
  "descendingSort": (args) => `διαλογή ανά στήλη ${args.columnName} σε φθίνουσα σειρά`,
  "resizerDescription": `Πατήστε Enter για έναρξη της αλλαγής μεγέθους`,
  "select": `Επιλογή`,
  "selectAll": `Επιλογή όλων`,
  "sortable": `Στήλη διαλογής`
};
var $09e6b82e0d6e466a$exports = {};
$09e6b82e0d6e466a$exports = {
  "select": `Select`,
  "selectAll": `Select All`,
  "sortable": `sortable column`,
  "ascending": `ascending`,
  "descending": `descending`,
  "ascendingSort": (args) => `sorted by column ${args.columnName} in ascending order`,
  "descendingSort": (args) => `sorted by column ${args.columnName} in descending order`,
  "columnSize": (args) => `${args.value} pixels`,
  "resizerDescription": `Press Enter to start resizing`
};
var $8cc39eb66c2bf220$exports = {};
$8cc39eb66c2bf220$exports = {
  "ascending": `de subida`,
  "ascendingSort": (args) => `ordenado por columna ${args.columnName} en orden de subida`,
  "columnSize": (args) => `${args.value} píxeles`,
  "descending": `de bajada`,
  "descendingSort": (args) => `ordenado por columna ${args.columnName} en orden de bajada`,
  "resizerDescription": `Pulse Intro para empezar a redimensionar`,
  "select": `Seleccionar`,
  "selectAll": `Seleccionar todos`,
  "sortable": `columna ordenable`
};
var $4e11db3c25a38112$exports = {};
$4e11db3c25a38112$exports = {
  "ascending": `tõusev järjestus`,
  "ascendingSort": (args) => `sorditud veeru järgi ${args.columnName} tõusvas järjestuses`,
  "columnSize": (args) => `${args.value} pikslit`,
  "descending": `laskuv järjestus`,
  "descendingSort": (args) => `sorditud veeru järgi ${args.columnName} laskuvas järjestuses`,
  "resizerDescription": `Suuruse muutmise alustamiseks vajutage klahvi Enter`,
  "select": `Vali`,
  "selectAll": `Vali kõik`,
  "sortable": `sorditav veerg`
};
var $da1e751a92575e02$exports = {};
$da1e751a92575e02$exports = {
  "ascending": `nouseva`,
  "ascendingSort": (args) => `lajiteltu sarakkeen ${args.columnName} mukaan nousevassa järjestyksessä`,
  "columnSize": (args) => `${args.value} pikseliä`,
  "descending": `laskeva`,
  "descendingSort": (args) => `lajiteltu sarakkeen ${args.columnName} mukaan laskevassa järjestyksessä`,
  "resizerDescription": `Aloita koon muutos painamalla Enter-näppäintä`,
  "select": `Valitse`,
  "selectAll": `Valitse kaikki`,
  "sortable": `lajiteltava sarake`
};
var $1b5d6c6c47d55106$exports = {};
$1b5d6c6c47d55106$exports = {
  "ascending": `croissant`,
  "ascendingSort": (args) => `trié en fonction de la colonne ${args.columnName} par ordre croissant`,
  "columnSize": (args) => `${args.value} pixels`,
  "descending": `décroissant`,
  "descendingSort": (args) => `trié en fonction de la colonne ${args.columnName} par ordre décroissant`,
  "resizerDescription": `Appuyez sur Entrée pour commencer le redimensionnement.`,
  "select": `Sélectionner`,
  "selectAll": `Sélectionner tout`,
  "sortable": `colonne triable`
};
var $7c18ba27b86d3308$exports = {};
$7c18ba27b86d3308$exports = {
  "ascending": `עולה`,
  "ascendingSort": (args) => `מוין לפי עמודה ${args.columnName} בסדר עולה`,
  "columnSize": (args) => `${args.value} פיקסלים`,
  "descending": `יורד`,
  "descendingSort": (args) => `מוין לפי עמודה ${args.columnName} בסדר יורד`,
  "resizerDescription": `הקש Enter כדי לשנות את הגודל`,
  "select": `בחר`,
  "selectAll": `בחר הכול`,
  "sortable": `עמודה שניתן למיין`
};
var $2cb40998e20e8a46$exports = {};
$2cb40998e20e8a46$exports = {
  "ascending": `rastući`,
  "ascendingSort": (args) => `razvrstano po stupcima ${args.columnName} rastućem redoslijedom`,
  "columnSize": (args) => `${args.value} piksela`,
  "descending": `padajući`,
  "descendingSort": (args) => `razvrstano po stupcima ${args.columnName} padajućim redoslijedom`,
  "resizerDescription": `Pritisnite Enter da biste započeli promenu veličine`,
  "select": `Odaberite`,
  "selectAll": `Odaberite sve`,
  "sortable": `stupac koji se može razvrstati`
};
var $189e23eec1d6aa3a$exports = {};
$189e23eec1d6aa3a$exports = {
  "ascending": `növekvő`,
  "ascendingSort": (args) => `rendezve a(z) ${args.columnName} oszlop szerint, növekvő sorrendben`,
  "columnSize": (args) => `${args.value} képpont`,
  "descending": `csökkenő`,
  "descendingSort": (args) => `rendezve a(z) ${args.columnName} oszlop szerint, csökkenő sorrendben`,
  "resizerDescription": `Nyomja le az Enter billentyűt az átméretezés megkezdéséhez`,
  "select": `Kijelölés`,
  "selectAll": `Összes kijelölése`,
  "sortable": `rendezendő oszlop`
};
var $3c5ec8e4f015dfd0$exports = {};
$3c5ec8e4f015dfd0$exports = {
  "ascending": `crescente`,
  "ascendingSort": (args) => `in ordine crescente in base alla colonna ${args.columnName}`,
  "columnSize": (args) => `${args.value} pixel`,
  "descending": `decrescente`,
  "descendingSort": (args) => `in ordine decrescente in base alla colonna ${args.columnName}`,
  "resizerDescription": `Premi Invio per iniziare a ridimensionare`,
  "select": `Seleziona`,
  "selectAll": `Seleziona tutto`,
  "sortable": `colonna ordinabile`
};
var $d021d50e6b315ebb$exports = {};
$d021d50e6b315ebb$exports = {
  "ascending": `昇順`,
  "ascendingSort": (args) => `列 ${args.columnName} を昇順で並べ替え`,
  "columnSize": (args) => `${args.value} ピクセル`,
  "descending": `降順`,
  "descendingSort": (args) => `列 ${args.columnName} を降順で並べ替え`,
  "resizerDescription": `Enter キーを押してサイズ変更を開始`,
  "select": `選択`,
  "selectAll": `すべて選択`,
  "sortable": `並べ替え可能な列`
};
var $52535c35c24ec937$exports = {};
$52535c35c24ec937$exports = {
  "ascending": `오름차순`,
  "ascendingSort": (args) => `${args.columnName} 열을 기준으로 오름차순으로 정렬됨`,
  "columnSize": (args) => `${args.value} 픽셀`,
  "descending": `내림차순`,
  "descendingSort": (args) => `${args.columnName} 열을 기준으로 내림차순으로 정렬됨`,
  "resizerDescription": `크기 조정을 시작하려면 Enter를 누르세요.`,
  "select": `선택`,
  "selectAll": `모두 선택`,
  "sortable": `정렬 가능한 열`
};
var $b37ee03672edfd1d$exports = {};
$b37ee03672edfd1d$exports = {
  "ascending": `didėjančia tvarka`,
  "ascendingSort": (args) => `surikiuota pagal stulpelį ${args.columnName} didėjančia tvarka`,
  "columnSize": (args) => `${args.value} piks.`,
  "descending": `mažėjančia tvarka`,
  "descendingSort": (args) => `surikiuota pagal stulpelį ${args.columnName} mažėjančia tvarka`,
  "resizerDescription": `Paspauskite „Enter“, kad pradėtumėte keisti dydį`,
  "select": `Pasirinkti`,
  "selectAll": `Pasirinkti viską`,
  "sortable": `rikiuojamas stulpelis`
};
var $c7df6686b4189d56$exports = {};
$c7df6686b4189d56$exports = {
  "ascending": `augošā secībā`,
  "ascendingSort": (args) => `kārtots pēc kolonnas ${args.columnName} augošā secībā`,
  "columnSize": (args) => `${args.value} pikseļi`,
  "descending": `dilstošā secībā`,
  "descendingSort": (args) => `kārtots pēc kolonnas ${args.columnName} dilstošā secībā`,
  "resizerDescription": `Nospiediet Enter, lai sāktu izmēru mainīšanu`,
  "select": `Atlasīt`,
  "selectAll": `Atlasīt visu`,
  "sortable": `kārtojamā kolonna`
};
var $da07fe8ec87e6b68$exports = {};
$da07fe8ec87e6b68$exports = {
  "ascending": `stigende`,
  "ascendingSort": (args) => `sortert etter kolonne ${args.columnName} i stigende rekkefølge`,
  "columnSize": (args) => `${args.value} piksler`,
  "descending": `synkende`,
  "descendingSort": (args) => `sortert etter kolonne ${args.columnName} i synkende rekkefølge`,
  "resizerDescription": `Trykk på Enter for å starte størrelsesendring`,
  "select": `Velg`,
  "selectAll": `Velg alle`,
  "sortable": `kolonne som kan sorteres`
};
var $64b7e390f5791490$exports = {};
$64b7e390f5791490$exports = {
  "ascending": `oplopend`,
  "ascendingSort": (args) => `gesorteerd in oplopende volgorde in kolom ${args.columnName}`,
  "columnSize": (args) => `${args.value} pixels`,
  "descending": `aflopend`,
  "descendingSort": (args) => `gesorteerd in aflopende volgorde in kolom ${args.columnName}`,
  "resizerDescription": `Druk op Enter om het formaat te wijzigen`,
  "select": `Selecteren`,
  "selectAll": `Alles selecteren`,
  "sortable": `sorteerbare kolom`
};
var $2a03621e773f1678$exports = {};
$2a03621e773f1678$exports = {
  "ascending": `rosnąco`,
  "ascendingSort": (args) => `posortowano według kolumny ${args.columnName} w porządku rosnącym`,
  "columnSize": (args) => `Liczba pikseli: ${args.value}`,
  "descending": `malejąco`,
  "descendingSort": (args) => `posortowano według kolumny ${args.columnName} w porządku malejącym`,
  "resizerDescription": `Naciśnij Enter, aby rozpocząć zmienianie rozmiaru`,
  "select": `Zaznacz`,
  "selectAll": `Zaznacz wszystko`,
  "sortable": `kolumna z możliwością sortowania`
};
var $0a79c0aba9e5ecc6$exports = {};
$0a79c0aba9e5ecc6$exports = {
  "ascending": `crescente`,
  "ascendingSort": (args) => `classificado pela coluna ${args.columnName} em ordem crescente`,
  "columnSize": (args) => `${args.value} pixels`,
  "descending": `decrescente`,
  "descendingSort": (args) => `classificado pela coluna ${args.columnName} em ordem decrescente`,
  "resizerDescription": `Pressione Enter para começar a redimensionar`,
  "select": `Selecionar`,
  "selectAll": `Selecionar tudo`,
  "sortable": `coluna classificável`
};
var $de7b4d0f7dc86fc8$exports = {};
$de7b4d0f7dc86fc8$exports = {
  "ascending": `ascendente`,
  "ascendingSort": (args) => `Ordenar por coluna ${args.columnName} em ordem ascendente`,
  "columnSize": (args) => `${args.value} pixels`,
  "descending": `descendente`,
  "descendingSort": (args) => `Ordenar por coluna ${args.columnName} em ordem descendente`,
  "resizerDescription": `Prima Enter para iniciar o redimensionamento`,
  "select": `Selecionar`,
  "selectAll": `Selecionar tudo`,
  "sortable": `Coluna ordenável`
};
var $28ea7e849d77bd1c$exports = {};
$28ea7e849d77bd1c$exports = {
  "ascending": `crescătoare`,
  "ascendingSort": (args) => `sortate după coloana ${args.columnName} în ordine crescătoare`,
  "columnSize": (args) => `${args.value} pixeli`,
  "descending": `descrescătoare`,
  "descendingSort": (args) => `sortate după coloana ${args.columnName} în ordine descrescătoare`,
  "resizerDescription": `Apăsați pe Enter pentru a începe redimensionarea`,
  "select": `Selectare`,
  "selectAll": `Selectare totală`,
  "sortable": `coloană sortabilă`
};
var $9a09321cf046b187$exports = {};
$9a09321cf046b187$exports = {
  "ascending": `возрастание`,
  "ascendingSort": (args) => `сортировать столбец ${args.columnName} в порядке возрастания`,
  "columnSize": (args) => `${args.value} пикс.`,
  "descending": `убывание`,
  "descendingSort": (args) => `сортировать столбец ${args.columnName} в порядке убывания`,
  "resizerDescription": `Нажмите клавишу Enter для начала изменения размеров`,
  "select": `Выбрать`,
  "selectAll": `Выбрать все`,
  "sortable": `сортируемый столбец`
};
var $5afe469a63fcac7b$exports = {};
$5afe469a63fcac7b$exports = {
  "ascending": `vzostupne`,
  "ascendingSort": (args) => `zoradené zostupne podľa stĺpca ${args.columnName}`,
  "columnSize": (args) => `Počet pixelov: ${args.value}`,
  "descending": `zostupne`,
  "descendingSort": (args) => `zoradené zostupne podľa stĺpca ${args.columnName}`,
  "resizerDescription": `Stlačením klávesu Enter začnete zmenu veľkosti`,
  "select": `Vybrať`,
  "selectAll": `Vybrať všetko`,
  "sortable": `zoraditeľný stĺpec`
};
var $2956757ac31a7ce2$exports = {};
$2956757ac31a7ce2$exports = {
  "ascending": `naraščajoče`,
  "ascendingSort": (args) => `razvrščeno po stolpcu ${args.columnName} v naraščajočem vrstnem redu`,
  "columnSize": (args) => `${args.value} slikovnih pik`,
  "descending": `padajoče`,
  "descendingSort": (args) => `razvrščeno po stolpcu ${args.columnName} v padajočem vrstnem redu`,
  "resizerDescription": `Pritisnite tipko Enter da začnete spreminjati velikost`,
  "select": `Izberite`,
  "selectAll": `Izberite vse`,
  "sortable": `razvrstljivi stolpec`
};
var $cedee0e66b175529$exports = {};
$cedee0e66b175529$exports = {
  "ascending": `rastući`,
  "ascendingSort": (args) => `sortirano po kolonama ${args.columnName} padajućim redosledom`,
  "columnSize": (args) => `${args.value} piksela`,
  "descending": `padajući`,
  "descendingSort": (args) => `sortirano po kolonama ${args.columnName} padajućim redosledom`,
  "resizerDescription": `Pritisnite Enter da biste započeli promenu veličine`,
  "select": `Izaberite`,
  "selectAll": `Izaberite sve`,
  "sortable": `kolona koja se može sortirati`
};
var $6db19998ba4427da$exports = {};
$6db19998ba4427da$exports = {
  "ascending": `stigande`,
  "ascendingSort": (args) => `sorterat på kolumn ${args.columnName} i stigande ordning`,
  "columnSize": (args) => `${args.value} pixlar`,
  "descending": `fallande`,
  "descendingSort": (args) => `sorterat på kolumn ${args.columnName} i fallande ordning`,
  "resizerDescription": `Tryck på Retur för att börja ändra storlek`,
  "select": `Markera`,
  "selectAll": `Markera allt`,
  "sortable": `sorterbar kolumn`
};
var $166b7c9cc1adb1a1$exports = {};
$166b7c9cc1adb1a1$exports = {
  "ascending": `artan sırada`,
  "ascendingSort": (args) => `${args.columnName} sütuna göre artan düzende sırala`,
  "columnSize": (args) => `${args.value} piksel`,
  "descending": `azalan sırada`,
  "descendingSort": (args) => `${args.columnName} sütuna göre azalan düzende sırala`,
  "resizerDescription": `Yeniden boyutlandırmak için Enter'a basın`,
  "select": `Seç`,
  "selectAll": `Tümünü Seç`,
  "sortable": `Sıralanabilir sütun`
};
var $c7ab180b401e49ff$exports = {};
$c7ab180b401e49ff$exports = {
  "ascending": `висхідний`,
  "ascendingSort": (args) => `відсортовано за стовпцем ${args.columnName} у висхідному порядку`,
  "columnSize": (args) => `${args.value} пікс.`,
  "descending": `низхідний`,
  "descendingSort": (args) => `відсортовано за стовпцем ${args.columnName} у низхідному порядку`,
  "resizerDescription": `Натисніть Enter, щоб почати зміну розміру`,
  "select": `Вибрати`,
  "selectAll": `Вибрати все`,
  "sortable": `сортувальний стовпець`
};
var $1648ec00941567f3$exports = {};
$1648ec00941567f3$exports = {
  "ascending": `升序`,
  "ascendingSort": (args) => `按列 ${args.columnName} 升序排序`,
  "columnSize": (args) => `${args.value} 像素`,
  "descending": `降序`,
  "descendingSort": (args) => `按列 ${args.columnName} 降序排序`,
  "resizerDescription": `按“输入”键开始调整大小。`,
  "select": `选择`,
  "selectAll": `全选`,
  "sortable": `可排序的列`
};
var $b26f22384b3c1526$exports = {};
$b26f22384b3c1526$exports = {
  "ascending": `遞增`,
  "ascendingSort": (args) => `已依據「${args.columnName}」欄遞增排序`,
  "columnSize": (args) => `${args.value} 像素`,
  "descending": `遞減`,
  "descendingSort": (args) => `已依據「${args.columnName}」欄遞減排序`,
  "resizerDescription": `按 Enter 鍵以開始調整大小`,
  "select": `選取`,
  "selectAll": `全選`,
  "sortable": `可排序的欄`
};
$7476b46781682bf5$exports = {
  "ar-AE": $ce3de3ff2fd66848$exports,
  "bg-BG": $cb80dcce530985b9$exports,
  "cs-CZ": $68ac86749db4c0fb$exports,
  "da-DK": $9a6cbac08487e661$exports,
  "de-DE": $c963661d89486e72$exports,
  "el-GR": $ac03861c6e8605f4$exports,
  "en-US": $09e6b82e0d6e466a$exports,
  "es-ES": $8cc39eb66c2bf220$exports,
  "et-EE": $4e11db3c25a38112$exports,
  "fi-FI": $da1e751a92575e02$exports,
  "fr-FR": $1b5d6c6c47d55106$exports,
  "he-IL": $7c18ba27b86d3308$exports,
  "hr-HR": $2cb40998e20e8a46$exports,
  "hu-HU": $189e23eec1d6aa3a$exports,
  "it-IT": $3c5ec8e4f015dfd0$exports,
  "ja-JP": $d021d50e6b315ebb$exports,
  "ko-KR": $52535c35c24ec937$exports,
  "lt-LT": $b37ee03672edfd1d$exports,
  "lv-LV": $c7df6686b4189d56$exports,
  "nb-NO": $da07fe8ec87e6b68$exports,
  "nl-NL": $64b7e390f5791490$exports,
  "pl-PL": $2a03621e773f1678$exports,
  "pt-BR": $0a79c0aba9e5ecc6$exports,
  "pt-PT": $de7b4d0f7dc86fc8$exports,
  "ro-RO": $28ea7e849d77bd1c$exports,
  "ru-RU": $9a09321cf046b187$exports,
  "sk-SK": $5afe469a63fcac7b$exports,
  "sl-SI": $2956757ac31a7ce2$exports,
  "sr-SP": $cedee0e66b175529$exports,
  "sv-SE": $6db19998ba4427da$exports,
  "tr-TR": $166b7c9cc1adb1a1$exports,
  "uk-UA": $c7ab180b401e49ff$exports,
  "zh-CN": $1648ec00941567f3$exports,
  "zh-TW": $b26f22384b3c1526$exports
};
var $0ba3c81c7f1caedd$export$da43f8f5cb04028d = class extends (0, $d1c300d9c497e402$export$de9feff04fda126e) {
  isCell(node) {
    return node.type === "cell" || node.type === "rowheader" || node.type === "column";
  }
  getKeyBelow(key) {
    let startItem = this.collection.getItem(key);
    if (!startItem)
      return;
    if (startItem.type === "column") {
      let child = (0, $c5a24bc478652b5f$export$fbdeaa6a76694f71)((0, $c5a24bc478652b5f$export$1005530eda016c13)(startItem, this.collection));
      if (child)
        return child.key;
      let firstKey = this.getFirstKey();
      if (firstKey == null)
        return;
      let firstItem = this.collection.getItem(firstKey);
      return (0, $c5a24bc478652b5f$export$5f3398f8733f90e2)((0, $c5a24bc478652b5f$export$1005530eda016c13)(firstItem, this.collection), startItem.index).key;
    }
    return super.getKeyBelow(key);
  }
  getKeyAbove(key) {
    let startItem = this.collection.getItem(key);
    if (!startItem)
      return;
    if (startItem.type === "column") {
      let parent = this.collection.getItem(startItem.parentKey);
      if (parent && parent.type === "column")
        return parent.key;
      return;
    }
    let superKey = super.getKeyAbove(key);
    if (superKey != null && this.collection.getItem(superKey).type !== "headerrow")
      return superKey;
    if (this.isCell(startItem))
      return this.collection.columns[startItem.index].key;
    return this.collection.columns[0].key;
  }
  findNextColumnKey(column) {
    let key = this.findNextKey(column.key, (item) => item.type === "column");
    if (key != null)
      return key;
    let row = this.collection.headerRows[column.level];
    for (let item of (0, $c5a24bc478652b5f$export$1005530eda016c13)(row, this.collection)) {
      if (item.type === "column")
        return item.key;
    }
  }
  findPreviousColumnKey(column) {
    let key = this.findPreviousKey(column.key, (item) => item.type === "column");
    if (key != null)
      return key;
    let row = this.collection.headerRows[column.level];
    let childNodes = [
      ...(0, $c5a24bc478652b5f$export$1005530eda016c13)(row, this.collection)
    ];
    for (let i = childNodes.length - 1; i >= 0; i--) {
      let item = childNodes[i];
      if (item.type === "column")
        return item.key;
    }
  }
  getKeyRightOf(key) {
    let item = this.collection.getItem(key);
    if (!item)
      return;
    if (item.type === "column")
      return this.direction === "rtl" ? this.findPreviousColumnKey(item) : this.findNextColumnKey(item);
    return super.getKeyRightOf(key);
  }
  getKeyLeftOf(key) {
    let item = this.collection.getItem(key);
    if (!item)
      return;
    if (item.type === "column")
      return this.direction === "rtl" ? this.findNextColumnKey(item) : this.findPreviousColumnKey(item);
    return super.getKeyLeftOf(key);
  }
  getKeyForSearch(search, fromKey) {
    if (!this.collator)
      return null;
    let collection = this.collection;
    let key = fromKey !== null && fromKey !== void 0 ? fromKey : this.getFirstKey();
    if (key == null)
      return null;
    let startItem = collection.getItem(key);
    if (startItem.type === "cell")
      key = startItem.parentKey;
    let hasWrapped = false;
    while (key != null) {
      let item = collection.getItem(key);
      for (let cell of (0, $c5a24bc478652b5f$export$1005530eda016c13)(item, this.collection)) {
        let column = collection.columns[cell.index];
        if (collection.rowHeaderColumnKeys.has(column.key) && cell.textValue) {
          let substring = cell.textValue.slice(0, search.length);
          if (this.collator.compare(substring, search) === 0) {
            let fromItem = fromKey != null ? collection.getItem(fromKey) : startItem;
            return fromItem.type === "cell" ? cell.key : item.key;
          }
        }
      }
      key = this.getKeyBelow(key);
      if (key == null && !hasWrapped) {
        key = this.getFirstKey();
        hasWrapped = true;
      }
    }
    return null;
  }
};
function $6e31608fbba75bab$export$25bceaac3c7e4dc7(props, state, ref) {
  let { keyboardDelegate, isVirtualized, layout } = props;
  let collator = (0, $325a3faab7a68acd$export$a16aca283550c30d)({
    usage: "search",
    sensitivity: "base"
  });
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let disabledBehavior = state.selectionManager.disabledBehavior;
  let delegate = (0, import_react27.useMemo)(() => keyboardDelegate || new (0, $0ba3c81c7f1caedd$export$da43f8f5cb04028d)({
    collection: state.collection,
    disabledKeys: disabledBehavior === "selection" ? /* @__PURE__ */ new Set() : state.disabledKeys,
    ref,
    direction,
    collator,
    layout
  }), [
    keyboardDelegate,
    state.collection,
    state.disabledKeys,
    disabledBehavior,
    ref,
    direction,
    collator,
    layout
  ]);
  let id = (0, $bdb11010cef70236$export$f680877a34711e37)(props.id);
  (0, $2140fb2337097f2d$export$552312adfd451dab).set(state, id);
  let { gridProps } = (0, $83c6e2eafa584c67$export$f6b86a04e5d66d90)({
    ...props,
    id,
    keyboardDelegate: delegate
  }, state, ref);
  if (isVirtualized)
    gridProps["aria-rowcount"] = state.collection.size + state.collection.headerRows.length;
  if ((0, $f4e2df6bd15f8569$export$1b00cb14a96194e6)() && "expandedKeys" in state)
    gridProps.role = "treegrid";
  let { column, direction: sortDirection } = state.sortDescriptor || {};
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault12($7476b46781682bf5$exports)));
  let sortDescription = (0, import_react27.useMemo)(() => {
    var _state_collection_columns_find;
    let columnName = (_state_collection_columns_find = state.collection.columns.find((c) => c.key === column)) === null || _state_collection_columns_find === void 0 ? void 0 : _state_collection_columns_find.textValue;
    return sortDirection && column ? stringFormatter.format(`${sortDirection}Sort`, {
      columnName
    }) : void 0;
  }, [
    sortDirection,
    column,
    state.collection.columns
  ]);
  let descriptionProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(sortDescription);
  (0, $4f58c5f72bcf79f7$export$496315a1608d9602)(() => {
    (0, $319e236875307eab$export$a9b970dcc4ae71a9)(sortDescription, "assertive", 500);
  }, [
    sortDescription
  ]);
  return {
    gridProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(gridProps, descriptionProps, {
      // merge sort description with long press information
      "aria-describedby": [
        descriptionProps["aria-describedby"],
        gridProps["aria-describedby"]
      ].filter(Boolean).join(" ")
    })
  };
}
function $f329116d8ad0aba0$export$9514819a8c81e960(props, state, ref) {
  var _state_sortDescriptor, _state_sortDescriptor1;
  let { node } = props;
  let allowsSorting = node.props.allowsSorting;
  let { gridCellProps } = (0, $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c)({
    ...props,
    focusMode: "child"
  }, state, ref);
  let isSelectionCellDisabled = node.props.isSelectionCell && state.selectionManager.selectionMode === "single";
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    isDisabled: !allowsSorting || isSelectionCellDisabled,
    onPress() {
      state.sort(node.key);
    },
    ref
  });
  let { focusableProps } = (0, $e6afbd83fe6ebbd2$export$4c014de7c8940b4c)({}, ref);
  let ariaSort = null;
  let isSortedColumn = ((_state_sortDescriptor = state.sortDescriptor) === null || _state_sortDescriptor === void 0 ? void 0 : _state_sortDescriptor.column) === node.key;
  let sortDirection = (_state_sortDescriptor1 = state.sortDescriptor) === null || _state_sortDescriptor1 === void 0 ? void 0 : _state_sortDescriptor1.direction;
  if (node.props.allowsSorting && !(0, $c87311424ea30a05$export$a11b0059900ceec8)())
    ariaSort = isSortedColumn ? sortDirection : "none";
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault12($7476b46781682bf5$exports)));
  let sortDescription;
  if (allowsSorting) {
    sortDescription = `${stringFormatter.format("sortable")}`;
    if (isSortedColumn && sortDirection && (0, $c87311424ea30a05$export$a11b0059900ceec8)())
      sortDescription = `${sortDescription}, ${stringFormatter.format(sortDirection)}`;
  }
  let descriptionProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(sortDescription);
  return {
    columnHeaderProps: {
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(
        gridCellProps,
        pressProps,
        focusableProps,
        descriptionProps,
        // If the table is empty, make all column headers untabbable or programatically focusable
        state.collection.size === 0 && {
          tabIndex: null
        }
      ),
      role: "columnheader",
      id: (0, $2140fb2337097f2d$export$37cd4213f2ad742e)(state, node.key),
      "aria-colspan": node.colspan && node.colspan > 1 ? node.colspan : null,
      "aria-sort": ariaSort
    }
  };
}
var $b2db214c022798eb$var$EXPANSION_KEYS = {
  expand: {
    ltr: "ArrowRight",
    rtl: "ArrowLeft"
  },
  "collapse": {
    ltr: "ArrowLeft",
    rtl: "ArrowRight"
  }
};
function $b2db214c022798eb$export$7f2f6ae19e707aa5(props, state, ref) {
  let { node, isVirtualized } = props;
  let { rowProps, ...states } = (0, $4159a7a9cbb0cc18$export$96357d5a73f686fa)(props, state, ref);
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  if (isVirtualized && !((0, $f4e2df6bd15f8569$export$1b00cb14a96194e6)() && "expandedKeys" in state))
    rowProps["aria-rowindex"] = node.index + 1 + state.collection.headerRows.length;
  else
    delete rowProps["aria-rowindex"];
  let treeGridRowProps = {};
  if ((0, $f4e2df6bd15f8569$export$1b00cb14a96194e6)() && "expandedKeys" in state) {
    let treeNode = state.keyMap.get(node.key);
    if (treeNode != null) {
      var _treeNode_props, _treeNode_props1, _treeNode_props_children;
      let hasChildRows = ((_treeNode_props = treeNode.props) === null || _treeNode_props === void 0 ? void 0 : _treeNode_props.UNSTABLE_childItems) || ((_treeNode_props1 = treeNode.props) === null || _treeNode_props1 === void 0 ? void 0 : (_treeNode_props_children = _treeNode_props1.children) === null || _treeNode_props_children === void 0 ? void 0 : _treeNode_props_children.length) > state.userColumnCount;
      treeGridRowProps = {
        onKeyDown: (e) => {
          if (e.key === $b2db214c022798eb$var$EXPANSION_KEYS["expand"][direction] && state.selectionManager.focusedKey === treeNode.key && hasChildRows && state.expandedKeys !== "all" && !state.expandedKeys.has(treeNode.key)) {
            state.toggleKey(treeNode.key);
            e.stopPropagation();
          } else if (e.key === $b2db214c022798eb$var$EXPANSION_KEYS["collapse"][direction] && state.selectionManager.focusedKey === treeNode.key && hasChildRows && (state.expandedKeys === "all" || state.expandedKeys.has(treeNode.key))) {
            state.toggleKey(treeNode.key);
            e.stopPropagation();
          }
        },
        "aria-expanded": hasChildRows ? state.expandedKeys === "all" || state.expandedKeys.has(node.key) : void 0,
        "aria-level": treeNode.level,
        "aria-posinset": treeNode.indexOfType + 1,
        "aria-setsize": treeNode.level > 1 ? (0, $c5a24bc478652b5f$export$7475b2c64539e4cf)(state.keyMap.get(treeNode === null || treeNode === void 0 ? void 0 : treeNode.parentKey).childNodes).indexOfType + 1 : (0, $c5a24bc478652b5f$export$7475b2c64539e4cf)(state.keyMap.get(state.collection.body.key).childNodes).indexOfType + 1
      };
    }
  }
  return {
    rowProps: {
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(rowProps, treeGridRowProps),
      "aria-labelledby": (0, $2140fb2337097f2d$export$85069b70317f543)(state, node.key)
    },
    ...states
  };
}
function $f917ee10f4c32dab$export$1b95a7d2d517b841(props, state, ref) {
  let { node, isVirtualized } = props;
  let rowProps = {
    role: "row"
  };
  if (isVirtualized && !((0, $f4e2df6bd15f8569$export$1b00cb14a96194e6)() && "expandedKeys" in state))
    rowProps["aria-rowindex"] = node.index + 1;
  return {
    rowProps
  };
}
function $7713593715703b24$export$49571c903d73624c(props, state, ref) {
  let { gridCellProps, isPressed } = (0, $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c)(props, state, ref);
  let columnKey = props.node.column.key;
  if (state.collection.rowHeaderColumnKeys.has(columnKey)) {
    gridCellProps.role = "rowheader";
    gridCellProps.id = (0, $2140fb2337097f2d$export$19baff3266315d44)(state, props.node.parentKey, columnKey);
  }
  return {
    gridCellProps,
    isPressed
  };
}
function $2a795c53a101c542$export$16ea7f650bd7c1bb(props, state) {
  let { key } = props;
  const { checkboxProps } = (0, $7cb39d07f245a780$export$70e2eed1a92976ad)(props, state);
  return {
    checkboxProps: {
      ...checkboxProps,
      "aria-labelledby": `${checkboxProps.id} ${(0, $2140fb2337097f2d$export$85069b70317f543)(state, key)}`
    }
  };
}
function $2a795c53a101c542$export$1003db6a7e384b99(state) {
  let { isEmpty, isSelectAll, selectionMode } = state.selectionManager;
  const stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault12($7476b46781682bf5$exports)));
  return {
    checkboxProps: {
      "aria-label": stringFormatter.format(selectionMode === "single" ? "select" : "selectAll"),
      isSelected: isSelectAll,
      isDisabled: selectionMode !== "multiple" || state.collection.size === 0,
      isIndeterminate: !isEmpty && !isSelectAll,
      onChange: () => state.selectionManager.toggleSelectAll()
    }
  };
}
function $e91ef4e5004e3774$export$52994e973806c219(props, state, ref) {
  let { column: item, triggerRef, isDisabled, onResizeStart, onResize, onResizeEnd, "aria-label": ariaLabel } = props;
  const stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault12($7476b46781682bf5$exports)));
  let id = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let isResizing = state.resizingColumn === item.key;
  let isResizingRef = (0, import_react27.useRef)(isResizing);
  let lastSize = (0, import_react27.useRef)(null);
  let wasFocusedOnResizeStart = (0, import_react27.useRef)(false);
  let editModeEnabled = state.tableState.isKeyboardNavigationDisabled;
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let { keyboardProps } = (0, $46d819fcbaf35654$export$8f71654801c2f7cd)({
    onKeyDown: (e) => {
      if (editModeEnabled) {
        if (e.key === "Escape" || e.key === "Enter" || e.key === " " || e.key === "Tab") {
          e.preventDefault();
          endResize(item);
        }
      } else {
        e.continuePropagation();
        if (e.key === "Enter")
          startResize(item);
      }
    }
  });
  let startResize = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((item2) => {
    if (!isResizingRef.current) {
      lastSize.current = state.updateResizedColumns(item2.key, state.getColumnWidth(item2.key));
      state.startResize(item2.key);
      state.tableState.setKeyboardNavigationDisabled(true);
      onResizeStart === null || onResizeStart === void 0 ? void 0 : onResizeStart(lastSize.current);
    }
    isResizingRef.current = true;
  });
  let resize = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((item2, newWidth) => {
    let sizes = state.updateResizedColumns(item2.key, newWidth);
    onResize === null || onResize === void 0 ? void 0 : onResize(sizes);
    lastSize.current = sizes;
  });
  let endResize = (0, $8ae05eaa5c114e9c$export$7f54fc3180508a52)((item2) => {
    if (isResizingRef.current) {
      if (lastSize.current == null)
        lastSize.current = state.updateResizedColumns(item2.key, state.getColumnWidth(item2.key));
      state.endResize();
      state.tableState.setKeyboardNavigationDisabled(false);
      onResizeEnd === null || onResizeEnd === void 0 ? void 0 : onResizeEnd(lastSize.current);
      isResizingRef.current = false;
      if ((triggerRef === null || triggerRef === void 0 ? void 0 : triggerRef.current) && !wasFocusedOnResizeStart.current)
        (0, $6a99195332edec8b$export$80f3e147d781571c)(triggerRef.current);
    }
    lastSize.current = null;
  });
  const columnResizeWidthRef = (0, import_react27.useRef)(0);
  const { moveProps } = (0, $e8a7022cf87cba2a$export$36da96379f79f245)({
    onMoveStart() {
      columnResizeWidthRef.current = state.getColumnWidth(item.key);
      startResize(item);
    },
    onMove(e) {
      let { deltaX, deltaY, pointerType } = e;
      if (direction === "rtl")
        deltaX *= -1;
      if (pointerType === "keyboard") {
        if (deltaY !== 0 && deltaX === 0)
          deltaX = deltaY * -1;
        deltaX *= 10;
      }
      if (deltaX !== 0) {
        columnResizeWidthRef.current += deltaX;
        resize(item, columnResizeWidthRef.current);
      }
    },
    onMoveEnd(e) {
      let { pointerType } = e;
      columnResizeWidthRef.current = 0;
      if (pointerType === "mouse" || pointerType === "touch" && wasFocusedOnResizeStart.current)
        endResize(item);
    }
  });
  let onKeyDown = (0, import_react27.useCallback)((e) => {
    if (editModeEnabled)
      moveProps.onKeyDown(e);
  }, [
    editModeEnabled,
    moveProps
  ]);
  let min = Math.floor(state.getColumnMinWidth(item.key));
  let max = Math.floor(state.getColumnMaxWidth(item.key));
  if (max === Infinity)
    max = Number.MAX_SAFE_INTEGER;
  let value = Math.floor(state.getColumnWidth(item.key));
  let modality = (0, $507fabe10e71c6fb$export$98e20ec92f614cfe)();
  if (modality === "virtual" && typeof window !== "undefined" && "ontouchstart" in window)
    modality = "touch";
  let description = (triggerRef === null || triggerRef === void 0 ? void 0 : triggerRef.current) == null && (modality === "keyboard" || modality === "virtual") && !isResizing ? stringFormatter.format("resizerDescription") : void 0;
  let descriptionProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(description);
  let ariaProps = {
    "aria-label": ariaLabel,
    "aria-orientation": "horizontal",
    "aria-labelledby": `${id} ${(0, $2140fb2337097f2d$export$37cd4213f2ad742e)(state.tableState, item.key)}`,
    "aria-valuetext": stringFormatter.format("columnSize", {
      value
    }),
    "type": "range",
    min,
    max,
    value,
    ...descriptionProps
  };
  const focusInput = (0, import_react27.useCallback)(() => {
    if (ref.current)
      (0, $6a99195332edec8b$export$80f3e147d781571c)(ref.current);
  }, [
    ref
  ]);
  let resizingColumn = state.resizingColumn;
  let prevResizingColumn = (0, import_react27.useRef)(null);
  (0, import_react27.useEffect)(() => {
    if (prevResizingColumn.current !== resizingColumn && resizingColumn != null && resizingColumn === item.key) {
      wasFocusedOnResizeStart.current = document.activeElement === ref.current;
      startResize(item);
      let timeout = setTimeout(() => focusInput(), 0);
      let VOTimeout = setTimeout(focusInput, 400);
      return () => {
        clearTimeout(timeout);
        clearTimeout(VOTimeout);
      };
    }
    prevResizingColumn.current = resizingColumn;
  }, [
    resizingColumn,
    item,
    focusInput,
    ref,
    startResize
  ]);
  let onChange = (e) => {
    let currentWidth = state.getColumnWidth(item.key);
    let nextValue = parseFloat(e.target.value);
    if (nextValue > currentWidth)
      nextValue = currentWidth + 10;
    else
      nextValue = currentWidth - 10;
    resize(item, nextValue);
  };
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    onPressStart: (e) => {
      if (e.ctrlKey || e.altKey || e.metaKey || e.shiftKey || e.pointerType === "keyboard")
        return;
      if (e.pointerType === "virtual" && state.resizingColumn != null) {
        endResize(item);
        return;
      }
      focusInput();
      if (e.pointerType !== "virtual")
        startResize(item);
    },
    onPress: (e) => {
      if ((e.pointerType === "touch" && wasFocusedOnResizeStart.current || e.pointerType === "mouse") && state.resizingColumn != null)
        endResize(item);
    }
  });
  let { visuallyHiddenProps } = (0, $5c3e21d68f1c4674$export$a966af930f325cab)();
  return {
    resizerProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(keyboardProps, {
      ...moveProps,
      onKeyDown
    }, pressProps, {
      style: {
        touchAction: "none"
      }
    }),
    inputProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(visuallyHiddenProps, {
      id,
      onBlur: () => {
        endResize(item);
      },
      onChange,
      disabled: isDisabled
    }, ariaProps),
    isResizing
  };
}
function $0047e6c294ea075f$export$6fb1613bd7b28198() {
  return (0, $e45487f8ba1cbdbf$export$d3037f5d3f3e51bf)();
}

// node_modules/.pnpm/@react-aria+tabs@3.6.2_react@18.2.0/node_modules/@react-aria/tabs/dist/module.js
var import_react28 = __toESM(require_react());
var $99b62ae3ff97ec45$export$c5f62239608282b6 = /* @__PURE__ */ new WeakMap();
function $99b62ae3ff97ec45$export$567fc7097e064344(state, key, role) {
  if (typeof key === "string")
    key = key.replace(/\s+/g, "");
  let baseId = $99b62ae3ff97ec45$export$c5f62239608282b6.get(state);
  return `${baseId}-${role}-${key}`;
}
function $0175d55c2a017ebc$export$fdf4756d5b8ef90a(props, state, ref) {
  let { key, isDisabled: propsDisabled, shouldSelectOnPressUp } = props;
  let { selectionManager: manager, selectedKey } = state;
  let isSelected = key === selectedKey;
  let isDisabled = propsDisabled || state.isDisabled || state.disabledKeys.has(key);
  let { itemProps, isPressed } = (0, $880e95eb8b93ba9a$export$ecf600387e221c37)({
    selectionManager: manager,
    key,
    ref,
    isDisabled,
    shouldSelectOnPressUp
  });
  let tabId = (0, $99b62ae3ff97ec45$export$567fc7097e064344)(state, key, "tab");
  let tabPanelId = (0, $99b62ae3ff97ec45$export$567fc7097e064344)(state, key, "tabpanel");
  let { tabIndex } = itemProps;
  return {
    tabProps: {
      ...itemProps,
      id: tabId,
      "aria-selected": isSelected,
      "aria-disabled": isDisabled || void 0,
      "aria-controls": isSelected ? tabPanelId : void 0,
      tabIndex: isDisabled ? void 0 : tabIndex,
      role: "tab"
    },
    isSelected,
    isDisabled,
    isPressed
  };
}
function $34bce698202e07cb$export$fae0121b5afe572d(props, state, ref) {
  let tabIndex = (0, $83013635b024ae3d$export$eac1895992b9f3d6)(ref) ? void 0 : 0;
  var _props_id;
  const id = (0, $99b62ae3ff97ec45$export$567fc7097e064344)(state, (_props_id = props.id) !== null && _props_id !== void 0 ? _props_id : state === null || state === void 0 ? void 0 : state.selectedKey, "tabpanel");
  const tabPanelProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    ...props,
    id,
    "aria-labelledby": (0, $99b62ae3ff97ec45$export$567fc7097e064344)(state, state === null || state === void 0 ? void 0 : state.selectedKey, "tab")
  });
  return {
    tabPanelProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(tabPanelProps, {
      tabIndex,
      role: "tabpanel",
      "aria-describedby": props["aria-describedby"],
      "aria-details": props["aria-details"]
    })
  };
}
var $bfc6f2d60b8a4c40$export$15010ca3c1abe90b = class {
  getKeyLeftOf(key) {
    if (this.flipDirection)
      return this.getNextKey(key);
    else {
      if (this.orientation === "horizontal")
        return this.getPreviousKey(key);
      return null;
    }
  }
  getKeyRightOf(key) {
    if (this.flipDirection)
      return this.getPreviousKey(key);
    else {
      if (this.orientation === "horizontal")
        return this.getNextKey(key);
      return null;
    }
  }
  getKeyAbove(key) {
    if (this.orientation === "vertical")
      return this.getPreviousKey(key);
    return null;
  }
  getKeyBelow(key) {
    if (this.orientation === "vertical")
      return this.getNextKey(key);
    return null;
  }
  getFirstKey() {
    let key = this.collection.getFirstKey();
    if (this.disabledKeys.has(key))
      key = this.getNextKey(key);
    return key;
  }
  getLastKey() {
    let key = this.collection.getLastKey();
    if (this.disabledKeys.has(key))
      key = this.getPreviousKey(key);
    return key;
  }
  getNextKey(key) {
    do {
      key = this.collection.getKeyAfter(key);
      if (key == null)
        key = this.collection.getFirstKey();
    } while (this.disabledKeys.has(key));
    return key;
  }
  getPreviousKey(key) {
    do {
      key = this.collection.getKeyBefore(key);
      if (key == null)
        key = this.collection.getLastKey();
    } while (this.disabledKeys.has(key));
    return key;
  }
  constructor(collection, direction, orientation, disabledKeys = /* @__PURE__ */ new Set()) {
    this.collection = collection;
    this.flipDirection = direction === "rtl" && orientation === "horizontal";
    this.orientation = orientation;
    this.disabledKeys = disabledKeys;
  }
};
function $58d314389b21fa3f$export$773e389e644c5874(props, state, ref) {
  let { orientation = "horizontal", keyboardActivation = "automatic" } = props;
  let { collection, selectionManager: manager, disabledKeys } = state;
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let delegate = (0, import_react28.useMemo)(() => new (0, $bfc6f2d60b8a4c40$export$15010ca3c1abe90b)(collection, direction, orientation, disabledKeys), [
    collection,
    disabledKeys,
    orientation,
    direction
  ]);
  let { collectionProps } = (0, $ae20dd8cbca75726$export$d6daf82dcd84e87c)({
    ref,
    selectionManager: manager,
    keyboardDelegate: delegate,
    selectOnFocus: keyboardActivation === "automatic",
    disallowEmptySelection: true,
    scrollRef: ref
  });
  let tabsId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  (0, $99b62ae3ff97ec45$export$c5f62239608282b6).set(state, tabsId);
  let tabListLabelProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    ...props,
    id: tabsId
  });
  return {
    tabListProps: {
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(collectionProps, tabListLabelProps),
      role: "tablist",
      "aria-orientation": orientation,
      tabIndex: void 0
    }
  };
}

// node_modules/.pnpm/@react-aria+tag@3.1.1_react-dom@18.2.0_react@18.2.0/node_modules/@react-aria/tag/dist/module.js
var import_react29 = __toESM(require_react());
function $parcel$interopDefault13(a) {
  return a && a.__esModule ? a.default : a;
}
var $d7323bca8d074eeb$export$653eddfc964b0f8a = /* @__PURE__ */ new WeakMap();
function $d7323bca8d074eeb$export$4f8b5cda58b7e8ff(props, state, ref) {
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let keyboardDelegate = props.keyboardDelegate || new (0, $2a25aae57d74318e$export$a05409b8bb224a5a)({
    collection: state.collection,
    ref,
    orientation: "horizontal",
    direction,
    disabledKeys: state.disabledKeys
  });
  let { labelProps, fieldProps, descriptionProps, errorMessageProps } = (0, $2baaea4c71418dea$export$294aa081a6c6f55d)({
    ...props,
    labelElementType: "span"
  });
  let { gridProps } = (0, $f47efb0c3a859cf2$export$664f9155035607eb)({
    ...props,
    ...fieldProps,
    keyboardDelegate,
    shouldFocusWrap: true
  }, state, ref);
  let [isFocusWithin, setFocusWithin] = (0, import_react29.useState)(false);
  let { focusWithinProps } = (0, $9ab94262bd0047c7$export$420e68273165f4ec)({
    onFocusWithinChange: setFocusWithin
  });
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  let prevCount = (0, import_react29.useRef)(state.collection.size);
  (0, import_react29.useEffect)(() => {
    if (prevCount.current > 0 && state.collection.size === 0 && isFocusWithin)
      ref.current.focus();
    prevCount.current = state.collection.size;
  }, [
    state.collection.size,
    isFocusWithin,
    ref
  ]);
  $d7323bca8d074eeb$export$653eddfc964b0f8a.set(state, {
    onRemove: props.onRemove
  });
  return {
    gridProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(gridProps, domProps, {
      role: state.collection.size ? "grid" : null,
      "aria-atomic": false,
      "aria-relevant": "additions",
      "aria-live": isFocusWithin ? "polite" : "off",
      ...focusWithinProps,
      ...fieldProps
    }),
    labelProps,
    descriptionProps,
    errorMessageProps
  };
}
var $3bb15cc24d006ec5$exports = {};
var $84925f526f90eebd$exports = {};
$84925f526f90eebd$exports = {
  "removeButtonLabel": `إزالة`,
  "removeDescription": `اضغط على مفتاح DELETE لإزالة علامة.`
};
var $c0650163dc1b6f9d$exports = {};
$c0650163dc1b6f9d$exports = {
  "removeButtonLabel": `Премахване`,
  "removeDescription": `Натиснете Delete, за да премахнете маркера.`
};
var $b2b55661291de587$exports = {};
$b2b55661291de587$exports = {
  "removeButtonLabel": `Odebrat`,
  "removeDescription": `Stisknutím klávesy Delete odeberete značku.`
};
var $deb83970956f6d5b$exports = {};
$deb83970956f6d5b$exports = {
  "removeButtonLabel": `Fjern`,
  "removeDescription": `Tryk på Slet for at fjerne tag.`
};
var $aea1cb4c7ec97e1c$exports = {};
$aea1cb4c7ec97e1c$exports = {
  "removeButtonLabel": `Entfernen`,
  "removeDescription": `Auf „Löschen“ drücken, um das Tag zu entfernen.`
};
var $3618d917e503a8d3$exports = {};
$3618d917e503a8d3$exports = {
  "removeButtonLabel": `Κατάργηση`,
  "removeDescription": `Πατήστε Διαγραφή για να καταργήσετε την ετικέτα.`
};
var $9eb56bbbe8e31294$exports = {};
$9eb56bbbe8e31294$exports = {
  "removeDescription": `Press Delete to remove tag.`,
  "removeButtonLabel": `Remove`
};
var $361c604b0fc269a3$exports = {};
$361c604b0fc269a3$exports = {
  "removeButtonLabel": `Quitar`,
  "removeDescription": `Pulse Eliminar para quitar la etiqueta.`
};
var $2f00170f4ee3ca01$exports = {};
$2f00170f4ee3ca01$exports = {
  "removeButtonLabel": `Eemalda`,
  "removeDescription": `Sildi eemaldamiseks vajutage kustutusklahvi Delete.`
};
var $80ee16b64fab9fb5$exports = {};
$80ee16b64fab9fb5$exports = {
  "removeButtonLabel": `Poista`,
  "removeDescription": `Poista tunniste painamalla Poista-painiketta.`
};
var $be9d354476c08087$exports = {};
$be9d354476c08087$exports = {
  "removeButtonLabel": `Supprimer`,
  "removeDescription": `Appuyez sur Supprimer pour supprimer l’étiquette.`
};
var $ffeb903ba092eb35$exports = {};
$ffeb903ba092eb35$exports = {
  "removeButtonLabel": `הסר`,
  "removeDescription": `לחץ על מחק כדי להסיר תג.`
};
var $1df6722c6f19728b$exports = {};
$1df6722c6f19728b$exports = {
  "removeButtonLabel": `Ukloni`,
  "removeDescription": `Pritisnite Delete za uklanjanje oznake.`
};
var $093d57e325bc9071$exports = {};
$093d57e325bc9071$exports = {
  "removeButtonLabel": `Eltávolítás`,
  "removeDescription": `Nyomja meg a Delete billentyűt a címke eltávolításához.`
};
var $609dbdfbcad85bdb$exports = {};
$609dbdfbcad85bdb$exports = {
  "removeButtonLabel": `Rimuovi`,
  "removeDescription": `Premi Elimina per rimuovere il tag.`
};
var $c08e84f882644048$exports = {};
$c08e84f882644048$exports = {
  "removeButtonLabel": `削除`,
  "removeDescription": `タグを削除するには、Delete キーを押します。`
};
var $5cd130489822fa21$exports = {};
$5cd130489822fa21$exports = {
  "removeButtonLabel": `제거`,
  "removeDescription": `태그를 제거하려면 Delete 키를 누르십시오.`
};
var $ab5183739b6c5e7e$exports = {};
$ab5183739b6c5e7e$exports = {
  "removeButtonLabel": `Pašalinti`,
  "removeDescription": `Norėdami pašalinti žymą, paspauskite „Delete“ klavišą.`
};
var $dd84a0b574be3f23$exports = {};
$dd84a0b574be3f23$exports = {
  "removeButtonLabel": `Noņemt`,
  "removeDescription": `Nospiediet Delete [Dzēst], lai noņemtu tagu.`
};
var $85eee97d14eef7b5$exports = {};
$85eee97d14eef7b5$exports = {
  "removeButtonLabel": `Fjern`,
  "removeDescription": `Trykk på Slett for å fjerne taggen.`
};
var $18781839f93b0314$exports = {};
$18781839f93b0314$exports = {
  "removeButtonLabel": `Verwijderen`,
  "removeDescription": `Druk op Verwijderen om de tag te verwijderen.`
};
var $1c40ffbbfe9f3bda$exports = {};
$1c40ffbbfe9f3bda$exports = {
  "removeButtonLabel": `Usuń`,
  "removeDescription": `Naciśnij Usuń, aby usunąć znacznik.`
};
var $156880e329b1c717$exports = {};
$156880e329b1c717$exports = {
  "removeButtonLabel": `Remover`,
  "removeDescription": `Pressione Delete para remover a tag.`
};
var $b6d50b1d20768ce4$exports = {};
$b6d50b1d20768ce4$exports = {
  "removeButtonLabel": `Eliminar`,
  "removeDescription": `Prima Delete para eliminar a tag.`
};
var $d8c38c691b006187$exports = {};
$d8c38c691b006187$exports = {
  "removeButtonLabel": `Îndepărtaţi`,
  "removeDescription": `Apăsați pe Delete (Ștergere) pentru a elimina eticheta.`
};
var $ed9b4bf7ce1fb1d7$exports = {};
$ed9b4bf7ce1fb1d7$exports = {
  "removeButtonLabel": `Удалить`,
  "removeDescription": `Нажмите DELETE, чтобы удалить тег.`
};
var $51d8721afda4d678$exports = {};
$51d8721afda4d678$exports = {
  "removeButtonLabel": `Odstrániť`,
  "removeDescription": `Ak chcete odstrániť značku, stlačte kláves Delete.`
};
var $fd37a27baae493e8$exports = {};
$fd37a27baae493e8$exports = {
  "removeButtonLabel": `Odstrani`,
  "removeDescription": `Pritisnite Delete, da odstranite oznako.`
};
var $5505a1ca71ffd6f4$exports = {};
$5505a1ca71ffd6f4$exports = {
  "removeButtonLabel": `Ukloni`,
  "removeDescription": `Pritisnite Obriši da biste uklonili oznaku.`
};
var $33670e148c84ad02$exports = {};
$33670e148c84ad02$exports = {
  "removeButtonLabel": `Ta bort`,
  "removeDescription": `Tryck på Radera för att ta bort taggen.`
};
var $0bf46fdcdd7cb5f6$exports = {};
$0bf46fdcdd7cb5f6$exports = {
  "removeButtonLabel": `Kaldır`,
  "removeDescription": `Etiketi kaldırmak için Sil tuşuna basın.`
};
var $9d9765222bc08ca2$exports = {};
$9d9765222bc08ca2$exports = {
  "removeButtonLabel": `Вилучити`,
  "removeDescription": `Натисніть Delete, щоб вилучити тег.`
};
var $d737296cedcdee9f$exports = {};
$d737296cedcdee9f$exports = {
  "removeButtonLabel": `删除`,
  "removeDescription": `按下“删除”以删除标记。`
};
var $09cd168ab18773f4$exports = {};
$09cd168ab18773f4$exports = {
  "removeButtonLabel": `移除`,
  "removeDescription": `按 Delete 鍵以移除標記。`
};
$3bb15cc24d006ec5$exports = {
  "ar-AE": $84925f526f90eebd$exports,
  "bg-BG": $c0650163dc1b6f9d$exports,
  "cs-CZ": $b2b55661291de587$exports,
  "da-DK": $deb83970956f6d5b$exports,
  "de-DE": $aea1cb4c7ec97e1c$exports,
  "el-GR": $3618d917e503a8d3$exports,
  "en-US": $9eb56bbbe8e31294$exports,
  "es-ES": $361c604b0fc269a3$exports,
  "et-EE": $2f00170f4ee3ca01$exports,
  "fi-FI": $80ee16b64fab9fb5$exports,
  "fr-FR": $be9d354476c08087$exports,
  "he-IL": $ffeb903ba092eb35$exports,
  "hr-HR": $1df6722c6f19728b$exports,
  "hu-HU": $093d57e325bc9071$exports,
  "it-IT": $609dbdfbcad85bdb$exports,
  "ja-JP": $c08e84f882644048$exports,
  "ko-KR": $5cd130489822fa21$exports,
  "lt-LT": $ab5183739b6c5e7e$exports,
  "lv-LV": $dd84a0b574be3f23$exports,
  "nb-NO": $85eee97d14eef7b5$exports,
  "nl-NL": $18781839f93b0314$exports,
  "pl-PL": $1c40ffbbfe9f3bda$exports,
  "pt-BR": $156880e329b1c717$exports,
  "pt-PT": $b6d50b1d20768ce4$exports,
  "ro-RO": $d8c38c691b006187$exports,
  "ru-RU": $ed9b4bf7ce1fb1d7$exports,
  "sk-SK": $51d8721afda4d678$exports,
  "sl-SI": $fd37a27baae493e8$exports,
  "sr-SP": $5505a1ca71ffd6f4$exports,
  "sv-SE": $33670e148c84ad02$exports,
  "tr-TR": $0bf46fdcdd7cb5f6$exports,
  "uk-UA": $9d9765222bc08ca2$exports,
  "zh-CN": $d737296cedcdee9f$exports,
  "zh-TW": $09cd168ab18773f4$exports
};
function $fc6126c82a4601f1$export$3f568fff7dff2f03(props, state, ref) {
  let { item } = props;
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb1)((0, $parcel$interopDefault13($3bb15cc24d006ec5$exports)));
  let buttonId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let { onRemove } = (0, $d7323bca8d074eeb$export$653eddfc964b0f8a).get(state) || {};
  let { rowProps, gridCellProps, ...states } = (0, $4e8b0456ef72939f$export$9610e69494fadfd2)({
    node: item
  }, state, ref);
  delete rowProps.onKeyDownCapture;
  delete states.descriptionProps;
  let onKeyDown = (e) => {
    if (e.key === "Delete" || e.key === "Backspace") {
      e.preventDefault();
      if (state.selectionManager.isSelected(item.key))
        onRemove(new Set(state.selectionManager.selectedKeys));
      else
        onRemove(/* @__PURE__ */ new Set([
          item.key
        ]));
    }
  };
  let modality = (0, $507fabe10e71c6fb$export$98e20ec92f614cfe)();
  if (modality === "virtual" && typeof window !== "undefined" && "ontouchstart" in window)
    modality = "touch";
  let description = onRemove && (modality === "keyboard" || modality === "virtual") ? stringFormatter.format("removeDescription") : "";
  let descProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa1)(description);
  let isFocused = item.key === state.selectionManager.focusedKey;
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  return {
    removeButtonProps: {
      "aria-label": stringFormatter.format("removeButtonLabel"),
      "aria-labelledby": `${buttonId} ${rowProps.id}`,
      id: buttonId,
      onPress: () => onRemove ? onRemove(/* @__PURE__ */ new Set([
        item.key
      ])) : null,
      excludeFromTabOrder: true
    },
    rowProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(rowProps, domProps, {
      tabIndex: isFocused || state.selectionManager.focusedKey == null ? 0 : -1,
      onKeyDown: onRemove ? onKeyDown : void 0,
      "aria-describedby": descProps["aria-describedby"]
    }),
    gridCellProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(gridCellProps, {
      "aria-errormessage": props["aria-errormessage"],
      "aria-label": props["aria-label"]
    }),
    ...states,
    allowsRemoving: !!onRemove
  };
}

// node_modules/.pnpm/@react-aria+tooltip@3.6.1_react@18.2.0/node_modules/@react-aria/tooltip/dist/module.js
var import_react30 = __toESM(require_react());
function $326e436e94273fe1$export$1c4b08e0eca38426(props, state) {
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
    labelable: true
  });
  let { hoverProps } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    onHoverStart: () => {
      return state === null || state === void 0 ? void 0 : state.open(true);
    },
    onHoverEnd: () => {
      return state === null || state === void 0 ? void 0 : state.close();
    }
  });
  return {
    tooltipProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, hoverProps, {
      role: "tooltip"
    })
  };
}
function $4e1b34546679e357$export$a6da6c504e4bba8b(props, state, ref) {
  let { isDisabled, trigger } = props;
  let tooltipId = (0, $bdb11010cef70236$export$f680877a34711e37)();
  let isHovered = (0, import_react30.useRef)(false);
  let isFocused = (0, import_react30.useRef)(false);
  let handleShow = () => {
    if (isHovered.current || isFocused.current)
      state.open(isFocused.current);
  };
  let handleHide = (immediate) => {
    if (!isHovered.current && !isFocused.current)
      state.close(immediate);
  };
  (0, import_react30.useEffect)(() => {
    let onKeyDown = (e) => {
      if (ref && ref.current) {
        if (e.key === "Escape") {
          e.stopPropagation();
          state.close(true);
        }
      }
    };
    if (state.isOpen) {
      document.addEventListener("keydown", onKeyDown, true);
      return () => {
        document.removeEventListener("keydown", onKeyDown, true);
      };
    }
  }, [
    ref,
    state
  ]);
  let onHoverStart = () => {
    if (trigger === "focus")
      return;
    if ((0, $507fabe10e71c6fb$export$630ff653c5ada6a9)() === "pointer")
      isHovered.current = true;
    else
      isHovered.current = false;
    handleShow();
  };
  let onHoverEnd = () => {
    if (trigger === "focus")
      return;
    isFocused.current = false;
    isHovered.current = false;
    handleHide();
  };
  let onPressStart = () => {
    isFocused.current = false;
    isHovered.current = false;
    handleHide(true);
  };
  let onFocus = () => {
    let isVisible = (0, $507fabe10e71c6fb$export$b9b3dfddab17db27)();
    if (isVisible) {
      isFocused.current = true;
      handleShow();
    }
  };
  let onBlur = () => {
    isFocused.current = false;
    isHovered.current = false;
    handleHide(true);
  };
  let { hoverProps } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    isDisabled,
    onHoverStart,
    onHoverEnd
  });
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    onPressStart
  });
  let { focusableProps } = (0, $e6afbd83fe6ebbd2$export$4c014de7c8940b4c)({
    isDisabled,
    onFocus,
    onBlur
  }, ref);
  return {
    triggerProps: {
      "aria-describedby": state.isOpen ? tooltipId : void 0,
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(focusableProps, hoverProps, pressProps)
    },
    tooltipProps: {
      id: tooltipId
    }
  };
}

// node_modules/.pnpm/react-aria-components@1.0.0-alpha.6_react-dom@18.2.0_react@18.2.0/node_modules/react-aria-components/dist/module.js
var import_react49 = __toESM(require_react());
var import_react_dom3 = __toESM(require_react_dom());
var import_shim = __toESM(require_shim());

// node_modules/.pnpm/@react-stately+calendar@3.3.1_react@18.2.0/node_modules/@react-stately/calendar/dist/module.js
var import_react31 = __toESM(require_react());
function $f62d864046160412$export$eac50920cf2fd59a(date, minValue, maxValue) {
  return minValue != null && date.compare(minValue) < 0 || maxValue != null && date.compare(maxValue) > 0;
}
function $f62d864046160412$export$f4a51ff076cc9a09(date, duration, locale, minValue, maxValue) {
  let halfDuration = {};
  for (let key in duration) {
    halfDuration[key] = Math.floor(duration[key] / 2);
    if (halfDuration[key] > 0 && duration[key] % 2 === 0)
      halfDuration[key]--;
  }
  let aligned = $f62d864046160412$export$144a00ba6044eb9(date, duration, locale).subtract(halfDuration);
  return $f62d864046160412$export$5bb865b12696a77d(date, aligned, duration, locale, minValue, maxValue);
}
function $f62d864046160412$export$144a00ba6044eb9(date, duration, locale, minValue, maxValue) {
  let aligned = date;
  if (duration.years)
    aligned = (0, $14e0f24ef4ac5c92$export$f91e89d3d0406102)(date);
  else if (duration.months)
    aligned = (0, $14e0f24ef4ac5c92$export$a5a3b454ada2268e)(date);
  else if (duration.weeks)
    aligned = (0, $14e0f24ef4ac5c92$export$42c81a444fbfb5d4)(date, locale);
  return $f62d864046160412$export$5bb865b12696a77d(date, aligned, duration, locale, minValue, maxValue);
}
function $f62d864046160412$export$530edbfc915b2b04(date, duration, locale, minValue, maxValue) {
  let d = {
    ...duration
  };
  if (duration.days)
    d.days--;
  else if (duration.weeks)
    d.weeks--;
  else if (duration.months)
    d.months--;
  else if (duration.years)
    d.years--;
  let aligned = $f62d864046160412$export$144a00ba6044eb9(date, duration, locale).subtract(d);
  return $f62d864046160412$export$5bb865b12696a77d(date, aligned, duration, locale, minValue, maxValue);
}
function $f62d864046160412$export$5bb865b12696a77d(date, aligned, duration, locale, minValue, maxValue) {
  if (minValue && date.compare(minValue) >= 0)
    aligned = (0, $14e0f24ef4ac5c92$export$a75f2bff57811055)(aligned, $f62d864046160412$export$144a00ba6044eb9((0, $11d87f3f76e88657$export$93522d1a439f3617)(minValue), duration, locale));
  if (maxValue && date.compare(maxValue) <= 0)
    aligned = (0, $14e0f24ef4ac5c92$export$5c333a116e949cdd)(aligned, $f62d864046160412$export$530edbfc915b2b04((0, $11d87f3f76e88657$export$93522d1a439f3617)(maxValue), duration, locale));
  return aligned;
}
function $f62d864046160412$export$4f5203c0d889109e(date, minValue, maxValue) {
  if (minValue)
    date = (0, $14e0f24ef4ac5c92$export$a75f2bff57811055)(date, (0, $11d87f3f76e88657$export$93522d1a439f3617)(minValue));
  if (maxValue)
    date = (0, $14e0f24ef4ac5c92$export$5c333a116e949cdd)(date, (0, $11d87f3f76e88657$export$93522d1a439f3617)(maxValue));
  return date;
}
function $f62d864046160412$export$a1d3911297b952d7(date, minValue, isDateUnavailable) {
  if (!isDateUnavailable)
    return date;
  while (date.compare(minValue) >= 0 && isDateUnavailable(date))
    date = date.subtract({
      days: 1
    });
  if (date.compare(minValue) >= 0)
    return date;
}
function $131cf43a05231e1e$export$6d095e787d2b5e1f(props) {
  let defaultFormatter = (0, import_react31.useMemo)(() => new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(props.locale), [
    props.locale
  ]);
  let resolvedOptions = (0, import_react31.useMemo)(() => defaultFormatter.resolvedOptions(), [
    defaultFormatter
  ]);
  let { locale, createCalendar, visibleDuration = {
    months: 1
  }, minValue, maxValue, selectionAlignment, isDateUnavailable, pageBehavior = "visible" } = props;
  let calendar = (0, import_react31.useMemo)(() => createCalendar(resolvedOptions.calendar), [
    createCalendar,
    resolvedOptions.calendar
  ]);
  let [value, setControlledValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.value, props.defaultValue, props.onChange);
  let calendarDateValue = (0, import_react31.useMemo)(() => value ? (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $11d87f3f76e88657$export$93522d1a439f3617)(value), calendar) : null, [
    value,
    calendar
  ]);
  let timeZone = (0, import_react31.useMemo)(() => value && "timeZone" in value ? value.timeZone : resolvedOptions.timeZone, [
    value,
    resolvedOptions.timeZone
  ]);
  let focusedCalendarDate = (0, import_react31.useMemo)(() => props.focusedValue ? (0, $f62d864046160412$export$4f5203c0d889109e)((0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $11d87f3f76e88657$export$93522d1a439f3617)(props.focusedValue), calendar), minValue, maxValue) : void 0, [
    props.focusedValue,
    calendar,
    minValue,
    maxValue
  ]);
  let defaultFocusedCalendarDate = (0, import_react31.useMemo)(() => (0, $f62d864046160412$export$4f5203c0d889109e)(props.defaultFocusedValue ? (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $11d87f3f76e88657$export$93522d1a439f3617)(props.defaultFocusedValue), calendar) : calendarDateValue || (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $14e0f24ef4ac5c92$export$d0bdf45af03a6ea3)(timeZone), calendar), minValue, maxValue), [
    props.defaultFocusedValue,
    calendarDateValue,
    timeZone,
    calendar,
    minValue,
    maxValue
  ]);
  let [focusedDate, setFocusedDate] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(focusedCalendarDate, defaultFocusedCalendarDate, props.onFocusChange);
  let [startDate, setStartDate] = (0, import_react31.useState)(() => {
    switch (selectionAlignment) {
      case "start":
        return (0, $f62d864046160412$export$144a00ba6044eb9)(focusedDate, visibleDuration, locale, minValue, maxValue);
      case "end":
        return (0, $f62d864046160412$export$530edbfc915b2b04)(focusedDate, visibleDuration, locale, minValue, maxValue);
      case "center":
      default:
        return (0, $f62d864046160412$export$f4a51ff076cc9a09)(focusedDate, visibleDuration, locale, minValue, maxValue);
    }
  });
  let [isFocused, setFocused] = (0, import_react31.useState)(props.autoFocus || false);
  let endDate = (0, import_react31.useMemo)(() => {
    let duration = {
      ...visibleDuration
    };
    if (duration.days)
      duration.days--;
    else
      duration.days = -1;
    return startDate.add(duration);
  }, [
    startDate,
    visibleDuration
  ]);
  let [lastCalendarIdentifier, setLastCalendarIdentifier] = (0, import_react31.useState)(calendar.identifier);
  if (calendar.identifier !== lastCalendarIdentifier) {
    let newFocusedDate = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(focusedDate, calendar);
    setStartDate((0, $f62d864046160412$export$f4a51ff076cc9a09)(newFocusedDate, visibleDuration, locale, minValue, maxValue));
    setFocusedDate(newFocusedDate);
    setLastCalendarIdentifier(calendar.identifier);
  }
  if ((0, $f62d864046160412$export$eac50920cf2fd59a)(focusedDate, minValue, maxValue))
    setFocusedDate((0, $f62d864046160412$export$4f5203c0d889109e)(focusedDate, minValue, maxValue));
  else if (focusedDate.compare(startDate) < 0)
    setStartDate((0, $f62d864046160412$export$530edbfc915b2b04)(focusedDate, visibleDuration, locale, minValue, maxValue));
  else if (focusedDate.compare(endDate) > 0)
    setStartDate((0, $f62d864046160412$export$144a00ba6044eb9)(focusedDate, visibleDuration, locale, minValue, maxValue));
  function focusCell(date) {
    date = (0, $f62d864046160412$export$4f5203c0d889109e)(date, minValue, maxValue);
    setFocusedDate(date);
  }
  function setValue(newValue) {
    if (!props.isDisabled && !props.isReadOnly) {
      newValue = (0, $f62d864046160412$export$4f5203c0d889109e)(newValue, minValue, maxValue);
      newValue = (0, $f62d864046160412$export$a1d3911297b952d7)(newValue, startDate, isDateUnavailable);
      if (!newValue)
        return;
      newValue = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(newValue, (value === null || value === void 0 ? void 0 : value.calendar) || new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());
      if (value && "hour" in value)
        setControlledValue(value.set(newValue));
      else
        setControlledValue(newValue);
    }
  }
  let isUnavailable = (0, import_react31.useMemo)(() => {
    if (!calendarDateValue)
      return false;
    if (isDateUnavailable && isDateUnavailable(calendarDateValue))
      return true;
    return (0, $f62d864046160412$export$eac50920cf2fd59a)(calendarDateValue, minValue, maxValue);
  }, [
    calendarDateValue,
    isDateUnavailable,
    minValue,
    maxValue
  ]);
  let validationState = props.validationState || (isUnavailable ? "invalid" : null);
  let pageDuration = (0, import_react31.useMemo)(() => {
    if (pageBehavior === "visible")
      return visibleDuration;
    return $131cf43a05231e1e$var$unitDuration(visibleDuration);
  }, [
    pageBehavior,
    visibleDuration
  ]);
  return {
    isDisabled: props.isDisabled,
    isReadOnly: props.isReadOnly,
    value: calendarDateValue,
    setValue,
    visibleRange: {
      start: startDate,
      end: endDate
    },
    minValue,
    maxValue,
    focusedDate,
    timeZone,
    validationState,
    setFocusedDate(date) {
      focusCell(date);
      setFocused(true);
    },
    focusNextDay() {
      focusCell(focusedDate.add({
        days: 1
      }));
    },
    focusPreviousDay() {
      focusCell(focusedDate.subtract({
        days: 1
      }));
    },
    focusNextRow() {
      if (visibleDuration.days)
        this.focusNextPage();
      else if (visibleDuration.weeks || visibleDuration.months || visibleDuration.years)
        focusCell(focusedDate.add({
          weeks: 1
        }));
    },
    focusPreviousRow() {
      if (visibleDuration.days)
        this.focusPreviousPage();
      else if (visibleDuration.weeks || visibleDuration.months || visibleDuration.years)
        focusCell(focusedDate.subtract({
          weeks: 1
        }));
    },
    focusNextPage() {
      let start = startDate.add(pageDuration);
      setFocusedDate((0, $f62d864046160412$export$4f5203c0d889109e)(focusedDate.add(pageDuration), minValue, maxValue));
      setStartDate((0, $f62d864046160412$export$144a00ba6044eb9)((0, $f62d864046160412$export$5bb865b12696a77d)(focusedDate, start, pageDuration, locale, minValue, maxValue), pageDuration, locale));
    },
    focusPreviousPage() {
      let start = startDate.subtract(pageDuration);
      setFocusedDate((0, $f62d864046160412$export$4f5203c0d889109e)(focusedDate.subtract(pageDuration), minValue, maxValue));
      setStartDate((0, $f62d864046160412$export$144a00ba6044eb9)((0, $f62d864046160412$export$5bb865b12696a77d)(focusedDate, start, pageDuration, locale, minValue, maxValue), pageDuration, locale));
    },
    focusSectionStart() {
      if (visibleDuration.days)
        focusCell(startDate);
      else if (visibleDuration.weeks)
        focusCell((0, $14e0f24ef4ac5c92$export$42c81a444fbfb5d4)(focusedDate, locale));
      else if (visibleDuration.months || visibleDuration.years)
        focusCell((0, $14e0f24ef4ac5c92$export$a5a3b454ada2268e)(focusedDate));
    },
    focusSectionEnd() {
      if (visibleDuration.days)
        focusCell(endDate);
      else if (visibleDuration.weeks)
        focusCell((0, $14e0f24ef4ac5c92$export$ef8b6d9133084f4e)(focusedDate, locale));
      else if (visibleDuration.months || visibleDuration.years)
        focusCell((0, $14e0f24ef4ac5c92$export$a2258d9c4118825c)(focusedDate));
    },
    focusNextSection(larger) {
      if (!larger && !visibleDuration.days) {
        focusCell(focusedDate.add($131cf43a05231e1e$var$unitDuration(visibleDuration)));
        return;
      }
      if (visibleDuration.days)
        this.focusNextPage();
      else if (visibleDuration.weeks)
        focusCell(focusedDate.add({
          months: 1
        }));
      else if (visibleDuration.months || visibleDuration.years)
        focusCell(focusedDate.add({
          years: 1
        }));
    },
    focusPreviousSection(larger) {
      if (!larger && !visibleDuration.days) {
        focusCell(focusedDate.subtract($131cf43a05231e1e$var$unitDuration(visibleDuration)));
        return;
      }
      if (visibleDuration.days)
        this.focusPreviousPage();
      else if (visibleDuration.weeks)
        focusCell(focusedDate.subtract({
          months: 1
        }));
      else if (visibleDuration.months || visibleDuration.years)
        focusCell(focusedDate.subtract({
          years: 1
        }));
    },
    selectFocusedDate() {
      setValue(focusedDate);
    },
    selectDate(date) {
      setValue(date);
    },
    isFocused,
    setFocused,
    isInvalid(date) {
      return (0, $f62d864046160412$export$eac50920cf2fd59a)(date, minValue, maxValue);
    },
    isSelected(date) {
      return calendarDateValue != null && (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, calendarDateValue) && !this.isCellDisabled(date) && !this.isCellUnavailable(date);
    },
    isCellFocused(date) {
      return isFocused && focusedDate && (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, focusedDate);
    },
    isCellDisabled(date) {
      return props.isDisabled || date.compare(startDate) < 0 || date.compare(endDate) > 0 || this.isInvalid(date, minValue, maxValue);
    },
    isCellUnavailable(date) {
      return props.isDateUnavailable && props.isDateUnavailable(date);
    },
    isPreviousVisibleRangeInvalid() {
      let prev = startDate.subtract({
        days: 1
      });
      return (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(prev, startDate) || this.isInvalid(prev, minValue, maxValue);
    },
    isNextVisibleRangeInvalid() {
      let next = endDate.add({
        days: 1
      });
      return (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(next, endDate) || this.isInvalid(next, minValue, maxValue);
    },
    getDatesInWeek(weekIndex, from = startDate) {
      let date = from.add({
        weeks: weekIndex
      });
      let dates = [];
      date = (0, $14e0f24ef4ac5c92$export$42c81a444fbfb5d4)(date, locale);
      let dayOfWeek = (0, $14e0f24ef4ac5c92$export$2061056d06d7cdf7)(date, locale);
      for (let i = 0; i < dayOfWeek; i++)
        dates.push(null);
      while (dates.length < 7) {
        dates.push(date);
        let nextDate = date.add({
          days: 1
        });
        if ((0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, nextDate))
          break;
        date = nextDate;
      }
      while (dates.length < 7)
        dates.push(null);
      return dates;
    }
  };
}
function $131cf43a05231e1e$var$unitDuration(duration) {
  let unit = {
    ...duration
  };
  for (let key in duration)
    unit[key] = 1;
  return unit;
}
function $9a36b6ba2fb1a7c5$export$9a987164d97ecc90(props) {
  let { value: valueProp, defaultValue, onChange, createCalendar, locale, visibleDuration = {
    months: 1
  }, minValue, maxValue, ...calendarProps } = props;
  let [value, setValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(valueProp, defaultValue || null, onChange);
  let [anchorDate, setAnchorDateState] = (0, import_react31.useState)(null);
  let alignment = "center";
  if (value && value.start && value.end) {
    let start = (0, $f62d864046160412$export$f4a51ff076cc9a09)((0, $11d87f3f76e88657$export$93522d1a439f3617)(value.start), visibleDuration, locale, minValue, maxValue);
    let end = start.add(visibleDuration).subtract({
      days: 1
    });
    if (value.end.compare(end) > 0)
      alignment = "start";
  }
  let availableRangeRef = (0, import_react31.useRef)(null);
  let [availableRange, setAvailableRange] = (0, import_react31.useState)(null);
  let min = (0, import_react31.useMemo)(() => {
    return (0, $14e0f24ef4ac5c92$export$a75f2bff57811055)(minValue, availableRange === null || availableRange === void 0 ? void 0 : availableRange.start);
  }, [
    minValue,
    availableRange
  ]);
  let max = (0, import_react31.useMemo)(() => {
    return (0, $14e0f24ef4ac5c92$export$5c333a116e949cdd)(maxValue, availableRange === null || availableRange === void 0 ? void 0 : availableRange.end);
  }, [
    maxValue,
    availableRange
  ]);
  let calendar = (0, $131cf43a05231e1e$export$6d095e787d2b5e1f)({
    ...calendarProps,
    value: value && value.start,
    createCalendar,
    locale,
    visibleDuration,
    minValue: min,
    maxValue: max,
    selectionAlignment: alignment
  });
  let updateAvailableRange = (date) => {
    if (date && props.isDateUnavailable && !props.allowsNonContiguousRanges) {
      availableRangeRef.current = {
        start: $9a36b6ba2fb1a7c5$var$nextUnavailableDate(date, calendar, -1),
        end: $9a36b6ba2fb1a7c5$var$nextUnavailableDate(date, calendar, 1)
      };
      setAvailableRange(availableRangeRef.current);
    } else {
      availableRangeRef.current = null;
      setAvailableRange(null);
    }
  };
  let [lastVisibleRange, setLastVisibleRange] = (0, import_react31.useState)(calendar.visibleRange);
  if (!(0, $14e0f24ef4ac5c92$export$91b62ebf2ba703ee)(calendar.visibleRange.start, lastVisibleRange.start) || !(0, $14e0f24ef4ac5c92$export$91b62ebf2ba703ee)(calendar.visibleRange.end, lastVisibleRange.end)) {
    updateAvailableRange(anchorDate);
    setLastVisibleRange(calendar.visibleRange);
  }
  let setAnchorDate = (date) => {
    if (date) {
      setAnchorDateState(date);
      updateAvailableRange(date);
    } else {
      setAnchorDateState(null);
      updateAvailableRange(null);
    }
  };
  let highlightedRange = anchorDate ? $9a36b6ba2fb1a7c5$var$makeRange(anchorDate, calendar.focusedDate) : value && $9a36b6ba2fb1a7c5$var$makeRange(value.start, value.end);
  let selectDate = (date) => {
    if (props.isReadOnly)
      return;
    date = (0, $f62d864046160412$export$4f5203c0d889109e)(date, min, max);
    date = (0, $f62d864046160412$export$a1d3911297b952d7)(date, calendar.visibleRange.start, props.isDateUnavailable);
    if (!date)
      return;
    if (!anchorDate)
      setAnchorDate(date);
    else {
      let range = $9a36b6ba2fb1a7c5$var$makeRange(anchorDate, date);
      setValue({
        start: $9a36b6ba2fb1a7c5$var$convertValue(range.start, value === null || value === void 0 ? void 0 : value.start),
        end: $9a36b6ba2fb1a7c5$var$convertValue(range.end, value === null || value === void 0 ? void 0 : value.end)
      });
      setAnchorDate(null);
    }
  };
  let [isDragging, setDragging] = (0, import_react31.useState)(false);
  let { isDateUnavailable } = props;
  let isInvalidSelection = (0, import_react31.useMemo)(() => {
    if (!value || anchorDate)
      return false;
    if (isDateUnavailable && (isDateUnavailable(value.start) || isDateUnavailable(value.end)))
      return true;
    return (0, $f62d864046160412$export$eac50920cf2fd59a)(value.start, minValue, maxValue) || (0, $f62d864046160412$export$eac50920cf2fd59a)(value.end, minValue, maxValue);
  }, [
    isDateUnavailable,
    value,
    anchorDate,
    minValue,
    maxValue
  ]);
  let validationState = props.validationState || (isInvalidSelection ? "invalid" : null);
  return {
    ...calendar,
    value,
    setValue,
    anchorDate,
    setAnchorDate,
    highlightedRange,
    validationState,
    selectFocusedDate() {
      selectDate(calendar.focusedDate);
    },
    selectDate,
    highlightDate(date) {
      if (anchorDate)
        calendar.setFocusedDate(date);
    },
    isSelected(date) {
      return highlightedRange && date.compare(highlightedRange.start) >= 0 && date.compare(highlightedRange.end) <= 0 && !calendar.isCellDisabled(date) && !calendar.isCellUnavailable(date);
    },
    isInvalid(date) {
      var _availableRangeRef_current, _availableRangeRef_current1;
      return calendar.isInvalid(date) || (0, $f62d864046160412$export$eac50920cf2fd59a)(date, (_availableRangeRef_current = availableRangeRef.current) === null || _availableRangeRef_current === void 0 ? void 0 : _availableRangeRef_current.start, (_availableRangeRef_current1 = availableRangeRef.current) === null || _availableRangeRef_current1 === void 0 ? void 0 : _availableRangeRef_current1.end);
    },
    isDragging,
    setDragging
  };
}
function $9a36b6ba2fb1a7c5$var$makeRange(start, end) {
  if (!start || !end)
    return null;
  if (end.compare(start) < 0)
    [start, end] = [
      end,
      start
    ];
  return {
    start: (0, $11d87f3f76e88657$export$93522d1a439f3617)(start),
    end: (0, $11d87f3f76e88657$export$93522d1a439f3617)(end)
  };
}
function $9a36b6ba2fb1a7c5$var$convertValue(newValue, oldValue) {
  newValue = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(newValue, (oldValue === null || oldValue === void 0 ? void 0 : oldValue.calendar) || new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());
  if (oldValue && "hour" in oldValue)
    return oldValue.set(newValue);
  return newValue;
}
function $9a36b6ba2fb1a7c5$var$nextUnavailableDate(anchorDate, state, dir) {
  let nextDate = anchorDate.add({
    days: dir
  });
  while ((dir < 0 ? nextDate.compare(state.visibleRange.start) >= 0 : nextDate.compare(state.visibleRange.end) <= 0) && !state.isCellUnavailable(nextDate))
    nextDate = nextDate.add({
      days: dir
    });
  if (state.isCellUnavailable(nextDate))
    return nextDate.add({
      days: -dir
    });
  return null;
}

// node_modules/.pnpm/@react-stately+checkbox@3.4.4_react@18.2.0/node_modules/@react-stately/checkbox/dist/module.js
function $587d3ad58be6d31f$export$daff6da51032a415(props = {}) {
  let [selectedValues, setValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.value, props.defaultValue || [], props.onChange);
  const state = {
    value: selectedValues,
    setValue(value) {
      if (props.isReadOnly || props.isDisabled)
        return;
      setValue(value);
    },
    isDisabled: props.isDisabled || false,
    isReadOnly: props.isReadOnly || false,
    isSelected(value) {
      return selectedValues.includes(value);
    },
    addValue(value) {
      if (props.isReadOnly || props.isDisabled)
        return;
      if (!selectedValues.includes(value))
        setValue(selectedValues.concat(value));
    },
    removeValue(value) {
      if (props.isReadOnly || props.isDisabled)
        return;
      if (selectedValues.includes(value))
        setValue(selectedValues.filter((existingValue) => existingValue !== value));
    },
    toggleValue(value) {
      if (props.isReadOnly || props.isDisabled)
        return;
      if (selectedValues.includes(value))
        setValue(selectedValues.filter((existingValue) => existingValue !== value));
      else
        setValue(selectedValues.concat(value));
    },
    validationState: props.validationState
  };
  return state;
}

// node_modules/.pnpm/@react-stately+list@3.9.1_react@18.2.0/node_modules/@react-stately/list/dist/module.js
var import_react33 = __toESM(require_react());

// node_modules/.pnpm/@react-stately+selection@3.13.3_react@18.2.0/node_modules/@react-stately/selection/dist/module.js
var import_react32 = __toESM(require_react());
var $e40ea825a81a3709$export$52baac22726c72bf = class extends Set {
  constructor(keys, anchorKey, currentKey) {
    super(keys);
    if (keys instanceof $e40ea825a81a3709$export$52baac22726c72bf) {
      this.anchorKey = anchorKey || keys.anchorKey;
      this.currentKey = currentKey || keys.currentKey;
    } else {
      this.anchorKey = anchorKey;
      this.currentKey = currentKey;
    }
  }
};
function $7af3f5b51489e0b5$var$equalSets(setA, setB) {
  if (setA.size !== setB.size)
    return false;
  for (let item of setA) {
    if (!setB.has(item))
      return false;
  }
  return true;
}
function $7af3f5b51489e0b5$export$253fe78d46329472(props) {
  let { selectionMode = "none", disallowEmptySelection, allowDuplicateSelectionEvents, selectionBehavior: selectionBehaviorProp = "toggle", disabledBehavior = "all" } = props;
  let isFocusedRef = (0, import_react32.useRef)(false);
  let [, setFocused] = (0, import_react32.useState)(false);
  let focusedKeyRef = (0, import_react32.useRef)(null);
  let childFocusStrategyRef = (0, import_react32.useRef)(null);
  let [, setFocusedKey] = (0, import_react32.useState)(null);
  let selectedKeysProp = (0, import_react32.useMemo)(() => $7af3f5b51489e0b5$var$convertSelection(props.selectedKeys), [
    props.selectedKeys
  ]);
  let defaultSelectedKeys = (0, import_react32.useMemo)(() => $7af3f5b51489e0b5$var$convertSelection(props.defaultSelectedKeys, new (0, $e40ea825a81a3709$export$52baac22726c72bf)()), [
    props.defaultSelectedKeys
  ]);
  let [selectedKeys, setSelectedKeys] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(selectedKeysProp, defaultSelectedKeys, props.onSelectionChange);
  let disabledKeysProp = (0, import_react32.useMemo)(() => props.disabledKeys ? new Set(props.disabledKeys) : /* @__PURE__ */ new Set(), [
    props.disabledKeys
  ]);
  let [selectionBehavior, setSelectionBehavior] = (0, import_react32.useState)(selectionBehaviorProp);
  if (selectionBehaviorProp === "replace" && selectionBehavior === "toggle" && typeof selectedKeys === "object" && selectedKeys.size === 0)
    setSelectionBehavior("replace");
  let lastSelectionBehavior = (0, import_react32.useRef)(selectionBehaviorProp);
  (0, import_react32.useEffect)(() => {
    if (selectionBehaviorProp !== lastSelectionBehavior.current) {
      setSelectionBehavior(selectionBehaviorProp);
      lastSelectionBehavior.current = selectionBehaviorProp;
    }
  }, [
    selectionBehaviorProp
  ]);
  return {
    selectionMode,
    disallowEmptySelection,
    selectionBehavior,
    setSelectionBehavior,
    get isFocused() {
      return isFocusedRef.current;
    },
    setFocused(f) {
      isFocusedRef.current = f;
      setFocused(f);
    },
    get focusedKey() {
      return focusedKeyRef.current;
    },
    get childFocusStrategy() {
      return childFocusStrategyRef.current;
    },
    setFocusedKey(k, childFocusStrategy = "first") {
      focusedKeyRef.current = k;
      childFocusStrategyRef.current = childFocusStrategy;
      setFocusedKey(k);
    },
    selectedKeys,
    setSelectedKeys(keys) {
      if (allowDuplicateSelectionEvents || !$7af3f5b51489e0b5$var$equalSets(keys, selectedKeys))
        setSelectedKeys(keys);
    },
    disabledKeys: disabledKeysProp,
    disabledBehavior
  };
}
function $7af3f5b51489e0b5$var$convertSelection(selection, defaultValue) {
  if (!selection)
    return defaultValue;
  return selection === "all" ? "all" : new (0, $e40ea825a81a3709$export$52baac22726c72bf)(selection);
}
var $d496c0a20b6e58ec$export$6c8a5aaad13c9852 = class {
  /**
  * The type of selection that is allowed in the collection.
  */
  get selectionMode() {
    return this.state.selectionMode;
  }
  /**
  * Whether the collection allows empty selection.
  */
  get disallowEmptySelection() {
    return this.state.disallowEmptySelection;
  }
  /**
  * The selection behavior for the collection.
  */
  get selectionBehavior() {
    return this.state.selectionBehavior;
  }
  /**
  * Sets the selection behavior for the collection.
  */
  setSelectionBehavior(selectionBehavior) {
    this.state.setSelectionBehavior(selectionBehavior);
  }
  /**
  * Whether the collection is currently focused.
  */
  get isFocused() {
    return this.state.isFocused;
  }
  /**
  * Sets whether the collection is focused.
  */
  setFocused(isFocused) {
    this.state.setFocused(isFocused);
  }
  /**
  * The current focused key in the collection.
  */
  get focusedKey() {
    return this.state.focusedKey;
  }
  /** Whether the first or last child of the focused key should receive focus. */
  get childFocusStrategy() {
    return this.state.childFocusStrategy;
  }
  /**
  * Sets the focused key.
  */
  setFocusedKey(key, childFocusStrategy) {
    if (key == null || this.collection.getItem(key))
      this.state.setFocusedKey(key, childFocusStrategy);
  }
  /**
  * The currently selected keys in the collection.
  */
  get selectedKeys() {
    return this.state.selectedKeys === "all" ? new Set(this.getSelectAllKeys()) : this.state.selectedKeys;
  }
  /**
  * The raw selection value for the collection.
  * Either 'all' for select all, or a set of keys.
  */
  get rawSelection() {
    return this.state.selectedKeys;
  }
  /**
  * Returns whether a key is selected.
  */
  isSelected(key) {
    if (this.state.selectionMode === "none")
      return false;
    key = this.getKey(key);
    return this.state.selectedKeys === "all" ? this.canSelectItem(key) : this.state.selectedKeys.has(key);
  }
  /**
  * Whether the selection is empty.
  */
  get isEmpty() {
    return this.state.selectedKeys !== "all" && this.state.selectedKeys.size === 0;
  }
  /**
  * Whether all items in the collection are selected.
  */
  get isSelectAll() {
    if (this.isEmpty)
      return false;
    if (this.state.selectedKeys === "all")
      return true;
    if (this._isSelectAll != null)
      return this._isSelectAll;
    let allKeys = this.getSelectAllKeys();
    let selectedKeys = this.state.selectedKeys;
    this._isSelectAll = allKeys.every((k) => selectedKeys.has(k));
    return this._isSelectAll;
  }
  get firstSelectedKey() {
    let first = null;
    for (let key of this.state.selectedKeys) {
      let item = this.collection.getItem(key);
      if (!first || item && (0, $c5a24bc478652b5f$export$8c434b3a7a4dad6)(this.collection, item, first) < 0)
        first = item;
    }
    return first === null || first === void 0 ? void 0 : first.key;
  }
  get lastSelectedKey() {
    let last = null;
    for (let key of this.state.selectedKeys) {
      let item = this.collection.getItem(key);
      if (!last || item && (0, $c5a24bc478652b5f$export$8c434b3a7a4dad6)(this.collection, item, last) > 0)
        last = item;
    }
    return last === null || last === void 0 ? void 0 : last.key;
  }
  get disabledKeys() {
    return this.state.disabledKeys;
  }
  get disabledBehavior() {
    return this.state.disabledBehavior;
  }
  /**
  * Extends the selection to the given key.
  */
  extendSelection(toKey) {
    if (this.selectionMode === "none")
      return;
    if (this.selectionMode === "single") {
      this.replaceSelection(toKey);
      return;
    }
    toKey = this.getKey(toKey);
    let selection;
    if (this.state.selectedKeys === "all")
      selection = new (0, $e40ea825a81a3709$export$52baac22726c72bf)([
        toKey
      ], toKey, toKey);
    else {
      let selectedKeys = this.state.selectedKeys;
      let anchorKey = selectedKeys.anchorKey || toKey;
      selection = new (0, $e40ea825a81a3709$export$52baac22726c72bf)(selectedKeys, anchorKey, toKey);
      for (let key of this.getKeyRange(anchorKey, selectedKeys.currentKey || toKey))
        selection.delete(key);
      for (let key of this.getKeyRange(toKey, anchorKey))
        if (this.canSelectItem(key))
          selection.add(key);
    }
    this.state.setSelectedKeys(selection);
  }
  getKeyRange(from, to) {
    let fromItem = this.collection.getItem(from);
    let toItem = this.collection.getItem(to);
    if (fromItem && toItem) {
      if ((0, $c5a24bc478652b5f$export$8c434b3a7a4dad6)(this.collection, fromItem, toItem) <= 0)
        return this.getKeyRangeInternal(from, to);
      return this.getKeyRangeInternal(to, from);
    }
    return [];
  }
  getKeyRangeInternal(from, to) {
    let keys = [];
    let key = from;
    while (key) {
      let item = this.collection.getItem(key);
      if (item && item.type === "item" || item.type === "cell" && this.allowsCellSelection)
        keys.push(key);
      if (key === to)
        return keys;
      key = this.collection.getKeyAfter(key);
    }
    return [];
  }
  getKey(key) {
    let item = this.collection.getItem(key);
    if (!item)
      return key;
    if (item.type === "cell" && this.allowsCellSelection)
      return key;
    while (item.type !== "item" && item.parentKey != null)
      item = this.collection.getItem(item.parentKey);
    if (!item || item.type !== "item")
      return null;
    return item.key;
  }
  /**
  * Toggles whether the given key is selected.
  */
  toggleSelection(key) {
    if (this.selectionMode === "none")
      return;
    if (this.selectionMode === "single" && !this.isSelected(key)) {
      this.replaceSelection(key);
      return;
    }
    key = this.getKey(key);
    if (key == null)
      return;
    let keys = new (0, $e40ea825a81a3709$export$52baac22726c72bf)(this.state.selectedKeys === "all" ? this.getSelectAllKeys() : this.state.selectedKeys);
    if (keys.has(key))
      keys.delete(key);
    else if (this.canSelectItem(key)) {
      keys.add(key);
      keys.anchorKey = key;
      keys.currentKey = key;
    }
    if (this.disallowEmptySelection && keys.size === 0)
      return;
    this.state.setSelectedKeys(keys);
  }
  /**
  * Replaces the selection with only the given key.
  */
  replaceSelection(key) {
    if (this.selectionMode === "none")
      return;
    key = this.getKey(key);
    if (key == null)
      return;
    let selection = this.canSelectItem(key) ? new (0, $e40ea825a81a3709$export$52baac22726c72bf)([
      key
    ], key, key) : new (0, $e40ea825a81a3709$export$52baac22726c72bf)();
    this.state.setSelectedKeys(selection);
  }
  /**
  * Replaces the selection with the given keys.
  */
  setSelectedKeys(keys) {
    if (this.selectionMode === "none")
      return;
    let selection = new (0, $e40ea825a81a3709$export$52baac22726c72bf)();
    for (let key of keys) {
      key = this.getKey(key);
      if (key != null) {
        selection.add(key);
        if (this.selectionMode === "single")
          break;
      }
    }
    this.state.setSelectedKeys(selection);
  }
  getSelectAllKeys() {
    let keys = [];
    let addKeys = (key) => {
      while (key) {
        if (this.canSelectItem(key)) {
          let item = this.collection.getItem(key);
          if (item.type === "item")
            keys.push(key);
          if (item.hasChildNodes && (this.allowsCellSelection || item.type !== "item"))
            addKeys((0, $c5a24bc478652b5f$export$fbdeaa6a76694f71)((0, $c5a24bc478652b5f$export$1005530eda016c13)(item, this.collection)).key);
        }
        key = this.collection.getKeyAfter(key);
      }
    };
    addKeys(this.collection.getFirstKey());
    return keys;
  }
  /**
  * Selects all items in the collection.
  */
  selectAll() {
    if (!this.isSelectAll && this.selectionMode === "multiple")
      this.state.setSelectedKeys("all");
  }
  /**
  * Removes all keys from the selection.
  */
  clearSelection() {
    if (!this.disallowEmptySelection && (this.state.selectedKeys === "all" || this.state.selectedKeys.size > 0))
      this.state.setSelectedKeys(new (0, $e40ea825a81a3709$export$52baac22726c72bf)());
  }
  /**
  * Toggles between select all and an empty selection.
  */
  toggleSelectAll() {
    if (this.isSelectAll)
      this.clearSelection();
    else
      this.selectAll();
  }
  select(key, e) {
    if (this.selectionMode === "none")
      return;
    if (this.selectionMode === "single") {
      if (this.isSelected(key) && !this.disallowEmptySelection)
        this.toggleSelection(key);
      else
        this.replaceSelection(key);
    } else if (this.selectionBehavior === "toggle" || e && (e.pointerType === "touch" || e.pointerType === "virtual"))
      this.toggleSelection(key);
    else
      this.replaceSelection(key);
  }
  /**
  * Returns whether the current selection is equal to the given selection.
  */
  isSelectionEqual(selection) {
    if (selection === this.state.selectedKeys)
      return true;
    let selectedKeys = this.selectedKeys;
    if (selection.size !== selectedKeys.size)
      return false;
    for (let key of selection) {
      if (!selectedKeys.has(key))
        return false;
    }
    for (let key of selectedKeys) {
      if (!selection.has(key))
        return false;
    }
    return true;
  }
  canSelectItem(key) {
    if (this.state.selectionMode === "none" || this.state.disabledKeys.has(key))
      return false;
    let item = this.collection.getItem(key);
    if (!item || item.type === "cell" && !this.allowsCellSelection)
      return false;
    return true;
  }
  isDisabled(key) {
    return this.state.disabledKeys.has(key) && this.state.disabledBehavior === "all";
  }
  constructor(collection, state, options) {
    this.collection = collection;
    this.state = state;
    var _options_allowsCellSelection;
    this.allowsCellSelection = (_options_allowsCellSelection = options === null || options === void 0 ? void 0 : options.allowsCellSelection) !== null && _options_allowsCellSelection !== void 0 ? _options_allowsCellSelection : false;
    this._isSelectAll = null;
  }
};

// node_modules/.pnpm/@react-stately+list@3.9.1_react@18.2.0/node_modules/@react-stately/list/dist/module.js
var $a02d57049d202695$export$d085fb9e920b5ca7 = class {
  *[Symbol.iterator]() {
    yield* this.iterable;
  }
  get size() {
    return this.keyMap.size;
  }
  getKeys() {
    return this.keyMap.keys();
  }
  getKeyBefore(key) {
    let node = this.keyMap.get(key);
    return node ? node.prevKey : null;
  }
  getKeyAfter(key) {
    let node = this.keyMap.get(key);
    return node ? node.nextKey : null;
  }
  getFirstKey() {
    return this.firstKey;
  }
  getLastKey() {
    return this.lastKey;
  }
  getItem(key) {
    return this.keyMap.get(key);
  }
  at(idx) {
    const keys = [
      ...this.getKeys()
    ];
    return this.getItem(keys[idx]);
  }
  getChildren(key) {
    let node = this.keyMap.get(key);
    return (node === null || node === void 0 ? void 0 : node.childNodes) || [];
  }
  constructor(nodes) {
    this.keyMap = /* @__PURE__ */ new Map();
    this.iterable = nodes;
    let visit = (node) => {
      this.keyMap.set(node.key, node);
      if (node.childNodes && node.type === "section")
        for (let child of node.childNodes)
          visit(child);
    };
    for (let node of nodes)
      visit(node);
    let last;
    let index = 0;
    for (let [key, node] of this.keyMap) {
      if (last) {
        last.nextKey = key;
        node.prevKey = last.key;
      } else {
        this.firstKey = key;
        node.prevKey = void 0;
      }
      if (node.type === "item")
        node.index = index++;
      last = node;
      last.nextKey = void 0;
    }
    this.lastKey = last === null || last === void 0 ? void 0 : last.key;
  }
};
function $e72dd72e1c76a225$export$2f645645f7bca764(props) {
  let { filter } = props;
  let selectionState = (0, $7af3f5b51489e0b5$export$253fe78d46329472)(props);
  let disabledKeys = (0, import_react33.useMemo)(() => props.disabledKeys ? new Set(props.disabledKeys) : /* @__PURE__ */ new Set(), [
    props.disabledKeys
  ]);
  let factory = (0, import_react33.useCallback)((nodes) => filter ? new (0, $a02d57049d202695$export$d085fb9e920b5ca7)(filter(nodes)) : new (0, $a02d57049d202695$export$d085fb9e920b5ca7)(nodes), [
    filter
  ]);
  let context = (0, import_react33.useMemo)(() => ({
    suppressTextValueWarning: props.suppressTextValueWarning
  }), [
    props.suppressTextValueWarning
  ]);
  let collection = (0, $7613b1592d41b092$export$6cd28814d92fa9c9)(props, factory, context);
  let selectionManager = (0, import_react33.useMemo)(() => new (0, $d496c0a20b6e58ec$export$6c8a5aaad13c9852)(collection, selectionState), [
    collection,
    selectionState
  ]);
  const cachedCollection = (0, import_react33.useRef)(null);
  (0, import_react33.useEffect)(() => {
    if (selectionState.focusedKey != null && !collection.getItem(selectionState.focusedKey)) {
      const startItem = cachedCollection.current.getItem(selectionState.focusedKey);
      const cachedItemNodes = [
        ...cachedCollection.current.getKeys()
      ].map((key) => {
        const itemNode = cachedCollection.current.getItem(key);
        return itemNode.type === "item" ? itemNode : null;
      }).filter((node) => node !== null);
      const itemNodes = [
        ...collection.getKeys()
      ].map((key) => {
        const itemNode = collection.getItem(key);
        return itemNode.type === "item" ? itemNode : null;
      }).filter((node) => node !== null);
      const diff = cachedItemNodes.length - itemNodes.length;
      let index = Math.min(diff > 1 ? Math.max(startItem.index - diff + 1, 0) : startItem.index, itemNodes.length - 1);
      let newNode;
      while (index >= 0) {
        if (!selectionManager.isDisabled(itemNodes[index].key)) {
          newNode = itemNodes[index];
          break;
        }
        if (index < itemNodes.length - 1)
          index++;
        else {
          if (index > startItem.index)
            index = startItem.index;
          index--;
        }
      }
      selectionState.setFocusedKey(newNode ? newNode.key : null);
    }
    cachedCollection.current = collection;
  }, [
    collection,
    selectionManager,
    selectionState,
    selectionState.focusedKey
  ]);
  return {
    collection,
    disabledKeys,
    selectionManager
  };
}
function $a0d645289fe9b86b$export$e7f05e985daf4b5f(props) {
  var _props_defaultSelectedKey;
  let [selectedKey, setSelectedKey] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.selectedKey, (_props_defaultSelectedKey = props.defaultSelectedKey) !== null && _props_defaultSelectedKey !== void 0 ? _props_defaultSelectedKey : null, props.onSelectionChange);
  let selectedKeys = (0, import_react33.useMemo)(() => selectedKey != null ? [
    selectedKey
  ] : [], [
    selectedKey
  ]);
  let { collection, disabledKeys, selectionManager } = (0, $e72dd72e1c76a225$export$2f645645f7bca764)({
    ...props,
    selectionMode: "single",
    disallowEmptySelection: true,
    allowDuplicateSelectionEvents: true,
    selectedKeys,
    onSelectionChange: (keys) => {
      let key = keys.values().next().value;
      if (key === selectedKey && props.onSelectionChange)
        props.onSelectionChange(key);
      setSelectedKey(key);
    }
  });
  let selectedItem = selectedKey != null ? collection.getItem(selectedKey) : null;
  return {
    collection,
    disabledKeys,
    selectionManager,
    selectedKey,
    setSelectedKey,
    selectedItem
  };
}

// node_modules/.pnpm/@react-stately+combobox@3.6.0_react@18.2.0/node_modules/@react-stately/combobox/dist/module.js
var import_react36 = __toESM(require_react());

// node_modules/.pnpm/@react-stately+overlays@3.6.1_react@18.2.0/node_modules/@react-stately/overlays/dist/module.js
var import_react34 = __toESM(require_react());
function $fc909762b330b746$export$61c6a8c84e605fb6(props) {
  let [isOpen, setOpen] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.isOpen, props.defaultOpen || false, props.onOpenChange);
  const open = (0, import_react34.useCallback)(() => {
    setOpen(true);
  }, [
    setOpen
  ]);
  const close = (0, import_react34.useCallback)(() => {
    setOpen(false);
  }, [
    setOpen
  ]);
  const toggle = (0, import_react34.useCallback)(() => {
    setOpen(!isOpen);
  }, [
    setOpen,
    isOpen
  ]);
  return {
    isOpen,
    setOpen,
    open,
    close,
    toggle
  };
}

// node_modules/.pnpm/@react-stately+menu@3.5.4_react@18.2.0/node_modules/@react-stately/menu/dist/module.js
var import_react35 = __toESM(require_react());
function $a28c903ee9ad8dc5$export$79fefeb1c2091ac3(props) {
  let overlayTriggerState = (0, $fc909762b330b746$export$61c6a8c84e605fb6)(props);
  let [focusStrategy, setFocusStrategy] = (0, import_react35.useState)(null);
  return {
    focusStrategy,
    ...overlayTriggerState,
    open(focusStrategy2 = null) {
      setFocusStrategy(focusStrategy2);
      overlayTriggerState.open();
    },
    toggle(focusStrategy2 = null) {
      setFocusStrategy(focusStrategy2);
      overlayTriggerState.toggle();
    }
  };
}

// node_modules/.pnpm/@react-stately+combobox@3.6.0_react@18.2.0/node_modules/@react-stately/combobox/dist/module.js
function $a9e7382a7d111cb5$export$b453a3bfd4a5fa9e(props) {
  var _collection_getItem;
  let { defaultFilter, menuTrigger = "input", allowsEmptyCollection = false, allowsCustomValue, shouldCloseOnBlur = true } = props;
  let [showAllItems, setShowAllItems] = (0, import_react36.useState)(false);
  let [isFocused, setFocusedState] = (0, import_react36.useState)(false);
  var _props_defaultInputValue;
  let [inputValue, setInputValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.inputValue, (_props_defaultInputValue = props.defaultInputValue) !== null && _props_defaultInputValue !== void 0 ? _props_defaultInputValue : "", props.onInputChange);
  let onSelectionChange = (key) => {
    if (props.onSelectionChange)
      props.onSelectionChange(key);
    if (key === selectedKey) {
      resetInputValue();
      closeMenu();
    }
  };
  var _props_items;
  let { collection, selectionManager, selectedKey, setSelectedKey, selectedItem, disabledKeys } = (0, $a0d645289fe9b86b$export$e7f05e985daf4b5f)({
    ...props,
    onSelectionChange,
    items: (_props_items = props.items) !== null && _props_items !== void 0 ? _props_items : props.defaultItems
  });
  let originalCollection = collection;
  let filteredCollection = (0, import_react36.useMemo)(() => (
    // No default filter if items are controlled.
    props.items != null || !defaultFilter ? collection : $a9e7382a7d111cb5$var$filterCollection(collection, inputValue, defaultFilter)
  ), [
    collection,
    inputValue,
    defaultFilter,
    props.items
  ]);
  let [lastCollection, setLastCollection] = (0, import_react36.useState)(filteredCollection);
  let menuOpenTrigger = (0, import_react36.useRef)("focus");
  let onOpenChange = (open2) => {
    if (props.onOpenChange)
      props.onOpenChange(open2, open2 ? menuOpenTrigger.current : void 0);
    selectionManager.setFocused(open2);
    if (!open2)
      selectionManager.setFocusedKey(null);
  };
  let triggerState = (0, $a28c903ee9ad8dc5$export$79fefeb1c2091ac3)({
    ...props,
    onOpenChange,
    isOpen: void 0,
    defaultOpen: void 0
  });
  let open = (focusStrategy, trigger) => {
    let displayAllItems = trigger === "manual" || trigger === "focus" && menuTrigger === "focus";
    if (allowsEmptyCollection || filteredCollection.size > 0 || displayAllItems && originalCollection.size > 0 || props.items) {
      if (displayAllItems && !triggerState.isOpen && props.items === void 0)
        setShowAllItems(true);
      menuOpenTrigger.current = trigger;
      triggerState.open(focusStrategy);
    }
  };
  let toggle = (focusStrategy, trigger) => {
    let displayAllItems = trigger === "manual" || trigger === "focus" && menuTrigger === "focus";
    if (!(allowsEmptyCollection || filteredCollection.size > 0 || displayAllItems && originalCollection.size > 0 || props.items) && !triggerState.isOpen)
      return;
    if (displayAllItems && !triggerState.isOpen && props.items === void 0)
      setShowAllItems(true);
    if (!triggerState.isOpen)
      menuOpenTrigger.current = trigger;
    toggleMenu(focusStrategy);
  };
  let toggleMenu = (0, import_react36.useCallback)((focusStrategy) => {
    if (triggerState.isOpen)
      setLastCollection(filteredCollection);
    triggerState.toggle(focusStrategy);
  }, [
    triggerState,
    filteredCollection
  ]);
  let closeMenu = (0, import_react36.useCallback)(() => {
    if (triggerState.isOpen) {
      setLastCollection(filteredCollection);
      triggerState.close();
    }
  }, [
    triggerState,
    filteredCollection
  ]);
  let lastValue = (0, import_react36.useRef)(inputValue);
  let resetInputValue = () => {
    var _collection_getItem2;
    var _collection_getItem_textValue2;
    let itemText = (_collection_getItem_textValue2 = (_collection_getItem2 = collection.getItem(selectedKey)) === null || _collection_getItem2 === void 0 ? void 0 : _collection_getItem2.textValue) !== null && _collection_getItem_textValue2 !== void 0 ? _collection_getItem_textValue2 : "";
    lastValue.current = itemText;
    setInputValue(itemText);
  };
  let isInitialRender = (0, import_react36.useRef)(true);
  var _props_selectedKey, _ref;
  let lastSelectedKey = (0, import_react36.useRef)((_ref = (_props_selectedKey = props.selectedKey) !== null && _props_selectedKey !== void 0 ? _props_selectedKey : props.defaultSelectedKey) !== null && _ref !== void 0 ? _ref : null);
  var _collection_getItem_textValue;
  let lastSelectedKeyText = (0, import_react36.useRef)((_collection_getItem_textValue = (_collection_getItem = collection.getItem(selectedKey)) === null || _collection_getItem === void 0 ? void 0 : _collection_getItem.textValue) !== null && _collection_getItem_textValue !== void 0 ? _collection_getItem_textValue : "");
  (0, import_react36.useEffect)(() => {
    var _collection_getItem2;
    if (isFocused && (filteredCollection.size > 0 || allowsEmptyCollection) && !triggerState.isOpen && inputValue !== lastValue.current && menuTrigger !== "manual")
      open(null, "input");
    if (!showAllItems && !allowsEmptyCollection && triggerState.isOpen && filteredCollection.size === 0)
      closeMenu();
    if (selectedKey != null && selectedKey !== lastSelectedKey.current)
      closeMenu();
    if (inputValue !== lastValue.current) {
      selectionManager.setFocusedKey(null);
      setShowAllItems(false);
      if (inputValue === "" && (props.inputValue === void 0 || props.selectedKey === void 0))
        setSelectedKey(null);
    }
    if (isInitialRender.current && props.inputValue === void 0 && props.defaultInputValue === void 0)
      resetInputValue();
    if (selectedKey !== lastSelectedKey.current && (props.inputValue === void 0 || props.selectedKey === void 0))
      resetInputValue();
    else
      lastValue.current = inputValue;
    var _collection_getItem_textValue2;
    let selectedItemText = (_collection_getItem_textValue2 = (_collection_getItem2 = collection.getItem(selectedKey)) === null || _collection_getItem2 === void 0 ? void 0 : _collection_getItem2.textValue) !== null && _collection_getItem_textValue2 !== void 0 ? _collection_getItem_textValue2 : "";
    if (!isFocused && selectedKey != null && props.inputValue === void 0 && selectedKey === lastSelectedKey.current) {
      if (lastSelectedKeyText.current !== selectedItemText) {
        lastValue.current = selectedItemText;
        setInputValue(selectedItemText);
      }
    }
    isInitialRender.current = false;
    lastSelectedKey.current = selectedKey;
    lastSelectedKeyText.current = selectedItemText;
  });
  let revert = () => {
    if (allowsCustomValue && selectedKey == null)
      commitCustomValue();
    else
      commitSelection();
  };
  let commitCustomValue = () => {
    lastSelectedKey.current = null;
    setSelectedKey(null);
    closeMenu();
  };
  let commitSelection = () => {
    if (props.selectedKey !== void 0 && props.inputValue !== void 0) {
      var _collection_getItem2;
      props.onSelectionChange(selectedKey);
      var _collection_getItem_textValue2;
      let itemText = (_collection_getItem_textValue2 = (_collection_getItem2 = collection.getItem(selectedKey)) === null || _collection_getItem2 === void 0 ? void 0 : _collection_getItem2.textValue) !== null && _collection_getItem_textValue2 !== void 0 ? _collection_getItem_textValue2 : "";
      lastValue.current = itemText;
      closeMenu();
    } else {
      resetInputValue();
      closeMenu();
    }
  };
  const commitValue = () => {
    if (allowsCustomValue) {
      var _collection_getItem2;
      var _collection_getItem_textValue2;
      const itemText = (_collection_getItem_textValue2 = (_collection_getItem2 = collection.getItem(selectedKey)) === null || _collection_getItem2 === void 0 ? void 0 : _collection_getItem2.textValue) !== null && _collection_getItem_textValue2 !== void 0 ? _collection_getItem_textValue2 : "";
      inputValue === itemText ? commitSelection() : commitCustomValue();
    } else
      commitSelection();
  };
  let commit = () => {
    if (triggerState.isOpen && selectionManager.focusedKey != null) {
      if (selectedKey === selectionManager.focusedKey)
        commitSelection();
      else
        setSelectedKey(selectionManager.focusedKey);
    } else
      commitValue();
  };
  let setFocused = (isFocused2) => {
    if (isFocused2) {
      if (menuTrigger === "focus")
        open(null, "focus");
    } else if (shouldCloseOnBlur)
      commitValue();
    setFocusedState(isFocused2);
  };
  let displayedCollection = (0, import_react36.useMemo)(() => {
    if (triggerState.isOpen) {
      if (showAllItems)
        return originalCollection;
      else
        return filteredCollection;
    } else
      return lastCollection;
  }, [
    triggerState.isOpen,
    originalCollection,
    filteredCollection,
    showAllItems,
    lastCollection
  ]);
  return {
    ...triggerState,
    toggle,
    open,
    close: commitValue,
    selectionManager,
    selectedKey,
    setSelectedKey,
    disabledKeys,
    isFocused,
    setFocused,
    selectedItem,
    collection: displayedCollection,
    inputValue,
    setInputValue,
    commit,
    revert
  };
}
function $a9e7382a7d111cb5$var$filterCollection(collection, inputValue, filter) {
  return new (0, $a02d57049d202695$export$d085fb9e920b5ca7)($a9e7382a7d111cb5$var$filterNodes(collection, collection, inputValue, filter));
}
function $a9e7382a7d111cb5$var$filterNodes(collection, nodes, inputValue, filter) {
  let filteredNode = [];
  for (let node of nodes) {
    if (node.type === "section" && node.hasChildNodes) {
      let filtered = $a9e7382a7d111cb5$var$filterNodes(collection, (0, $c5a24bc478652b5f$export$1005530eda016c13)(node, collection), inputValue, filter);
      if ([
        ...filtered
      ].some((node2) => node2.type === "item"))
        filteredNode.push({
          ...node,
          childNodes: filtered
        });
    } else if (node.type === "item" && filter(node.textValue, inputValue))
      filteredNode.push({
        ...node
      });
    else if (node.type !== "item")
      filteredNode.push({
        ...node
      });
  }
  return filteredNode;
}

// node_modules/.pnpm/@react-stately+datepicker@3.6.0_react@18.2.0/node_modules/@react-stately/datepicker/dist/module.js
var import_react37 = __toESM(require_react());
function $35a22f14a1f04b11$export$eac50920cf2fd59a(value, minValue, maxValue) {
  return value != null && (minValue != null && value.compare(minValue) < 0 || maxValue != null && value.compare(maxValue) > 0);
}
var $35a22f14a1f04b11$var$DEFAULT_FIELD_OPTIONS = {
  year: "numeric",
  month: "numeric",
  day: "numeric",
  hour: "numeric",
  minute: "2-digit",
  second: "2-digit"
};
var $35a22f14a1f04b11$var$TWO_DIGIT_FIELD_OPTIONS = {
  year: "numeric",
  month: "2-digit",
  day: "2-digit",
  hour: "2-digit",
  minute: "2-digit",
  second: "2-digit"
};
function $35a22f14a1f04b11$export$7e319ea407e63bc0(fieldOptions, options) {
  let defaultFieldOptions = options.shouldForceLeadingZeros ? $35a22f14a1f04b11$var$TWO_DIGIT_FIELD_OPTIONS : $35a22f14a1f04b11$var$DEFAULT_FIELD_OPTIONS;
  fieldOptions = {
    ...defaultFieldOptions,
    ...fieldOptions
  };
  let granularity = options.granularity || "minute";
  let keys = Object.keys(fieldOptions);
  var _options_maxGranularity;
  let startIdx = keys.indexOf((_options_maxGranularity = options.maxGranularity) !== null && _options_maxGranularity !== void 0 ? _options_maxGranularity : "year");
  if (startIdx < 0)
    startIdx = 0;
  let endIdx = keys.indexOf(granularity);
  if (endIdx < 0)
    endIdx = 2;
  if (startIdx > endIdx)
    throw new Error("maxGranularity must be greater than granularity");
  let opts = keys.slice(startIdx, endIdx + 1).reduce((opts2, key) => {
    opts2[key] = fieldOptions[key];
    return opts2;
  }, {});
  if (options.hourCycle != null)
    opts.hour12 = options.hourCycle === 12;
  opts.timeZone = options.timeZone || "UTC";
  let hasTime = granularity === "hour" || granularity === "minute" || granularity === "second";
  if (hasTime && options.timeZone && !options.hideTimeZone)
    opts.timeZoneName = "short";
  if (options.showEra && startIdx === 0)
    opts.era = "short";
  return opts;
}
function $35a22f14a1f04b11$export$c5221a78ef73c5e9(placeholderValue) {
  if (placeholderValue && "hour" in placeholderValue)
    return placeholderValue;
  return new (0, $35ea8db9cb2ccb90$export$680ea196effce5f)();
}
function $35a22f14a1f04b11$export$61a490a80c552550(value, calendar) {
  if (value === null)
    return null;
  if (!value)
    return void 0;
  return (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(value, calendar);
}
function $35a22f14a1f04b11$export$66aa2b09de4b1ea5(placeholderValue, granularity, calendar, timeZone) {
  if (placeholderValue)
    return $35a22f14a1f04b11$export$61a490a80c552550(placeholderValue, calendar);
  let date = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)((0, $14e0f24ef4ac5c92$export$461939dd4422153)(timeZone).set({
    hour: 0,
    minute: 0,
    second: 0,
    millisecond: 0
  }), calendar);
  if (granularity === "year" || granularity === "month" || granularity === "day")
    return (0, $11d87f3f76e88657$export$93522d1a439f3617)(date);
  if (!timeZone)
    return (0, $11d87f3f76e88657$export$b21e0b124e224484)(date);
  return date;
}
function $35a22f14a1f04b11$export$2440da353cedad43(v, granularity) {
  let defaultTimeZone = v && "timeZone" in v ? v.timeZone : void 0;
  let defaultGranularity = v && "minute" in v ? "minute" : "day";
  if (v && granularity && !(granularity in v))
    throw new Error("Invalid granularity " + granularity + " for value " + v.toString());
  let [lastValue, setLastValue] = (0, import_react37.useState)([
    defaultGranularity,
    defaultTimeZone
  ]);
  if (v && (lastValue[0] !== defaultGranularity || lastValue[1] !== defaultTimeZone))
    setLastValue([
      defaultGranularity,
      defaultTimeZone
    ]);
  if (!granularity)
    granularity = v ? defaultGranularity : lastValue[0];
  let timeZone = v ? defaultTimeZone : lastValue[1];
  return [
    granularity,
    timeZone
  ];
}
function $ab5bf3f618090389$export$87194bb378cc3ac2(props) {
  var _props_isDateUnavailable;
  let overlayState = (0, $fc909762b330b746$export$61c6a8c84e605fb6)(props);
  let [value, setValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.value, props.defaultValue || null, props.onChange);
  let v = value || props.placeholderValue;
  let [granularity, defaultTimeZone] = (0, $35a22f14a1f04b11$export$2440da353cedad43)(v, props.granularity);
  let dateValue = value != null ? value.toDate(defaultTimeZone !== null && defaultTimeZone !== void 0 ? defaultTimeZone : "UTC") : null;
  let hasTime = granularity === "hour" || granularity === "minute" || granularity === "second";
  var _props_shouldCloseOnSelect;
  let shouldCloseOnSelect = (_props_shouldCloseOnSelect = props.shouldCloseOnSelect) !== null && _props_shouldCloseOnSelect !== void 0 ? _props_shouldCloseOnSelect : true;
  let [selectedDate, setSelectedDate] = (0, import_react37.useState)(null);
  let [selectedTime, setSelectedTime] = (0, import_react37.useState)(null);
  if (value) {
    selectedDate = value;
    if ("hour" in value)
      selectedTime = value;
  }
  if (v && !(granularity in v))
    throw new Error("Invalid granularity " + granularity + " for value " + v.toString());
  let commitValue = (date, time) => {
    setValue("timeZone" in time ? time.set((0, $11d87f3f76e88657$export$93522d1a439f3617)(date)) : (0, $11d87f3f76e88657$export$b21e0b124e224484)(date, time));
    setSelectedDate(null);
    setSelectedTime(null);
  };
  let selectDate = (newValue) => {
    let shouldClose = typeof shouldCloseOnSelect === "function" ? shouldCloseOnSelect() : shouldCloseOnSelect;
    if (hasTime) {
      if (selectedTime || shouldClose)
        commitValue(newValue, selectedTime || (0, $35a22f14a1f04b11$export$c5221a78ef73c5e9)(props.placeholderValue));
      else
        setSelectedDate(newValue);
    } else
      setValue(newValue);
    if (shouldClose)
      overlayState.setOpen(false);
  };
  let selectTime = (newValue) => {
    if (selectedDate && newValue)
      commitValue(selectedDate, newValue);
    else
      setSelectedTime(newValue);
  };
  let validationState = props.validationState || ((0, $35a22f14a1f04b11$export$eac50920cf2fd59a)(value, props.minValue, props.maxValue) ? "invalid" : null) || (value && ((_props_isDateUnavailable = props.isDateUnavailable) === null || _props_isDateUnavailable === void 0 ? void 0 : _props_isDateUnavailable.call(props, value)) ? "invalid" : null);
  return {
    value,
    setValue,
    dateValue: selectedDate,
    timeValue: selectedTime,
    setDateValue: selectDate,
    setTimeValue: selectTime,
    granularity,
    hasTime,
    ...overlayState,
    setOpen(isOpen) {
      if (!isOpen && !value && selectedDate && hasTime)
        commitValue(selectedDate, selectedTime || (0, $35a22f14a1f04b11$export$c5221a78ef73c5e9)(props.placeholderValue));
      overlayState.setOpen(isOpen);
    },
    validationState,
    formatValue(locale, fieldOptions) {
      if (!dateValue)
        return "";
      let formatOptions = (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)(fieldOptions, {
        granularity,
        timeZone: defaultTimeZone,
        hideTimeZone: props.hideTimeZone,
        hourCycle: props.hourCycle,
        showEra: value.calendar.identifier === "gregory" && value.era === "BC"
      });
      let formatter = new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale, formatOptions);
      return formatter.format(dateValue);
    }
  };
}
var $3e3ed55ab2966714$var$placeholders = new (0, $5b160d28a433310d$export$c17fa47878dc55b6)({
  ach: {
    year: "mwaka",
    month: "dwe",
    day: "nino"
  },
  af: {
    year: "jjjj",
    month: "mm",
    day: "dd"
  },
  am: {
    year: "ዓዓዓዓ",
    month: "ሚሜ",
    day: "ቀቀ"
  },
  an: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  ar: {
    year: "سنة",
    month: "شهر",
    day: "يوم"
  },
  ast: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  az: {
    year: "iiii",
    month: "aa",
    day: "gg"
  },
  be: {
    year: "гггг",
    month: "мм",
    day: "дд"
  },
  bg: {
    year: "гггг",
    month: "мм",
    day: "дд"
  },
  bn: {
    year: "yyyy",
    month: "মিমি",
    day: "dd"
  },
  br: {
    year: "bbbb",
    month: "mm",
    day: "dd"
  },
  bs: {
    year: "gggg",
    month: "mm",
    day: "dd"
  },
  ca: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  cak: {
    year: "jjjj",
    month: "ii",
    day: "q'q'"
  },
  ckb: {
    year: "ساڵ",
    month: "مانگ",
    day: "ڕۆژ"
  },
  cs: {
    year: "rrrr",
    month: "mm",
    day: "dd"
  },
  cy: {
    year: "bbbb",
    month: "mm",
    day: "dd"
  },
  da: {
    year: "åååå",
    month: "mm",
    day: "dd"
  },
  de: {
    year: "jjjj",
    month: "mm",
    day: "tt"
  },
  dsb: {
    year: "llll",
    month: "mm",
    day: "źź"
  },
  el: {
    year: "εεεε",
    month: "μμ",
    day: "ηη"
  },
  en: {
    year: "yyyy",
    month: "mm",
    day: "dd"
  },
  eo: {
    year: "jjjj",
    month: "mm",
    day: "tt"
  },
  es: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  et: {
    year: "aaaa",
    month: "kk",
    day: "pp"
  },
  eu: {
    year: "uuuu",
    month: "hh",
    day: "ee"
  },
  fa: {
    year: "سال",
    month: "ماه",
    day: "روز"
  },
  ff: {
    year: "hhhh",
    month: "ll",
    day: "ññ"
  },
  fi: {
    year: "vvvv",
    month: "kk",
    day: "pp"
  },
  fr: {
    year: "aaaa",
    month: "mm",
    day: "jj"
  },
  fy: {
    year: "jjjj",
    month: "mm",
    day: "dd"
  },
  ga: {
    year: "bbbb",
    month: "mm",
    day: "ll"
  },
  gd: {
    year: "bbbb",
    month: "mm",
    day: "ll"
  },
  gl: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  he: {
    year: "שנה",
    month: "חודש",
    day: "יום"
  },
  hr: {
    year: "gggg",
    month: "mm",
    day: "dd"
  },
  hsb: {
    year: "llll",
    month: "mm",
    day: "dd"
  },
  hu: {
    year: "éééé",
    month: "hh",
    day: "nn"
  },
  ia: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  id: {
    year: "tttt",
    month: "bb",
    day: "hh"
  },
  it: {
    year: "aaaa",
    month: "mm",
    day: "gg"
  },
  ja: {
    year: " 年 ",
    month: "月",
    day: "日"
  },
  ka: {
    year: "წწწწ",
    month: "თთ",
    day: "რრ"
  },
  kk: {
    year: "жжжж",
    month: "аа",
    day: "кк"
  },
  kn: {
    year: "ವವವವ",
    month: "ಮಿಮೀ",
    day: "ದಿದಿ"
  },
  ko: {
    year: "연도",
    month: "월",
    day: "일"
  },
  lb: {
    year: "jjjj",
    month: "mm",
    day: "dd"
  },
  lo: {
    year: "ປປປປ",
    month: "ດດ",
    day: "ວວ"
  },
  lt: {
    year: "mmmm",
    month: "mm",
    day: "dd"
  },
  lv: {
    year: "gggg",
    month: "mm",
    day: "dd"
  },
  meh: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  ml: {
    year: "വർഷം",
    month: "മാസം",
    day: "തീയതി"
  },
  ms: {
    year: "tttt",
    month: "mm",
    day: "hh"
  },
  nl: {
    year: "jjjj",
    month: "mm",
    day: "dd"
  },
  nn: {
    year: "åååå",
    month: "mm",
    day: "dd"
  },
  no: {
    year: "åååå",
    month: "mm",
    day: "dd"
  },
  oc: {
    year: "aaaa",
    month: "mm",
    day: "jj"
  },
  pl: {
    year: "rrrr",
    month: "mm",
    day: "dd"
  },
  pt: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  rm: {
    year: "oooo",
    month: "mm",
    day: "dd"
  },
  ro: {
    year: "aaaa",
    month: "ll",
    day: "zz"
  },
  ru: {
    year: "гггг",
    month: "мм",
    day: "дд"
  },
  sc: {
    year: "aaaa",
    month: "mm",
    day: "dd"
  },
  scn: {
    year: "aaaa",
    month: "mm",
    day: "jj"
  },
  sk: {
    year: "rrrr",
    month: "mm",
    day: "dd"
  },
  sl: {
    year: "llll",
    month: "mm",
    day: "dd"
  },
  sr: {
    year: "гггг",
    month: "мм",
    day: "дд"
  },
  sv: {
    year: "åååå",
    month: "mm",
    day: "dd"
  },
  szl: {
    year: "rrrr",
    month: "mm",
    day: "dd"
  },
  tg: {
    year: "сссс",
    month: "мм",
    day: "рр"
  },
  th: {
    year: "ปปปป",
    month: "ดด",
    day: "วว"
  },
  tr: {
    year: "yyyy",
    month: "aa",
    day: "gg"
  },
  uk: {
    year: "рррр",
    month: "мм",
    day: "дд"
  },
  "zh-CN": {
    year: "年",
    month: "月",
    day: "日"
  },
  "zh-TW": {
    year: "年",
    month: "月",
    day: "日"
  }
}, "en");
function $3e3ed55ab2966714$export$d3f5c5e0a5023fa0(field, value, locale) {
  if (field === "era" || field === "dayPeriod")
    return value;
  if (field === "year" || field === "month" || field === "day")
    return $3e3ed55ab2966714$var$placeholders.getStringForLocale(field, locale);
  return "––";
}
var $3c0fc76039f1c516$var$EDITABLE_SEGMENTS = {
  year: true,
  month: true,
  day: true,
  hour: true,
  minute: true,
  second: true,
  dayPeriod: true,
  era: true
};
var $3c0fc76039f1c516$var$PAGE_STEP = {
  year: 5,
  month: 2,
  day: 7,
  hour: 2,
  minute: 15,
  second: 15
};
var $3c0fc76039f1c516$var$TYPE_MAPPING = {
  dayperiod: "dayPeriod"
};
function $3c0fc76039f1c516$export$60e84778edff6d26(props) {
  let { locale, createCalendar, hideTimeZone, isDisabled, isReadOnly, isRequired } = props;
  let v = props.value || props.defaultValue || props.placeholderValue;
  let [granularity, defaultTimeZone] = (0, $35a22f14a1f04b11$export$2440da353cedad43)(v, props.granularity);
  let timeZone = defaultTimeZone || "UTC";
  if (v && !(granularity in v))
    throw new Error("Invalid granularity " + granularity + " for value " + v.toString());
  let defaultFormatter = (0, import_react37.useMemo)(() => new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale), [
    locale
  ]);
  let calendar = (0, import_react37.useMemo)(() => createCalendar(defaultFormatter.resolvedOptions().calendar), [
    createCalendar,
    defaultFormatter
  ]);
  let [value, setDate] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.value, props.defaultValue, props.onChange);
  let calendarValue = (0, import_react37.useMemo)(() => (0, $35a22f14a1f04b11$export$61a490a80c552550)(value, calendar), [
    value,
    calendar
  ]);
  let [placeholderDate, setPlaceholderDate] = (0, import_react37.useState)(() => (0, $35a22f14a1f04b11$export$66aa2b09de4b1ea5)(props.placeholderValue, granularity, calendar, defaultTimeZone));
  let val = calendarValue || placeholderDate;
  let showEra = calendar.identifier === "gregory" && val.era === "BC";
  var _props_maxGranularity;
  let formatOpts = (0, import_react37.useMemo)(() => ({
    granularity,
    maxGranularity: (_props_maxGranularity = props.maxGranularity) !== null && _props_maxGranularity !== void 0 ? _props_maxGranularity : "year",
    timeZone: defaultTimeZone,
    hideTimeZone,
    hourCycle: props.hourCycle,
    showEra,
    shouldForceLeadingZeros: props.shouldForceLeadingZeros
  }), [
    props.maxGranularity,
    granularity,
    props.hourCycle,
    props.shouldForceLeadingZeros,
    defaultTimeZone,
    hideTimeZone,
    showEra
  ]);
  let opts = (0, import_react37.useMemo)(() => (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)({}, formatOpts), [
    formatOpts
  ]);
  let dateFormatter = (0, import_react37.useMemo)(() => new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale, opts), [
    locale,
    opts
  ]);
  let resolvedOptions = (0, import_react37.useMemo)(() => dateFormatter.resolvedOptions(), [
    dateFormatter
  ]);
  let allSegments = (0, import_react37.useMemo)(() => dateFormatter.formatToParts(new Date()).filter((seg) => $3c0fc76039f1c516$var$EDITABLE_SEGMENTS[seg.type]).reduce((p, seg) => (p[seg.type] = true, p), {}), [
    dateFormatter
  ]);
  let [validSegments, setValidSegments] = (0, import_react37.useState)(() => props.value || props.defaultValue ? {
    ...allSegments
  } : {});
  let clearedSegment = (0, import_react37.useRef)();
  let lastCalendarIdentifier = (0, import_react37.useRef)(calendar.identifier);
  (0, import_react37.useEffect)(() => {
    if (calendar.identifier !== lastCalendarIdentifier.current) {
      lastCalendarIdentifier.current = calendar.identifier;
      setPlaceholderDate((placeholder) => Object.keys(validSegments).length > 0 ? (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(placeholder, calendar) : (0, $35a22f14a1f04b11$export$66aa2b09de4b1ea5)(props.placeholderValue, granularity, calendar, defaultTimeZone));
    }
  }, [
    calendar,
    granularity,
    validSegments,
    defaultTimeZone,
    props.placeholderValue
  ]);
  if (value && Object.keys(validSegments).length < Object.keys(allSegments).length) {
    validSegments = {
      ...allSegments
    };
    setValidSegments(validSegments);
  }
  if (value == null && Object.keys(validSegments).length === Object.keys(allSegments).length) {
    validSegments = {};
    setValidSegments(validSegments);
    setPlaceholderDate((0, $35a22f14a1f04b11$export$66aa2b09de4b1ea5)(props.placeholderValue, granularity, calendar, defaultTimeZone));
  }
  let displayValue = calendarValue && Object.keys(validSegments).length >= Object.keys(allSegments).length ? calendarValue : placeholderDate;
  let setValue = (newValue) => {
    if (props.isDisabled || props.isReadOnly)
      return;
    let validKeys = Object.keys(validSegments);
    let allKeys = Object.keys(allSegments);
    if (newValue == null) {
      setDate(null);
      setPlaceholderDate((0, $35a22f14a1f04b11$export$66aa2b09de4b1ea5)(props.placeholderValue, granularity, calendar, defaultTimeZone));
      setValidSegments({});
    } else if (validKeys.length >= allKeys.length || validKeys.length === allKeys.length - 1 && allSegments.dayPeriod && !validSegments.dayPeriod && clearedSegment.current !== "dayPeriod") {
      newValue = (0, $11d87f3f76e88657$export$b4a036af3fc0b032)(newValue, (v === null || v === void 0 ? void 0 : v.calendar) || new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)());
      setDate(newValue);
    } else
      setPlaceholderDate(newValue);
    clearedSegment.current = null;
  };
  let dateValue = (0, import_react37.useMemo)(() => displayValue.toDate(timeZone), [
    displayValue,
    timeZone
  ]);
  let segments = (0, import_react37.useMemo)(() => dateFormatter.formatToParts(dateValue).map((segment) => {
    let isEditable = $3c0fc76039f1c516$var$EDITABLE_SEGMENTS[segment.type];
    if (segment.type === "era" && calendar.getEras().length === 1)
      isEditable = false;
    let isPlaceholder = $3c0fc76039f1c516$var$EDITABLE_SEGMENTS[segment.type] && !validSegments[segment.type];
    let placeholder = $3c0fc76039f1c516$var$EDITABLE_SEGMENTS[segment.type] ? (0, $3e3ed55ab2966714$export$d3f5c5e0a5023fa0)(segment.type, segment.value, locale) : null;
    return {
      type: $3c0fc76039f1c516$var$TYPE_MAPPING[segment.type] || segment.type,
      text: isPlaceholder ? placeholder : segment.value,
      ...$3c0fc76039f1c516$var$getSegmentLimits(displayValue, segment.type, resolvedOptions),
      isPlaceholder,
      placeholder,
      isEditable
    };
  }), [
    dateValue,
    validSegments,
    dateFormatter,
    resolvedOptions,
    displayValue,
    calendar,
    locale
  ]);
  if (allSegments.era && validSegments.year && !validSegments.era) {
    validSegments.era = true;
    setValidSegments({
      ...validSegments
    });
  } else if (!allSegments.era && validSegments.era) {
    delete validSegments.era;
    setValidSegments({
      ...validSegments
    });
  }
  let markValid = (part) => {
    validSegments[part] = true;
    if (part === "year" && allSegments.era)
      validSegments.era = true;
    setValidSegments({
      ...validSegments
    });
  };
  let adjustSegment = (type, amount) => {
    if (!validSegments[type]) {
      markValid(type);
      let validKeys = Object.keys(validSegments);
      let allKeys = Object.keys(allSegments);
      if (validKeys.length >= allKeys.length || validKeys.length === allKeys.length - 1 && allSegments.dayPeriod && !validSegments.dayPeriod)
        setValue(displayValue);
    } else
      setValue($3c0fc76039f1c516$var$addSegment(displayValue, type, amount, resolvedOptions));
  };
  let validationState = props.validationState || ((0, $35a22f14a1f04b11$export$eac50920cf2fd59a)(calendarValue, props.minValue, props.maxValue) ? "invalid" : null);
  var _props_maxGranularity1;
  return {
    value: calendarValue,
    dateValue,
    calendar,
    setValue,
    segments,
    dateFormatter,
    validationState,
    granularity,
    maxGranularity: (_props_maxGranularity1 = props.maxGranularity) !== null && _props_maxGranularity1 !== void 0 ? _props_maxGranularity1 : "year",
    isDisabled,
    isReadOnly,
    isRequired,
    increment(part) {
      adjustSegment(part, 1);
    },
    decrement(part) {
      adjustSegment(part, -1);
    },
    incrementPage(part) {
      adjustSegment(part, $3c0fc76039f1c516$var$PAGE_STEP[part] || 1);
    },
    decrementPage(part) {
      adjustSegment(part, -($3c0fc76039f1c516$var$PAGE_STEP[part] || 1));
    },
    setSegment(part, v2) {
      markValid(part);
      setValue($3c0fc76039f1c516$var$setSegment(displayValue, part, v2, resolvedOptions));
    },
    confirmPlaceholder() {
      if (props.isDisabled || props.isReadOnly)
        return;
      let validKeys = Object.keys(validSegments);
      let allKeys = Object.keys(allSegments);
      if (validKeys.length === allKeys.length - 1 && allSegments.dayPeriod && !validSegments.dayPeriod) {
        validSegments = {
          ...allSegments
        };
        setValidSegments(validSegments);
        setValue(displayValue.copy());
      }
    },
    clearSegment(part) {
      delete validSegments[part];
      clearedSegment.current = part;
      setValidSegments({
        ...validSegments
      });
      let placeholder = (0, $35a22f14a1f04b11$export$66aa2b09de4b1ea5)(props.placeholderValue, granularity, calendar, defaultTimeZone);
      let value2 = displayValue;
      if (part === "dayPeriod" && "hour" in displayValue && "hour" in placeholder) {
        let isPM = displayValue.hour >= 12;
        let shouldBePM = placeholder.hour >= 12;
        if (isPM && !shouldBePM)
          value2 = displayValue.set({
            hour: displayValue.hour - 12
          });
        else if (!isPM && shouldBePM)
          value2 = displayValue.set({
            hour: displayValue.hour + 12
          });
      } else if (part in displayValue)
        value2 = displayValue.set({
          [part]: placeholder[part]
        });
      setDate(null);
      setValue(value2);
    },
    formatValue(fieldOptions) {
      if (!calendarValue)
        return "";
      let formatOptions = (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)(fieldOptions, formatOpts);
      let formatter = new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale, formatOptions);
      return formatter.format(dateValue);
    }
  };
}
function $3c0fc76039f1c516$var$getSegmentLimits(date, type, options) {
  switch (type) {
    case "era": {
      let eras = date.calendar.getEras();
      return {
        value: eras.indexOf(date.era),
        minValue: 0,
        maxValue: eras.length - 1
      };
    }
    case "year":
      return {
        value: date.year,
        minValue: 1,
        maxValue: date.calendar.getYearsInEra(date)
      };
    case "month":
      return {
        value: date.month,
        minValue: (0, $14e0f24ef4ac5c92$export$5412ac11713b72ad)(date),
        maxValue: date.calendar.getMonthsInYear(date)
      };
    case "day":
      return {
        value: date.day,
        minValue: (0, $14e0f24ef4ac5c92$export$b2f4953d301981d5)(date),
        maxValue: date.calendar.getDaysInMonth(date)
      };
  }
  if ("hour" in date)
    switch (type) {
      case "dayPeriod":
        return {
          value: date.hour >= 12 ? 12 : 0,
          minValue: 0,
          maxValue: 12
        };
      case "hour":
        if (options.hour12) {
          let isPM = date.hour >= 12;
          return {
            value: date.hour,
            minValue: isPM ? 12 : 0,
            maxValue: isPM ? 23 : 11
          };
        }
        return {
          value: date.hour,
          minValue: 0,
          maxValue: 23
        };
      case "minute":
        return {
          value: date.minute,
          minValue: 0,
          maxValue: 59
        };
      case "second":
        return {
          value: date.second,
          minValue: 0,
          maxValue: 59
        };
    }
  return {};
}
function $3c0fc76039f1c516$var$addSegment(value, part, amount, options) {
  switch (part) {
    case "era":
    case "year":
    case "month":
    case "day":
      return value.cycle(part, amount, {
        round: part === "year"
      });
  }
  if ("hour" in value)
    switch (part) {
      case "dayPeriod": {
        let hours = value.hour;
        let isPM = hours >= 12;
        return value.set({
          hour: isPM ? hours - 12 : hours + 12
        });
      }
      case "hour":
      case "minute":
      case "second":
        return value.cycle(part, amount, {
          round: part !== "hour",
          hourCycle: options.hour12 ? 12 : 24
        });
    }
}
function $3c0fc76039f1c516$var$setSegment(value, part, segmentValue, options) {
  switch (part) {
    case "day":
    case "month":
    case "year":
    case "era":
      return value.set({
        [part]: segmentValue
      });
  }
  if ("hour" in value)
    switch (part) {
      case "dayPeriod": {
        let hours = value.hour;
        let wasPM = hours >= 12;
        let isPM = segmentValue >= 12;
        if (isPM === wasPM)
          return value;
        return value.set({
          hour: wasPM ? hours - 12 : hours + 12
        });
      }
      case "hour":
        if (options.hour12) {
          let hours = value.hour;
          let wasPM = hours >= 12;
          if (!wasPM && segmentValue === 12)
            segmentValue = 0;
          if (wasPM && segmentValue < 12)
            segmentValue += 12;
        }
      case "minute":
      case "second":
        return value.set({
          [part]: segmentValue
        });
    }
}
function $93c38a5e28be6249$export$e50a61c1de9f574(props) {
  var _props_isDateUnavailable, _props_isDateUnavailable1;
  let overlayState = (0, $fc909762b330b746$export$61c6a8c84e605fb6)(props);
  let [controlledValue, setControlledValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.value, props.defaultValue || null, props.onChange);
  let [placeholderValue, setPlaceholderValue] = (0, import_react37.useState)(() => controlledValue || {
    start: null,
    end: null
  });
  if (controlledValue == null && placeholderValue.start && placeholderValue.end) {
    placeholderValue = {
      start: null,
      end: null
    };
    setPlaceholderValue(placeholderValue);
  }
  let value = controlledValue || placeholderValue;
  let setValue = (value2) => {
    setPlaceholderValue(value2);
    if ((value2 === null || value2 === void 0 ? void 0 : value2.start) && value2.end)
      setControlledValue(value2);
    else
      setControlledValue(null);
  };
  let v = (value === null || value === void 0 ? void 0 : value.start) || (value === null || value === void 0 ? void 0 : value.end) || props.placeholderValue;
  let [granularity] = (0, $35a22f14a1f04b11$export$2440da353cedad43)(v, props.granularity);
  let hasTime = granularity === "hour" || granularity === "minute" || granularity === "second";
  var _props_shouldCloseOnSelect;
  let shouldCloseOnSelect = (_props_shouldCloseOnSelect = props.shouldCloseOnSelect) !== null && _props_shouldCloseOnSelect !== void 0 ? _props_shouldCloseOnSelect : true;
  let [dateRange, setSelectedDateRange] = (0, import_react37.useState)(null);
  let [timeRange, setSelectedTimeRange] = (0, import_react37.useState)(null);
  if (value && value.start && value.end) {
    dateRange = value;
    if ("hour" in value.start)
      timeRange = value;
  }
  let commitValue = (dateRange2, timeRange2) => {
    setValue({
      start: "timeZone" in timeRange2.start ? timeRange2.start.set((0, $11d87f3f76e88657$export$93522d1a439f3617)(dateRange2.start)) : (0, $11d87f3f76e88657$export$b21e0b124e224484)(dateRange2.start, timeRange2.start),
      end: "timeZone" in timeRange2.end ? timeRange2.end.set((0, $11d87f3f76e88657$export$93522d1a439f3617)(dateRange2.end)) : (0, $11d87f3f76e88657$export$b21e0b124e224484)(dateRange2.end, timeRange2.end)
    });
    setSelectedDateRange(null);
    setSelectedTimeRange(null);
  };
  let setDateRange = (range) => {
    let shouldClose = typeof shouldCloseOnSelect === "function" ? shouldCloseOnSelect() : shouldCloseOnSelect;
    if (hasTime) {
      if (shouldClose || range.start && range.end && (timeRange === null || timeRange === void 0 ? void 0 : timeRange.start) && (timeRange === null || timeRange === void 0 ? void 0 : timeRange.end))
        commitValue(range, {
          start: (timeRange === null || timeRange === void 0 ? void 0 : timeRange.start) || (0, $35a22f14a1f04b11$export$c5221a78ef73c5e9)(props.placeholderValue),
          end: (timeRange === null || timeRange === void 0 ? void 0 : timeRange.end) || (0, $35a22f14a1f04b11$export$c5221a78ef73c5e9)(props.placeholderValue)
        });
      else
        setSelectedDateRange(range);
    } else if (range.start && range.end)
      setValue(range);
    else
      setSelectedDateRange(range);
    if (shouldClose)
      overlayState.setOpen(false);
  };
  let setTimeRange = (range) => {
    if ((dateRange === null || dateRange === void 0 ? void 0 : dateRange.start) && (dateRange === null || dateRange === void 0 ? void 0 : dateRange.end) && range.start && range.end)
      commitValue(dateRange, range);
    else
      setSelectedTimeRange(range);
  };
  let validationState = props.validationState || (value != null && ((0, $35a22f14a1f04b11$export$eac50920cf2fd59a)(value.start, props.minValue, props.maxValue) || (0, $35a22f14a1f04b11$export$eac50920cf2fd59a)(value.end, props.minValue, props.maxValue) || value.end != null && value.start != null && value.end.compare(value.start) < 0 || (value === null || value === void 0 ? void 0 : value.start) && ((_props_isDateUnavailable = props.isDateUnavailable) === null || _props_isDateUnavailable === void 0 ? void 0 : _props_isDateUnavailable.call(props, value.start)) || (value === null || value === void 0 ? void 0 : value.end) && ((_props_isDateUnavailable1 = props.isDateUnavailable) === null || _props_isDateUnavailable1 === void 0 ? void 0 : _props_isDateUnavailable1.call(props, value.end))) ? "invalid" : null);
  return {
    value,
    setValue,
    dateRange,
    timeRange,
    granularity,
    hasTime,
    setDate(part, date) {
      setDateRange({
        ...dateRange,
        [part]: date
      });
    },
    setTime(part, time) {
      setTimeRange({
        ...timeRange,
        [part]: time
      });
    },
    setDateTime(part, dateTime) {
      setValue({
        ...value,
        [part]: dateTime
      });
    },
    setDateRange,
    setTimeRange,
    ...overlayState,
    setOpen(isOpen) {
      if (!isOpen && !((value === null || value === void 0 ? void 0 : value.start) && (value === null || value === void 0 ? void 0 : value.end)) && (dateRange === null || dateRange === void 0 ? void 0 : dateRange.start) && (dateRange === null || dateRange === void 0 ? void 0 : dateRange.end) && hasTime)
        commitValue(dateRange, {
          start: (timeRange === null || timeRange === void 0 ? void 0 : timeRange.start) || (0, $35a22f14a1f04b11$export$c5221a78ef73c5e9)(props.placeholderValue),
          end: (timeRange === null || timeRange === void 0 ? void 0 : timeRange.end) || (0, $35a22f14a1f04b11$export$c5221a78ef73c5e9)(props.placeholderValue)
        });
      overlayState.setOpen(isOpen);
    },
    validationState,
    formatValue(locale, fieldOptions) {
      if (!value || !value.start || !value.end)
        return null;
      let startTimeZone = "timeZone" in value.start ? value.start.timeZone : void 0;
      let startGranularity = props.granularity || (value.start && "minute" in value.start ? "minute" : "day");
      let endTimeZone = "timeZone" in value.end ? value.end.timeZone : void 0;
      let endGranularity = props.granularity || (value.end && "minute" in value.end ? "minute" : "day");
      let startOptions = (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)(fieldOptions, {
        granularity: startGranularity,
        timeZone: startTimeZone,
        hideTimeZone: props.hideTimeZone,
        hourCycle: props.hourCycle,
        showEra: value.start.calendar.identifier === "gregory" && value.start.era === "BC" || value.end.calendar.identifier === "gregory" && value.end.era === "BC"
      });
      let startDate = value.start.toDate(startTimeZone || "UTC");
      let endDate = value.end.toDate(endTimeZone || "UTC");
      let startFormatter = new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale, startOptions);
      let endFormatter;
      if (startTimeZone === endTimeZone && startGranularity === endGranularity && value.start.compare(value.end) !== 0) {
        try {
          let parts = startFormatter.formatRangeToParts(startDate, endDate);
          let separatorIndex = -1;
          for (let i = 0; i < parts.length; i++) {
            let part = parts[i];
            if (part.source === "shared" && part.type === "literal")
              separatorIndex = i;
            else if (part.source === "endRange")
              break;
          }
          let start = "";
          let end = "";
          for (let i = 0; i < parts.length; i++) {
            if (i < separatorIndex)
              start += parts[i].value;
            else if (i > separatorIndex)
              end += parts[i].value;
          }
          return {
            start,
            end
          };
        } catch (e) {
        }
        endFormatter = startFormatter;
      } else {
        let endOptions = (0, $35a22f14a1f04b11$export$7e319ea407e63bc0)(fieldOptions, {
          granularity: endGranularity,
          timeZone: endTimeZone,
          hideTimeZone: props.hideTimeZone,
          hourCycle: props.hourCycle
        });
        endFormatter = new (0, $fb18d541ea1ad717$export$ad991b66133851cf)(locale, endOptions);
      }
      return {
        start: startFormatter.format(startDate),
        end: endFormatter.format(endDate)
      };
    }
  };
}
function $eff5d8ee529ac4bb$export$fd53cef0cc796101(props) {
  let { placeholderValue = new (0, $35ea8db9cb2ccb90$export$680ea196effce5f)(), minValue, maxValue, granularity } = props;
  let [value, setValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.value, props.defaultValue, props.onChange);
  let v = value || placeholderValue;
  let day = v && "day" in v ? v : void 0;
  let defaultValueTimeZone = props.defaultValue && "timeZone" in props.defaultValue ? props.defaultValue.timeZone : void 0;
  let placeholderDate = (0, import_react37.useMemo)(() => {
    let valueTimeZone = v && "timeZone" in v ? v.timeZone : void 0;
    return (valueTimeZone || defaultValueTimeZone) && placeholderValue ? (0, $11d87f3f76e88657$export$84c95a83c799e074)($eff5d8ee529ac4bb$var$convertValue(placeholderValue), valueTimeZone || defaultValueTimeZone) : $eff5d8ee529ac4bb$var$convertValue(placeholderValue);
  }, [
    placeholderValue,
    v,
    defaultValueTimeZone
  ]);
  let minDate = (0, import_react37.useMemo)(() => $eff5d8ee529ac4bb$var$convertValue(minValue, day), [
    minValue,
    day
  ]);
  let maxDate = (0, import_react37.useMemo)(() => $eff5d8ee529ac4bb$var$convertValue(maxValue, day), [
    maxValue,
    day
  ]);
  let timeValue = (0, import_react37.useMemo)(() => value && "day" in value ? (0, $11d87f3f76e88657$export$d33f79e3ffc3dc83)(value) : value, [
    value
  ]);
  let dateTime = (0, import_react37.useMemo)(() => value == null ? null : $eff5d8ee529ac4bb$var$convertValue(value), [
    value
  ]);
  let onChange = (newValue) => {
    setValue(day || defaultValueTimeZone ? newValue : newValue && (0, $11d87f3f76e88657$export$d33f79e3ffc3dc83)(newValue));
  };
  let state = (0, $3c0fc76039f1c516$export$60e84778edff6d26)({
    ...props,
    value: dateTime,
    defaultValue: void 0,
    minValue: minDate,
    maxValue: maxDate,
    onChange,
    granularity: granularity || "minute",
    maxGranularity: "hour",
    placeholderValue: placeholderDate,
    // Calendar should not matter for time fields.
    createCalendar: () => new (0, $3b62074eb05584b2$export$80ee6245ec4f29ec)()
  });
  return {
    ...state,
    timeValue
  };
}
function $eff5d8ee529ac4bb$var$convertValue(value, date = (0, $14e0f24ef4ac5c92$export$d0bdf45af03a6ea3)((0, $14e0f24ef4ac5c92$export$aa8b41735afcabd2)())) {
  if (!value)
    return null;
  if ("day" in value)
    return value;
  return (0, $11d87f3f76e88657$export$b21e0b124e224484)(date, value);
}

// node_modules/.pnpm/@react-stately+dnd@3.2.3_react@18.2.0/node_modules/@react-stately/dnd/dist/module.js
var import_react38 = __toESM(require_react());
function $b45bbbaf0c3785df$export$29efd034f1d79f81(props) {
  let { getItems, collection, selectionManager, onDragStart, onDragMove, onDragEnd, preview, getAllowedDropOperations } = props;
  let [, setDragging] = (0, import_react38.useState)(false);
  let draggingKeys = (0, import_react38.useRef)(/* @__PURE__ */ new Set());
  let draggedKey = (0, import_react38.useRef)(null);
  let getKeys = (key) => {
    let keys = new Set(selectionManager.isSelected(key) ? new Set([
      ...selectionManager.selectedKeys
    ].filter((key2) => !!collection.getItem(key2))) : []);
    keys.add(key);
    return keys;
  };
  return {
    collection,
    selectionManager,
    get draggedKey() {
      return draggedKey.current;
    },
    get draggingKeys() {
      return draggingKeys.current;
    },
    isDragging(key) {
      return draggingKeys.current.has(key);
    },
    getKeysForDrag: getKeys,
    getItems(key) {
      return getItems(getKeys(key));
    },
    preview,
    getAllowedDropOperations,
    startDrag(key, event) {
      let keys = getKeys(key);
      draggingKeys.current = keys;
      draggedKey.current = key;
      selectionManager.setFocused(false);
      setDragging(true);
      if (typeof onDragStart === "function")
        onDragStart({
          ...event,
          keys
        });
    },
    moveDrag(event) {
      if (typeof onDragMove === "function")
        onDragMove({
          ...event,
          keys: draggingKeys.current
        });
    },
    endDrag(event) {
      let { isInternal } = event;
      if (typeof onDragEnd === "function")
        onDragEnd({
          ...event,
          keys: draggingKeys.current,
          isInternal
        });
      draggingKeys.current = /* @__PURE__ */ new Set();
      draggedKey.current = null;
      setDragging(false);
    }
  };
}
function $e672e8bc247525d1$export$926850f6ecef79d0(props) {
  let { acceptedDragTypes = "all", onInsert, onRootDrop, onItemDrop, onReorder, shouldAcceptItemDrop, collection, selectionManager, onDropEnter, getDropOperation, onDrop } = props;
  let [target, setTarget] = (0, import_react38.useState)(null);
  let targetRef = (0, import_react38.useRef)(null);
  let getOppositeTarget = (target2) => {
    if (target2.dropPosition === "before") {
      let key = collection.getKeyBefore(target2.key);
      return key != null ? {
        type: "item",
        key,
        dropPosition: "after"
      } : null;
    } else if (target2.dropPosition === "after") {
      let key = collection.getKeyAfter(target2.key);
      return key != null ? {
        type: "item",
        key,
        dropPosition: "before"
      } : null;
    }
  };
  let defaultGetDropOperation = (0, import_react38.useCallback)((e) => {
    let { target: target2, types, allowedOperations, isInternal, draggingKeys } = e;
    if (acceptedDragTypes === "all" || acceptedDragTypes.some((type) => types.has(type))) {
      let isValidInsert = onInsert && target2.type === "item" && !isInternal && (target2.dropPosition === "before" || target2.dropPosition === "after");
      let isValidReorder = onReorder && target2.type === "item" && isInternal && (target2.dropPosition === "before" || target2.dropPosition === "after");
      let isValidRootDrop = onRootDrop && target2.type === "root" && !isInternal;
      let isValidOnItemDrop = onItemDrop && target2.type === "item" && target2.dropPosition === "on" && !(isInternal && draggingKeys.has(target2.key)) && (!shouldAcceptItemDrop || shouldAcceptItemDrop(target2, types));
      if (onDrop || isValidInsert || isValidReorder || isValidRootDrop || isValidOnItemDrop) {
        if (getDropOperation)
          return getDropOperation(target2, types, allowedOperations);
        else
          return allowedOperations[0];
      }
    }
    return "cancel";
  }, [
    acceptedDragTypes,
    getDropOperation,
    onInsert,
    onRootDrop,
    onItemDrop,
    shouldAcceptItemDrop,
    onReorder,
    onDrop
  ]);
  return {
    collection,
    selectionManager,
    target,
    setTarget(newTarget) {
      if (this.isDropTarget(newTarget))
        return;
      let target2 = targetRef.current;
      if (target2 && typeof props.onDropExit === "function")
        props.onDropExit({
          type: "dropexit",
          x: 0,
          y: 0,
          target: target2
        });
      if (newTarget && typeof onDropEnter === "function")
        onDropEnter({
          type: "dropenter",
          x: 0,
          y: 0,
          target: newTarget
        });
      targetRef.current = newTarget;
      setTarget(newTarget);
    },
    isDropTarget(dropTarget) {
      let target2 = targetRef.current;
      if ($e672e8bc247525d1$var$isEqualDropTarget(dropTarget, target2))
        return true;
      if ((dropTarget === null || dropTarget === void 0 ? void 0 : dropTarget.type) === "item" && (target2 === null || target2 === void 0 ? void 0 : target2.type) === "item" && dropTarget.key !== target2.key && dropTarget.dropPosition !== target2.dropPosition && dropTarget.dropPosition !== "on" && target2.dropPosition !== "on")
        return $e672e8bc247525d1$var$isEqualDropTarget(getOppositeTarget(dropTarget), target2) || $e672e8bc247525d1$var$isEqualDropTarget(dropTarget, getOppositeTarget(target2));
      return false;
    },
    getDropOperation(e) {
      return defaultGetDropOperation(e);
    }
  };
}
function $e672e8bc247525d1$var$isEqualDropTarget(a, b) {
  if (!a)
    return !b;
  switch (a.type) {
    case "root":
      return (b === null || b === void 0 ? void 0 : b.type) === "root";
    case "item":
      return (b === null || b === void 0 ? void 0 : b.type) === "item" && (b === null || b === void 0 ? void 0 : b.key) === a.key && (b === null || b === void 0 ? void 0 : b.dropPosition) === a.dropPosition;
  }
}

// node_modules/.pnpm/@react-stately+data@3.10.1_react@18.2.0/node_modules/@react-stately/data/dist/module.js
var import_react39 = __toESM(require_react());

// node_modules/.pnpm/@react-stately+numberfield@3.6.0_react@18.2.0/node_modules/@react-stately/numberfield/dist/module.js
var import_react40 = __toESM(require_react());
function $de67e98908f0c6ee$export$7f629e9dc1ecf37c(props) {
  let { minValue, maxValue, step, formatOptions, value, defaultValue, onChange, locale, isDisabled, isReadOnly } = props;
  let [numberValue, setNumberValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(value, isNaN(defaultValue) ? NaN : defaultValue, onChange);
  let [inputValue, setInputValue] = (0, import_react40.useState)(() => isNaN(numberValue) ? "" : new (0, $488c6ddbf4ef74c2$export$cc77c4ff7e8673c5)(locale, formatOptions).format(numberValue));
  let numberParser = (0, import_react40.useMemo)(() => new (0, $6c7bd7858deea686$export$cd11ab140839f11d)(locale, formatOptions), [
    locale,
    formatOptions
  ]);
  let numberingSystem = (0, import_react40.useMemo)(() => numberParser.getNumberingSystem(inputValue), [
    numberParser,
    inputValue
  ]);
  let formatter = (0, import_react40.useMemo)(() => new (0, $488c6ddbf4ef74c2$export$cc77c4ff7e8673c5)(locale, {
    ...formatOptions,
    numberingSystem
  }), [
    locale,
    formatOptions,
    numberingSystem
  ]);
  let intlOptions = (0, import_react40.useMemo)(() => formatter.resolvedOptions(), [
    formatter
  ]);
  let format = (0, import_react40.useCallback)((value2) => isNaN(value2) || value2 === null ? "" : formatter.format(value2), [
    formatter
  ]);
  let clampStep = !isNaN(step) ? step : 1;
  if (intlOptions.style === "percent" && isNaN(step))
    clampStep = 0.01;
  let [prevValue, setPrevValue] = (0, import_react40.useState)(numberValue);
  let [prevLocale, setPrevLocale] = (0, import_react40.useState)(locale);
  let [prevFormatOptions, setPrevFormatOptions] = (0, import_react40.useState)(formatOptions);
  if (!Object.is(numberValue, prevValue) || locale !== prevLocale || formatOptions !== prevFormatOptions) {
    setInputValue(format(numberValue));
    setPrevValue(numberValue);
    setPrevLocale(locale);
    setPrevFormatOptions(formatOptions);
  }
  let parsedValue = (0, import_react40.useMemo)(() => numberParser.parse(inputValue), [
    numberParser,
    inputValue
  ]);
  let commit = () => {
    if (!inputValue.length) {
      setNumberValue(NaN);
      setInputValue(value === void 0 ? "" : format(numberValue));
      return;
    }
    if (isNaN(parsedValue)) {
      setInputValue(format(numberValue));
      return;
    }
    let clampedValue;
    if (isNaN(step))
      clampedValue = (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(parsedValue, minValue, maxValue);
    else
      clampedValue = (0, $9446cca9a3875146$export$cb6e0bb50bc19463)(parsedValue, minValue, maxValue, step);
    clampedValue = numberParser.parse(format(clampedValue));
    setNumberValue(clampedValue);
    setInputValue(format(value === void 0 ? clampedValue : numberValue));
  };
  let safeNextStep = (operation, minMax) => {
    let prev = parsedValue;
    if (isNaN(prev)) {
      let newValue = isNaN(minMax) ? 0 : minMax;
      return (0, $9446cca9a3875146$export$cb6e0bb50bc19463)(newValue, minValue, maxValue, clampStep);
    } else {
      let newValue = (0, $9446cca9a3875146$export$cb6e0bb50bc19463)(prev, minValue, maxValue, clampStep);
      if (operation === "+" && newValue > prev || operation === "-" && newValue < prev)
        return newValue;
      return (0, $9446cca9a3875146$export$cb6e0bb50bc19463)($de67e98908f0c6ee$var$handleDecimalOperation(operation, prev, clampStep), minValue, maxValue, clampStep);
    }
  };
  let increment = () => {
    let newValue = safeNextStep("+", minValue);
    if (newValue === numberValue)
      setInputValue(format(newValue));
    setNumberValue(newValue);
  };
  let decrement = () => {
    let newValue = safeNextStep("-", maxValue);
    if (newValue === numberValue)
      setInputValue(format(newValue));
    setNumberValue(newValue);
  };
  let incrementToMax = () => {
    if (maxValue != null)
      setNumberValue((0, $9446cca9a3875146$export$cb6e0bb50bc19463)(maxValue, minValue, maxValue, clampStep));
  };
  let decrementToMin = () => {
    if (minValue != null)
      setNumberValue(minValue);
  };
  let canIncrement = (0, import_react40.useMemo)(() => !isDisabled && !isReadOnly && (isNaN(parsedValue) || isNaN(maxValue) || (0, $9446cca9a3875146$export$cb6e0bb50bc19463)(parsedValue, minValue, maxValue, clampStep) > parsedValue || $de67e98908f0c6ee$var$handleDecimalOperation("+", parsedValue, clampStep) <= maxValue), [
    isDisabled,
    isReadOnly,
    minValue,
    maxValue,
    clampStep,
    parsedValue
  ]);
  let canDecrement = (0, import_react40.useMemo)(() => !isDisabled && !isReadOnly && (isNaN(parsedValue) || isNaN(minValue) || (0, $9446cca9a3875146$export$cb6e0bb50bc19463)(parsedValue, minValue, maxValue, clampStep) < parsedValue || $de67e98908f0c6ee$var$handleDecimalOperation("-", parsedValue, clampStep) >= minValue), [
    isDisabled,
    isReadOnly,
    minValue,
    maxValue,
    clampStep,
    parsedValue
  ]);
  let validate = (value2) => numberParser.isValidPartialNumber(value2, minValue, maxValue);
  return {
    validate,
    increment,
    incrementToMax,
    decrement,
    decrementToMin,
    canIncrement,
    canDecrement,
    minValue,
    maxValue,
    numberValue: parsedValue,
    setNumberValue,
    setInputValue,
    inputValue,
    commit
  };
}
function $de67e98908f0c6ee$var$handleDecimalOperation(operator, value1, value2) {
  let result = operator === "+" ? value1 + value2 : value1 - value2;
  if (value1 % 1 !== 0 || value2 % 1 !== 0) {
    const value1Decimal = value1.toString().split(".");
    const value2Decimal = value2.toString().split(".");
    const value1DecimalLength = value1Decimal[1] && value1Decimal[1].length || 0;
    const value2DecimalLength = value2Decimal[1] && value2Decimal[1].length || 0;
    const multiplier = Math.pow(10, Math.max(value1DecimalLength, value2DecimalLength));
    value1 = Math.round(value1 * multiplier);
    value2 = Math.round(value2 * multiplier);
    result = operator === "+" ? value1 + value2 : value1 - value2;
    result /= multiplier;
  }
  return result;
}

// node_modules/.pnpm/@react-stately+radio@3.8.3_react@18.2.0/node_modules/@react-stately/radio/dist/module.js
var import_react41 = __toESM(require_react());
var $a54cdc5c1942b639$var$instance = Math.round(Math.random() * 1e10);
var $a54cdc5c1942b639$var$i = 0;
function $a54cdc5c1942b639$export$bca9d026f8e704eb(props) {
  let name = (0, import_react41.useMemo)(() => props.name || `radio-group-${$a54cdc5c1942b639$var$instance}-${++$a54cdc5c1942b639$var$i}`, [
    props.name
  ]);
  let [selectedValue, setSelected] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.value, props.defaultValue, props.onChange);
  let [lastFocusedValue, setLastFocusedValue] = (0, import_react41.useState)(null);
  let setSelectedValue = (value) => {
    if (!props.isReadOnly && !props.isDisabled)
      setSelected(value);
  };
  return {
    name,
    selectedValue,
    setSelectedValue,
    lastFocusedValue,
    setLastFocusedValue,
    isDisabled: props.isDisabled || false,
    isReadOnly: props.isReadOnly || false,
    isRequired: props.isRequired || false,
    validationState: props.validationState || null
  };
}

// node_modules/.pnpm/@react-stately+searchfield@3.4.4_react@18.2.0/node_modules/@react-stately/searchfield/dist/module.js
function $0b2218c4e3fe7d7e$export$3f8be18b0f41eaf2(props) {
  let [value, setValue] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)($0b2218c4e3fe7d7e$var$toString(props.value), $0b2218c4e3fe7d7e$var$toString(props.defaultValue) || "", props.onChange);
  return {
    value,
    setValue
  };
}
function $0b2218c4e3fe7d7e$var$toString(val) {
  if (val == null)
    return;
  return val.toString();
}

// node_modules/.pnpm/@react-stately+select@3.5.3_react@18.2.0/node_modules/@react-stately/select/dist/module.js
var import_react42 = __toESM(require_react());
function $2bc3a590c5373a4e$export$5159ec8b34d4ec12(props) {
  let triggerState = (0, $a28c903ee9ad8dc5$export$79fefeb1c2091ac3)(props);
  let listState = (0, $a0d645289fe9b86b$export$e7f05e985daf4b5f)({
    ...props,
    onSelectionChange: (key) => {
      if (props.onSelectionChange != null)
        props.onSelectionChange(key);
      triggerState.close();
    }
  });
  let [isFocused, setFocused] = (0, import_react42.useState)(false);
  return {
    ...listState,
    ...triggerState,
    open() {
      if (listState.collection.size !== 0)
        triggerState.open();
    },
    toggle(focusStrategy) {
      if (listState.collection.size !== 0)
        triggerState.toggle(focusStrategy);
    },
    isFocused,
    setFocused
  };
}

// node_modules/.pnpm/@react-stately+slider@3.4.1_react@18.2.0/node_modules/@react-stately/slider/dist/module.js
var import_react43 = __toESM(require_react());
var $28f99e3e86e6ec45$var$DEFAULT_MIN_VALUE = 0;
var $28f99e3e86e6ec45$var$DEFAULT_MAX_VALUE = 100;
var $28f99e3e86e6ec45$var$DEFAULT_STEP_VALUE = 1;
function $28f99e3e86e6ec45$export$e5fda3247f5d67f9(props) {
  const { isDisabled = false, minValue = $28f99e3e86e6ec45$var$DEFAULT_MIN_VALUE, maxValue = $28f99e3e86e6ec45$var$DEFAULT_MAX_VALUE, numberFormatter: formatter, step = $28f99e3e86e6ec45$var$DEFAULT_STEP_VALUE, orientation = "horizontal" } = props;
  let pageSize = (0, import_react43.useMemo)(() => {
    let calcPageSize = (maxValue - minValue) / 10;
    calcPageSize = (0, $9446cca9a3875146$export$cb6e0bb50bc19463)(calcPageSize, 0, calcPageSize + step, step);
    return Math.max(calcPageSize, step);
  }, [
    step,
    maxValue,
    minValue
  ]);
  let value = (0, import_react43.useMemo)(() => $28f99e3e86e6ec45$var$convertValue(props.value), [
    props.value
  ]);
  var _convertValue;
  let defaultValue = (0, import_react43.useMemo)(() => (_convertValue = $28f99e3e86e6ec45$var$convertValue(props.defaultValue)) !== null && _convertValue !== void 0 ? _convertValue : [
    minValue
  ], [
    props.defaultValue,
    minValue
  ]);
  let onChange = $28f99e3e86e6ec45$var$createOnChange(props.value, props.defaultValue, props.onChange);
  let onChangeEnd = $28f99e3e86e6ec45$var$createOnChange(props.value, props.defaultValue, props.onChangeEnd);
  const [values, setValuesState] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(value, defaultValue, onChange);
  const [isDraggings, setDraggingsState] = (0, import_react43.useState)(new Array(values.length).fill(false));
  const isEditablesRef = (0, import_react43.useRef)(new Array(values.length).fill(true));
  const [focusedIndex, setFocusedIndex] = (0, import_react43.useState)(void 0);
  const valuesRef = (0, import_react43.useRef)(values);
  const isDraggingsRef = (0, import_react43.useRef)(isDraggings);
  let setValues = (values2) => {
    valuesRef.current = values2;
    setValuesState(values2);
  };
  let setDraggings = (draggings) => {
    isDraggingsRef.current = draggings;
    setDraggingsState(draggings);
  };
  function getValuePercent(value2) {
    return (value2 - minValue) / (maxValue - minValue);
  }
  function getThumbMinValue(index) {
    return index === 0 ? minValue : values[index - 1];
  }
  function getThumbMaxValue(index) {
    return index === values.length - 1 ? maxValue : values[index + 1];
  }
  function isThumbEditable(index) {
    return isEditablesRef.current[index];
  }
  function setThumbEditable(index, editable) {
    isEditablesRef.current[index] = editable;
  }
  function updateValue(index, value2) {
    if (isDisabled || !isThumbEditable(index))
      return;
    const thisMin = getThumbMinValue(index);
    const thisMax = getThumbMaxValue(index);
    value2 = (0, $9446cca9a3875146$export$cb6e0bb50bc19463)(value2, thisMin, thisMax, step);
    let newValues = $28f99e3e86e6ec45$var$replaceIndex(valuesRef.current, index, value2);
    setValues(newValues);
  }
  function updateDragging(index, dragging) {
    if (isDisabled || !isThumbEditable(index))
      return;
    const wasDragging = isDraggingsRef.current[index];
    isDraggingsRef.current = $28f99e3e86e6ec45$var$replaceIndex(isDraggingsRef.current, index, dragging);
    setDraggings(isDraggingsRef.current);
    if (onChangeEnd && wasDragging && !isDraggingsRef.current.some(Boolean))
      onChangeEnd(valuesRef.current);
  }
  function getFormattedValue(value2) {
    return formatter.format(value2);
  }
  function setThumbPercent(index, percent) {
    updateValue(index, getPercentValue(percent));
  }
  function getRoundedValue(value2) {
    return Math.round((value2 - minValue) / step) * step + minValue;
  }
  function getPercentValue(percent) {
    const val = percent * (maxValue - minValue) + minValue;
    return (0, $9446cca9a3875146$export$7d15b64cf5a3a4c4)(getRoundedValue(val), minValue, maxValue);
  }
  function incrementThumb(index, stepSize = 1) {
    let s = Math.max(stepSize, step);
    updateValue(index, (0, $9446cca9a3875146$export$cb6e0bb50bc19463)(values[index] + s, minValue, maxValue, step));
  }
  function decrementThumb(index, stepSize = 1) {
    let s = Math.max(stepSize, step);
    updateValue(index, (0, $9446cca9a3875146$export$cb6e0bb50bc19463)(values[index] - s, minValue, maxValue, step));
  }
  return {
    values,
    getThumbValue: (index) => values[index],
    setThumbValue: updateValue,
    setThumbPercent,
    isThumbDragging: (index) => isDraggings[index],
    setThumbDragging: updateDragging,
    focusedThumb: focusedIndex,
    setFocusedThumb: setFocusedIndex,
    getThumbPercent: (index) => getValuePercent(values[index]),
    getValuePercent,
    getThumbValueLabel: (index) => getFormattedValue(values[index]),
    getFormattedValue,
    getThumbMinValue,
    getThumbMaxValue,
    getPercentValue,
    isThumbEditable,
    setThumbEditable,
    incrementThumb,
    decrementThumb,
    step,
    pageSize,
    orientation,
    isDisabled
  };
}
function $28f99e3e86e6ec45$var$replaceIndex(array, index, value) {
  if (array[index] === value)
    return array;
  return [
    ...array.slice(0, index),
    value,
    ...array.slice(index + 1)
  ];
}
function $28f99e3e86e6ec45$var$convertValue(value) {
  if (value == null)
    return void 0;
  return Array.isArray(value) ? value : [
    value
  ];
}
function $28f99e3e86e6ec45$var$createOnChange(value, defaultValue, onChange) {
  return (newValue) => {
    if (typeof value === "number" || typeof defaultValue === "number")
      onChange === null || onChange === void 0 ? void 0 : onChange(newValue[0]);
    else
      onChange === null || onChange === void 0 ? void 0 : onChange(newValue);
  };
}

// node_modules/.pnpm/@react-stately+table@3.11.0_react@18.2.0/node_modules/@react-stately/table/dist/module.js
var import_react45 = __toESM(require_react());

// node_modules/.pnpm/@react-stately+grid@3.8.0_react@18.2.0/node_modules/@react-stately/grid/dist/module.js
var import_react44 = __toESM(require_react());
function $62967d126f3aa823$export$4007ac09ff9c68ed(props) {
  let { collection, focusMode } = props;
  let selectionState = (0, $7af3f5b51489e0b5$export$253fe78d46329472)(props);
  let disabledKeys = (0, import_react44.useMemo)(() => props.disabledKeys ? new Set(props.disabledKeys) : /* @__PURE__ */ new Set(), [
    props.disabledKeys
  ]);
  let setFocusedKey = selectionState.setFocusedKey;
  selectionState.setFocusedKey = (key, child) => {
    if (focusMode === "cell" && key != null) {
      let item = collection.getItem(key);
      if ((item === null || item === void 0 ? void 0 : item.type) === "item") {
        var _getLastItem, _getFirstItem;
        let children = (0, $c5a24bc478652b5f$export$1005530eda016c13)(item, collection);
        if (child === "last")
          key = (_getLastItem = (0, $c5a24bc478652b5f$export$7475b2c64539e4cf)(children)) === null || _getLastItem === void 0 ? void 0 : _getLastItem.key;
        else
          key = (_getFirstItem = (0, $c5a24bc478652b5f$export$fbdeaa6a76694f71)(children)) === null || _getFirstItem === void 0 ? void 0 : _getFirstItem.key;
      }
    }
    setFocusedKey(key, child);
  };
  let selectionManager = (0, import_react44.useMemo)(() => new (0, $d496c0a20b6e58ec$export$6c8a5aaad13c9852)(collection, selectionState), [
    collection,
    selectionState
  ]);
  const cachedCollection = (0, import_react44.useRef)(null);
  (0, import_react44.useEffect)(() => {
    if (selectionState.focusedKey != null && !collection.getItem(selectionState.focusedKey)) {
      const node = cachedCollection.current.getItem(selectionState.focusedKey);
      const parentNode = node.parentKey != null && (node.type === "cell" || node.type === "rowheader" || node.type === "column") ? cachedCollection.current.getItem(node.parentKey) : node;
      const cachedRows = cachedCollection.current.rows;
      const rows = collection.rows;
      const diff = cachedRows.length - rows.length;
      let index = Math.min(diff > 1 ? Math.max(parentNode.index - diff + 1, 0) : parentNode.index, rows.length - 1);
      let newRow;
      while (index >= 0) {
        if (!selectionManager.isDisabled(rows[index].key) && rows[index].type !== "headerrow") {
          newRow = rows[index];
          break;
        }
        if (index < rows.length - 1)
          index++;
        else {
          if (index > parentNode.index)
            index = parentNode.index;
          index--;
        }
      }
      if (newRow) {
        const childNodes = newRow.hasChildNodes ? [
          ...(0, $c5a24bc478652b5f$export$1005530eda016c13)(newRow, collection)
        ] : [];
        const keyToFocus = newRow.hasChildNodes && parentNode !== node && node.index < childNodes.length ? childNodes[node.index].key : newRow.key;
        selectionState.setFocusedKey(keyToFocus);
      } else
        selectionState.setFocusedKey(null);
    }
    cachedCollection.current = collection;
  }, [
    collection,
    selectionManager,
    selectionState,
    selectionState.focusedKey
  ]);
  return {
    collection,
    disabledKeys,
    isKeyboardNavigationDisabled: false,
    selectionManager
  };
}
var $16805b1b18093c5f$export$de3fdf6493c353d = class {
  *[Symbol.iterator]() {
    yield* [
      ...this.rows
    ];
  }
  get size() {
    return [
      ...this.rows
    ].length;
  }
  getKeys() {
    return this.keyMap.keys();
  }
  getKeyBefore(key) {
    let node = this.keyMap.get(key);
    return node ? node.prevKey : null;
  }
  getKeyAfter(key) {
    let node = this.keyMap.get(key);
    return node ? node.nextKey : null;
  }
  getFirstKey() {
    var _;
    return (_ = [
      ...this.rows
    ][0]) === null || _ === void 0 ? void 0 : _.key;
  }
  getLastKey() {
    var _rows_;
    let rows = [
      ...this.rows
    ];
    return (_rows_ = rows[rows.length - 1]) === null || _rows_ === void 0 ? void 0 : _rows_.key;
  }
  getItem(key) {
    return this.keyMap.get(key);
  }
  at(idx) {
    const keys = [
      ...this.getKeys()
    ];
    return this.getItem(keys[idx]);
  }
  getChildren(key) {
    let node = this.keyMap.get(key);
    return (node === null || node === void 0 ? void 0 : node.childNodes) || [];
  }
  constructor(opts) {
    this.keyMap = /* @__PURE__ */ new Map();
    this.keyMap = /* @__PURE__ */ new Map();
    this.columnCount = opts === null || opts === void 0 ? void 0 : opts.columnCount;
    this.rows = [];
    let visit = (node) => {
      let prevNode = this.keyMap.get(node.key);
      if (opts.visitNode)
        node = opts.visitNode(node);
      this.keyMap.set(node.key, node);
      let childKeys = /* @__PURE__ */ new Set();
      let last2;
      for (let child of node.childNodes) {
        if (child.type === "cell" && child.parentKey == null)
          child.parentKey = node.key;
        childKeys.add(child.key);
        if (last2) {
          last2.nextKey = child.key;
          child.prevKey = last2.key;
        } else
          child.prevKey = null;
        visit(child);
        last2 = child;
      }
      if (last2)
        last2.nextKey = null;
      if (prevNode) {
        for (let child of prevNode.childNodes)
          if (!childKeys.has(child.key))
            remove(child);
      }
    };
    let remove = (node) => {
      this.keyMap.delete(node.key);
      for (let child of node.childNodes)
        if (this.keyMap.get(child.key) === child)
          remove(child);
    };
    let last;
    opts.items.forEach((node, i) => {
      let rowNode = {
        level: 0,
        key: "row-" + i,
        type: "row",
        value: void 0,
        hasChildNodes: true,
        childNodes: [
          ...node.childNodes
        ],
        rendered: void 0,
        textValue: void 0,
        ...node
      };
      if (last) {
        last.nextKey = rowNode.key;
        rowNode.prevKey = last.key;
      } else
        rowNode.prevKey = null;
      this.rows.push(rowNode);
      visit(rowNode);
      last = rowNode;
    });
    if (last)
      last.nextKey = null;
  }
};

// node_modules/.pnpm/@react-stately+table@3.11.0_react@18.2.0/node_modules/@react-stately/table/dist/module.js
function $6818b1c4fc67028d$export$1994a077b98ee0d5(width) {
  return width != null && (!isNaN(width) || String(width).match(/^(\d+)(?=%$)/) !== null);
}
function $6818b1c4fc67028d$export$9078bad4c3934604(width) {
  if (!width)
    return 1;
  let match = width.match(/^(.+)(?=fr$)/);
  if (!match) {
    console.warn(`width: ${width} is not a supported format, width should be a number (ex. 150), percentage (ex. '50%') or fr unit (ex. '2fr')`, "defaulting to '1fr'");
    return 1;
  }
  return parseFloat(match[0]);
}
function $6818b1c4fc67028d$export$7bbad27896f7ae9f(width, tableWidth) {
  if (typeof width === "string") {
    let match = width.match(/^(\d+)(?=%$)/);
    if (!match)
      throw new Error("Only percentages or numbers are supported for static column widths");
    return tableWidth * (parseFloat(match[0]) / 100);
  }
  return width;
}
function $6818b1c4fc67028d$export$59185c62a7544aa0(maxWidth, tableWidth) {
  return maxWidth != null ? $6818b1c4fc67028d$export$7bbad27896f7ae9f(maxWidth, tableWidth) : Number.MAX_SAFE_INTEGER;
}
function $6818b1c4fc67028d$export$f556054ce4358701(minWidth, tableWidth) {
  return minWidth != null ? $6818b1c4fc67028d$export$7bbad27896f7ae9f(minWidth, tableWidth) : 0;
}
function $6818b1c4fc67028d$export$55d50dc687385491(availableWidth, columns, changedColumns, getDefaultWidth, getDefaultMinWidth) {
  let hasNonFrozenItems = false;
  let flexItems = columns.map((column, index) => {
    var _column_width, _ref, _ref1;
    let width = changedColumns.get(column.key) != null ? changedColumns.get(column.key) : (_ref1 = (_ref = (_column_width = column.width) !== null && _column_width !== void 0 ? _column_width : column.defaultWidth) !== null && _ref !== void 0 ? _ref : getDefaultWidth === null || getDefaultWidth === void 0 ? void 0 : getDefaultWidth(index)) !== null && _ref1 !== void 0 ? _ref1 : "1fr";
    let frozen = false;
    let baseSize = 0;
    let flex = 0;
    let targetMainSize = null;
    if ($6818b1c4fc67028d$export$1994a077b98ee0d5(width)) {
      baseSize = $6818b1c4fc67028d$export$7bbad27896f7ae9f(width, availableWidth);
      frozen = true;
    } else {
      flex = $6818b1c4fc67028d$export$9078bad4c3934604(width);
      if (flex <= 0)
        frozen = true;
    }
    var _column_minWidth, _ref2;
    let min = $6818b1c4fc67028d$export$f556054ce4358701((_ref2 = (_column_minWidth = column.minWidth) !== null && _column_minWidth !== void 0 ? _column_minWidth : getDefaultMinWidth === null || getDefaultMinWidth === void 0 ? void 0 : getDefaultMinWidth(index)) !== null && _ref2 !== void 0 ? _ref2 : 0, availableWidth);
    let max = $6818b1c4fc67028d$export$59185c62a7544aa0(column.maxWidth, availableWidth);
    let hypotheticalMainSize = Math.max(min, Math.min(baseSize, max));
    if (frozen)
      targetMainSize = hypotheticalMainSize;
    else if (baseSize > hypotheticalMainSize) {
      frozen = true;
      targetMainSize = hypotheticalMainSize;
    }
    if (!frozen)
      hasNonFrozenItems = true;
    return {
      frozen,
      baseSize,
      hypotheticalMainSize,
      min,
      max,
      flex,
      targetMainSize,
      violation: 0
    };
  });
  while (hasNonFrozenItems) {
    let usedWidth = 0;
    let flexFactors = 0;
    flexItems.forEach((item) => {
      if (item.frozen)
        usedWidth += item.targetMainSize;
      else {
        usedWidth += item.baseSize;
        flexFactors += item.flex;
      }
    });
    let remainingFreeSpace = availableWidth - usedWidth;
    if (remainingFreeSpace > 0)
      flexItems.forEach((item) => {
        if (!item.frozen) {
          let ratio = item.flex / flexFactors;
          item.targetMainSize = item.baseSize + ratio * remainingFreeSpace;
        }
      });
    let totalViolation = 0;
    flexItems.forEach((item) => {
      item.violation = 0;
      if (!item.frozen) {
        let { min, max, targetMainSize } = item;
        item.targetMainSize = Math.max(min, Math.min(targetMainSize, max));
        item.violation = item.targetMainSize - targetMainSize;
        totalViolation += item.violation;
      }
    });
    hasNonFrozenItems = false;
    flexItems.forEach((item) => {
      if (totalViolation === 0 || Math.sign(totalViolation) === Math.sign(item.violation))
        item.frozen = true;
      else if (!item.frozen)
        hasNonFrozenItems = true;
    });
  }
  return $6818b1c4fc67028d$var$cascadeRounding(flexItems);
}
function $6818b1c4fc67028d$var$cascadeRounding(flexItems) {
  let fpTotal = 0;
  let intTotal = 0;
  let roundedArray = [];
  flexItems.forEach(function(item) {
    let float = item.targetMainSize;
    let integer = Math.round(float + fpTotal) - intTotal;
    fpTotal += float;
    intTotal += integer;
    roundedArray.push(integer);
  });
  return roundedArray;
}
var $a9e7ae544a4e41dd$export$7ff77a162970b30e = class {
  /** Takes an array of columns and splits it into 2 maps of columns with controlled and columns with uncontrolled widths. */
  splitColumnsIntoControlledAndUncontrolled(columns) {
    return columns.reduce((acc, col) => {
      if (col.props.width != null)
        acc[0].set(col.key, col);
      else
        acc[1].set(col.key, col);
      return acc;
    }, [
      /* @__PURE__ */ new Map(),
      /* @__PURE__ */ new Map()
    ]);
  }
  /** Takes uncontrolled and controlled widths and joins them into a single Map. */
  recombineColumns(columns, uncontrolledWidths, uncontrolledColumns, controlledColumns) {
    return new Map(columns.map((col) => {
      if (uncontrolledColumns.has(col.key))
        return [
          col.key,
          uncontrolledWidths.get(col.key)
        ];
      else
        return [
          col.key,
          controlledColumns.get(col.key).props.width
        ];
    }));
  }
  /** Used to make an initial Map of the uncontrolled widths based on default widths. */
  getInitialUncontrolledWidths(uncontrolledColumns) {
    var _col_props_defaultWidth, _ref;
    return new Map(Array.from(uncontrolledColumns).map(([key, col]) => {
      var _this, _this_getDefaultWidth;
      return [
        key,
        (_ref = (_col_props_defaultWidth = col.props.defaultWidth) !== null && _col_props_defaultWidth !== void 0 ? _col_props_defaultWidth : (_this_getDefaultWidth = (_this = this).getDefaultWidth) === null || _this_getDefaultWidth === void 0 ? void 0 : _this_getDefaultWidth.call(_this, col)) !== null && _ref !== void 0 ? _ref : "1fr"
      ];
    }));
  }
  getColumnWidth(key) {
    var _this_columnWidths_get;
    return (_this_columnWidths_get = this.columnWidths.get(key)) !== null && _this_columnWidths_get !== void 0 ? _this_columnWidths_get : 0;
  }
  getColumnMinWidth(key) {
    return this.columnMinWidths.get(key);
  }
  getColumnMaxWidth(key) {
    return this.columnMaxWidths.get(key);
  }
  resizeColumnWidth(tableWidth, collection, controlledWidths, uncontrolledWidths, col = null, width) {
    let prevColumnWidths = this.columnWidths;
    let resizeIndex = Infinity;
    let resizingChanged = new Map([
      ...controlledWidths,
      ...uncontrolledWidths
    ]);
    let percentKeys = /* @__PURE__ */ new Map();
    let frKeysToTheRight = /* @__PURE__ */ new Map();
    let minWidths = /* @__PURE__ */ new Map();
    collection.columns.forEach((column, i) => {
      var _column_props_width, _column_props_width_endsWith;
      let frKey;
      let frValue;
      minWidths.set(column.key, this.getDefaultMinWidth(collection.columns[i]));
      if (col !== column.key && !column.props.width && !(0, $6818b1c4fc67028d$export$1994a077b98ee0d5)(uncontrolledWidths.get(column.key))) {
        frKey = column.key;
        frValue = (0, $6818b1c4fc67028d$export$9078bad4c3934604)(uncontrolledWidths.get(column.key));
      } else if (col !== column.key && !(0, $6818b1c4fc67028d$export$1994a077b98ee0d5)(column.props.width) && !uncontrolledWidths.get(column.key)) {
        frKey = column.key;
        frValue = (0, $6818b1c4fc67028d$export$9078bad4c3934604)(column.props.width);
      } else if (col !== column.key && ((_column_props_width = column.props.width) === null || _column_props_width === void 0 ? void 0 : (_column_props_width_endsWith = _column_props_width.endsWith) === null || _column_props_width_endsWith === void 0 ? void 0 : _column_props_width_endsWith.call(_column_props_width, "%")))
        percentKeys.set(column.key, column.props.width);
      if (resizeIndex < i) {
        if (frKey)
          frKeysToTheRight.set(frKey, frValue);
        return;
      }
      if (column.key === col) {
        resizeIndex = i;
        resizingChanged.set(column.key, Math.floor(width));
        return;
      }
      resizingChanged.set(column.key, prevColumnWidths.get(column.key));
    });
    let columnWidths = (0, $6818b1c4fc67028d$export$55d50dc687385491)(tableWidth, collection.columns.map((col2) => ({
      ...col2.props,
      key: col2.key
    })), resizingChanged, (i) => this.getDefaultWidth(collection.columns[i]), (i) => this.getDefaultMinWidth(collection.columns[i]));
    let newWidths = /* @__PURE__ */ new Map();
    columnWidths.forEach((width2, index) => {
      let key = collection.columns[index].key;
      newWidths.set(key, width2);
    });
    Array.from(frKeysToTheRight).forEach(([key]) => {
      newWidths.set(key, `${frKeysToTheRight.get(key)}fr`);
    });
    Array.from(percentKeys).forEach(([key, width2]) => {
      if (key === col)
        return;
      newWidths.set(key, width2);
    });
    return newWidths;
  }
  buildColumnWidths(tableWidth, collection, widths) {
    this.columnWidths = /* @__PURE__ */ new Map();
    this.columnMinWidths = /* @__PURE__ */ new Map();
    this.columnMaxWidths = /* @__PURE__ */ new Map();
    let columnWidths = (0, $6818b1c4fc67028d$export$55d50dc687385491)(tableWidth, collection.columns.map((col) => ({
      ...col.props,
      key: col.key
    })), widths, (i) => this.getDefaultWidth(collection.columns[i]), (i) => this.getDefaultMinWidth(collection.columns[i]));
    columnWidths.forEach((width, index) => {
      let key = collection.columns[index].key;
      let column = collection.columns[index];
      this.columnWidths.set(key, width);
      var _column_props_minWidth;
      this.columnMinWidths.set(key, (0, $6818b1c4fc67028d$export$f556054ce4358701)((_column_props_minWidth = column.props.minWidth) !== null && _column_props_minWidth !== void 0 ? _column_props_minWidth : this.getDefaultMinWidth(column), tableWidth));
      this.columnMaxWidths.set(key, (0, $6818b1c4fc67028d$export$59185c62a7544aa0)(column.props.maxWidth, tableWidth));
    });
    return this.columnWidths;
  }
  constructor(options) {
    this.columnWidths = /* @__PURE__ */ new Map();
    this.columnMinWidths = /* @__PURE__ */ new Map();
    this.columnMaxWidths = /* @__PURE__ */ new Map();
    var _options_getDefaultWidth;
    this.getDefaultWidth = (_options_getDefaultWidth = options === null || options === void 0 ? void 0 : options.getDefaultWidth) !== null && _options_getDefaultWidth !== void 0 ? _options_getDefaultWidth : () => "1fr";
    var _options_getDefaultMinWidth;
    this.getDefaultMinWidth = (_options_getDefaultMinWidth = options === null || options === void 0 ? void 0 : options.getDefaultMinWidth) !== null && _options_getDefaultMinWidth !== void 0 ? _options_getDefaultMinWidth : () => 75;
  }
};
function $292bc4e09cd0eb62$export$cb895dcf85db1319(props, state) {
  let { getDefaultWidth, getDefaultMinWidth, tableWidth = 0 } = props;
  let [resizingColumn, setResizingColumn] = (0, import_react45.useState)(null);
  let columnLayout = (0, import_react45.useMemo)(() => new (0, $a9e7ae544a4e41dd$export$7ff77a162970b30e)({
    getDefaultWidth,
    getDefaultMinWidth
  }), [
    getDefaultWidth,
    getDefaultMinWidth
  ]);
  let [controlledColumns, uncontrolledColumns] = (0, import_react45.useMemo)(() => columnLayout.splitColumnsIntoControlledAndUncontrolled(state.collection.columns), [
    state.collection.columns,
    columnLayout
  ]);
  let [uncontrolledWidths, setUncontrolledWidths] = (0, import_react45.useState)(() => columnLayout.getInitialUncontrolledWidths(uncontrolledColumns));
  let colWidths = (0, import_react45.useMemo)(() => columnLayout.recombineColumns(state.collection.columns, uncontrolledWidths, uncontrolledColumns, controlledColumns), [
    state.collection.columns,
    uncontrolledWidths,
    uncontrolledColumns,
    controlledColumns,
    columnLayout
  ]);
  let startResize = (0, import_react45.useCallback)((key) => {
    setResizingColumn(key);
  }, [
    setResizingColumn
  ]);
  let updateResizedColumns = (0, import_react45.useCallback)((key, width) => {
    let newControlled = new Map(Array.from(controlledColumns).map(([key2, entry]) => [
      key2,
      entry.props.width
    ]));
    let newSizes = columnLayout.resizeColumnWidth(tableWidth, state.collection, newControlled, uncontrolledWidths, key, width);
    let map = new Map(Array.from(uncontrolledColumns).map(([key2]) => [
      key2,
      newSizes.get(key2)
    ]));
    map.set(key, width);
    setUncontrolledWidths(map);
    return newSizes;
  }, [
    controlledColumns,
    uncontrolledColumns,
    setUncontrolledWidths,
    tableWidth,
    columnLayout,
    state.collection,
    uncontrolledWidths
  ]);
  let endResize = (0, import_react45.useCallback)(() => {
    setResizingColumn(null);
  }, [
    setResizingColumn
  ]);
  (0, import_react45.useMemo)(() => columnLayout.buildColumnWidths(tableWidth, state.collection, colWidths), [
    tableWidth,
    state.collection,
    colWidths,
    columnLayout
  ]);
  return (0, import_react45.useMemo)(() => ({
    resizingColumn,
    updateResizedColumns,
    startResize,
    endResize,
    getColumnWidth: (key) => columnLayout.getColumnWidth(key),
    getColumnMinWidth: (key) => columnLayout.getColumnMinWidth(key),
    getColumnMaxWidth: (key) => columnLayout.getColumnMaxWidth(key),
    tableState: state
  }), [
    columnLayout,
    resizingColumn,
    updateResizedColumns,
    startResize,
    endResize,
    state
  ]);
}
var $788781baa30117fa$var$ROW_HEADER_COLUMN_KEY = "row-header-column-" + Math.random().toString(36).slice(2);
var $788781baa30117fa$var$ROW_HEADER_COLUMN_KEY_DRAG = "row-header-column-" + Math.random().toString(36).slice(2);
while ($788781baa30117fa$var$ROW_HEADER_COLUMN_KEY === $788781baa30117fa$var$ROW_HEADER_COLUMN_KEY_DRAG)
  $788781baa30117fa$var$ROW_HEADER_COLUMN_KEY_DRAG = "row-header-column-" + Math.random().toString(36).slice(2);
function $788781baa30117fa$export$7c127db850d4e81e(keyMap, columnNodes) {
  if (columnNodes.length === 0)
    return [];
  let columns = [];
  let seen = /* @__PURE__ */ new Map();
  for (let column of columnNodes) {
    let parentKey = column.parentKey;
    let col = [
      column
    ];
    while (parentKey) {
      let parent = keyMap.get(parentKey);
      if (!parent)
        break;
      if (seen.has(parent)) {
        parent.colspan++;
        let { column: column2, index } = seen.get(parent);
        if (index > col.length)
          break;
        for (let i2 = index; i2 < col.length; i2++)
          column2.splice(i2, 0, null);
        for (let i2 = col.length; i2 < column2.length; i2++)
          if (column2[i2] && seen.has(column2[i2]))
            seen.get(column2[i2]).index = i2;
      } else {
        parent.colspan = 1;
        col.push(parent);
        seen.set(parent, {
          column: col,
          index: col.length - 1
        });
      }
      parentKey = parent.parentKey;
    }
    columns.push(col);
    column.index = columns.length - 1;
  }
  let maxLength = Math.max(...columns.map((c) => c.length));
  let headerRows = Array(maxLength).fill(0).map(() => []);
  let colIndex = 0;
  for (let column of columns) {
    let i2 = maxLength - 1;
    for (let item of column) {
      if (item) {
        let row = headerRows[i2];
        let rowLength = row.reduce((p, c) => p + c.colspan, 0);
        if (rowLength < colIndex) {
          let placeholder = {
            type: "placeholder",
            key: "placeholder-" + item.key,
            colspan: colIndex - rowLength,
            index: rowLength,
            value: null,
            rendered: null,
            level: i2,
            hasChildNodes: false,
            childNodes: [],
            textValue: null
          };
          if (row.length > 0) {
            row[row.length - 1].nextKey = placeholder.key;
            placeholder.prevKey = row[row.length - 1].key;
          }
          row.push(placeholder);
        }
        if (row.length > 0) {
          row[row.length - 1].nextKey = item.key;
          item.prevKey = row[row.length - 1].key;
        }
        item.level = i2;
        item.colIndex = colIndex;
        row.push(item);
      }
      i2--;
    }
    colIndex++;
  }
  let i = 0;
  for (let row of headerRows) {
    let rowLength = row.reduce((p, c) => p + c.colspan, 0);
    if (rowLength < columnNodes.length) {
      let placeholder = {
        type: "placeholder",
        key: "placeholder-" + row[row.length - 1].key,
        colspan: columnNodes.length - rowLength,
        index: rowLength,
        value: null,
        rendered: null,
        level: i,
        hasChildNodes: false,
        childNodes: [],
        textValue: null,
        prevKey: row[row.length - 1].key
      };
      row.push(placeholder);
    }
    i++;
  }
  return headerRows.map((childNodes, index) => {
    let row = {
      type: "headerrow",
      key: "headerrow-" + index,
      index,
      value: null,
      rendered: null,
      level: 0,
      hasChildNodes: true,
      childNodes,
      textValue: null
    };
    return row;
  });
}
var $788781baa30117fa$export$596e1b2e2cf93690 = class extends (0, $16805b1b18093c5f$export$de3fdf6493c353d) {
  *[Symbol.iterator]() {
    yield* this.body.childNodes;
  }
  get size() {
    return this._size;
  }
  getKeys() {
    return this.keyMap.keys();
  }
  getKeyBefore(key) {
    let node = this.keyMap.get(key);
    return node ? node.prevKey : null;
  }
  getKeyAfter(key) {
    let node = this.keyMap.get(key);
    return node ? node.nextKey : null;
  }
  getFirstKey() {
    var _getFirstItem;
    return (_getFirstItem = (0, $c5a24bc478652b5f$export$fbdeaa6a76694f71)(this.body.childNodes)) === null || _getFirstItem === void 0 ? void 0 : _getFirstItem.key;
  }
  getLastKey() {
    var _getLastItem;
    return (_getLastItem = (0, $c5a24bc478652b5f$export$7475b2c64539e4cf)(this.body.childNodes)) === null || _getLastItem === void 0 ? void 0 : _getLastItem.key;
  }
  getItem(key) {
    return this.keyMap.get(key);
  }
  at(idx) {
    const keys = [
      ...this.getKeys()
    ];
    return this.getItem(keys[idx]);
  }
  getTextValue(key) {
    let row = this.getItem(key);
    if (!row)
      return "";
    if (row.textValue)
      return row.textValue;
    let rowHeaderColumnKeys = this.rowHeaderColumnKeys;
    if (rowHeaderColumnKeys) {
      let text = [];
      for (let cell of row.childNodes) {
        let column = this.columns[cell.index];
        if (rowHeaderColumnKeys.has(column.key) && cell.textValue)
          text.push(cell.textValue);
        if (text.length === rowHeaderColumnKeys.size)
          break;
      }
      return text.join(" ");
    }
    return "";
  }
  constructor(nodes, prev, opts) {
    let rowHeaderColumnKeys = /* @__PURE__ */ new Set();
    let body;
    let columns = [];
    if (opts === null || opts === void 0 ? void 0 : opts.showSelectionCheckboxes) {
      let rowHeaderColumn = {
        type: "column",
        key: $788781baa30117fa$var$ROW_HEADER_COLUMN_KEY,
        value: null,
        textValue: "",
        level: 0,
        index: (opts === null || opts === void 0 ? void 0 : opts.showDragButtons) ? 1 : 0,
        hasChildNodes: false,
        rendered: null,
        childNodes: [],
        props: {
          isSelectionCell: true
        }
      };
      columns.unshift(rowHeaderColumn);
    }
    if (opts === null || opts === void 0 ? void 0 : opts.showDragButtons) {
      let rowHeaderColumn = {
        type: "column",
        key: $788781baa30117fa$var$ROW_HEADER_COLUMN_KEY_DRAG,
        value: null,
        textValue: "",
        level: 0,
        index: 0,
        hasChildNodes: false,
        rendered: null,
        childNodes: [],
        props: {
          isDragButtonCell: true
        }
      };
      columns.unshift(rowHeaderColumn);
    }
    let rows = [];
    let columnKeyMap = /* @__PURE__ */ new Map();
    let visit = (node) => {
      switch (node.type) {
        case "body":
          body = node;
          break;
        case "column":
          columnKeyMap.set(node.key, node);
          if (!node.hasChildNodes) {
            columns.push(node);
            if (node.props.isRowHeader)
              rowHeaderColumnKeys.add(node.key);
          }
          break;
        case "item":
          rows.push(node);
          return;
      }
      for (let child of node.childNodes)
        visit(child);
    };
    for (let node of nodes)
      visit(node);
    let headerRows = $788781baa30117fa$export$7c127db850d4e81e(columnKeyMap, columns);
    headerRows.forEach((row, i) => rows.splice(i, 0, row));
    super({
      columnCount: columns.length,
      items: rows,
      visitNode: (node) => {
        node.column = columns[node.index];
        return node;
      }
    });
    this._size = 0;
    this.columns = columns;
    this.rowHeaderColumnKeys = rowHeaderColumnKeys;
    this.body = body;
    this.headerRows = headerRows;
    this._size = [
      ...body.childNodes
    ].length;
    if (this.rowHeaderColumnKeys.size === 0) {
      if (opts === null || opts === void 0 ? void 0 : opts.showSelectionCheckboxes) {
        if (opts === null || opts === void 0 ? void 0 : opts.showDragButtons)
          this.rowHeaderColumnKeys.add(this.columns[2].key);
        else
          this.rowHeaderColumnKeys.add(this.columns[1].key);
      } else
        this.rowHeaderColumnKeys.add(this.columns[0].key);
    }
  }
};
var $4a0dd036d492cee4$var$OPPOSITE_SORT_DIRECTION = {
  ascending: "descending",
  descending: "ascending"
};
function $4a0dd036d492cee4$export$907bcc6c48325fd6(props) {
  let [isKeyboardNavigationDisabled, setKeyboardNavigationDisabled] = (0, import_react45.useState)(false);
  let { selectionMode = "none", showSelectionCheckboxes, showDragButtons } = props;
  let context = (0, import_react45.useMemo)(() => ({
    showSelectionCheckboxes: showSelectionCheckboxes && selectionMode !== "none",
    showDragButtons,
    selectionMode,
    columns: []
  }), [
    props.children,
    showSelectionCheckboxes,
    selectionMode,
    showDragButtons
  ]);
  let collection = (0, $7613b1592d41b092$export$6cd28814d92fa9c9)(props, (0, import_react45.useCallback)((nodes) => new (0, $788781baa30117fa$export$596e1b2e2cf93690)(nodes, null, context), [
    context
  ]), context);
  let { disabledKeys, selectionManager } = (0, $62967d126f3aa823$export$4007ac09ff9c68ed)({
    ...props,
    collection,
    disabledBehavior: props.disabledBehavior || "selection"
  });
  return {
    collection,
    disabledKeys,
    selectionManager,
    showSelectionCheckboxes: props.showSelectionCheckboxes || false,
    sortDescriptor: props.sortDescriptor,
    isKeyboardNavigationDisabled: collection.size === 0 || isKeyboardNavigationDisabled,
    setKeyboardNavigationDisabled,
    sort(columnKey, direction) {
      var _props_sortDescriptor;
      props.onSortChange({
        column: columnKey,
        direction: direction !== null && direction !== void 0 ? direction : ((_props_sortDescriptor = props.sortDescriptor) === null || _props_sortDescriptor === void 0 ? void 0 : _props_sortDescriptor.column) === columnKey ? $4a0dd036d492cee4$var$OPPOSITE_SORT_DIRECTION[props.sortDescriptor.direction] : "ascending"
      });
    }
  };
}
function $312ae3b56a94a86e$var$TableHeader(props) {
  return null;
}
$312ae3b56a94a86e$var$TableHeader.getCollectionNode = function* getCollectionNode3(props, context) {
  let { children, columns } = props;
  context.columns = [];
  if (typeof children === "function") {
    if (!columns)
      throw new Error("props.children was a function but props.columns is missing");
    for (let column of columns)
      yield {
        type: "column",
        value: column,
        renderer: children
      };
  } else {
    let columns2 = [];
    (0, import_react45.default).Children.forEach(children, (column) => {
      columns2.push({
        type: "column",
        element: column
      });
    });
    yield* columns2;
  }
};
function $4ae5314bf50db1a3$var$TableBody(props) {
  return null;
}
$4ae5314bf50db1a3$var$TableBody.getCollectionNode = function* getCollectionNode4(props) {
  let { children, items } = props;
  yield {
    type: "body",
    hasChildNodes: true,
    props,
    *childNodes() {
      if (typeof children === "function") {
        if (!items)
          throw new Error("props.children was a function but props.items is missing");
        for (let item of items)
          yield {
            type: "item",
            value: item,
            renderer: children
          };
      } else {
        let items2 = [];
        (0, import_react45.default).Children.forEach(children, (item) => {
          items2.push({
            type: "item",
            element: item
          });
        });
        yield* items2;
      }
    }
  };
};
function $1cd244557c2f97d5$var$Column(props) {
  return null;
}
$1cd244557c2f97d5$var$Column.getCollectionNode = function* getCollectionNode5(props, context) {
  let { title, children, childColumns } = props;
  let rendered = title || children;
  let textValue = props.textValue || (typeof rendered === "string" ? rendered : "") || props["aria-label"];
  let fullNodes = yield {
    type: "column",
    hasChildNodes: !!childColumns || title && (0, import_react45.default).Children.count(children) > 0,
    rendered,
    textValue,
    props,
    *childNodes() {
      if (childColumns)
        for (let child of childColumns)
          yield {
            type: "column",
            value: child
          };
      else if (title) {
        let childColumns2 = [];
        (0, import_react45.default).Children.forEach(children, (child) => {
          childColumns2.push({
            type: "column",
            element: child
          });
        });
        yield* childColumns2;
      }
    },
    shouldInvalidate(newContext) {
      updateContext(newContext);
      return false;
    }
  };
  let updateContext = (context2) => {
    for (let node of fullNodes)
      if (!node.hasChildNodes)
        context2.columns.push(node);
  };
  updateContext(context);
};
function $70d70eb16ea48428$var$Row(props) {
  return null;
}
$70d70eb16ea48428$var$Row.getCollectionNode = function* getCollectionNode6(props, context) {
  let { children, textValue, UNSTABLE_childItems } = props;
  yield {
    type: "item",
    props,
    textValue,
    "aria-label": props["aria-label"],
    hasChildNodes: true,
    *childNodes() {
      if (context.showDragButtons)
        yield {
          type: "cell",
          key: "header-drag",
          props: {
            isDragButtonCell: true
          }
        };
      if (context.showSelectionCheckboxes && context.selectionMode !== "none")
        yield {
          type: "cell",
          key: "header",
          props: {
            isSelectionCell: true
          }
        };
      if (typeof children === "function") {
        for (let column of context.columns)
          yield {
            type: "cell",
            element: children(column.key),
            key: column.key
            // this is combined with the row key by CollectionBuilder
          };
        if (UNSTABLE_childItems)
          for (let child of UNSTABLE_childItems)
            yield {
              type: "item",
              value: child
            };
      } else {
        let cells = [];
        let childRows = [];
        (0, import_react45.default).Children.forEach(children, (node) => {
          if (node.type === $70d70eb16ea48428$var$Row) {
            if (cells.length < context.columns.length)
              throw new Error("All of a Row's child Cells must be positioned before any child Rows.");
            childRows.push({
              type: "item",
              element: node
            });
          } else
            cells.push({
              type: "cell",
              element: node
            });
        });
        if (cells.length !== context.columns.length)
          throw new Error(`Cell count must match column count. Found ${cells.length} cells and ${context.columns.length} columns.`);
        yield* cells;
        yield* childRows;
      }
    },
    shouldInvalidate(newContext) {
      return newContext.columns.length !== context.columns.length || newContext.columns.some((c, i) => c.key !== context.columns[i].key) || newContext.showSelectionCheckboxes !== context.showSelectionCheckboxes || newContext.showDragButtons !== context.showDragButtons || newContext.selectionMode !== context.selectionMode;
    }
  };
};
function $941d1d9a6a28982a$var$Cell(props) {
  return null;
}
$941d1d9a6a28982a$var$Cell.getCollectionNode = function* getCollectionNode7(props) {
  let { children } = props;
  let textValue = props.textValue || (typeof children === "string" ? children : "") || props["aria-label"] || "";
  yield {
    type: "cell",
    props,
    rendered: children,
    textValue,
    "aria-label": props["aria-label"],
    hasChildNodes: false
  };
};

// node_modules/.pnpm/@react-stately+tabs@3.5.1_react@18.2.0/node_modules/@react-stately/tabs/dist/module.js
var import_react46 = __toESM(require_react());
function $76f919a04c5a7d14$export$4ba071daf4e486(props) {
  let state = (0, $a0d645289fe9b86b$export$e7f05e985daf4b5f)({
    ...props,
    suppressTextValueWarning: true
  });
  let { selectionManager, collection, selectedKey: currentSelectedKey } = state;
  let lastSelectedKey = (0, import_react46.useRef)(currentSelectedKey);
  (0, import_react46.useEffect)(() => {
    let selectedKey = currentSelectedKey;
    if (selectionManager.isEmpty || !collection.getItem(selectedKey)) {
      selectedKey = collection.getFirstKey();
      while (state.disabledKeys.has(selectedKey) && selectedKey !== collection.getLastKey())
        selectedKey = collection.getKeyAfter(selectedKey);
      if (state.disabledKeys.has(selectedKey) && selectedKey === collection.getLastKey())
        selectedKey = collection.getFirstKey();
      if (selectedKey != null)
        selectionManager.setSelectedKeys([
          selectedKey
        ]);
    }
    if (selectedKey != null && selectionManager.focusedKey == null || !selectionManager.isFocused && selectedKey !== lastSelectedKey.current)
      selectionManager.setFocusedKey(selectedKey);
    lastSelectedKey.current = selectedKey;
  });
  return {
    ...state,
    isDisabled: props.isDisabled || false
  };
}

// node_modules/.pnpm/@react-stately+tooltip@3.4.3_react@18.2.0/node_modules/@react-stately/tooltip/dist/module.js
var import_react47 = __toESM(require_react());
var $8796f90736e175cb$var$TOOLTIP_DELAY = 1500;
var $8796f90736e175cb$var$TOOLTIP_COOLDOWN = 500;
var $8796f90736e175cb$var$tooltips = {};
var $8796f90736e175cb$var$tooltipId = 0;
var $8796f90736e175cb$var$globalWarmedUp = false;
var $8796f90736e175cb$var$globalWarmUpTimeout = null;
var $8796f90736e175cb$var$globalCooldownTimeout = null;
function $8796f90736e175cb$export$4d40659c25ecb50b(props = {}) {
  let { delay = $8796f90736e175cb$var$TOOLTIP_DELAY, closeDelay = $8796f90736e175cb$var$TOOLTIP_COOLDOWN } = props;
  let { isOpen, open, close } = (0, $fc909762b330b746$export$61c6a8c84e605fb6)(props);
  let id = (0, import_react47.useMemo)(() => `${++$8796f90736e175cb$var$tooltipId}`, []);
  let closeTimeout = (0, import_react47.useRef)();
  let ensureTooltipEntry = () => {
    $8796f90736e175cb$var$tooltips[id] = hideTooltip;
  };
  let closeOpenTooltips = () => {
    for (let hideTooltipId in $8796f90736e175cb$var$tooltips)
      if (hideTooltipId !== id) {
        $8796f90736e175cb$var$tooltips[hideTooltipId](true);
        delete $8796f90736e175cb$var$tooltips[hideTooltipId];
      }
  };
  let showTooltip = () => {
    clearTimeout(closeTimeout.current);
    closeTimeout.current = null;
    closeOpenTooltips();
    ensureTooltipEntry();
    $8796f90736e175cb$var$globalWarmedUp = true;
    open();
    if ($8796f90736e175cb$var$globalWarmUpTimeout) {
      clearTimeout($8796f90736e175cb$var$globalWarmUpTimeout);
      $8796f90736e175cb$var$globalWarmUpTimeout = null;
    }
    if ($8796f90736e175cb$var$globalCooldownTimeout) {
      clearTimeout($8796f90736e175cb$var$globalCooldownTimeout);
      $8796f90736e175cb$var$globalCooldownTimeout = null;
    }
  };
  let hideTooltip = (immediate) => {
    if (immediate || closeDelay <= 0) {
      clearTimeout(closeTimeout.current);
      closeTimeout.current = null;
      close();
    } else if (!closeTimeout.current)
      closeTimeout.current = setTimeout(() => {
        closeTimeout.current = null;
        close();
      }, closeDelay);
    if ($8796f90736e175cb$var$globalWarmUpTimeout) {
      clearTimeout($8796f90736e175cb$var$globalWarmUpTimeout);
      $8796f90736e175cb$var$globalWarmUpTimeout = null;
    }
    if ($8796f90736e175cb$var$globalWarmedUp) {
      if ($8796f90736e175cb$var$globalCooldownTimeout)
        clearTimeout($8796f90736e175cb$var$globalCooldownTimeout);
      $8796f90736e175cb$var$globalCooldownTimeout = setTimeout(() => {
        delete $8796f90736e175cb$var$tooltips[id];
        $8796f90736e175cb$var$globalCooldownTimeout = null;
        $8796f90736e175cb$var$globalWarmedUp = false;
      }, Math.max($8796f90736e175cb$var$TOOLTIP_COOLDOWN, closeDelay));
    }
  };
  let warmupTooltip = () => {
    closeOpenTooltips();
    ensureTooltipEntry();
    if (!isOpen && !$8796f90736e175cb$var$globalWarmUpTimeout && !$8796f90736e175cb$var$globalWarmedUp)
      $8796f90736e175cb$var$globalWarmUpTimeout = setTimeout(() => {
        $8796f90736e175cb$var$globalWarmUpTimeout = null;
        $8796f90736e175cb$var$globalWarmedUp = true;
        showTooltip();
      }, delay);
    else if (!isOpen)
      showTooltip();
  };
  (0, import_react47.useEffect)(() => {
    return () => {
      clearTimeout(closeTimeout.current);
      let tooltip = $8796f90736e175cb$var$tooltips[id];
      if (tooltip)
        delete $8796f90736e175cb$var$tooltips[id];
    };
  }, [
    id
  ]);
  return {
    isOpen,
    open: (immediate) => {
      if (!immediate && delay > 0 && !closeTimeout.current)
        warmupTooltip();
      else
        showTooltip();
    },
    close: hideTooltip
  };
}

// node_modules/.pnpm/@react-stately+tree@3.7.1_react@18.2.0/node_modules/@react-stately/tree/dist/module.js
var import_react48 = __toESM(require_react());
var $05ca4cd7c4a5a999$export$863faf230ee2118a = class {
  *[Symbol.iterator]() {
    yield* this.iterable;
  }
  get size() {
    return this.keyMap.size;
  }
  getKeys() {
    return this.keyMap.keys();
  }
  getKeyBefore(key) {
    let node = this.keyMap.get(key);
    return node ? node.prevKey : null;
  }
  getKeyAfter(key) {
    let node = this.keyMap.get(key);
    return node ? node.nextKey : null;
  }
  getFirstKey() {
    return this.firstKey;
  }
  getLastKey() {
    return this.lastKey;
  }
  getItem(key) {
    return this.keyMap.get(key);
  }
  at(idx) {
    const keys = [
      ...this.getKeys()
    ];
    return this.getItem(keys[idx]);
  }
  constructor(nodes, { expandedKeys } = {}) {
    this.keyMap = /* @__PURE__ */ new Map();
    this.iterable = nodes;
    expandedKeys = expandedKeys || /* @__PURE__ */ new Set();
    let visit = (node) => {
      this.keyMap.set(node.key, node);
      if (node.childNodes && (node.type === "section" || expandedKeys.has(node.key)))
        for (let child of node.childNodes)
          visit(child);
    };
    for (let node of nodes)
      visit(node);
    let last;
    let index = 0;
    for (let [key, node] of this.keyMap) {
      if (last) {
        last.nextKey = key;
        node.prevKey = last.key;
      } else {
        this.firstKey = key;
        node.prevKey = void 0;
      }
      if (node.type === "item")
        node.index = index++;
      last = node;
      last.nextKey = void 0;
    }
    this.lastKey = last === null || last === void 0 ? void 0 : last.key;
  }
};
function $875d6693e12af071$export$728d6ba534403756(props) {
  let [expandedKeys, setExpandedKeys] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(props.expandedKeys ? new Set(props.expandedKeys) : void 0, props.defaultExpandedKeys ? new Set(props.defaultExpandedKeys) : /* @__PURE__ */ new Set(), props.onExpandedChange);
  let selectionState = (0, $7af3f5b51489e0b5$export$253fe78d46329472)(props);
  let disabledKeys = (0, import_react48.useMemo)(() => props.disabledKeys ? new Set(props.disabledKeys) : /* @__PURE__ */ new Set(), [
    props.disabledKeys
  ]);
  let tree = (0, $7613b1592d41b092$export$6cd28814d92fa9c9)(props, (0, import_react48.useCallback)((nodes) => new (0, $05ca4cd7c4a5a999$export$863faf230ee2118a)(nodes, {
    expandedKeys
  }), [
    expandedKeys
  ]), null);
  (0, import_react48.useEffect)(() => {
    if (selectionState.focusedKey != null && !tree.getItem(selectionState.focusedKey))
      selectionState.setFocusedKey(null);
  }, [
    tree,
    selectionState.focusedKey
  ]);
  let onToggle = (key) => {
    setExpandedKeys($875d6693e12af071$var$toggleKey(expandedKeys, key));
  };
  return {
    collection: tree,
    expandedKeys,
    disabledKeys,
    toggleKey: onToggle,
    setExpandedKeys,
    selectionManager: new (0, $d496c0a20b6e58ec$export$6c8a5aaad13c9852)(tree, selectionState)
  };
}
function $875d6693e12af071$var$toggleKey(set, key) {
  let res = new Set(set);
  if (res.has(key))
    res.delete(key);
  else
    res.add(key);
  return res;
}

// node_modules/.pnpm/react-aria-components@1.0.0-alpha.6_react-dom@18.2.0_react@18.2.0/node_modules/react-aria-components/dist/module.js
var $7135fc7d473fd974$export$f5d856d854e74713 = class {
  get childNodes() {
    throw new Error("childNodes is not supported");
  }
  clone() {
    let node = new $7135fc7d473fd974$export$f5d856d854e74713(this.type, this.key);
    node.value = this.value;
    node.level = this.level;
    node.hasChildNodes = this.hasChildNodes;
    node.rendered = this.rendered;
    node.textValue = this.textValue;
    node["aria-label"] = this["aria-label"];
    node.index = this.index;
    node.parentKey = this.parentKey;
    node.prevKey = this.prevKey;
    node.nextKey = this.nextKey;
    node.firstChildKey = this.firstChildKey;
    node.lastChildKey = this.lastChildKey;
    node.props = this.props;
    return node;
  }
  constructor(type, key) {
    this.value = null;
    this.level = 0;
    this.hasChildNodes = false;
    this.rendered = null;
    this.textValue = "";
    this["aria-label"] = void 0;
    this.index = 0;
    this.parentKey = null;
    this.prevKey = null;
    this.nextKey = null;
    this.firstChildKey = null;
    this.lastChildKey = null;
    this.props = {};
    this.type = type;
    this.key = key;
  }
};
var $7135fc7d473fd974$var$BaseNode = class {
  *[Symbol.iterator]() {
    let node = this.firstChild;
    while (node) {
      yield node;
      node = node.nextSibling;
    }
  }
  get firstChild() {
    return this._firstChild;
  }
  set firstChild(firstChild) {
    this._firstChild = firstChild;
    this.ownerDocument.markDirty(this);
  }
  get lastChild() {
    return this._lastChild;
  }
  set lastChild(lastChild) {
    this._lastChild = lastChild;
    this.ownerDocument.markDirty(this);
  }
  get previousSibling() {
    return this._previousSibling;
  }
  set previousSibling(previousSibling) {
    this._previousSibling = previousSibling;
    this.ownerDocument.markDirty(this);
  }
  get nextSibling() {
    return this._nextSibling;
  }
  set nextSibling(nextSibling) {
    this._nextSibling = nextSibling;
    this.ownerDocument.markDirty(this);
  }
  get parentNode() {
    return this._parentNode;
  }
  set parentNode(parentNode) {
    this._parentNode = parentNode;
    this.ownerDocument.markDirty(this);
  }
  appendChild(child) {
    this.ownerDocument.startTransaction();
    if (child.parentNode)
      child.parentNode.removeChild(child);
    if (this.firstChild == null)
      this.firstChild = child;
    if (this.lastChild) {
      this.lastChild.nextSibling = child;
      child.index = this.lastChild.index + 1;
      child.previousSibling = this.lastChild;
    } else {
      child.previousSibling = null;
      child.index = 0;
    }
    child.parentNode = this;
    child.nextSibling = null;
    this.lastChild = child;
    this.ownerDocument.markDirty(this);
    if (child.hasSetProps)
      this.ownerDocument.addNode(child);
    this.ownerDocument.endTransaction();
    this.ownerDocument.queueUpdate();
  }
  insertBefore(newNode, referenceNode) {
    if (referenceNode == null)
      return this.appendChild(newNode);
    this.ownerDocument.startTransaction();
    if (newNode.parentNode)
      newNode.parentNode.removeChild(newNode);
    newNode.nextSibling = referenceNode;
    newNode.previousSibling = referenceNode.previousSibling;
    newNode.index = referenceNode.index;
    if (this.firstChild === referenceNode)
      this.firstChild = newNode;
    else if (referenceNode.previousSibling)
      referenceNode.previousSibling.nextSibling = newNode;
    referenceNode.previousSibling = newNode;
    newNode.parentNode = referenceNode.parentNode;
    let node = referenceNode;
    while (node) {
      node.index++;
      node = node.nextSibling;
    }
    if (newNode.hasSetProps)
      this.ownerDocument.addNode(newNode);
    this.ownerDocument.endTransaction();
    this.ownerDocument.queueUpdate();
  }
  removeChild(child) {
    if (child.parentNode !== this)
      return;
    this.ownerDocument.startTransaction();
    let node = child.nextSibling;
    while (node) {
      node.index--;
      node = node.nextSibling;
    }
    if (child.nextSibling)
      child.nextSibling.previousSibling = child.previousSibling;
    if (child.previousSibling)
      child.previousSibling.nextSibling = child.nextSibling;
    if (this.firstChild === child)
      this.firstChild = child.nextSibling;
    if (this.lastChild === child)
      this.lastChild = child.previousSibling;
    child.parentNode = null;
    child.nextSibling = null;
    child.previousSibling = null;
    child.index = 0;
    this.ownerDocument.removeNode(child);
    this.ownerDocument.endTransaction();
    this.ownerDocument.queueUpdate();
  }
  addEventListener() {
  }
  removeEventListener() {
  }
  constructor(ownerDocument) {
    this._firstChild = null;
    this._lastChild = null;
    this._previousSibling = null;
    this._nextSibling = null;
    this._parentNode = null;
    this.ownerDocument = ownerDocument;
  }
};
var $7135fc7d473fd974$var$id = 0;
var $7135fc7d473fd974$export$dc064fe9e59310fd = class extends $7135fc7d473fd974$var$BaseNode {
  get index() {
    return this._index;
  }
  set index(index) {
    this._index = index;
    this.ownerDocument.markDirty(this);
  }
  get level() {
    if (this.parentNode instanceof $7135fc7d473fd974$export$dc064fe9e59310fd)
      return this.parentNode.level + (this.node.type === "item" ? 1 : 0);
    return 0;
  }
  updateNode() {
    var _this_previousSibling, _this_nextSibling, _this_firstChild, _this_lastChild;
    let node = this.ownerDocument.getMutableNode(this);
    node.index = this.index;
    node.level = this.level;
    node.parentKey = this.parentNode instanceof $7135fc7d473fd974$export$dc064fe9e59310fd ? this.parentNode.node.key : null;
    var _this_previousSibling_node_key;
    node.prevKey = (_this_previousSibling_node_key = (_this_previousSibling = this.previousSibling) === null || _this_previousSibling === void 0 ? void 0 : _this_previousSibling.node.key) !== null && _this_previousSibling_node_key !== void 0 ? _this_previousSibling_node_key : null;
    var _this_nextSibling_node_key;
    node.nextKey = (_this_nextSibling_node_key = (_this_nextSibling = this.nextSibling) === null || _this_nextSibling === void 0 ? void 0 : _this_nextSibling.node.key) !== null && _this_nextSibling_node_key !== void 0 ? _this_nextSibling_node_key : null;
    node.hasChildNodes = !!this.firstChild;
    var _this_firstChild_node_key;
    node.firstChildKey = (_this_firstChild_node_key = (_this_firstChild = this.firstChild) === null || _this_firstChild === void 0 ? void 0 : _this_firstChild.node.key) !== null && _this_firstChild_node_key !== void 0 ? _this_firstChild_node_key : null;
    var _this_lastChild_node_key;
    node.lastChildKey = (_this_lastChild_node_key = (_this_lastChild = this.lastChild) === null || _this_lastChild === void 0 ? void 0 : _this_lastChild.node.key) !== null && _this_lastChild_node_key !== void 0 ? _this_lastChild_node_key : null;
  }
  setProps(obj, ref, rendered) {
    let node = this.ownerDocument.getMutableNode(this);
    let { value, textValue, id, ...props } = obj;
    props.ref = ref;
    node.props = props;
    node.rendered = rendered;
    node.value = value;
    node.textValue = textValue || (typeof rendered === "string" ? rendered : "") || obj["aria-label"] || "";
    if (id != null && id !== node.key) {
      if (this.hasSetProps)
        throw new Error("Cannot change the id of an item");
      node.key = id;
    }
    if (!this.hasSetProps) {
      this.ownerDocument.addNode(this);
      this.ownerDocument.endTransaction();
      this.hasSetProps = true;
    }
    this.ownerDocument.queueUpdate();
  }
  get style() {
    return {};
  }
  hasAttribute() {
  }
  setAttribute() {
  }
  setAttributeNS() {
  }
  removeAttribute() {
  }
  constructor(type, ownerDocument) {
    super(ownerDocument);
    this.nodeType = 8;
    this._index = 0;
    this.hasSetProps = false;
    this.node = new $7135fc7d473fd974$export$f5d856d854e74713(type, `react-aria-${++$7135fc7d473fd974$var$id}`);
    this.ownerDocument.startTransaction();
  }
};
var $7135fc7d473fd974$export$408d25a4e12db025 = class {
  get size() {
    return this.keyMap.size;
  }
  getKeys() {
    return this.keyMap.keys();
  }
  *[Symbol.iterator]() {
    let node = this.firstKey != null ? this.keyMap.get(this.firstKey) : void 0;
    while (node) {
      yield node;
      node = node.nextKey != null ? this.keyMap.get(node.nextKey) : void 0;
    }
  }
  getChildren(key) {
    let keyMap = this.keyMap;
    return {
      *[Symbol.iterator]() {
        let parent = keyMap.get(key);
        let node = (parent === null || parent === void 0 ? void 0 : parent.firstChildKey) != null ? keyMap.get(parent.firstChildKey) : null;
        while (node) {
          yield node;
          node = node.nextKey != null ? keyMap.get(node.nextKey) : void 0;
        }
      }
    };
  }
  getKeyBefore(key) {
    let node = this.keyMap.get(key);
    if (!node)
      return null;
    if (node.prevKey != null) {
      node = this.keyMap.get(node.prevKey);
      while (node && node.type !== "item" && node.lastChildKey != null)
        node = this.keyMap.get(node.lastChildKey);
      var _node_key;
      return (_node_key = node === null || node === void 0 ? void 0 : node.key) !== null && _node_key !== void 0 ? _node_key : null;
    }
    return node.parentKey;
  }
  getKeyAfter(key) {
    let node = this.keyMap.get(key);
    if (!node)
      return null;
    if (node.type !== "item" && node.firstChildKey != null)
      return node.firstChildKey;
    while (node) {
      if (node.nextKey != null)
        return node.nextKey;
      if (node.parentKey != null)
        node = this.keyMap.get(node.parentKey);
      else
        return null;
    }
    return null;
  }
  getFirstKey() {
    return this.firstKey;
  }
  getLastKey() {
    let node = this.lastKey != null ? this.keyMap.get(this.lastKey) : null;
    while ((node === null || node === void 0 ? void 0 : node.lastChildKey) != null)
      node = this.keyMap.get(node.lastChildKey);
    var _node_key;
    return (_node_key = node === null || node === void 0 ? void 0 : node.key) !== null && _node_key !== void 0 ? _node_key : null;
  }
  getItem(key) {
    var _this_keyMap_get;
    return (_this_keyMap_get = this.keyMap.get(key)) !== null && _this_keyMap_get !== void 0 ? _this_keyMap_get : null;
  }
  at() {
    throw new Error("Not implemented");
  }
  clone() {
    let Constructor = this.constructor;
    let collection = new Constructor();
    collection.keyMap = new Map(this.keyMap);
    collection.firstKey = this.firstKey;
    collection.lastKey = this.lastKey;
    return collection;
  }
  addNode(node) {
    if (this.frozen)
      throw new Error("Cannot add a node to a frozen collection");
    this.keyMap.set(node.key, node);
  }
  removeNode(key) {
    if (this.frozen)
      throw new Error("Cannot remove a node to a frozen collection");
    this.keyMap.delete(key);
  }
  commit(firstKey, lastKey) {
    if (this.frozen)
      throw new Error("Cannot commit a frozen collection");
    this.firstKey = firstKey;
    this.lastKey = lastKey;
    this.frozen = true;
  }
  constructor() {
    this.keyMap = /* @__PURE__ */ new Map();
    this.firstKey = null;
    this.lastKey = null;
    this.frozen = false;
  }
};
var $7135fc7d473fd974$export$b34a105447964f9f = class extends $7135fc7d473fd974$var$BaseNode {
  createElement(type) {
    return new $7135fc7d473fd974$export$dc064fe9e59310fd(type, this);
  }
  /**
  * Lazily gets a mutable instance of a Node. If the node has already
  * been cloned during this update cycle, it just returns the existing one.
  */
  getMutableNode(element) {
    let node = element.node;
    if (!this.mutatedNodes.has(element)) {
      node = element.node.clone();
      this.mutatedNodes.add(element);
      element.node = node;
    }
    this.markDirty(element);
    return node;
  }
  getMutableCollection() {
    if (!this.collectionMutated) {
      this.collection = this.collection.clone();
      this.collectionMutated = true;
    }
    return this.collection;
  }
  markDirty(node) {
    this.dirtyNodes.add(node);
  }
  startTransaction() {
    this.transactionCount++;
  }
  endTransaction() {
    this.transactionCount--;
  }
  addNode(element) {
    let collection = this.getMutableCollection();
    if (!collection.getItem(element.node.key)) {
      collection.addNode(element.node);
      for (let child of element)
        this.addNode(child);
    }
    this.markDirty(element);
  }
  removeNode(node) {
    for (let child of node) {
      child.parentNode = null;
      this.removeNode(child);
    }
    let collection = this.getMutableCollection();
    collection.removeNode(node.node.key);
    this.markDirty(node);
  }
  /** Finalizes the collection update, updating all nodes and freezing the collection. */
  getCollection() {
    if (this.transactionCount > 0)
      return this.collection;
    for (let element of this.dirtyNodes)
      if (element instanceof $7135fc7d473fd974$export$dc064fe9e59310fd && element.parentNode)
        element.updateNode();
    this.dirtyNodes.clear();
    if (this.mutatedNodes.size) {
      var _this_firstChild, _this_lastChild;
      let collection = this.getMutableCollection();
      for (let element of this.mutatedNodes)
        if (element.parentNode)
          collection.addNode(element.node);
      var _this_firstChild_node_key, _this_lastChild_node_key;
      collection.commit((_this_firstChild_node_key = (_this_firstChild = this.firstChild) === null || _this_firstChild === void 0 ? void 0 : _this_firstChild.node.key) !== null && _this_firstChild_node_key !== void 0 ? _this_firstChild_node_key : null, (_this_lastChild_node_key = (_this_lastChild = this.lastChild) === null || _this_lastChild === void 0 ? void 0 : _this_lastChild.node.key) !== null && _this_lastChild_node_key !== void 0 ? _this_lastChild_node_key : null);
      this.mutatedNodes.clear();
    }
    this.collectionMutated = false;
    return this.collection;
  }
  queueUpdate() {
    if (this.dirtyNodes.size === 0 || this.transactionCount > 0)
      return;
    for (let fn of this.subscriptions)
      fn();
  }
  subscribe(fn) {
    this.subscriptions.add(fn);
    return () => this.subscriptions.delete(fn);
  }
  constructor(collection) {
    super(null);
    this.nodeType = 11;
    this.ownerDocument = this;
    this.dirtyNodes = /* @__PURE__ */ new Set();
    this.mutatedNodes = /* @__PURE__ */ new Set();
    this.subscriptions = /* @__PURE__ */ new Set();
    this.transactionCount = 0;
    this.collection = collection;
    this.collectionMutated = true;
  }
};
function $7135fc7d473fd974$export$727c8fc270210f13(props) {
  let { children, items, idScope, addIdAndValue } = props;
  let cache = (0, import_react49.useMemo)(() => /* @__PURE__ */ new WeakMap(), []);
  return (0, import_react49.useMemo)(() => {
    if (items && typeof children === "function") {
      let res = [];
      for (let item of items) {
        let rendered = cache.get(item);
        if (!rendered) {
          rendered = children(item);
          if (rendered.key == null) {
            var _rendered_props_id, _ref;
            let key = (_ref = (_rendered_props_id = rendered.props.id) !== null && _rendered_props_id !== void 0 ? _rendered_props_id : item.key) !== null && _ref !== void 0 ? _ref : item.id;
            if (key == null)
              throw new Error("Could not determine key for item");
            if (idScope)
              key = idScope + ":" + key;
            rendered = (0, import_react49.cloneElement)(rendered, addIdAndValue ? {
              key,
              id: key,
              value: item
            } : {
              key
            });
          }
          cache.set(item, rendered);
        }
        res.push(rendered);
      }
      return res;
    } else if (typeof children !== "function")
      return children;
  }, [
    children,
    items,
    cache,
    idScope,
    addIdAndValue
  ]);
}
function $7135fc7d473fd974$export$901dbff4e54a6dd0(props) {
  return $7135fc7d473fd974$export$727c8fc270210f13({
    ...props,
    addIdAndValue: true
  });
}
var $7135fc7d473fd974$var$ShallowRenderContext = (0, import_react49.createContext)(false);
function $7135fc7d473fd974$export$6cd28814d92fa9c9(props, initialCollection) {
  let { collection, document: document2 } = $7135fc7d473fd974$export$7cd71aa5ddd6dc4e(initialCollection);
  let portal = $7135fc7d473fd974$export$ad42d5efb4461b31(props, document2);
  return {
    portal,
    collection
  };
}
function $7135fc7d473fd974$export$7cd71aa5ddd6dc4e(initialCollection) {
  let document2 = (0, import_react49.useMemo)(() => new $7135fc7d473fd974$export$b34a105447964f9f(initialCollection || new $7135fc7d473fd974$export$408d25a4e12db025()), [
    initialCollection
  ]);
  let subscribe = (0, import_react49.useCallback)((fn) => document2.subscribe(fn), [
    document2
  ]);
  let getSnapshot = (0, import_react49.useCallback)(() => document2.getCollection(), [
    document2
  ]);
  let collection = (0, import_shim.useSyncExternalStore)(subscribe, getSnapshot, getSnapshot);
  return {
    collection,
    document: document2
  };
}
function $7135fc7d473fd974$export$ad42d5efb4461b31(props, document2) {
  let children = $7135fc7d473fd974$export$901dbff4e54a6dd0(props);
  let wrappedChildren = (0, import_react49.useMemo)(() => (0, import_react49.default).createElement($7135fc7d473fd974$var$ShallowRenderContext.Provider, {
    value: true
  }, children), [
    children
  ]);
  return (0, $b5e257d569688ac6$export$535bd6ca7f90a273)() ? null : (0, import_react_dom3.createPortal)(wrappedChildren, document2);
}
function $7135fc7d473fd974$export$aeba0b1fb3dcd8b8(Element2, props, ref) {
  let isShallow = (0, import_react49.useContext)($7135fc7d473fd974$var$ShallowRenderContext);
  ref = $7135fc7d473fd974$export$636783d3732b5559(props, ref, props.children);
  if (isShallow)
    return (0, import_react49.default).createElement(Element2, {
      ref
    });
  return null;
}
function $7135fc7d473fd974$export$636783d3732b5559(props, ref, rendered) {
  return (0, import_react49.useCallback)((element) => {
    element === null || element === void 0 ? void 0 : element.setProps(props, ref, rendered);
  }, [
    props,
    ref,
    rendered
  ]);
}
function $7135fc7d473fd974$var$Item(props, ref) {
  return (0, import_react49.default).createElement("item", {
    ref: $7135fc7d473fd974$export$636783d3732b5559(props, ref, props.children)
  });
}
var $7135fc7d473fd974$export$6d08773d2e66f8f2 = (0, import_react49.forwardRef)($7135fc7d473fd974$var$Item);
function $7135fc7d473fd974$var$Section(props, ref) {
  let children = $7135fc7d473fd974$export$901dbff4e54a6dd0(props);
  return (0, import_react49.default).createElement("section", {
    ref: $7135fc7d473fd974$export$636783d3732b5559(props, ref)
  }, children);
}
var $7135fc7d473fd974$export$6e2c8f0811a474ce = (0, import_react49.forwardRef)($7135fc7d473fd974$var$Section);
var $7135fc7d473fd974$export$db36075d98ba73d3 = (0, import_react49.createContext)(null);
var $7135fc7d473fd974$export$4feb769f8ddf26c5 = (0, import_react49.createContext)(null);
function $7135fc7d473fd974$export$fb8073518f34e6ec(props) {
  let ctx = (0, import_react49.useContext)($7135fc7d473fd974$export$db36075d98ba73d3);
  props = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(ctx, props);
  let renderer = typeof props.children === "function" ? props.children : null;
  return (0, import_react49.default).createElement($7135fc7d473fd974$export$4feb769f8ddf26c5.Provider, {
    value: renderer
  }, $7135fc7d473fd974$export$901dbff4e54a6dd0(props));
}
var $64fa3d84918910a7$export$91172ebb93c441a2 = Symbol("callback");
var $64fa3d84918910a7$export$8e0ef2c5844bfb6b = Symbol("default");
function $64fa3d84918910a7$export$2881499e37b75b9a({ values, children }) {
  for (let [Context, value] of values)
    children = (0, import_react49.default).createElement(Context.Provider, {
      value
    }, children);
  return children;
}
function $64fa3d84918910a7$export$4d86445c2cf5e3(props) {
  let { className, style, children, defaultClassName, defaultChildren, values } = props;
  return (0, import_react49.useMemo)(() => {
    let computedClassName;
    let computedStyle;
    let computedChildren;
    if (typeof className === "function")
      computedClassName = className(values);
    else
      computedClassName = className;
    if (typeof style === "function")
      computedStyle = style(values);
    else
      computedStyle = style;
    if (typeof children === "function")
      computedChildren = children(values);
    else if (children == null)
      computedChildren = defaultChildren;
    else
      computedChildren = children;
    return {
      className: computedClassName !== null && computedClassName !== void 0 ? computedClassName : defaultClassName,
      style: computedStyle,
      children: computedChildren
    };
  }, [
    className,
    style,
    children,
    defaultClassName,
    defaultChildren,
    values
  ]);
}
function $64fa3d84918910a7$export$29f1550f4b0d4415(props, ref, context) {
  let ctx = (0, import_react49.useContext)(context) || {};
  if ("slots" in ctx && ctx.slots) {
    if (!props.slot && !ctx.slots[$64fa3d84918910a7$export$8e0ef2c5844bfb6b])
      throw new Error("A slot prop is required");
    let slot = props.slot || $64fa3d84918910a7$export$8e0ef2c5844bfb6b;
    if (!ctx.slots[slot])
      throw new Error(`Invalid slot "${props.slot}". Valid slot names are ` + new Intl.ListFormat().format(Object.keys(ctx.slots).map((p) => `"${p}"`)) + ".");
    ctx = ctx.slots[slot];
  }
  let { ref: contextRef, [$64fa3d84918910a7$export$91172ebb93c441a2]: callback, ...contextProps } = ctx;
  let mergedRef = (0, $df56164dff5785e2$export$4338b53315abf666)((0, import_react49.useMemo)(() => (0, $5dc95899b306f630$export$c9058316764c140e)(ref, contextRef), [
    ref,
    contextRef
  ]));
  let mergedProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(contextProps, props);
  (0, import_react49.useEffect)(() => {
    if (callback)
      callback(props);
  }, [
    callback,
    props
  ]);
  return [
    mergedProps,
    mergedRef
  ];
}
function $64fa3d84918910a7$export$9d4c57ee4c6ffdd8() {
  let [hasSlot, setHasSlot] = (0, import_react49.useState)(true);
  let hasRun = (0, import_react49.useRef)(false);
  let ref = (0, import_react49.useCallback)((el) => {
    hasRun.current = true;
    setHasSlot(!!el);
  }, []);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (!hasRun.current)
      setHasSlot(false);
  }, []);
  return [
    ref,
    hasSlot
  ];
}
function $64fa3d84918910a7$export$6d3443f2c48bfc20(ref, isReady = true) {
  let [isEntering, setEntering] = (0, import_react49.useState)(true);
  $64fa3d84918910a7$var$useAnimation(ref, isEntering && isReady, (0, import_react49.useCallback)(() => setEntering(false), []));
  return isEntering && isReady;
}
function $64fa3d84918910a7$export$45fda7c47f93fd48(ref, isOpen) {
  let [isExiting, setExiting] = (0, import_react49.useState)(false);
  let [exitState, setExitState] = (0, import_react49.useState)("idle");
  if (!isOpen && ref.current && exitState === "idle") {
    isExiting = true;
    setExiting(true);
    setExitState("exiting");
  }
  if (!ref.current && exitState === "exited")
    setExitState("idle");
  $64fa3d84918910a7$var$useAnimation(ref, isExiting, (0, import_react49.useCallback)(() => {
    setExitState("exited");
    setExiting(false);
  }, []));
  return isExiting;
}
function $64fa3d84918910a7$var$useAnimation(ref, isActive, onEnd) {
  let prevAnimation = (0, import_react49.useRef)(null);
  if (isActive && ref.current)
    prevAnimation.current = window.getComputedStyle(ref.current).animation;
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (isActive && ref.current) {
      let computedStyle = window.getComputedStyle(ref.current);
      if (computedStyle.animationName !== "none" && computedStyle.animation !== prevAnimation.current) {
        let onAnimationEnd = (e) => {
          if (e.target === ref.current) {
            element.removeEventListener("animationend", onAnimationEnd);
            (0, import_react_dom3.default).flushSync(() => {
              onEnd();
            });
          }
        };
        let element = ref.current;
        element.addEventListener("animationend", onAnimationEnd);
        return () => {
          element.removeEventListener("animationend", onAnimationEnd);
        };
      } else
        onEnd();
    }
  }, [
    ref,
    isActive,
    onEnd
  ]);
}
var $64fa3d84918910a7$export$94b6d0abf7d33e8c = (0, import_react49.createContext)(false);
var $5cb03073d3f54797$export$d688439359537581 = (0, import_react49.createContext)({});
function $5cb03073d3f54797$var$Heading(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $5cb03073d3f54797$export$d688439359537581);
  let { children, level = 3, className, ...domProps } = props;
  let Element2 = `h${level}`;
  return (0, import_react49.default).createElement(Element2, {
    ...domProps,
    className: className !== null && className !== void 0 ? className : "react-aria-Heading"
  }, children);
}
var $5cb03073d3f54797$export$a8a3e93435678ff9 = (0, import_react49.forwardRef)($5cb03073d3f54797$var$Heading);
var $4f118338184dc1d9$export$e2509388b49734e7 = (0, import_react49.createContext)(null);
function $4f118338184dc1d9$var$Link(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $4f118338184dc1d9$export$e2509388b49734e7);
  let elementType = typeof props.children === "string" || typeof props.children === "function" ? "span" : "a";
  let { linkProps, isPressed } = (0, $298d61e98472621b$export$dcf14c9974fe2767)({
    ...props,
    elementType
  }, ref);
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)(props);
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-Link",
    values: {
      isCurrent: !!props["aria-current"],
      isDisabled: props.isDisabled || false,
      isPressed,
      isHovered,
      isFocused,
      isFocusVisible
    }
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  let element = typeof renderProps.children === "string" ? (0, import_react49.default).createElement("span", null, renderProps.children) : (0, import_react49.default).Children.only(renderProps.children);
  return (0, import_react49.default).cloneElement(element, {
    ref: (0, import_react49.useMemo)(() => element.ref ? (0, $5dc95899b306f630$export$c9058316764c140e)(element.ref, ref) : ref, [
      element.ref,
      ref
    ]),
    slot: props.slot,
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(DOMProps, renderProps, linkProps, hoverProps, focusProps, {
      children: element.props.children,
      "data-hovered": isHovered || void 0,
      "data-pressed": isPressed || void 0,
      "data-focus-visible": isFocusVisible || void 0
    }, element.props)
  });
}
var $4f118338184dc1d9$export$a6c7ac8248d6e38a = (0, import_react49.forwardRef)($4f118338184dc1d9$var$Link);
var $778035c5624f61e7$export$65596d3621b0a4a0 = (0, import_react49.createContext)(null);
function $778035c5624f61e7$var$Breadcrumbs(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $778035c5624f61e7$export$65596d3621b0a4a0);
  let { navProps } = (0, $848231d7a2b3998e$export$8cefe241bd876ca0)(props);
  let { portal, collection } = (0, $7135fc7d473fd974$export$6cd28814d92fa9c9)(props);
  var _props_className;
  return (0, import_react49.default).createElement("nav", {
    ref,
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...navProps,
    slot: props.slot,
    style: props.style,
    className: (_props_className = props.className) !== null && _props_className !== void 0 ? _props_className : "react-aria-Breadcrumbs"
  }, (0, import_react49.default).createElement("ol", null, [
    ...collection
  ].map((node, i) => (0, import_react49.default).createElement($778035c5624f61e7$var$BreadcrumbItem, {
    key: node.key,
    node,
    isCurrent: i === collection.size - 1,
    isDisabled: props.isDisabled
  }))), portal);
}
var $778035c5624f61e7$export$2dc68d50d56fbbd = (0, import_react49.forwardRef)($778035c5624f61e7$var$Breadcrumbs);
function $778035c5624f61e7$var$BreadcrumbItem({ node, isCurrent, isDisabled }) {
  let headingProps = isCurrent ? {
    "aria-current": "page"
  } : null;
  let linkProps = {
    "aria-current": isCurrent ? "page" : null,
    isDisabled: isDisabled || isCurrent
  };
  var _node_props_className;
  return (0, import_react49.default).createElement("li", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(node.props),
    style: node.props.style,
    className: (_node_props_className = node.props.className) !== null && _node_props_className !== void 0 ? _node_props_className : "react-aria-Item"
  }, (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $4f118338184dc1d9$export$e2509388b49734e7),
        linkProps
      ],
      [
        (0, $5cb03073d3f54797$export$d688439359537581),
        headingProps
      ]
    ]
  }, node.rendered));
}
var $d2b4bc8c273e7be6$var$additionalButtonHTMLAttributes = /* @__PURE__ */ new Set([
  "form",
  "formAction",
  "formEncType",
  "formMethod",
  "formNoValidate",
  "formTarget",
  "name",
  "value"
]);
var $d2b4bc8c273e7be6$export$24d547caef80ccd1 = (0, import_react49.createContext)({});
function $d2b4bc8c273e7be6$var$Button(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $d2b4bc8c273e7be6$export$24d547caef80ccd1);
  let ctx = props;
  let { buttonProps, isPressed } = (0, $701a24aa0da5b062$export$ea18c227d4417cc3)(props, ref);
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)(props);
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)(props);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      isHovered,
      isPressed,
      isFocused,
      isFocusVisible,
      isDisabled: props.isDisabled || false
    },
    defaultClassName: "react-aria-Button"
  });
  return (0, import_react49.default).createElement("button", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props, {
      propNames: $d2b4bc8c273e7be6$var$additionalButtonHTMLAttributes
    }),
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(buttonProps, focusProps, hoverProps),
    ...renderProps,
    ref,
    slot: props.slot,
    "data-pressed": ctx.isPressed || isPressed || void 0,
    "data-hovered": isHovered || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0
  });
}
var $d2b4bc8c273e7be6$export$353f5b6fc5456de1 = (0, import_react49.forwardRef)($d2b4bc8c273e7be6$var$Button);
var $514c0188e459b4c0$export$9afb8bc826b033ea = (0, import_react49.createContext)({});
function $514c0188e459b4c0$var$Text(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $514c0188e459b4c0$export$9afb8bc826b033ea);
  let { elementType: ElementType = "span", ...domProps } = props;
  return (0, import_react49.default).createElement(ElementType, {
    ...domProps,
    ref
  });
}
var $514c0188e459b4c0$export$5f1af8db9871e1d6 = (0, import_react49.forwardRef)($514c0188e459b4c0$var$Text);
var $dfd62f934fc76fed$export$3b805cea1f178355 = (0, import_react49.createContext)({});
var $dfd62f934fc76fed$export$233dd9682e1ad64b = (0, import_react49.createContext)({});
var $dfd62f934fc76fed$var$InternalCalendarContext = (0, import_react49.createContext)(null);
function $dfd62f934fc76fed$var$Calendar(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $dfd62f934fc76fed$export$3b805cea1f178355);
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let state = (0, $131cf43a05231e1e$export$6d095e787d2b5e1f)({
    ...props,
    locale,
    createCalendar: $64244302c3013299$export$dd0bbc9b26defe37
  });
  let { calendarProps, prevButtonProps, nextButtonProps, errorMessageProps, title } = (0, $9942cad8a072a530$export$3ee915f8151bd4f1)(props, state);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      state,
      isDisabled: props.isDisabled || false,
      validationState: state.validationState
    },
    defaultClassName: "react-aria-Calendar"
  });
  return (0, import_react49.default).createElement("div", {
    ...renderProps,
    ...calendarProps,
    ref,
    slot: props.slot,
    "data-disabled": props.isDisabled || void 0,
    "data-validation-state": state.validationState || void 0
  }, (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          slots: {
            previous: prevButtonProps,
            next: nextButtonProps
          }
        }
      ],
      [
        (0, $5cb03073d3f54797$export$d688439359537581),
        {
          "aria-hidden": true,
          level: 2,
          children: title
        }
      ],
      [
        $dfd62f934fc76fed$var$InternalCalendarContext,
        state
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            errorMessage: errorMessageProps
          }
        }
      ]
    ]
  }, (0, import_react49.default).createElement((0, $5c3e21d68f1c4674$export$439d29a4e110a164), null, (0, import_react49.default).createElement("h2", null, calendarProps["aria-label"])), renderProps.children, (0, import_react49.default).createElement((0, $5c3e21d68f1c4674$export$439d29a4e110a164), null, (0, import_react49.default).createElement("button", {
    "aria-label": nextButtonProps["aria-label"],
    disabled: nextButtonProps.isDisabled,
    onClick: () => state.focusNextPage(),
    tabIndex: -1
  }))));
}
var $dfd62f934fc76fed$export$e1aef45b828286de = (0, import_react49.forwardRef)($dfd62f934fc76fed$var$Calendar);
function $dfd62f934fc76fed$var$RangeCalendar(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $dfd62f934fc76fed$export$233dd9682e1ad64b);
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let state = (0, $9a36b6ba2fb1a7c5$export$9a987164d97ecc90)({
    ...props,
    locale,
    createCalendar: $64244302c3013299$export$dd0bbc9b26defe37
  });
  let { calendarProps, prevButtonProps, nextButtonProps, errorMessageProps, title } = (0, $46a4342aab3d8076$export$87e0539f600c24e5)(props, state, ref);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      state,
      isDisabled: props.isDisabled || false,
      validationState: state.validationState
    },
    defaultClassName: "react-aria-RangeCalendar"
  });
  return (0, import_react49.default).createElement("div", {
    ...renderProps,
    ...calendarProps,
    ref,
    slot: props.slot,
    "data-disabled": props.isDisabled || void 0,
    "data-validation-state": state.validationState || void 0
  }, (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          slots: {
            previous: prevButtonProps,
            next: nextButtonProps
          }
        }
      ],
      [
        (0, $5cb03073d3f54797$export$d688439359537581),
        {
          "aria-hidden": true,
          level: 2,
          children: title
        }
      ],
      [
        $dfd62f934fc76fed$var$InternalCalendarContext,
        state
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            errorMessage: errorMessageProps
          }
        }
      ]
    ]
  }, (0, import_react49.default).createElement((0, $5c3e21d68f1c4674$export$439d29a4e110a164), null, (0, import_react49.default).createElement("h2", null, calendarProps["aria-label"])), renderProps.children, (0, import_react49.default).createElement((0, $5c3e21d68f1c4674$export$439d29a4e110a164), null, (0, import_react49.default).createElement("button", {
    "aria-label": nextButtonProps["aria-label"],
    disabled: nextButtonProps.isDisabled,
    onClick: () => state.focusNextPage(),
    tabIndex: -1
  }))));
}
var $dfd62f934fc76fed$export$a4f5c8b89d277a8d = (0, import_react49.forwardRef)($dfd62f934fc76fed$var$RangeCalendar);
var $dfd62f934fc76fed$var$InternalCalendarGridContext = (0, import_react49.createContext)(null);
function $dfd62f934fc76fed$var$CalendarGrid(props, ref) {
  let state = (0, import_react49.useContext)($dfd62f934fc76fed$var$InternalCalendarContext);
  let startDate = state.visibleRange.start;
  if (props.offset)
    startDate = startDate.add(props.offset);
  let { gridProps, headerProps, weekDays } = (0, $e3031d1f8c9d64eb$export$cb95147730a423f5)({
    startDate,
    endDate: (0, $14e0f24ef4ac5c92$export$a2258d9c4118825c)(startDate),
    weekdayStyle: props.weekdayStyle
  }, state);
  var _props_className;
  return (0, import_react49.default).createElement($dfd62f934fc76fed$var$InternalCalendarGridContext.Provider, {
    value: {
      headerProps,
      weekDays,
      startDate
    }
  }, (0, import_react49.default).createElement("table", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...gridProps,
    ref,
    style: props.style,
    className: (_props_className = props.className) !== null && _props_className !== void 0 ? _props_className : "react-aria-CalendarGrid"
  }, typeof props.children !== "function" ? props.children : (0, import_react49.default).createElement((0, import_react49.default).Fragment, null, (0, import_react49.default).createElement($dfd62f934fc76fed$export$22e2d15eaa4d2377, null, (day) => (0, import_react49.default).createElement($dfd62f934fc76fed$export$ad2135cac3a11b3d, null, day)), (0, import_react49.default).createElement($dfd62f934fc76fed$export$e11f8ba65d857bff, null, props.children))));
}
var $dfd62f934fc76fed$export$5bd780d491cfc46c = (0, import_react49.forwardRef)($dfd62f934fc76fed$var$CalendarGrid);
function $dfd62f934fc76fed$var$CalendarGridHeader(props, ref) {
  let { children, style, className } = props;
  let { headerProps, weekDays } = (0, import_react49.useContext)($dfd62f934fc76fed$var$InternalCalendarGridContext);
  return (0, import_react49.default).createElement("thead", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...headerProps,
    ref,
    style,
    className: className || "react-aria-CalendarGridHeader"
  }, (0, import_react49.default).createElement("tr", null, weekDays.map((day, key) => (0, import_react49.default).cloneElement(children(day), {
    key
  }))));
}
var $dfd62f934fc76fed$export$22e2d15eaa4d2377 = (0, import_react49.forwardRef)($dfd62f934fc76fed$var$CalendarGridHeader);
function $dfd62f934fc76fed$var$CalendarHeaderCell(props, ref) {
  let { children, style, className } = props;
  return (0, import_react49.default).createElement("th", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ref,
    style,
    className: className || "react-aria-CalendarHeaderCell"
  }, children);
}
var $dfd62f934fc76fed$export$ad2135cac3a11b3d = (0, import_react49.forwardRef)($dfd62f934fc76fed$var$CalendarHeaderCell);
function $dfd62f934fc76fed$var$CalendarGridBody(props, ref) {
  let { children, style, className } = props;
  let state = (0, import_react49.useContext)($dfd62f934fc76fed$var$InternalCalendarContext);
  let { startDate } = (0, import_react49.useContext)($dfd62f934fc76fed$var$InternalCalendarGridContext);
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let weeksInMonth = (0, $14e0f24ef4ac5c92$export$ccc1b2479e7dd654)(startDate, locale);
  return (0, import_react49.default).createElement("tbody", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ref,
    style,
    className: className || "react-aria-CalendarGridBody"
  }, [
    ...new Array(weeksInMonth).keys()
  ].map((weekIndex) => (0, import_react49.default).createElement("tr", {
    key: weekIndex
  }, state.getDatesInWeek(weekIndex, startDate).map((date, i) => date ? (0, import_react49.default).cloneElement(children(date), {
    key: i
  }) : (0, import_react49.default).createElement("td", {
    key: i
  })))));
}
var $dfd62f934fc76fed$export$e11f8ba65d857bff = (0, import_react49.forwardRef)($dfd62f934fc76fed$var$CalendarGridBody);
function $dfd62f934fc76fed$var$CalendarCell({ date, ...otherProps }, ref) {
  let state = (0, import_react49.useContext)($dfd62f934fc76fed$var$InternalCalendarContext);
  let { startDate: currentMonth } = (0, import_react49.useContext)($dfd62f934fc76fed$var$InternalCalendarGridContext);
  let objectRef = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { cellProps, buttonProps, ...states } = (0, $36a0ac60f04457c5$export$136073280381448e)({
    date
  }, state, objectRef);
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    isDisabled: states.isDisabled
  });
  let { focusProps, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let isOutsideMonth = !(0, $14e0f24ef4ac5c92$export$a18c89cbd24170ff)(currentMonth, date);
  let isSelectionStart = false;
  let isSelectionEnd = false;
  if ("highlightedRange" in state && state.highlightedRange) {
    isSelectionStart = (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.highlightedRange.start);
    isSelectionEnd = (0, $14e0f24ef4ac5c92$export$ea39ec197993aef0)(date, state.highlightedRange.end);
  }
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...otherProps,
    defaultChildren: states.formattedDate,
    defaultClassName: "react-aria-CalendarCell",
    values: {
      date,
      isHovered,
      isOutsideMonth,
      isFocusVisible,
      isSelectionStart,
      isSelectionEnd,
      ...states
    }
  });
  let dataAttrs = {
    "data-hovered": isHovered || void 0,
    "data-pressed": states.isPressed || void 0,
    "data-unavailable": states.isUnavailable || void 0,
    "data-disabled": states.isDisabled || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-outside-visible-range": states.isOutsideVisibleRange || void 0,
    "data-outside-month": isOutsideMonth || void 0,
    "data-selected": states.isSelected || void 0,
    "data-selection-start": isSelectionStart || void 0,
    "data-selection-end": isSelectionEnd || void 0
  };
  return (0, import_react49.default).createElement("td", cellProps, (0, import_react49.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(otherProps), buttonProps, focusProps, hoverProps, dataAttrs, renderProps),
    ref: objectRef
  }));
}
var $dfd62f934fc76fed$export$5d847498420df57b = (0, import_react49.forwardRef)($dfd62f934fc76fed$var$CalendarCell);
var $01b77f81d0f07f68$export$75b6ee27786ba447 = (0, import_react49.createContext)({});
function $01b77f81d0f07f68$var$Label(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $01b77f81d0f07f68$export$75b6ee27786ba447);
  let { elementType: ElementType = "label", ...labelProps } = props;
  return (0, import_react49.default).createElement(ElementType, {
    className: "react-aria-Label",
    ...labelProps,
    ref
  });
}
var $01b77f81d0f07f68$export$b04be29aa201d4f5 = (0, import_react49.forwardRef)($01b77f81d0f07f68$var$Label);
var $bc237834342dbd75$export$baf37c4be89255b8 = (0, import_react49.createContext)(null);
var $bc237834342dbd75$var$InternalCheckboxGroupContext = (0, import_react49.createContext)(null);
function $bc237834342dbd75$var$CheckboxGroup(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $bc237834342dbd75$export$baf37c4be89255b8);
  let state = (0, $587d3ad58be6d31f$export$daff6da51032a415)(props);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)();
  let { groupProps, labelProps, descriptionProps, errorMessageProps } = (0, $1e9fce0cfacc738b$export$49ff6f28c54f1cbe)({
    ...props,
    label
  }, state);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      isDisabled: state.isDisabled,
      isReadOnly: state.isReadOnly,
      isRequired: props.isRequired || false,
      validationState: state.validationState,
      state
    },
    defaultClassName: "react-aria-CheckboxGroup"
  });
  return (0, import_react49.default).createElement("div", {
    ...groupProps,
    ...renderProps,
    ref,
    slot: props.slot,
    "data-readonly": state.isReadOnly || void 0,
    "data-required": props.isRequired || void 0,
    "data-validation-state": state.validationState || void 0,
    "data-disabled": props.isDisabled || void 0
  }, (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $bc237834342dbd75$var$InternalCheckboxGroupContext,
        state
      ],
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef,
          elementType: "span"
        }
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps,
            errorMessage: errorMessageProps
          }
        }
      ]
    ]
  }, renderProps.children));
}
var $bc237834342dbd75$export$b085522c77523c51 = (0, import_react49.createContext)(null);
function $bc237834342dbd75$var$Checkbox(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $bc237834342dbd75$export$b085522c77523c51);
  let groupState = (0, import_react49.useContext)($bc237834342dbd75$var$InternalCheckboxGroupContext);
  let { inputProps, isSelected, isDisabled, isReadOnly, isPressed: isPressedKeyboard } = groupState ? (0, $fba3e38d5ca8983f$export$353b32fc6898d37d)({
    ...props,
    // Value is optional for standalone checkboxes, but required for CheckboxGroup items;
    // it's passed explicitly here to avoid typescript error (requires ignore).
    // @ts-ignore
    value: props.value,
    // ReactNode type doesn't allow function children.
    children: typeof props.children === "function" ? true : props.children
  }, groupState, ref) : (0, $406796ff087fe49b$export$e375f10ce42261c5)({
    ...props,
    children: typeof props.children === "function" ? true : props.children
  }, (0, $3017fa7ffdddec74$export$8042c6c013fd5226)(props), ref);
  let { isFocused, isFocusVisible, focusProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let isInteractionDisabled = isDisabled || isReadOnly;
  let [isPressed, setPressed] = (0, import_react49.useState)(false);
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    isDisabled: isInteractionDisabled,
    onPressStart(e) {
      if (e.pointerType !== "keyboard")
        setPressed(true);
    },
    onPressEnd(e) {
      if (e.pointerType !== "keyboard")
        setPressed(false);
    }
  });
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    isDisabled: isInteractionDisabled
  });
  let pressed = isInteractionDisabled ? false : isPressed || isPressedKeyboard;
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    // TODO: should data attrs go on the label or on the <input>? useCheckbox passes them to the input...
    ...props,
    defaultClassName: "react-aria-Checkbox",
    values: {
      isSelected,
      isIndeterminate: props.isIndeterminate || false,
      isPressed: pressed,
      isHovered,
      isFocused,
      isFocusVisible,
      isDisabled,
      isReadOnly,
      validationState: props.validationState || (groupState === null || groupState === void 0 ? void 0 : groupState.validationState),
      isRequired: props.isRequired || false
    }
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react49.default).createElement("label", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(DOMProps, pressProps, hoverProps, renderProps),
    slot: props.slot,
    "data-selected": isSelected || void 0,
    "data-indeterminate": props.isIndeterminate || void 0,
    "data-pressed": pressed || void 0,
    "data-hovered": isHovered || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-disabled": isDisabled || void 0,
    "data-readonly": isReadOnly || void 0,
    "data-validation-state": props.validationState || (groupState === null || groupState === void 0 ? void 0 : groupState.validationState) || void 0,
    "data-required": props.isRequired || void 0
  }, (0, import_react49.default).createElement((0, $5c3e21d68f1c4674$export$439d29a4e110a164), {
    elementType: "span"
  }, (0, import_react49.default).createElement("input", {
    ...inputProps,
    ...focusProps,
    ref
  })), renderProps.children);
}
var $bc237834342dbd75$export$48513f6b9f8ce62d = (0, import_react49.forwardRef)($bc237834342dbd75$var$Checkbox);
var $bc237834342dbd75$export$4aa08d5625cb8ead = (0, import_react49.forwardRef)($bc237834342dbd75$var$CheckboxGroup);
var $3985021b0ad6602f$export$37fb8590cf2c088c = (0, import_react49.createContext)({});
function $3985021b0ad6602f$var$Input(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $3985021b0ad6602f$export$37fb8590cf2c088c);
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({});
  let { isFocused, isFocusVisible, focusProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)({
    isTextInput: true,
    autoFocus: props.autoFocus
  });
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      isHovered,
      isFocused,
      isFocusVisible,
      isDisabled: props.disabled || false
    },
    defaultClassName: "react-aria-Input"
  });
  return (0, import_react49.default).createElement("input", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(props, focusProps, hoverProps),
    ...renderProps,
    ref,
    "data-hovered": isHovered || void 0,
    "data-focus-visible": isFocusVisible || void 0
  });
}
var $3985021b0ad6602f$export$f5b8910cec6cf069 = (0, import_react49.forwardRef)($3985021b0ad6602f$var$Input);
function $d8f176866e6dc039$export$2cfc5be7a55829f6(options) {
  let dragAndDropHooks = (0, import_react49.useMemo)(() => {
    let { onDrop, onInsert, onItemDrop, onReorder, onRootDrop, getItems, renderDragPreview, renderDropIndicator, dropTargetDelegate } = options;
    let isDraggable = !!getItems;
    let isDroppable = !!(onDrop || onInsert || onItemDrop || onReorder || onRootDrop);
    let hooks = {};
    if (isDraggable) {
      hooks.useDraggableCollectionState = function useDraggableCollectionStateOverride(props) {
        return (0, $b45bbbaf0c3785df$export$29efd034f1d79f81)({
          ...props,
          ...options
        });
      };
      hooks.useDraggableCollection = (0, $4ac1fdc3a0fcd564$export$2962a7984b2f0a80);
      hooks.useDraggableItem = (0, $fd98cf7cbf233429$export$b35afafff42da2d9);
      hooks.DragPreview = (0, $ad0e3f3d9c50e4ba$export$905ab40ac2179daa);
      hooks.renderDragPreview = renderDragPreview;
    }
    if (isDroppable) {
      hooks.useDroppableCollectionState = function useDroppableCollectionStateOverride(props) {
        return (0, $e672e8bc247525d1$export$926850f6ecef79d0)({
          ...props,
          ...options
        });
      }, hooks.useDroppableItem = (0, $bfaab576ce1c580e$export$f7b0c5d28b66b6a5);
      hooks.useDroppableCollection = function useDroppableCollectionOverride(props, state, ref) {
        return (0, $4b52e4eff84e5217$export$f4e2f423c21f7b04)({
          ...props,
          ...options
        }, state, ref);
      };
      hooks.useDropIndicator = (0, $ddf25448c71fc93a$export$8d0e41d2815afac5);
      hooks.renderDropIndicator = renderDropIndicator;
      hooks.dropTargetDelegate = dropTargetDelegate;
      hooks.ListDropTargetDelegate = (0, $3ca85212bf8898e4$export$fbd65d14c79e28cc);
    }
    return hooks;
  }, [
    options
  ]);
  return {
    dragAndDropHooks
  };
}
var $d8f176866e6dc039$export$f55761759794cf55 = (0, import_react49.createContext)(null);
function $d8f176866e6dc039$var$DropIndicator(props, ref) {
  let { render } = (0, import_react49.useContext)($d8f176866e6dc039$export$f55761759794cf55);
  return (0, import_react49.default).createElement((0, import_react49.default).Fragment, null, render(props, ref));
}
var $d8f176866e6dc039$export$62ed72bc21f6b8a6 = (0, import_react49.forwardRef)($d8f176866e6dc039$var$DropIndicator);
var $72a5793c14baf454$export$e0e4026c12a8bdbb = (0, import_react49.createContext)({});
function $72a5793c14baf454$var$Header(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $72a5793c14baf454$export$e0e4026c12a8bdbb);
  let shallow = (0, $7135fc7d473fd974$export$aeba0b1fb3dcd8b8)("header", props, ref);
  if (shallow)
    return shallow;
  return (0, import_react49.default).createElement("header", {
    className: "react-aria-Header",
    ...props,
    ref
  }, props.children);
}
var $72a5793c14baf454$export$8b251419efc915eb = (0, import_react49.forwardRef)($72a5793c14baf454$var$Header);
var $431f98aba6844401$export$6615d83f6de245ce = (0, import_react49.createContext)({});
function $431f98aba6844401$var$Separator(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $431f98aba6844401$export$6615d83f6de245ce);
  let { elementType, orientation, style, className } = props;
  let Element2 = elementType || "hr";
  if (Element2 === "hr" && orientation === "vertical")
    Element2 = "div";
  let { separatorProps } = (0, $f4b273590fab9f93$export$52210f68a14655d0)({
    elementType,
    orientation
  });
  let shallow = (0, $7135fc7d473fd974$export$aeba0b1fb3dcd8b8)("separator", props, ref);
  if (shallow)
    return shallow;
  return (0, import_react49.default).createElement(Element2, {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...separatorProps,
    style,
    className: className !== null && className !== void 0 ? className : "react-aria-Separator",
    ref,
    slot: props.slot
  });
}
var $431f98aba6844401$export$1ff3c3f08ae963c0 = (0, import_react49.forwardRef)($431f98aba6844401$var$Separator);
var $eed445e0843c11d0$export$7ff8f37d2d81a48d = (0, import_react49.createContext)(null);
var $eed445e0843c11d0$var$InternalListBoxContext = (0, import_react49.createContext)(null);
function $eed445e0843c11d0$var$ListBox(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $eed445e0843c11d0$export$7ff8f37d2d81a48d);
  let state = props.state;
  let isHidden = (0, import_react49.useContext)((0, $64fa3d84918910a7$export$94b6d0abf7d33e8c));
  if (state)
    return isHidden ? null : (0, import_react49.default).createElement($eed445e0843c11d0$var$ListBoxInner, {
      state,
      props,
      listBoxRef: ref
    });
  return (0, import_react49.default).createElement($eed445e0843c11d0$var$ListBoxPortal, {
    props,
    listBoxRef: ref
  });
}
function $eed445e0843c11d0$var$ListBoxPortal({ props, listBoxRef }) {
  let { portal, collection } = (0, $7135fc7d473fd974$export$6cd28814d92fa9c9)(props);
  props = {
    ...props,
    collection,
    children: null,
    items: null
  };
  let state = (0, $e72dd72e1c76a225$export$2f645645f7bca764)(props);
  return (0, import_react49.default).createElement((0, import_react49.default).Fragment, null, portal, (0, import_react49.default).createElement($eed445e0843c11d0$var$ListBoxInner, {
    state,
    props,
    listBoxRef
  }));
}
var $eed445e0843c11d0$export$41f133550aa26f48 = (0, import_react49.forwardRef)($eed445e0843c11d0$var$ListBox);
function $eed445e0843c11d0$var$ListBoxInner({ state, props, listBoxRef }) {
  let { dragAndDropHooks, layout = "stack", orientation = "vertical" } = props;
  let { collection, selectionManager } = state;
  let isListDraggable = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDraggableCollectionState);
  let isListDroppable = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDroppableCollectionState);
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let { disabledBehavior, disabledKeys } = selectionManager;
  let keyboardDelegate = (0, import_react49.useMemo)(() => props.keyboardDelegate || new (0, $2a25aae57d74318e$export$a05409b8bb224a5a)({
    collection,
    ref: listBoxRef,
    disabledKeys: disabledBehavior === "selection" ? /* @__PURE__ */ new Set() : disabledKeys,
    layout,
    orientation,
    direction
  }), [
    collection,
    listBoxRef,
    disabledBehavior,
    disabledKeys,
    orientation,
    direction,
    props.keyboardDelegate,
    layout
  ]);
  let { listBoxProps } = (0, $c132121280ec012d$export$50eacbbf140a3141)({
    ...props,
    shouldSelectOnPressUp: isListDraggable || props.shouldSelectOnPressUp,
    keyboardDelegate
  }, state, listBoxRef);
  let children = (0, $7135fc7d473fd974$export$727c8fc270210f13)({
    items: collection,
    children: (item) => {
      switch (item.type) {
        case "section":
          return (0, import_react49.default).createElement($eed445e0843c11d0$var$ListBoxSection, {
            section: item
          });
        case "separator":
          return (0, import_react49.default).createElement((0, $431f98aba6844401$export$1ff3c3f08ae963c0), item.props);
        case "item":
          return (0, import_react49.default).createElement($eed445e0843c11d0$var$Option, {
            item
          });
        default:
          throw new Error("Unsupported node type in Menu: " + item.type);
      }
    }
  });
  let dragHooksProvided = (0, import_react49.useRef)(isListDraggable);
  let dropHooksProvided = (0, import_react49.useRef)(isListDroppable);
  (0, import_react49.useEffect)(() => {
    if (dragHooksProvided.current !== isListDraggable)
      console.warn("Drag hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.");
    if (dropHooksProvided.current !== isListDroppable)
      console.warn("Drop hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.");
  }, [
    isListDraggable,
    isListDroppable
  ]);
  let dragState = void 0;
  let dropState = void 0;
  let droppableCollection = void 0;
  let isRootDropTarget = false;
  let dragPreview = null;
  let preview = (0, import_react49.useRef)(null);
  if (isListDraggable && dragAndDropHooks) {
    dragState = dragAndDropHooks.useDraggableCollectionState({
      collection,
      selectionManager,
      preview: dragAndDropHooks.renderDragPreview ? preview : void 0
    });
    dragAndDropHooks.useDraggableCollection({}, dragState, listBoxRef);
    let DragPreview = dragAndDropHooks.DragPreview;
    dragPreview = dragAndDropHooks.renderDragPreview ? (0, import_react49.default).createElement(DragPreview, {
      ref: preview
    }, dragAndDropHooks.renderDragPreview) : null;
  }
  if (isListDroppable && dragAndDropHooks) {
    dropState = dragAndDropHooks.useDroppableCollectionState({
      collection,
      selectionManager
    });
    let dropTargetDelegate = dragAndDropHooks.dropTargetDelegate || new dragAndDropHooks.ListDropTargetDelegate(collection, listBoxRef, {
      orientation,
      layout,
      direction
    });
    droppableCollection = dragAndDropHooks.useDroppableCollection({
      keyboardDelegate,
      dropTargetDelegate
    }, dropState, listBoxRef);
    isRootDropTarget = dropState.isDropTarget({
      type: "root"
    });
  }
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    className: props.className,
    style: props.style,
    defaultClassName: "react-aria-ListBox",
    values: {
      isDropTarget: isRootDropTarget,
      isEmpty: state.collection.size === 0,
      isFocused,
      isFocusVisible,
      state
    }
  });
  let emptyState = null;
  if (state.collection.size === 0 && props.renderEmptyState)
    emptyState = (0, import_react49.default).createElement("div", {
      // eslint-disable-next-line
      role: "option",
      style: {
        display: "contents"
      }
    }, props.renderEmptyState());
  return (0, import_react49.default).createElement((0, $9bf71ea28793e738$export$20e40289641fbbb6), null, (0, import_react49.default).createElement("div", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(listBoxProps, focusProps, droppableCollection === null || droppableCollection === void 0 ? void 0 : droppableCollection.collectionProps),
    ...renderProps,
    ref: listBoxRef,
    slot: props.slot,
    "data-drop-target": isRootDropTarget || void 0,
    "data-empty": state.collection.size === 0 || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-layout": props.layout || "stack",
    "data-orientation": props.orientation || "vertical"
  }, (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $eed445e0843c11d0$var$InternalListBoxContext,
        {
          state,
          shouldFocusOnHover: props.shouldFocusOnHover,
          dragAndDropHooks,
          dragState,
          dropState
        }
      ],
      [
        (0, $431f98aba6844401$export$6615d83f6de245ce),
        {
          elementType: "li"
        }
      ],
      [
        (0, $d8f176866e6dc039$export$f55761759794cf55),
        {
          render: $eed445e0843c11d0$var$ListBoxDropIndicatorWrapper
        }
      ]
    ]
  }, children), emptyState, dragPreview));
}
function $eed445e0843c11d0$var$ListBoxSection({ section, className, style }) {
  var _section_props, _section_props1;
  let { state } = (0, import_react49.useContext)($eed445e0843c11d0$var$InternalListBoxContext);
  let [headingRef, heading] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)();
  var _section_arialabel;
  let { headingProps, groupProps } = (0, $af383d3bef1cfdc9$export$c3f9f39876e4bc7)({
    heading,
    "aria-label": (_section_arialabel = section["aria-label"]) !== null && _section_arialabel !== void 0 ? _section_arialabel : void 0
  });
  let children = (0, $7135fc7d473fd974$export$727c8fc270210f13)({
    items: state.collection.getChildren(section.key),
    children: (item) => {
      switch (item.type) {
        case "header": {
          let { ref, ...otherProps } = item.props;
          return (0, import_react49.default).createElement((0, $72a5793c14baf454$export$8b251419efc915eb), {
            ...headingProps,
            ...otherProps,
            ref: (0, $5dc95899b306f630$export$c9058316764c140e)(headingRef, ref)
          }, item.rendered);
        }
        case "item":
          return (0, import_react49.default).createElement($eed445e0843c11d0$var$Option, {
            item
          });
        default:
          throw new Error("Unsupported element type in Section: " + item.type);
      }
    }
  });
  return (0, import_react49.default).createElement("section", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(section.props),
    ...groupProps,
    className: className || ((_section_props = section.props) === null || _section_props === void 0 ? void 0 : _section_props.className) || "react-aria-Section",
    style: style || ((_section_props1 = section.props) === null || _section_props1 === void 0 ? void 0 : _section_props1.style),
    ref: section.props.ref
  }, children);
}
function $eed445e0843c11d0$var$Option({ item }) {
  let ref = (0, $df56164dff5785e2$export$4338b53315abf666)(item.props.ref);
  let { state, shouldFocusOnHover, dragAndDropHooks, dragState, dropState } = (0, import_react49.useContext)($eed445e0843c11d0$var$InternalListBoxContext);
  let { optionProps, labelProps, descriptionProps, ...states } = (0, $293f70390ea03370$export$497855f14858aa34)({
    key: item.key
  }, state, ref);
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    isDisabled: shouldFocusOnHover || !states.allowsSelection && !states.hasAction
  });
  if (shouldFocusOnHover) {
    hoverProps = {};
    isHovered = states.isFocused;
  }
  let draggableItem = null;
  if (dragState && dragAndDropHooks)
    draggableItem = dragAndDropHooks.useDraggableItem({
      key: item.key
    }, dragState);
  let droppableItem = null;
  if (dropState && dragAndDropHooks)
    droppableItem = dragAndDropHooks.useDroppableItem({
      target: {
        type: "item",
        key: item.key,
        dropPosition: "on"
      }
    }, dropState, ref);
  let props = item.props;
  let isDragging = dragState && dragState.isDragging(item.key);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    id: void 0,
    children: item.rendered,
    defaultClassName: "react-aria-Item",
    values: {
      ...states,
      isHovered,
      selectionMode: state.selectionManager.selectionMode,
      selectionBehavior: state.selectionManager.selectionBehavior,
      allowsDragging: !!dragState,
      isDragging,
      isDropTarget: droppableItem === null || droppableItem === void 0 ? void 0 : droppableItem.isDropTarget
    }
  });
  let renderDropIndicator = (dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.renderDropIndicator) || ((target) => (0, import_react49.default).createElement((0, $d8f176866e6dc039$export$62ed72bc21f6b8a6), {
    target
  }));
  (0, import_react49.useEffect)(() => {
    if (!item.textValue)
      console.warn("A `textValue` prop is required for <Item> elements with non-plain text children in order to support accessibility features such as type to select.");
  }, [
    item.textValue
  ]);
  return (0, import_react49.default).createElement((0, import_react49.default).Fragment, null, (dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDropIndicator) && renderDropIndicator({
    type: "item",
    key: item.key,
    dropPosition: "before"
  }), (0, import_react49.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props), optionProps, hoverProps, draggableItem === null || draggableItem === void 0 ? void 0 : draggableItem.dragProps, droppableItem === null || droppableItem === void 0 ? void 0 : droppableItem.dropProps),
    ...renderProps,
    ref,
    "data-hovered": isHovered || void 0,
    "data-focused": states.isFocused || void 0,
    "data-focus-visible": states.isFocusVisible || void 0,
    "data-pressed": states.isPressed || void 0,
    "data-dragging": isDragging || void 0,
    "data-drop-target": (droppableItem === null || droppableItem === void 0 ? void 0 : droppableItem.isDropTarget) || void 0
  }, (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            label: labelProps,
            description: descriptionProps
          }
        }
      ]
    ]
  }, renderProps.children)), (dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDropIndicator) && state.collection.getKeyAfter(item.key) == null && renderDropIndicator({
    type: "item",
    key: item.key,
    dropPosition: "after"
  }));
}
function $eed445e0843c11d0$var$ListBoxDropIndicatorWrapper(props, ref) {
  ref = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { dragAndDropHooks, dropState } = (0, import_react49.useContext)($eed445e0843c11d0$var$InternalListBoxContext);
  let { dropIndicatorProps, isHidden, isDropTarget } = dragAndDropHooks.useDropIndicator(props, dropState, ref);
  if (isHidden)
    return null;
  return (0, import_react49.default).createElement($eed445e0843c11d0$var$ListBoxtDropIndicatorForwardRef, {
    ...props,
    dropIndicatorProps,
    isDropTarget,
    ref
  });
}
function $eed445e0843c11d0$var$ListBoxtDropIndicator(props, ref) {
  let { dropIndicatorProps, isDropTarget, ...otherProps } = props;
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...otherProps,
    defaultClassName: "react-aria-DropIndicator",
    values: {
      isDropTarget
    }
  });
  return (0, import_react49.default).createElement("div", {
    ...dropIndicatorProps,
    ...renderProps,
    // eslint-disable-next-line
    role: "option",
    ref,
    "data-drop-target": isDropTarget || void 0
  });
}
var $eed445e0843c11d0$var$ListBoxtDropIndicatorForwardRef = (0, import_react49.forwardRef)($eed445e0843c11d0$var$ListBoxtDropIndicator);
var $44f671af83e7d9e0$export$2de4954e8ae13b9f = (0, import_react49.createContext)(null);
function $44f671af83e7d9e0$var$OverlayArrow(props, ref) {
  let { arrowProps, placement } = (0, import_react49.useContext)($44f671af83e7d9e0$export$2de4954e8ae13b9f);
  let style = {
    ...arrowProps.style,
    position: "absolute",
    [placement]: "100%",
    transform: placement === "top" || placement === "bottom" ? "translateX(-50%)" : "translateY(-50%)"
  };
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-OverlayArrow",
    values: {
      placement
    }
  });
  return (0, import_react49.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(arrowProps, props),
    ...renderProps,
    style: {
      ...renderProps.style,
      ...style
    },
    ref,
    "data-placement": placement
  });
}
var $44f671af83e7d9e0$export$746d02f47f4d381 = (0, import_react49.forwardRef)($44f671af83e7d9e0$var$OverlayArrow);
var $07b14b47974efb58$export$9b9a0cd73afb7ca4 = (0, import_react49.createContext)(null);
function $07b14b47974efb58$var$Popover(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $07b14b47974efb58$export$9b9a0cd73afb7ca4);
  let ctx = props;
  let localState = (0, $fc909762b330b746$export$61c6a8c84e605fb6)(props);
  let state = props.isOpen != null || props.defaultOpen != null || !(ctx === null || ctx === void 0 ? void 0 : ctx.state) ? localState : ctx.state;
  let isExiting = (0, $64fa3d84918910a7$export$45fda7c47f93fd48)(ref, state.isOpen);
  if (state && !state.isOpen && !isExiting) {
    let children = props.children;
    if (typeof children === "function")
      children = children({
        placement: "bottom",
        isEntering: false,
        isExiting: false
      });
    return ctx.preserveChildren ? (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$94b6d0abf7d33e8c).Provider, {
      value: true
    }, children) : null;
  }
  return (0, import_react49.default).createElement($07b14b47974efb58$var$PopoverInner, {
    ...props,
    triggerRef: ctx.triggerRef,
    state,
    popoverRef: ref,
    isExiting
  });
}
var $07b14b47974efb58$export$5b6b19405a83ff9d = (0, import_react49.forwardRef)($07b14b47974efb58$var$Popover);
function $07b14b47974efb58$var$PopoverInner({ state, isExiting, ...props }) {
  var _props_offset;
  let { popoverProps, underlayProps, arrowProps, placement } = (0, $f2f8a6077418541e$export$542a6fd13ac93354)({
    ...props,
    offset: (_props_offset = props.offset) !== null && _props_offset !== void 0 ? _props_offset : 8
  }, state);
  let ref = props.popoverRef;
  let isEntering = (0, $64fa3d84918910a7$export$6d3443f2c48bfc20)(ref, !!placement);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-Popover",
    values: {
      placement,
      isEntering,
      isExiting
    }
  });
  let style = {
    ...renderProps.style,
    ...popoverProps.style
  };
  return (0, import_react49.default).createElement((0, $337b884510726a0d$export$c6fdb837b070b4ff), {
    isExiting
  }, !props.isNonModal && (0, import_react49.default).createElement("div", {
    ...underlayProps,
    style: {
      position: "fixed",
      inset: 0
    }
  }), (0, import_react49.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props), popoverProps),
    ...renderProps,
    ref,
    slot: props.slot,
    style,
    "data-placement": placement,
    "data-entering": isEntering || void 0,
    "data-exiting": isExiting || void 0
  }, !props.isNonModal && (0, import_react49.default).createElement((0, $86ea4cb521eb2e37$export$2317d149ed6f78c4), {
    onDismiss: state.close
  }), (0, import_react49.default).createElement((0, $44f671af83e7d9e0$export$2de4954e8ae13b9f).Provider, {
    value: {
      arrowProps,
      placement
    }
  }, renderProps.children), (0, import_react49.default).createElement((0, $86ea4cb521eb2e37$export$2317d149ed6f78c4), {
    onDismiss: state.close
  })));
}
var $d01f2c01039c0eec$export$d414ccceff7063c3 = (0, import_react49.createContext)(null);
function $d01f2c01039c0eec$var$ComboBox(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $d01f2c01039c0eec$export$d414ccceff7063c3);
  let [propsFromListBox, setListBoxProps] = (0, import_react49.useState)({
    children: []
  });
  let { name, formValue = "key", allowsCustomValue } = props;
  if (allowsCustomValue)
    formValue = "text";
  let { contains } = (0, $bb77f239b46e8c72$export$3274cf84b703fff)({
    sensitivity: "base"
  });
  var _props_items, _ref;
  let { portal, collection } = (0, $7135fc7d473fd974$export$6cd28814d92fa9c9)({
    items: (_ref = (_props_items = props.items) !== null && _props_items !== void 0 ? _props_items : props.defaultItems) !== null && _ref !== void 0 ? _ref : propsFromListBox.items,
    children: propsFromListBox.children
  });
  let state = (0, $a9e7382a7d111cb5$export$b453a3bfd4a5fa9e)({
    defaultFilter: props.defaultFilter || contains,
    ...props,
    // If props.items isn't provided, rely on collection filtering (aka listbox.items is provided or defaultItems provided to Combobox)
    items: props.items,
    children: void 0,
    collection
  });
  let renderPropsState = (0, import_react49.useMemo)(() => ({
    isOpen: state.isOpen,
    isDisabled: props.isDisabled || false,
    validationState: props.validationState,
    isRequired: props.isRequired || false,
    state: {
      focusStrategy: state.focusStrategy,
      isOpen: state.isOpen,
      selectedKey: state.selectedKey,
      disabledKeys: state.disabledKeys,
      isFocused: state.isFocused,
      selectedItem: state.selectedItem,
      inputValue: state.inputValue,
      setInputValue: state.setInputValue
    }
  }), [
    state.isOpen,
    state.isFocused,
    state.focusStrategy,
    state.selectedKey,
    state.disabledKeys,
    state.selectedItem,
    state.inputValue,
    state.setInputValue,
    props.isDisabled,
    props.validationState,
    props.isRequired
  ]);
  let buttonRef = (0, import_react49.useRef)(null);
  let inputRef = (0, import_react49.useRef)(null);
  let listBoxRef = (0, import_react49.useRef)(null);
  let popoverRef = (0, import_react49.useRef)(null);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)();
  let { buttonProps, inputProps, listBoxProps, labelProps, descriptionProps, errorMessageProps } = (0, $c350ade66beef0af$export$8c18d1b4f7232bbf)({
    ...props,
    label,
    inputRef,
    buttonRef,
    listBoxRef,
    popoverRef,
    name: formValue === "text" ? name : void 0
  }, state);
  let [menuWidth, setMenuWidth] = (0, import_react49.useState)(null);
  let onResize = (0, import_react49.useCallback)(() => {
    if (inputRef.current) {
      var _buttonRef_current;
      let buttonRect = (_buttonRef_current = buttonRef.current) === null || _buttonRef_current === void 0 ? void 0 : _buttonRef_current.getBoundingClientRect();
      let inputRect = inputRef.current.getBoundingClientRect();
      let minX = buttonRect ? Math.min(buttonRect.left, inputRect.left) : inputRect.left;
      let maxX = buttonRect ? Math.max(buttonRect.right, inputRect.right) : inputRect.right;
      setMenuWidth(maxX - minX + "px");
    }
  }, [
    buttonRef,
    inputRef,
    setMenuWidth
  ]);
  (0, $9daab02d461809db$export$683480f191c0e3ea)({
    ref: inputRef,
    onResize
  });
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: renderPropsState,
    defaultClassName: "react-aria-ComboBox"
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef
        }
      ],
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          ...buttonProps,
          ref: buttonRef,
          isPressed: state.isOpen
        }
      ],
      [
        (0, $3985021b0ad6602f$export$37fb8590cf2c088c),
        {
          ...inputProps,
          ref: inputRef
        }
      ],
      [
        (0, $07b14b47974efb58$export$9b9a0cd73afb7ca4),
        {
          state,
          ref: popoverRef,
          triggerRef: inputRef,
          placement: "bottom start",
          preserveChildren: true,
          isNonModal: true,
          style: {
            "--trigger-width": menuWidth
          }
        }
      ],
      [
        (0, $eed445e0843c11d0$export$7ff8f37d2d81a48d),
        {
          state,
          [(0, $64fa3d84918910a7$export$91172ebb93c441a2)]: setListBoxProps,
          ...listBoxProps,
          ref: listBoxRef
        }
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps,
            errorMessage: errorMessageProps
          }
        }
      ]
    ]
  }, (0, import_react49.default).createElement("div", {
    ...DOMProps,
    ...renderProps,
    ref,
    slot: props.slot,
    "data-focused": state.isFocused || void 0,
    "data-open": state.isOpen || void 0,
    "data-disabled": props.isDisabled || void 0,
    "data-validation-state": props.validationState || void 0,
    "data-required": props.isRequired || void 0
  }), portal, name && formValue === "key" && (0, import_react49.default).createElement("input", {
    type: "hidden",
    name,
    value: state.selectedKey
  }));
}
var $d01f2c01039c0eec$export$72b9695b8216309a = (0, import_react49.forwardRef)($d01f2c01039c0eec$var$ComboBox);
var $40825cdb76e74f70$export$7b3e670c86da5fe8 = (0, import_react49.createContext)(null);
var $40825cdb76e74f70$export$8e17ddc448e87c1e = (0, import_react49.createContext)(null);
var $40825cdb76e74f70$export$75bd233d6b51888d = (0, import_react49.createContext)(null);
function $40825cdb76e74f70$var$DateField(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $40825cdb76e74f70$export$7b3e670c86da5fe8);
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let state = (0, $3c0fc76039f1c516$export$60e84778edff6d26)({
    ...props,
    locale,
    createCalendar: $64244302c3013299$export$dd0bbc9b26defe37
  });
  let fieldRef = (0, import_react49.useRef)(null);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)();
  let inputRef = (0, import_react49.useRef)(null);
  let { labelProps, fieldProps, inputProps, descriptionProps, errorMessageProps } = (0, $16f0b7bb276bc17e$export$5591b0b878c1a989)({
    ...props,
    label,
    inputRef
  }, state, fieldRef);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      state,
      validationState: state.validationState,
      isDisabled: state.isDisabled
    },
    defaultClassName: "react-aria-DateField"
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $40825cdb76e74f70$export$75bd233d6b51888d,
        {
          state,
          fieldProps,
          ref: fieldRef,
          inputRef,
          inputProps
        }
      ],
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef
        }
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps,
            errorMessage: errorMessageProps
          }
        }
      ]
    ]
  }, (0, import_react49.default).createElement("div", {
    ...DOMProps,
    ...renderProps,
    ref,
    slot: props.slot,
    "data-validation-date": state.validationState || void 0
  }));
}
var $40825cdb76e74f70$export$d9781c7894a82487 = (0, import_react49.forwardRef)($40825cdb76e74f70$var$DateField);
function $40825cdb76e74f70$var$TimeField(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $40825cdb76e74f70$export$8e17ddc448e87c1e);
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let state = (0, $eff5d8ee529ac4bb$export$fd53cef0cc796101)({
    ...props,
    locale
  });
  let fieldRef = (0, import_react49.useRef)(null);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)();
  let inputRef = (0, import_react49.useRef)(null);
  let { labelProps, fieldProps, inputProps, descriptionProps, errorMessageProps } = (0, $16f0b7bb276bc17e$export$4c842f6a241dc825)({
    ...props,
    label,
    inputRef
  }, state, fieldRef);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      state,
      validationState: state.validationState,
      isDisabled: state.isDisabled
    },
    defaultClassName: "react-aria-TimeField"
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $40825cdb76e74f70$export$75bd233d6b51888d,
        {
          state,
          fieldProps,
          ref: fieldRef,
          inputRef,
          inputProps
        }
      ],
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef,
          elementType: "span"
        }
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps,
            errorMessage: errorMessageProps
          }
        }
      ]
    ]
  }, (0, import_react49.default).createElement("div", {
    ...DOMProps,
    ...renderProps,
    ref,
    slot: props.slot,
    "data-validation-date": state.validationState || void 0
  }));
}
var $40825cdb76e74f70$export$5eaee2322dd727eb = (0, import_react49.forwardRef)($40825cdb76e74f70$var$TimeField);
var $40825cdb76e74f70$var$InternalDateInputContext = (0, import_react49.createContext)(null);
function $40825cdb76e74f70$var$DateInput({ children, slot, ...otherProps }, ref) {
  let [{ state, fieldProps, inputProps, inputRef }, fieldRef] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)({
    slot
  }, ref, $40825cdb76e74f70$export$75bd233d6b51888d);
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({});
  let { isFocused, isFocusVisible, focusProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)({
    within: true,
    isTextInput: true
  });
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...otherProps,
    values: {
      isHovered,
      isFocusWithin: isFocused,
      isFocusVisible,
      isDisabled: state.isDisabled
    },
    defaultClassName: "react-aria-DateInput"
  });
  return (0, import_react49.default).createElement($40825cdb76e74f70$var$InternalDateInputContext.Provider, {
    value: state
  }, (0, import_react49.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(otherProps), fieldProps, focusProps, hoverProps),
    ...renderProps,
    ref: fieldRef,
    slot,
    "data-hovered": isHovered || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-disabled": state.isDisabled || void 0
  }, state.segments.map((segment, i) => (0, import_react49.cloneElement)(children(segment), {
    key: i
  }))), (0, import_react49.default).createElement("input", {
    ...inputProps,
    ref: inputRef
  }));
}
var $40825cdb76e74f70$export$7edc06cf1783b30f = (0, import_react49.forwardRef)($40825cdb76e74f70$var$DateInput);
function $40825cdb76e74f70$var$DateSegment({ segment, ...otherProps }, ref) {
  let state = (0, import_react49.useContext)($40825cdb76e74f70$var$InternalDateInputContext);
  let domRef = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { segmentProps } = (0, $32489daedd52963e$export$1315d136e6f7581)(segment, state, domRef);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...otherProps,
    values: {
      ...segment,
      isReadOnly: !segment.isEditable,
      isInvalid: state.validationState === "invalid"
    },
    defaultChildren: segment.text,
    defaultClassName: "react-aria-DateSegment"
  });
  return (0, import_react49.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(otherProps), segmentProps),
    ...renderProps,
    ref: domRef,
    "data-type": segment.type
  });
}
var $40825cdb76e74f70$export$336ab7fa954c4b5f = (0, import_react49.forwardRef)($40825cdb76e74f70$var$DateSegment);
var $f3f84453ead64de5$export$ab57792b9b6974a6 = (0, import_react49.createContext)(null);
var $f3f84453ead64de5$var$InternalModalContext = (0, import_react49.createContext)(null);
function $f3f84453ead64de5$var$Modal(props, ref) {
  let ctx = (0, import_react49.useContext)($f3f84453ead64de5$var$InternalModalContext);
  if (ctx)
    return (0, import_react49.default).createElement($f3f84453ead64de5$var$ModalContent, {
      ...props,
      modalRef: ref
    }, props.children);
  let { isDismissable, isKeyboardDismissDisabled, isOpen, defaultOpen, onOpenChange, children, ...otherProps } = props;
  return (0, import_react49.default).createElement($f3f84453ead64de5$export$8948f78d83984c69, {
    isDismissable,
    isKeyboardDismissDisabled,
    isOpen,
    defaultOpen,
    onOpenChange
  }, (0, import_react49.default).createElement($f3f84453ead64de5$var$ModalContent, {
    ...otherProps,
    modalRef: ref
  }, children));
}
var $f3f84453ead64de5$export$2b77a92f1a5ad772 = (0, import_react49.forwardRef)($f3f84453ead64de5$var$Modal);
function $f3f84453ead64de5$var$ModalOverlayWithForwardRef(props, ref) {
  let ctx = (0, import_react49.useContext)($f3f84453ead64de5$export$ab57792b9b6974a6);
  let localState = (0, $fc909762b330b746$export$61c6a8c84e605fb6)(props);
  let state = props.isOpen != null || props.defaultOpen != null || !(ctx === null || ctx === void 0 ? void 0 : ctx.state) ? localState : ctx.state;
  let objectRef = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let modalRef = (0, import_react49.useRef)(null);
  let isOverlayExiting = (0, $64fa3d84918910a7$export$45fda7c47f93fd48)(objectRef, state.isOpen);
  let isModalExiting = (0, $64fa3d84918910a7$export$45fda7c47f93fd48)(modalRef, state.isOpen);
  let isExiting = isOverlayExiting || isModalExiting;
  if (!state.isOpen && !isExiting)
    return null;
  return (0, import_react49.default).createElement($f3f84453ead64de5$var$ModalOverlayInner, {
    ...props,
    state,
    isExiting,
    overlayRef: objectRef,
    modalRef
  });
}
var $f3f84453ead64de5$export$8948f78d83984c69 = (0, import_react49.forwardRef)($f3f84453ead64de5$var$ModalOverlayWithForwardRef);
function $f3f84453ead64de5$var$ModalOverlayInner(props) {
  let modalRef = props.modalRef;
  let { state } = props;
  let { modalProps, underlayProps } = (0, $8ac8429251c45e4b$export$dbc0f175b25fb0fb)(props, state, modalRef);
  let entering = (0, $64fa3d84918910a7$export$6d3443f2c48bfc20)(props.overlayRef);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-ModalOverlay",
    values: {
      isEntering: entering,
      isExiting: props.isExiting,
      state
    }
  });
  let viewport = (0, $5df64b3807dc15ee$export$d699905dd57c73ca)();
  let style = {
    ...renderProps.style,
    "--visual-viewport-height": viewport.height + "px"
  };
  return (0, import_react49.default).createElement((0, $337b884510726a0d$export$c6fdb837b070b4ff), {
    isExiting: props.isExiting
  }, (0, import_react49.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props), underlayProps),
    ...renderProps,
    style,
    ref: props.overlayRef,
    "data-entering": entering || void 0,
    "data-exiting": props.isExiting || void 0
  }, (0, import_react49.default).createElement($f3f84453ead64de5$var$InternalModalContext.Provider, {
    value: {
      modalProps,
      modalRef,
      state,
      isExiting: props.isExiting,
      isDismissable: props.isDismissable
    }
  }, renderProps.children)));
}
function $f3f84453ead64de5$var$ModalContent(props) {
  let { modalProps, modalRef, isExiting, isDismissable, state } = (0, import_react49.useContext)($f3f84453ead64de5$var$InternalModalContext);
  let mergedRefs = (0, import_react49.useMemo)(() => (0, $5dc95899b306f630$export$c9058316764c140e)(props.modalRef, modalRef), [
    props.modalRef,
    modalRef
  ]);
  let ref = (0, $df56164dff5785e2$export$4338b53315abf666)(mergedRefs);
  let entering = (0, $64fa3d84918910a7$export$6d3443f2c48bfc20)(ref);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-Modal",
    values: {
      isEntering: entering,
      isExiting,
      state
    }
  });
  return (0, import_react49.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props), modalProps),
    ...renderProps,
    ref,
    "data-entering": entering || void 0,
    "data-exiting": isExiting || void 0
  }, isDismissable && (0, import_react49.default).createElement((0, $86ea4cb521eb2e37$export$2317d149ed6f78c4), {
    onDismiss: state.close
  }), renderProps.children);
}
var $de32f1b87079253c$export$8b93a07348a7730c = (0, import_react49.createContext)(null);
function $de32f1b87079253c$export$2e1e1122cf0cba88(props) {
  let state = (0, $fc909762b330b746$export$61c6a8c84e605fb6)(props);
  let buttonRef = (0, import_react49.useRef)(null);
  let { triggerProps, overlayProps } = (0, $628037886ba31236$export$f9d5c8beee7d008d)({
    type: "dialog"
  }, state, buttonRef);
  return (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $f3f84453ead64de5$export$ab57792b9b6974a6),
        {
          state
        }
      ],
      [
        $de32f1b87079253c$export$8b93a07348a7730c,
        {
          ...overlayProps,
          onClose: state.close
        }
      ],
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          ...triggerProps,
          isPressed: state.isOpen,
          ref: buttonRef
        }
      ],
      [
        (0, $07b14b47974efb58$export$9b9a0cd73afb7ca4),
        {
          state,
          triggerRef: buttonRef
        }
      ]
    ]
  }, props.children);
}
function $de32f1b87079253c$var$Dialog(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $de32f1b87079253c$export$8b93a07348a7730c);
  let { dialogProps, titleProps } = (0, $40df3f8667284809$export$d55e7ee900f34e93)(props, ref);
  let children = props.children;
  if (typeof children === "function")
    children = children({
      close: props.onClose || (() => {
      })
    });
  var _props_className;
  return (0, import_react49.default).createElement("section", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...dialogProps,
    ref,
    slot: props.slot,
    style: props.style,
    className: (_props_className = props.className) !== null && _props_className !== void 0 ? _props_className : "react-aria-Dialog"
  }, (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        void 0
      ],
      // TODO: clear context within dialog content?
      [
        (0, $5cb03073d3f54797$export$d688439359537581),
        {
          ...titleProps,
          level: 2
        }
      ]
    ]
  }, children));
}
var $de32f1b87079253c$export$3ddf2d174ce01153 = (0, import_react49.forwardRef)($de32f1b87079253c$var$Dialog);
var $a049562f99e7db0e$export$f9c6924e160136d1 = (0, import_react49.createContext)({});
function $a049562f99e7db0e$var$Group(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $a049562f99e7db0e$export$f9c6924e160136d1);
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({});
  let { isFocused, isFocusVisible, focusProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)({
    within: true
  });
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      isHovered,
      isFocusWithin: isFocused,
      isFocusVisible
    },
    defaultClassName: "react-aria-Group"
  });
  return (0, import_react49.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(props, focusProps, hoverProps),
    ...renderProps,
    ref,
    "data-hovered": isHovered || void 0,
    "data-focus-visible": isFocusVisible || void 0
  }, props.children);
}
var $a049562f99e7db0e$export$eb2fcfdbd7ba97d4 = (0, import_react49.forwardRef)($a049562f99e7db0e$var$Group);
var $06d5b8ec9ee5d538$export$cf316c7f3b44c11e = (0, import_react49.createContext)(null);
var $06d5b8ec9ee5d538$export$8282edba42ee28a = (0, import_react49.createContext)(null);
function $06d5b8ec9ee5d538$var$DatePicker(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $06d5b8ec9ee5d538$export$cf316c7f3b44c11e);
  let state = (0, $ab5bf3f618090389$export$87194bb378cc3ac2)(props);
  let groupRef = (0, import_react49.useRef)(null);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)();
  let { groupProps, labelProps, fieldProps, buttonProps, dialogProps, calendarProps, descriptionProps, errorMessageProps } = (0, $6057a3d2a53a12fd$export$42df105a73306d51)({
    ...props,
    label
  }, state, groupRef);
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let fieldState = (0, $3c0fc76039f1c516$export$60e84778edff6d26)({
    ...fieldProps,
    locale,
    createCalendar: $64244302c3013299$export$dd0bbc9b26defe37
  });
  let fieldRef = (0, import_react49.useRef)(null);
  let inputRef = (0, import_react49.useRef)(null);
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)({
    within: true
  });
  let { fieldProps: dateFieldProps, inputProps } = (0, $16f0b7bb276bc17e$export$5591b0b878c1a989)({
    ...fieldProps,
    label,
    inputRef
  }, fieldState, fieldRef);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      state,
      isFocusWithin: isFocused,
      isFocusVisible,
      isDisabled: props.isDisabled || false,
      validationState: state.validationState
    },
    defaultClassName: "react-aria-DatePicker"
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $a049562f99e7db0e$export$f9c6924e160136d1),
        {
          ...groupProps,
          ref: groupRef
        }
      ],
      [
        (0, $40825cdb76e74f70$export$75bd233d6b51888d),
        {
          state: fieldState,
          fieldProps: dateFieldProps,
          ref: fieldRef,
          inputProps,
          inputRef
        }
      ],
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          ...buttonProps,
          isPressed: state.isOpen
        }
      ],
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef,
          elementType: "span"
        }
      ],
      [
        (0, $dfd62f934fc76fed$export$3b805cea1f178355),
        calendarProps
      ],
      [
        (0, $07b14b47974efb58$export$9b9a0cd73afb7ca4),
        {
          state,
          triggerRef: groupRef,
          placement: "bottom start"
        }
      ],
      [
        (0, $de32f1b87079253c$export$8b93a07348a7730c),
        dialogProps
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps,
            errorMessage: errorMessageProps
          }
        }
      ]
    ]
  }, (0, import_react49.default).createElement("div", {
    ...focusProps,
    ...DOMProps,
    ...renderProps,
    ref,
    slot: props.slot,
    "data-validation-state": state.validationState || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-disabled": props.isDisabled || void 0
  }));
}
var $06d5b8ec9ee5d538$export$5109c6dd95d8fb00 = (0, import_react49.forwardRef)($06d5b8ec9ee5d538$var$DatePicker);
function $06d5b8ec9ee5d538$var$DateRangePicker(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $06d5b8ec9ee5d538$export$8282edba42ee28a);
  let state = (0, $93c38a5e28be6249$export$e50a61c1de9f574)(props);
  let groupRef = (0, import_react49.useRef)(null);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)();
  let { groupProps, labelProps, startFieldProps, endFieldProps, buttonProps, dialogProps, calendarProps, descriptionProps, errorMessageProps } = (0, $887cac91b7cc8801$export$12fd5f0e9f4bb192)({
    ...props,
    label
  }, state, groupRef);
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let startFieldState = (0, $3c0fc76039f1c516$export$60e84778edff6d26)({
    ...startFieldProps,
    locale,
    createCalendar: $64244302c3013299$export$dd0bbc9b26defe37
  });
  let startFieldRef = (0, import_react49.useRef)(null);
  let startInputRef = (0, import_react49.useRef)(null);
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)({
    within: true
  });
  let { fieldProps: startDateFieldProps, inputProps: startInputProps } = (0, $16f0b7bb276bc17e$export$5591b0b878c1a989)({
    ...startFieldProps,
    label,
    inputRef: startInputRef
  }, startFieldState, startFieldRef);
  let endFieldState = (0, $3c0fc76039f1c516$export$60e84778edff6d26)({
    ...endFieldProps,
    locale,
    createCalendar: $64244302c3013299$export$dd0bbc9b26defe37
  });
  let endFieldRef = (0, import_react49.useRef)(null);
  let endInputRef = (0, import_react49.useRef)(null);
  let { fieldProps: endDateFieldProps, inputProps: endInputProps } = (0, $16f0b7bb276bc17e$export$5591b0b878c1a989)({
    ...endFieldProps,
    label,
    inputRef: endInputRef
  }, endFieldState, endFieldRef);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      state,
      isFocusWithin: isFocused,
      isFocusVisible,
      isDisabled: props.isDisabled || false,
      validationState: state.validationState
    },
    defaultClassName: "react-aria-DateRangePicker"
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $a049562f99e7db0e$export$f9c6924e160136d1),
        {
          ...groupProps,
          ref: groupRef
        }
      ],
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          ...buttonProps,
          isPressed: state.isOpen
        }
      ],
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef,
          elementType: "span"
        }
      ],
      [
        (0, $dfd62f934fc76fed$export$233dd9682e1ad64b),
        calendarProps
      ],
      [
        (0, $07b14b47974efb58$export$9b9a0cd73afb7ca4),
        {
          state,
          triggerRef: groupRef,
          placement: "bottom start"
        }
      ],
      [
        (0, $de32f1b87079253c$export$8b93a07348a7730c),
        dialogProps
      ],
      [
        (0, $40825cdb76e74f70$export$75bd233d6b51888d),
        {
          slots: {
            start: {
              state: startFieldState,
              fieldProps: startDateFieldProps,
              ref: startFieldRef,
              inputRef: startInputRef,
              inputProps: startInputProps
            },
            end: {
              state: endFieldState,
              fieldProps: endDateFieldProps,
              ref: endFieldRef,
              inputRef: endInputRef,
              inputProps: endInputProps
            }
          }
        }
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps,
            errorMessage: errorMessageProps
          }
        }
      ]
    ]
  }, (0, import_react49.default).createElement("div", {
    ...focusProps,
    ...DOMProps,
    ...renderProps,
    ref,
    slot: props.slot,
    "data-validation-state": state.validationState || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-disabled": props.isDisabled || void 0
  }));
}
var $06d5b8ec9ee5d538$export$17334619f3ac2224 = (0, import_react49.forwardRef)($06d5b8ec9ee5d538$var$DateRangePicker);
var $cb088e721efb9218$export$14a72053295ff9a6 = (0, import_react49.createContext)(null);
function $cb088e721efb9218$var$DropZone(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $cb088e721efb9218$export$14a72053295ff9a6);
  let buttonRef = (0, import_react49.useRef)(null);
  let { dropProps, dropButtonProps, isDropTarget } = (0, $5c06e4929e123553$export$ccdee5eaf73cf661)({
    ...props,
    ref: buttonRef,
    hasDropButton: true
  });
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({});
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let textId = (0, $bdb11010cef70236$export$b4cc09c592e8fdb8)();
  let ariaLabel = props["aria-label"] || "DropZone";
  let labelProps = (0, $313b98861ee5dd6c$export$d6875122194c7b44)({
    "aria-label": ariaLabel,
    "aria-labelledby": textId
  });
  let { clipboardProps } = (0, $9fcc7f0d70d084ee$export$2314ca2a3e892862)({
    onPaste: (items) => {
      var _props_onDrop;
      return (_props_onDrop = props.onDrop) === null || _props_onDrop === void 0 ? void 0 : _props_onDrop.call(props, {
        type: "drop",
        items,
        x: 0,
        y: 0,
        dropOperation: "copy"
      });
    }
  });
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      isHovered,
      isFocused,
      isFocusVisible,
      isDropTarget
    },
    defaultClassName: "react-aria-DropZone"
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          id: textId,
          slot: "label"
        }
      ]
    ]
  }, (0, import_react49.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(dropProps, hoverProps, DOMProps),
    ...renderProps,
    slot: props.slot,
    onClick: () => {
      var _buttonRef_current;
      return (_buttonRef_current = buttonRef.current) === null || _buttonRef_current === void 0 ? void 0 : _buttonRef_current.focus();
    },
    "data-hovered": isHovered || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-drop-target": isDropTarget || void 0
  }, (0, import_react49.default).createElement((0, $5c3e21d68f1c4674$export$439d29a4e110a164), null, (0, import_react49.default).createElement("button", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(dropButtonProps, focusProps, clipboardProps, labelProps),
    "aria-label": ariaLabel,
    ref: buttonRef
  })), renderProps.children));
}
var $cb088e721efb9218$export$3c6489d84dc98b6 = (0, import_react49.forwardRef)($cb088e721efb9218$var$DropZone);
function $1e2864c73f66a4da$var$FileTrigger(props, ref) {
  let { onChange, acceptedFileTypes, allowsMultiple, defaultCamera, name, children } = props;
  let inputRef = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  return (0, import_react49.default).createElement((0, import_react49.default).Fragment, null, (0, import_react49.default).createElement((0, $f1ab8c75478c6f73$export$3351871ee4b288b8), {
    onPress: () => {
      var _inputRef_current;
      return (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.click();
    }
  }, children), (0, import_react49.default).createElement((0, $3985021b0ad6602f$export$f5b8910cec6cf069), {
    type: "file",
    ref: inputRef,
    style: {
      display: "none"
    },
    accept: acceptedFileTypes === null || acceptedFileTypes === void 0 ? void 0 : acceptedFileTypes.toString(),
    onChange: (e) => {
      return onChange === null || onChange === void 0 ? void 0 : onChange(e.target.files);
    },
    capture: defaultCamera,
    multiple: allowsMultiple,
    name
  }));
}
var $1e2864c73f66a4da$export$6fb4a10d2c950550 = (0, import_react49.forwardRef)($1e2864c73f66a4da$var$FileTrigger);
var $72e60046c03fbe42$export$54fe942636b6416d = (0, import_react49.createContext)(null);
var $72e60046c03fbe42$var$InternalGridListContext = (0, import_react49.createContext)(null);
function $72e60046c03fbe42$var$GridList(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $72e60046c03fbe42$export$54fe942636b6416d);
  let { dragAndDropHooks } = props;
  let { portal, collection } = (0, $7135fc7d473fd974$export$6cd28814d92fa9c9)(props);
  let state = (0, $e72dd72e1c76a225$export$2f645645f7bca764)({
    ...props,
    collection,
    children: void 0
  });
  let { gridProps } = (0, $f47efb0c3a859cf2$export$664f9155035607eb)(props, state, ref);
  let children = (0, $7135fc7d473fd974$export$727c8fc270210f13)({
    items: collection,
    children: (item) => {
      switch (item.type) {
        case "item":
          return (0, import_react49.default).createElement($72e60046c03fbe42$var$GridListItem, {
            item
          });
        default:
          throw new Error("Unsupported node type in GridList: " + item.type);
      }
    }
  });
  let selectionManager = state.selectionManager;
  let isListDraggable = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDraggableCollectionState);
  let isListDroppable = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDroppableCollectionState);
  let dragHooksProvided = (0, import_react49.useRef)(isListDraggable);
  let dropHooksProvided = (0, import_react49.useRef)(isListDroppable);
  (0, import_react49.useEffect)(() => {
    if (dragHooksProvided.current !== isListDraggable)
      console.warn("Drag hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.");
    if (dropHooksProvided.current !== isListDroppable)
      console.warn("Drop hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.");
  }, [
    isListDraggable,
    isListDroppable
  ]);
  let dragState = void 0;
  let dropState = void 0;
  let droppableCollection = void 0;
  let isRootDropTarget = false;
  let dragPreview = null;
  let preview = (0, import_react49.useRef)(null);
  if (isListDraggable && dragAndDropHooks) {
    dragState = dragAndDropHooks.useDraggableCollectionState({
      collection,
      selectionManager,
      preview: dragAndDropHooks.renderDragPreview ? preview : void 0
    });
    dragAndDropHooks.useDraggableCollection({}, dragState, ref);
    let DragPreview = dragAndDropHooks.DragPreview;
    dragPreview = dragAndDropHooks.renderDragPreview ? (0, import_react49.default).createElement(DragPreview, {
      ref: preview
    }, dragAndDropHooks.renderDragPreview) : null;
  }
  if (isListDroppable && dragAndDropHooks) {
    dropState = dragAndDropHooks.useDroppableCollectionState({
      collection,
      selectionManager
    });
    let keyboardDelegate = new (0, $2a25aae57d74318e$export$a05409b8bb224a5a)(collection, selectionManager.disabledBehavior === "selection" ? /* @__PURE__ */ new Set() : selectionManager.disabledKeys, ref);
    let dropTargetDelegate = dragAndDropHooks.dropTargetDelegate || new dragAndDropHooks.ListDropTargetDelegate(collection, ref);
    droppableCollection = dragAndDropHooks.useDroppableCollection({
      keyboardDelegate,
      dropTargetDelegate
    }, dropState, ref);
    isRootDropTarget = dropState.isDropTarget({
      type: "root"
    });
  }
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    className: props.className,
    style: props.style,
    defaultClassName: "react-aria-GridList",
    values: {
      isDropTarget: isRootDropTarget,
      isEmpty: state.collection.size === 0,
      isFocused,
      isFocusVisible,
      state
    }
  });
  let emptyState = null;
  let emptyStatePropOverrides = null;
  if (state.collection.size === 0 && props.renderEmptyState) {
    let content = props.renderEmptyState();
    if ((0, $c87311424ea30a05$export$78551043582a6a98)()) {
      emptyStatePropOverrides = {
        role: "group",
        "aria-multiselectable": void 0
      };
      if ((0, $c87311424ea30a05$export$fedb369cb70207f1)())
        emptyState = (0, import_react49.default).createElement((0, import_react49.default).Fragment, null, (0, import_react49.default).createElement((0, $5c3e21d68f1c4674$export$439d29a4e110a164), null, gridProps["aria-label"]), content);
      else
        emptyState = content;
    } else
      emptyState = (0, import_react49.default).createElement("div", {
        role: "row",
        style: {
          display: "contents"
        }
      }, (0, import_react49.default).createElement("div", {
        role: "gridcell",
        style: {
          display: "contents"
        }
      }, content));
  }
  return (0, import_react49.default).createElement((0, $9bf71ea28793e738$export$20e40289641fbbb6), null, (0, import_react49.default).createElement("div", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...renderProps,
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(gridProps, focusProps, droppableCollection === null || droppableCollection === void 0 ? void 0 : droppableCollection.collectionProps, emptyStatePropOverrides),
    ref,
    slot: props.slot,
    "data-drop-target": isRootDropTarget || void 0,
    "data-empty": state.collection.size === 0 || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0
  }, (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $72e60046c03fbe42$var$InternalGridListContext,
        {
          state,
          dragAndDropHooks,
          dragState,
          dropState
        }
      ],
      [
        (0, $d8f176866e6dc039$export$f55761759794cf55),
        {
          render: $72e60046c03fbe42$var$GridListDropIndicatorWrapper
        }
      ]
    ]
  }, isListDroppable && (0, import_react49.default).createElement($72e60046c03fbe42$var$RootDropIndicator, null), children), emptyState, dragPreview, portal));
}
var $72e60046c03fbe42$export$a7bfbda1311ca015 = (0, import_react49.forwardRef)($72e60046c03fbe42$var$GridList);
function $72e60046c03fbe42$var$GridListItem({ item }) {
  let { state, dragAndDropHooks, dragState, dropState } = (0, import_react49.useContext)($72e60046c03fbe42$var$InternalGridListContext);
  let ref = (0, $df56164dff5785e2$export$4338b53315abf666)(item.props.ref);
  let { rowProps, gridCellProps, descriptionProps, ...states } = (0, $4e8b0456ef72939f$export$9610e69494fadfd2)({
    node: item,
    shouldSelectOnPressUp: !!dragState
  }, state, ref);
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    isDisabled: !states.allowsSelection && !states.hasAction
  });
  let { isFocusVisible, focusProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let { checkboxProps } = (0, $e52ffc04a4adbd52$export$e29f2573fabbf7b9)({
    key: item.key
  }, state);
  let draggableItem = null;
  if (dragState && dragAndDropHooks)
    draggableItem = dragAndDropHooks.useDraggableItem({
      key: item.key,
      hasDragButton: true
    }, dragState);
  let dropIndicator = null;
  let dropIndicatorRef = (0, import_react49.useRef)(null);
  let { visuallyHiddenProps } = (0, $5c3e21d68f1c4674$export$a966af930f325cab)();
  if (dropState && dragAndDropHooks)
    dropIndicator = dragAndDropHooks.useDropIndicator({
      target: {
        type: "item",
        key: item.key,
        dropPosition: "on"
      }
    }, dropState, dropIndicatorRef);
  let props = item.props;
  let isDragging = dragState && dragState.isDragging(item.key);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    id: void 0,
    children: item.rendered,
    defaultClassName: "react-aria-Item",
    values: {
      ...states,
      isHovered,
      isFocusVisible,
      selectionMode: state.selectionManager.selectionMode,
      selectionBehavior: state.selectionManager.selectionBehavior,
      allowsDragging: !!dragState,
      isDragging,
      isDropTarget: dropIndicator === null || dropIndicator === void 0 ? void 0 : dropIndicator.isDropTarget
    }
  });
  let renderDropIndicator = (dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.renderDropIndicator) || ((target) => (0, import_react49.default).createElement((0, $d8f176866e6dc039$export$62ed72bc21f6b8a6), {
    target
  }));
  let dragButtonRef = (0, import_react49.useRef)(null);
  (0, import_react49.useEffect)(() => {
    if (dragState && !dragButtonRef.current)
      console.warn('Draggable items in a GridList must contain a <Button slot="drag"> element so that keyboard and screen reader users can drag them.');
  }, []);
  (0, import_react49.useEffect)(() => {
    if (!item.textValue)
      console.warn("A `textValue` prop is required for <Item> elements with non-plain text children in order to support accessibility features such as type to select.");
  }, [
    item.textValue
  ]);
  return (0, import_react49.default).createElement((0, import_react49.default).Fragment, null, (dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDropIndicator) && renderDropIndicator({
    type: "item",
    key: item.key,
    dropPosition: "before"
  }), dropIndicator && !dropIndicator.isHidden && (0, import_react49.default).createElement("div", {
    role: "row",
    style: {
      position: "absolute"
    }
  }, (0, import_react49.default).createElement("div", {
    role: "gridcell"
  }, (0, import_react49.default).createElement("div", {
    role: "button",
    ...visuallyHiddenProps,
    ...dropIndicator === null || dropIndicator === void 0 ? void 0 : dropIndicator.dropIndicatorProps,
    ref: dropIndicatorRef
  }))), (0, import_react49.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props), rowProps, focusProps, hoverProps, draggableItem === null || draggableItem === void 0 ? void 0 : draggableItem.dragProps),
    ...renderProps,
    ref,
    "data-hovered": isHovered || void 0,
    "data-focused": states.isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-pressed": states.isPressed || void 0,
    "data-dragging": isDragging || void 0,
    "data-drop-target": (dropIndicator === null || dropIndicator === void 0 ? void 0 : dropIndicator.isDropTarget) || void 0
  }, (0, import_react49.default).createElement("div", gridCellProps, (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $bc237834342dbd75$export$b085522c77523c51),
        checkboxProps
      ],
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          slots: {
            [(0, $64fa3d84918910a7$export$8e0ef2c5844bfb6b)]: {},
            drag: {
              ...draggableItem === null || draggableItem === void 0 ? void 0 : draggableItem.dragButtonProps,
              ref: dragButtonRef,
              style: {
                pointerEvents: "none"
              }
            }
          }
        }
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps
          }
        }
      ]
    ]
  }, renderProps.children))), (dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDropIndicator) && state.collection.getKeyAfter(item.key) == null && renderDropIndicator({
    type: "item",
    key: item.key,
    dropPosition: "after"
  }));
}
function $72e60046c03fbe42$var$GridListDropIndicatorWrapper(props, ref) {
  ref = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { dragAndDropHooks, dropState } = (0, import_react49.useContext)($72e60046c03fbe42$var$InternalGridListContext);
  let buttonRef = (0, import_react49.useRef)(null);
  let { dropIndicatorProps, isHidden, isDropTarget } = dragAndDropHooks.useDropIndicator(props, dropState, buttonRef);
  if (isHidden)
    return null;
  return (0, import_react49.default).createElement($72e60046c03fbe42$var$GridListDropIndicatorForwardRef, {
    ...props,
    dropIndicatorProps,
    isDropTarget,
    buttonRef,
    ref
  });
}
function $72e60046c03fbe42$var$GridListDropIndicator(props, ref) {
  let { dropIndicatorProps, isDropTarget, buttonRef, ...otherProps } = props;
  let { visuallyHiddenProps } = (0, $5c3e21d68f1c4674$export$a966af930f325cab)();
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...otherProps,
    defaultClassName: "react-aria-DropIndicator",
    values: {
      isDropTarget
    }
  });
  return (0, import_react49.default).createElement("div", {
    ...renderProps,
    role: "row",
    ref,
    "data-drop-target": isDropTarget || void 0
  }, (0, import_react49.default).createElement("div", {
    role: "gridcell"
  }, (0, import_react49.default).createElement("div", {
    ...visuallyHiddenProps,
    role: "button",
    ...dropIndicatorProps,
    ref: buttonRef
  })));
}
var $72e60046c03fbe42$var$GridListDropIndicatorForwardRef = (0, import_react49.forwardRef)($72e60046c03fbe42$var$GridListDropIndicator);
function $72e60046c03fbe42$var$RootDropIndicator() {
  let { dragAndDropHooks, dropState } = (0, import_react49.useContext)($72e60046c03fbe42$var$InternalGridListContext);
  let ref = (0, import_react49.useRef)(null);
  let { dropIndicatorProps } = dragAndDropHooks.useDropIndicator({
    target: {
      type: "root"
    }
  }, dropState, ref);
  let isDropTarget = dropState.isDropTarget({
    type: "root"
  });
  let { visuallyHiddenProps } = (0, $5c3e21d68f1c4674$export$a966af930f325cab)();
  if (!isDropTarget && dropIndicatorProps["aria-hidden"])
    return null;
  return (0, import_react49.default).createElement("div", {
    role: "row",
    "aria-hidden": dropIndicatorProps["aria-hidden"],
    style: {
      position: "absolute"
    }
  }, (0, import_react49.default).createElement("div", {
    role: "gridcell"
  }, (0, import_react49.default).createElement("div", {
    role: "button",
    ...visuallyHiddenProps,
    ...dropIndicatorProps,
    ref
  })));
}
var $63df2425e2108aa8$export$744d98a3b8a94e1c = (0, import_react49.createContext)({});
function $63df2425e2108aa8$var$Keyboard(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $63df2425e2108aa8$export$744d98a3b8a94e1c);
  return (0, import_react49.default).createElement("kbd", {
    dir: "ltr",
    ...props,
    ref
  });
}
var $63df2425e2108aa8$export$16e4d70cc375e707 = (0, import_react49.forwardRef)($63df2425e2108aa8$var$Keyboard);
var $3674c52c6b3c5bce$export$c7e742effb1c51e2 = (0, import_react49.createContext)(null);
var $3674c52c6b3c5bce$var$InternalMenuContext = (0, import_react49.createContext)(null);
function $3674c52c6b3c5bce$export$27d2ad3c5815583e(props) {
  let state = (0, $a28c903ee9ad8dc5$export$79fefeb1c2091ac3)(props);
  let ref = (0, import_react49.useRef)(null);
  let { menuTriggerProps, menuProps } = (0, $168583247155ddda$export$dc9c12ed27dd1b49)({
    ...props,
    type: "menu"
  }, state, ref);
  return (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $3674c52c6b3c5bce$export$c7e742effb1c51e2,
        menuProps
      ],
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          ...menuTriggerProps,
          ref,
          isPressed: state.isOpen
        }
      ],
      [
        (0, $07b14b47974efb58$export$9b9a0cd73afb7ca4),
        {
          state,
          triggerRef: ref,
          placement: "bottom start"
        }
      ]
    ]
  }, props.children);
}
function $3674c52c6b3c5bce$var$Menu(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $3674c52c6b3c5bce$export$c7e742effb1c51e2);
  let { portal, collection } = (0, $7135fc7d473fd974$export$6cd28814d92fa9c9)(props);
  return (0, import_react49.default).createElement((0, import_react49.default).Fragment, null, collection.size > 0 && (0, import_react49.default).createElement($3674c52c6b3c5bce$var$MenuInner, {
    props,
    collection,
    menuRef: ref
  }), portal);
}
function $3674c52c6b3c5bce$var$MenuInner({ props, collection, menuRef: ref }) {
  let state = (0, $875d6693e12af071$export$728d6ba534403756)({
    ...props,
    collection,
    children: void 0
  });
  let { menuProps } = (0, $d5336fe17ce95402$export$38eaa17faae8f579)(props, state, ref);
  let children = (0, $7135fc7d473fd974$export$727c8fc270210f13)({
    items: state.collection,
    children: (item) => {
      switch (item.type) {
        case "section":
          return (0, import_react49.default).createElement($3674c52c6b3c5bce$var$MenuSection, {
            section: item
          });
        case "separator":
          return (0, import_react49.default).createElement((0, $431f98aba6844401$export$1ff3c3f08ae963c0), item.props);
        case "item":
          return (0, import_react49.default).createElement($3674c52c6b3c5bce$var$MenuItem, {
            item
          });
        default:
          throw new Error("Unsupported node type in Menu: " + item.type);
      }
    }
  });
  var _props_className;
  return (0, import_react49.default).createElement("div", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...menuProps,
    ref,
    slot: props.slot,
    style: props.style,
    className: (_props_className = props.className) !== null && _props_className !== void 0 ? _props_className : "react-aria-Menu"
  }, (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $3674c52c6b3c5bce$var$InternalMenuContext,
        state
      ],
      [
        (0, $431f98aba6844401$export$6615d83f6de245ce),
        {
          elementType: "div"
        }
      ]
    ]
  }, children));
}
var $3674c52c6b3c5bce$export$d9b273488cd8ce6f = (0, import_react49.forwardRef)($3674c52c6b3c5bce$var$Menu);
function $3674c52c6b3c5bce$var$MenuSection({ section, className, style, ...otherProps }) {
  var _section_props, _section_props1;
  let state = (0, import_react49.useContext)($3674c52c6b3c5bce$var$InternalMenuContext);
  let [headingRef, heading] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)();
  var _section_arialabel;
  let { headingProps, groupProps } = (0, $3e5eb2498db5b506$export$73f7a44322579622)({
    heading,
    "aria-label": (_section_arialabel = section["aria-label"]) !== null && _section_arialabel !== void 0 ? _section_arialabel : void 0
  });
  let children = (0, $7135fc7d473fd974$export$727c8fc270210f13)({
    items: state.collection.getChildren(section.key),
    children: (item) => {
      switch (item.type) {
        case "header": {
          let { ref, ...otherProps2 } = item.props;
          return (0, import_react49.default).createElement((0, $72a5793c14baf454$export$8b251419efc915eb), {
            ...headingProps,
            ...otherProps2,
            ref: (0, $5dc95899b306f630$export$c9058316764c140e)(headingRef, ref)
          }, item.rendered);
        }
        case "item":
          return (0, import_react49.default).createElement($3674c52c6b3c5bce$var$MenuItem, {
            item
          });
        default:
          throw new Error("Unsupported element type in Section: " + item.type);
      }
    }
  });
  return (0, import_react49.default).createElement("section", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(otherProps),
    ...groupProps,
    className: className || ((_section_props = section.props) === null || _section_props === void 0 ? void 0 : _section_props.className) || "react-aria-Section",
    style: style || ((_section_props1 = section.props) === null || _section_props1 === void 0 ? void 0 : _section_props1.style),
    ref: section.props.ref
  }, children);
}
function $3674c52c6b3c5bce$var$MenuItem({ item }) {
  let state = (0, import_react49.useContext)($3674c52c6b3c5bce$var$InternalMenuContext);
  let ref = (0, $df56164dff5785e2$export$4338b53315abf666)(item.props.ref);
  let { menuItemProps, labelProps, descriptionProps, keyboardShortcutProps, ...states } = (0, $a2e5df62f93c7633$export$9d32628fc2aea7da)({
    key: item.key
  }, state, ref);
  let props = item.props;
  let { isFocusVisible, focusProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    id: void 0,
    children: item.rendered,
    defaultClassName: "react-aria-Item",
    values: {
      ...states,
      isHovered: states.isFocused,
      isFocusVisible,
      selectionMode: state.selectionManager.selectionMode,
      selectionBehavior: state.selectionManager.selectionBehavior
    }
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react49.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(DOMProps, menuItemProps, focusProps),
    ...renderProps,
    ref,
    "data-hovered": states.isFocused || void 0,
    "data-focused": states.isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-pressed": states.isPressed || void 0
  }, (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            label: labelProps,
            description: descriptionProps
          }
        }
      ],
      [
        (0, $63df2425e2108aa8$export$744d98a3b8a94e1c),
        keyboardShortcutProps
      ]
    ]
  }, renderProps.children));
}
var $c0c9ced265f3594c$export$8b645da15a96b44f = (0, import_react49.createContext)(null);
function $c0c9ced265f3594c$var$Meter(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $c0c9ced265f3594c$export$8b645da15a96b44f);
  let { value = 0, minValue = 0, maxValue = 100 } = props;
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)();
  let { meterProps, labelProps } = (0, $0002d7e1d16de204$export$e969dbfa146870ff)({
    ...props,
    label
  });
  let percentage = (value - minValue) / (maxValue - minValue) * 100;
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-Meter",
    values: {
      percentage,
      valueText: meterProps["aria-valuetext"]
    }
  });
  return (0, import_react49.default).createElement("div", {
    ...meterProps,
    ...renderProps,
    ref,
    slot: props.slot
  }, (0, import_react49.default).createElement((0, $01b77f81d0f07f68$export$75b6ee27786ba447).Provider, {
    value: {
      ...labelProps,
      ref: labelRef,
      elementType: "span"
    }
  }, renderProps.children));
}
var $c0c9ced265f3594c$export$62e3ae2a4090b879 = (0, import_react49.forwardRef)($c0c9ced265f3594c$var$Meter);
var $b91743d66a0ed188$export$b414a48cf5dcbc11 = (0, import_react49.createContext)(null);
function $b91743d66a0ed188$var$NumberField(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $b91743d66a0ed188$export$b414a48cf5dcbc11);
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let state = (0, $de67e98908f0c6ee$export$7f629e9dc1ecf37c)({
    ...props,
    locale
  });
  let inputRef = (0, import_react49.useRef)(null);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)();
  let { labelProps, groupProps, inputProps, incrementButtonProps, decrementButtonProps, descriptionProps, errorMessageProps } = (0, $81397a9303501bda$export$23f548e970bdf099)({
    ...props,
    label
  }, state, inputRef);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      state,
      isDisabled: props.isDisabled || false,
      validationState: props.validationState
    },
    defaultClassName: "react-aria-NumberField"
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $a049562f99e7db0e$export$f9c6924e160136d1),
        groupProps
      ],
      [
        (0, $3985021b0ad6602f$export$37fb8590cf2c088c),
        {
          ...inputProps,
          ref: inputRef
        }
      ],
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef
        }
      ],
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          slots: {
            increment: incrementButtonProps,
            decrement: decrementButtonProps
          }
        }
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps,
            errorMessage: errorMessageProps
          }
        }
      ]
    ]
  }, (0, import_react49.default).createElement("div", {
    ...DOMProps,
    ...renderProps,
    ref,
    slot: props.slot,
    "data-disabled": props.isDisabled || void 0,
    "data-validation-state": props.validationState || void 0
  }), props.name && (0, import_react49.default).createElement("input", {
    type: "hidden",
    name: props.name,
    value: isNaN(state.numberValue) ? "" : state.numberValue
  }));
}
var $b91743d66a0ed188$export$63c5fa0b2fdccd2e = (0, import_react49.forwardRef)($b91743d66a0ed188$var$NumberField);
var $0393f8ab869a0f1a$export$e9f3bf65a26ce129 = (0, import_react49.createContext)(null);
function $0393f8ab869a0f1a$var$ProgressBar(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $0393f8ab869a0f1a$export$e9f3bf65a26ce129);
  let { value = 0, minValue = 0, maxValue = 100, isIndeterminate = false } = props;
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)();
  let { progressBarProps, labelProps } = (0, $204d9ebcedfb8806$export$ed5abd763a836edc)({
    ...props,
    label
  });
  let percentage = isIndeterminate ? void 0 : (value - minValue) / (maxValue - minValue) * 100;
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-ProgressBar",
    values: {
      percentage,
      valueText: progressBarProps["aria-valuetext"],
      isIndeterminate
    }
  });
  return (0, import_react49.default).createElement("div", {
    ...progressBarProps,
    ...renderProps,
    ref,
    slot: props.slot
  }, (0, import_react49.default).createElement((0, $01b77f81d0f07f68$export$75b6ee27786ba447).Provider, {
    value: {
      ...labelProps,
      ref: labelRef,
      elementType: "span"
    }
  }, renderProps.children));
}
var $0393f8ab869a0f1a$export$c17561cb55d4db30 = (0, import_react49.forwardRef)($0393f8ab869a0f1a$var$ProgressBar);
var $b6c3ddc6086f204d$export$a79eda4ff50e30b6 = (0, import_react49.createContext)(null);
var $b6c3ddc6086f204d$export$b118023277d4a5c3 = (0, import_react49.createContext)(null);
var $b6c3ddc6086f204d$var$InternalRadioContext = (0, import_react49.createContext)(null);
function $b6c3ddc6086f204d$var$RadioGroup(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $b6c3ddc6086f204d$export$a79eda4ff50e30b6);
  let state = (0, $a54cdc5c1942b639$export$bca9d026f8e704eb)(props);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)();
  let { radioGroupProps, labelProps, descriptionProps, errorMessageProps } = (0, $430f30ed08ec25fa$export$62b9571f283ff5c2)({
    ...props,
    label
  }, state);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      orientation: props.orientation || "vertical",
      isDisabled: state.isDisabled,
      isReadOnly: state.isReadOnly,
      isRequired: state.isRequired,
      validationState: state.validationState,
      state
    },
    defaultClassName: "react-aria-RadioGroup"
  });
  return (0, import_react49.default).createElement("div", {
    ...radioGroupProps,
    ...renderProps,
    ref,
    slot: props.slot,
    "data-validation-state": state.validationState || void 0
  }, (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $b6c3ddc6086f204d$var$InternalRadioContext,
        state
      ],
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef,
          elementType: "span"
        }
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps,
            errorMessage: errorMessageProps
          }
        }
      ]
    ]
  }, renderProps.children));
}
function $b6c3ddc6086f204d$var$Radio(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $b6c3ddc6086f204d$export$b118023277d4a5c3);
  let state = (0, import_react49.default).useContext($b6c3ddc6086f204d$var$InternalRadioContext);
  let domRef = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { inputProps, isSelected, isDisabled, isPressed: isPressedKeyboard } = (0, $0d5c49892c1215da$export$37b0961d2f4751e2)({
    ...props,
    // ReactNode type doesn't allow function children.
    children: typeof props.children === "function" ? true : props.children
  }, state, domRef);
  let { isFocused, isFocusVisible, focusProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let interactionDisabled = isDisabled || state.isReadOnly;
  let [isPressed, setPressed] = (0, import_react49.useState)(false);
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    isDisabled: interactionDisabled,
    onPressStart(e) {
      if (e.pointerType !== "keyboard")
        setPressed(true);
    },
    onPressEnd(e) {
      if (e.pointerType !== "keyboard")
        setPressed(false);
    }
  });
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    isDisabled: interactionDisabled
  });
  let pressed = interactionDisabled ? false : isPressed || isPressedKeyboard;
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-Radio",
    values: {
      isSelected,
      isPressed: pressed,
      isHovered,
      isFocused,
      isFocusVisible,
      isDisabled,
      isReadOnly: state.isReadOnly,
      validationState: state.validationState,
      isRequired: state.isRequired
    }
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react49.default).createElement("label", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(DOMProps, pressProps, hoverProps, renderProps),
    "data-selected": isSelected || void 0,
    "data-pressed": pressed || void 0,
    "data-hovered": isHovered || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-disabled": isDisabled || void 0,
    "data-readonly": state.isReadOnly || void 0,
    "data-validation-state": state.validationState || void 0,
    "data-required": state.isRequired || void 0
  }, (0, import_react49.default).createElement((0, $5c3e21d68f1c4674$export$439d29a4e110a164), {
    elementType: "span"
  }, (0, import_react49.default).createElement("input", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(inputProps, focusProps),
    ref: domRef
  })), renderProps.children);
}
var $b6c3ddc6086f204d$export$a98f0dcb43a68a25 = (0, import_react49.forwardRef)($b6c3ddc6086f204d$var$RadioGroup);
var $b6c3ddc6086f204d$export$d7b12c4107be0d61 = (0, import_react49.forwardRef)($b6c3ddc6086f204d$var$Radio);
var $440f4836bcb56932$export$d1c4e4c63cb03a11 = (0, import_react49.createContext)(null);
function $440f4836bcb56932$var$SearchField(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $440f4836bcb56932$export$d1c4e4c63cb03a11);
  let inputRef = (0, import_react49.useRef)(null);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)();
  let state = (0, $0b2218c4e3fe7d7e$export$3f8be18b0f41eaf2)(props);
  let { labelProps, inputProps, clearButtonProps, descriptionProps, errorMessageProps } = (0, $4d52238874b24f86$export$9bb30bbe003b82e0)({
    ...props,
    label
  }, state, inputRef);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      isEmpty: state.value === "",
      isDisabled: props.isDisabled || false,
      validationState: props.validationState,
      state
    },
    defaultClassName: "react-aria-SearchField"
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react49.default).createElement("div", {
    ...DOMProps,
    ...renderProps,
    ref,
    slot: props.slot,
    "data-empty": state.value === "" || void 0,
    "data-disabled": props.isDisabled || void 0,
    "data-validation-state": props.validationState || void 0
  }, (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef
        }
      ],
      [
        (0, $3985021b0ad6602f$export$37fb8590cf2c088c),
        {
          ...inputProps,
          ref: inputRef
        }
      ],
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        clearButtonProps
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps,
            errorMessage: errorMessageProps
          }
        }
      ]
    ]
  }, renderProps.children));
}
var $440f4836bcb56932$export$b94867ecbd698f21 = (0, import_react49.forwardRef)($440f4836bcb56932$var$SearchField);
var $82d7e5349645de74$export$7540cee5be7dc19b = (0, import_react49.createContext)(null);
var $82d7e5349645de74$var$InternalSelectContext = (0, import_react49.createContext)(null);
function $82d7e5349645de74$var$Select(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $82d7e5349645de74$export$7540cee5be7dc19b);
  let [listBoxProps, setListBoxProps] = (0, import_react49.useState)({
    children: []
  });
  var _props_items;
  let { portal, collection } = (0, $7135fc7d473fd974$export$6cd28814d92fa9c9)({
    items: (_props_items = props.items) !== null && _props_items !== void 0 ? _props_items : listBoxProps.items,
    children: listBoxProps.children
  });
  let state = (0, $2bc3a590c5373a4e$export$5159ec8b34d4ec12)({
    ...props,
    collection,
    children: void 0
  });
  let { isFocusVisible, focusProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)({
    within: true
  });
  let renderPropsState = (0, import_react49.useMemo)(() => ({
    isOpen: state.isOpen,
    isFocused: state.isFocused,
    isFocusVisible,
    isDisabled: props.isDisabled || false,
    validationState: props.validationState,
    isRequired: props.isRequired || false,
    state: {
      isFocused: state.isFocused,
      setFocused: state.setFocused,
      focusStrategy: state.focusStrategy,
      isOpen: state.isOpen,
      setOpen: state.setOpen,
      selectedKey: state.selectedKey,
      selectedItem: state.selectedItem,
      close: state.close
    }
  }), [
    state.isOpen,
    state.isFocused,
    state.setFocused,
    state.focusStrategy,
    state.setOpen,
    state.selectedKey,
    state.selectedItem,
    state.close,
    isFocusVisible,
    props.isDisabled,
    props.validationState,
    props.isRequired
  ]);
  let buttonRef = (0, import_react49.useRef)(null);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)();
  let { labelProps, triggerProps, valueProps, menuProps, descriptionProps, errorMessageProps } = (0, $58aed456727eb0f3$export$e64b2f635402ca43)({
    ...props,
    label
  }, state, buttonRef);
  let [buttonWidth, setButtonWidth] = (0, import_react49.useState)(null);
  let onResize = (0, import_react49.useCallback)(() => {
    if (buttonRef.current)
      setButtonWidth(buttonRef.current.offsetWidth + "px");
  }, [
    buttonRef
  ]);
  (0, $9daab02d461809db$export$683480f191c0e3ea)({
    ref: buttonRef,
    onResize
  });
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: renderPropsState,
    defaultClassName: "react-aria-Select"
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $82d7e5349645de74$var$InternalSelectContext,
        {
          state,
          valueProps,
          placeholder: props.placeholder
        }
      ],
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef,
          elementType: "span"
        }
      ],
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          ...triggerProps,
          ref: buttonRef,
          isPressed: state.isOpen
        }
      ],
      [
        (0, $07b14b47974efb58$export$9b9a0cd73afb7ca4),
        {
          state,
          triggerRef: buttonRef,
          preserveChildren: true,
          placement: "bottom start",
          style: {
            "--trigger-width": buttonWidth
          }
        }
      ],
      [
        (0, $eed445e0843c11d0$export$7ff8f37d2d81a48d),
        {
          state,
          [(0, $64fa3d84918910a7$export$91172ebb93c441a2)]: setListBoxProps,
          ...menuProps
        }
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps,
            errorMessage: errorMessageProps
          }
        }
      ]
    ]
  }, (0, import_react49.default).createElement("div", {
    ...DOMProps,
    ...renderProps,
    ...focusProps,
    ref,
    slot: props.slot,
    "data-focused": state.isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-open": state.isOpen || void 0,
    "data-disabled": props.isDisabled || void 0,
    "data-validation-state": props.validationState || void 0,
    "data-required": props.isRequired || void 0
  }), portal, (0, import_react49.default).createElement((0, $bdd25dc72710631f$export$cbd84cdb2e668835), {
    state,
    triggerRef: buttonRef,
    label,
    name: props.name
  }));
}
var $82d7e5349645de74$export$ef9b1a59e592288f = (0, import_react49.forwardRef)($82d7e5349645de74$var$Select);
function $82d7e5349645de74$var$SelectValue(props, ref) {
  var _state_selectedItem, _state_selectedItem1, _state_selectedItem2;
  let { state, valueProps, placeholder } = (0, import_react49.useContext)($82d7e5349645de74$var$InternalSelectContext);
  let rendered = (_state_selectedItem = state.selectedItem) === null || _state_selectedItem === void 0 ? void 0 : _state_selectedItem.rendered;
  if (typeof rendered === "function") {
    let fn = rendered;
    rendered = fn({
      isHovered: false,
      isPressed: false,
      isSelected: false,
      isFocused: false,
      isFocusVisible: false,
      isDisabled: false,
      selectionMode: "single",
      selectionBehavior: "toggle"
    });
  }
  var _state_selectedItem_value, _state_selectedItem_textValue;
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    // TODO: localize this.
    defaultChildren: rendered || placeholder || "Select an item",
    defaultClassName: "react-aria-SelectValue",
    values: {
      selectedItem: (_state_selectedItem_value = (_state_selectedItem1 = state.selectedItem) === null || _state_selectedItem1 === void 0 ? void 0 : _state_selectedItem1.value) !== null && _state_selectedItem_value !== void 0 ? _state_selectedItem_value : null,
      selectedText: (_state_selectedItem_textValue = (_state_selectedItem2 = state.selectedItem) === null || _state_selectedItem2 === void 0 ? void 0 : _state_selectedItem2.textValue) !== null && _state_selectedItem_textValue !== void 0 ? _state_selectedItem_textValue : null,
      isPlaceholder: !state.selectedItem
    }
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react49.default).createElement("span", {
    ref,
    ...DOMProps,
    ...valueProps,
    ...renderProps,
    "data-placeholder": !state.selectedItem || void 0
  }, (0, import_react49.default).createElement((0, $514c0188e459b4c0$export$9afb8bc826b033ea).Provider, {
    value: void 0
  }, renderProps.children));
}
var $82d7e5349645de74$export$e288731fd71264f0 = (0, import_react49.forwardRef)($82d7e5349645de74$var$SelectValue);
var $6f909507e6374d18$export$e99164f0030f3bff = (0, import_react49.createContext)(null);
var $6f909507e6374d18$var$InternalSliderContext = (0, import_react49.createContext)(null);
function $6f909507e6374d18$var$Slider(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $6f909507e6374d18$export$e99164f0030f3bff);
  let trackRef = (0, import_react49.useRef)(null);
  let numberFormatter = (0, $a916eb452884faea$export$b7a616150fdb9f44)(props.formatOptions);
  let state = (0, $28f99e3e86e6ec45$export$e5fda3247f5d67f9)({
    ...props,
    numberFormatter
  });
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)();
  let { groupProps, trackProps, labelProps, outputProps } = (0, $bcca50147b47f54d$export$56b2c08e277f365)({
    ...props,
    label
  }, state, trackRef);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      orientation: state.orientation,
      isDisabled: state.isDisabled,
      state
    },
    defaultClassName: "react-aria-Slider"
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $6f909507e6374d18$var$InternalSliderContext,
        {
          state,
          trackProps,
          trackRef,
          outputProps
        }
      ],
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef
        }
      ]
    ]
  }, (0, import_react49.default).createElement("div", {
    ...DOMProps,
    ...groupProps,
    ...renderProps,
    ref,
    slot: props.slot,
    "data-orientation": state.orientation,
    "data-disabled": state.isDisabled || void 0
  }));
}
var $6f909507e6374d18$export$472062a354075cee = (0, import_react49.forwardRef)($6f909507e6374d18$var$Slider);
function $6f909507e6374d18$var$SliderOutput({ children, style, className, ...otherProps }, ref) {
  let { state, outputProps } = (0, import_react49.useContext)($6f909507e6374d18$var$InternalSliderContext);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    className,
    style,
    children,
    defaultChildren: state.getThumbValueLabel(0),
    defaultClassName: "react-aria-SliderOutput",
    values: {
      orientation: state.orientation,
      isDisabled: state.isDisabled,
      state
    }
  });
  return (0, import_react49.default).createElement("output", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(otherProps), outputProps),
    ...renderProps,
    ref,
    "data-orientation": state.orientation || void 0,
    "data-disabled": state.isDisabled || void 0
  });
}
var $6f909507e6374d18$export$a590f758a961cb5b = (0, import_react49.forwardRef)($6f909507e6374d18$var$SliderOutput);
function $6f909507e6374d18$var$SliderTrack(props, ref) {
  let { state, trackProps, trackRef } = (0, import_react49.useContext)($6f909507e6374d18$var$InternalSliderContext);
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({});
  let domRef = (0, $5dc95899b306f630$export$c9058316764c140e)(ref, trackRef);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-SliderTrack",
    values: {
      orientation: state.orientation,
      isDisabled: state.isDisabled,
      isHovered,
      state
    }
  });
  return (0, import_react49.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props), hoverProps, trackProps),
    ...renderProps,
    ref: domRef,
    "data-hovered": isHovered || void 0,
    "data-orientation": state.orientation || void 0,
    "data-disabled": state.isDisabled || void 0
  });
}
var $6f909507e6374d18$export$105594979f116971 = (0, import_react49.forwardRef)($6f909507e6374d18$var$SliderTrack);
function $6f909507e6374d18$var$SliderThumb(props, ref) {
  let { state, trackRef } = (0, import_react49.useContext)($6f909507e6374d18$var$InternalSliderContext);
  let { index = 0 } = props;
  let inputRef = (0, import_react49.useRef)(null);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)();
  let { thumbProps, inputProps, labelProps, isDragging, isFocused, isDisabled } = (0, $47b897dc8cdb026b$export$8d15029008292ae)({
    ...props,
    index,
    trackRef,
    inputRef,
    label
  }, state);
  let { focusProps, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({});
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-SliderThumb",
    values: {
      state,
      isHovered,
      isDragging,
      isFocused,
      isFocusVisible,
      isDisabled
    }
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react49.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(DOMProps, thumbProps, hoverProps),
    ...renderProps,
    ref,
    style: {
      ...thumbProps.style,
      ...renderProps.style
    },
    "data-hovered": isHovered || void 0,
    "data-dragging": isDragging || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-disabled": isDisabled || void 0
  }, (0, import_react49.default).createElement((0, $5c3e21d68f1c4674$export$439d29a4e110a164), null, (0, import_react49.default).createElement("input", {
    ref: inputRef,
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(inputProps, focusProps)
  })), (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef
        }
      ]
    ]
  }, renderProps.children));
}
var $6f909507e6374d18$export$2c1b491743890dec = (0, import_react49.forwardRef)($6f909507e6374d18$var$SliderThumb);
var $8e59e948500a8fe1$export$8699e3b644d5a28a = (0, import_react49.createContext)(null);
function $8e59e948500a8fe1$var$Switch(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $8e59e948500a8fe1$export$8699e3b644d5a28a);
  let state = (0, $3017fa7ffdddec74$export$8042c6c013fd5226)(props);
  let { inputProps, isSelected, isDisabled, isReadOnly, isPressed: isPressedKeyboard } = (0, $b418ec0c85c52f27$export$d853f7095ae95f88)({
    ...props,
    // ReactNode type doesn't allow function children.
    children: typeof props.children === "function" ? true : props.children
  }, state, ref);
  let { isFocused, isFocusVisible, focusProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let isInteractionDisabled = props.isDisabled || props.isReadOnly;
  let [isPressed, setPressed] = (0, import_react49.useState)(false);
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    isDisabled: isInteractionDisabled,
    onPressStart(e) {
      if (e.pointerType !== "keyboard")
        setPressed(true);
    },
    onPressEnd(e) {
      if (e.pointerType !== "keyboard")
        setPressed(false);
    }
  });
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    isDisabled: isInteractionDisabled
  });
  let pressed = isInteractionDisabled ? false : isPressed || isPressedKeyboard;
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-Switch",
    values: {
      isSelected,
      isPressed: pressed,
      isHovered,
      isFocused,
      isFocusVisible,
      isDisabled,
      isReadOnly,
      state
    }
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react49.default).createElement("label", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(DOMProps, pressProps, hoverProps, renderProps),
    slot: props.slot,
    "data-selected": isSelected || void 0,
    "data-pressed": pressed || void 0,
    "data-hovered": isHovered || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-disabled": isDisabled || void 0,
    "data-readonly": isReadOnly || void 0
  }, (0, import_react49.default).createElement((0, $5c3e21d68f1c4674$export$439d29a4e110a164), {
    elementType: "span"
  }, (0, import_react49.default).createElement("input", {
    ...inputProps,
    ...focusProps,
    ref
  })), renderProps.children);
}
var $8e59e948500a8fe1$export$b5d5cf8927ab7262 = (0, import_react49.forwardRef)($8e59e948500a8fe1$var$Switch);
var $1910c06f0ca9905e$var$TableCollection = class extends (0, $7135fc7d473fd974$export$408d25a4e12db025) {
  addNode(node) {
    super.addNode(node);
    this.columnsDirty || (this.columnsDirty = node.type === "column");
    if (node.type === "tableheader")
      this.head = node;
    if (node.type === "tablebody")
      this.body = node;
  }
  commit(firstKey, lastKey) {
    this.updateColumns();
    super.commit(firstKey, lastKey);
  }
  updateColumns() {
    if (!this.columnsDirty)
      return;
    this.rowHeaderColumnKeys = /* @__PURE__ */ new Set();
    this.columns = [];
    let columnKeyMap = /* @__PURE__ */ new Map();
    let visit = (node) => {
      switch (node.type) {
        case "column":
          columnKeyMap.set(node.key, node);
          if (!node.hasChildNodes) {
            node.index = this.columns.length;
            this.columns.push(node);
            if (node.props.isRowHeader)
              this.rowHeaderColumnKeys.add(node.key);
          }
          break;
      }
      for (let child of this.getChildren(node.key))
        visit(child);
    };
    for (let node of this.getChildren(this.head.key))
      visit(node);
    this.headerRows = (0, $788781baa30117fa$export$7c127db850d4e81e)(columnKeyMap, this.columns);
    this.columnsDirty = false;
    if (this.rowHeaderColumnKeys.size === 0 && this.columns.length > 0)
      throw new Error("A table must have at least one Column with the isRowHeader prop set to true");
  }
  get columnCount() {
    return this.columns.length;
  }
  get rows() {
    return [
      ...this.getChildren(this.body.key)
    ];
  }
  *[Symbol.iterator]() {
    yield* this.getChildren(this.body.key);
  }
  get size() {
    return [
      ...this.getChildren(this.body.key)
    ].length;
  }
  getFirstKey() {
    var _;
    return (_ = [
      ...this.getChildren(this.body.key)
    ][0]) === null || _ === void 0 ? void 0 : _.key;
  }
  getLastKey() {
    var _rows_;
    let rows = [
      ...this.getChildren(this.body.key)
    ];
    return (_rows_ = rows[rows.length - 1]) === null || _rows_ === void 0 ? void 0 : _rows_.key;
  }
  getKeyAfter(key) {
    let node = this.getItem(key);
    var _node_nextKey;
    if ((node === null || node === void 0 ? void 0 : node.type) === "column")
      return (_node_nextKey = node.nextKey) !== null && _node_nextKey !== void 0 ? _node_nextKey : null;
    return super.getKeyAfter(key);
  }
  getKeyBefore(key) {
    var _this_getItem;
    let node = this.getItem(key);
    var _node_prevKey;
    if ((node === null || node === void 0 ? void 0 : node.type) === "column")
      return (_node_prevKey = node.prevKey) !== null && _node_prevKey !== void 0 ? _node_prevKey : null;
    let k = super.getKeyBefore(key);
    if (k != null && ((_this_getItem = this.getItem(k)) === null || _this_getItem === void 0 ? void 0 : _this_getItem.type) === "tablebody")
      return null;
    return k;
  }
  getChildren(key) {
    if (!this.getItem(key))
      for (let row of this.headerRows) {
        if (row.key === key)
          return row.childNodes;
      }
    return super.getChildren(key);
  }
  clone() {
    let collection = super.clone();
    collection.headerRows = this.headerRows;
    collection.columns = this.columns;
    collection.rowHeaderColumnKeys = this.rowHeaderColumnKeys;
    collection.head = this.head;
    collection.body = this.body;
    return collection;
  }
  getTextValue(key) {
    let row = this.getItem(key);
    if (!row)
      return "";
    if (row.textValue)
      return row.textValue;
    let rowHeaderColumnKeys = this.rowHeaderColumnKeys;
    let text = [];
    for (let cell of this.getChildren(key)) {
      let column = this.columns[cell.index];
      if (rowHeaderColumnKeys.has(column.key) && cell.textValue)
        text.push(cell.textValue);
      if (text.length === rowHeaderColumnKeys.size)
        break;
    }
    return text.join(" ");
  }
  constructor(...args) {
    super(...args);
    this.headerRows = [];
    this.columns = [];
    this.rowHeaderColumnKeys = /* @__PURE__ */ new Set();
    this.head = new (0, $7135fc7d473fd974$export$f5d856d854e74713)("tableheader", -1);
    this.body = new (0, $7135fc7d473fd974$export$f5d856d854e74713)("tablebody", -2);
    this.columnsDirty = true;
  }
};
var $1910c06f0ca9905e$var$ResizableTableContainerContext = (0, import_react49.createContext)(null);
function $1910c06f0ca9905e$var$ResizableTableContainer(props, ref) {
  let objectRef = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let [width, setWidth] = (0, import_react49.useState)(0);
  (0, $9daab02d461809db$export$683480f191c0e3ea)({
    ref: objectRef,
    onResize() {
      var _objectRef_current;
      setWidth((_objectRef_current = objectRef.current) === null || _objectRef_current === void 0 ? void 0 : _objectRef_current.clientWidth);
    }
  });
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    var _objectRef_current;
    setWidth((_objectRef_current = objectRef.current) === null || _objectRef_current === void 0 ? void 0 : _objectRef_current.clientWidth);
  }, [
    objectRef
  ]);
  let ctx = (0, import_react49.useMemo)(() => ({
    tableWidth: width,
    useTableColumnResizeState: $292bc4e09cd0eb62$export$cb895dcf85db1319,
    onResizeStart: props.onResizeStart,
    onResize: props.onResize,
    onResizeEnd: props.onResizeEnd
  }), [
    width,
    props.onResizeStart,
    props.onResize,
    props.onResizeEnd
  ]);
  return (0, import_react49.default).createElement("div", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ref: objectRef,
    className: props.className || "react-aria-ResizableTableContainer",
    style: props.style
  }, (0, import_react49.default).createElement($1910c06f0ca9905e$var$ResizableTableContainerContext.Provider, {
    value: ctx
  }, props.children));
}
var $1910c06f0ca9905e$export$7063e69b8a954175 = (0, import_react49.forwardRef)($1910c06f0ca9905e$var$ResizableTableContainer);
var $1910c06f0ca9905e$export$93e4b0b2cc49b648 = (0, import_react49.createContext)(null);
var $1910c06f0ca9905e$var$InternalTableContext = (0, import_react49.createContext)(null);
function $1910c06f0ca9905e$var$Table(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $1910c06f0ca9905e$export$93e4b0b2cc49b648);
  let initialCollection = (0, import_react49.useMemo)(() => new $1910c06f0ca9905e$var$TableCollection(), []);
  let { portal, collection } = (0, $7135fc7d473fd974$export$6cd28814d92fa9c9)(props, initialCollection);
  let state = (0, $4a0dd036d492cee4$export$907bcc6c48325fd6)({
    ...props,
    collection,
    children: void 0
  });
  let { gridProps } = (0, $6e31608fbba75bab$export$25bceaac3c7e4dc7)(props, state, ref);
  let { dragAndDropHooks } = props;
  let selectionManager = state.selectionManager;
  let isListDraggable = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDraggableCollectionState);
  let isListDroppable = !!(dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDroppableCollectionState);
  let dragHooksProvided = (0, import_react49.useRef)(isListDraggable);
  let dropHooksProvided = (0, import_react49.useRef)(isListDroppable);
  (0, import_react49.useEffect)(() => {
    if (dragHooksProvided.current !== isListDraggable)
      console.warn("Drag hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.");
    if (dropHooksProvided.current !== isListDroppable)
      console.warn("Drop hooks were provided during one render, but not another. This should be avoided as it may produce unexpected behavior.");
  }, [
    isListDraggable,
    isListDroppable
  ]);
  let dragState = void 0;
  let dropState = void 0;
  let droppableCollection = void 0;
  let isRootDropTarget = false;
  let dragPreview = null;
  let preview = (0, import_react49.useRef)(null);
  if (isListDraggable && dragAndDropHooks) {
    dragState = dragAndDropHooks.useDraggableCollectionState({
      collection,
      selectionManager,
      preview: dragAndDropHooks.renderDragPreview ? preview : void 0
    });
    dragAndDropHooks.useDraggableCollection({}, dragState, ref);
    let DragPreview = dragAndDropHooks.DragPreview;
    dragPreview = dragAndDropHooks.renderDragPreview ? (0, import_react49.default).createElement(DragPreview, {
      ref: preview
    }, dragAndDropHooks.renderDragPreview) : null;
  }
  if (isListDroppable && dragAndDropHooks) {
    dropState = dragAndDropHooks.useDroppableCollectionState({
      collection,
      selectionManager
    });
    let keyboardDelegate = new (0, $2a25aae57d74318e$export$a05409b8bb224a5a)(collection, selectionManager.disabledBehavior === "selection" ? /* @__PURE__ */ new Set() : selectionManager.disabledKeys, ref);
    let dropTargetDelegate = dragAndDropHooks.dropTargetDelegate || new dragAndDropHooks.ListDropTargetDelegate(collection, ref);
    droppableCollection = dragAndDropHooks.useDroppableCollection({
      keyboardDelegate,
      dropTargetDelegate
    }, dropState, ref);
    isRootDropTarget = dropState.isDropTarget({
      type: "root"
    });
  }
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    className: props.className,
    style: props.style,
    defaultClassName: "react-aria-Table",
    values: {
      isDropTarget: isRootDropTarget,
      isFocused,
      isFocusVisible,
      state
    }
  });
  let { selectionBehavior, selectionMode, disallowEmptySelection } = state.selectionManager;
  let ctx = (0, import_react49.useMemo)(() => ({
    selectionBehavior: selectionMode === "none" ? null : selectionBehavior,
    selectionMode,
    disallowEmptySelection,
    allowsDragging: isListDraggable
  }), [
    selectionBehavior,
    selectionMode,
    disallowEmptySelection,
    isListDraggable
  ]);
  let style = renderProps.style;
  let tableContainerContext = (0, import_react49.useContext)($1910c06f0ca9905e$var$ResizableTableContainerContext);
  let layoutState = void 0;
  if (tableContainerContext) {
    layoutState = tableContainerContext.useTableColumnResizeState({
      tableWidth: tableContainerContext.tableWidth
    }, state);
    style = {
      ...style,
      tableLayout: "fixed",
      width: "fit-content"
    };
  }
  return (0, import_react49.default).createElement((0, import_react49.default).Fragment, null, (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        $1910c06f0ca9905e$var$InternalTableContext,
        {
          state,
          dragAndDropHooks,
          dragState,
          dropState,
          layoutState
        }
      ],
      [
        (0, $d8f176866e6dc039$export$f55761759794cf55),
        {
          render: $1910c06f0ca9905e$var$TableDropIndicatorWrapper
        }
      ]
    ]
  }, (0, import_react49.default).createElement((0, $9bf71ea28793e738$export$20e40289641fbbb6), null, (0, import_react49.default).createElement("table", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...renderProps,
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(gridProps, focusProps, droppableCollection === null || droppableCollection === void 0 ? void 0 : droppableCollection.collectionProps),
    style,
    ref,
    slot: props.slot,
    "data-drop-target": isRootDropTarget || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0
  }, (0, import_react49.default).createElement($1910c06f0ca9905e$var$TableHeaderRowGroup, {
    collection
  }), (0, import_react49.default).createElement($1910c06f0ca9905e$var$TableBodyRowGroup, {
    collection,
    isDroppable: isListDroppable
  }))), dragPreview), (0, import_react49.default).createElement($1910c06f0ca9905e$var$TableOptionsContext.Provider, {
    value: ctx
  }, portal));
}
var $1910c06f0ca9905e$export$54ec01a60f47d33d = (0, import_react49.forwardRef)($1910c06f0ca9905e$var$Table);
var $1910c06f0ca9905e$var$TableOptionsContext = (0, import_react49.createContext)(null);
function $1910c06f0ca9905e$export$fddc468cd8cb4db9() {
  return (0, import_react49.useContext)($1910c06f0ca9905e$var$TableOptionsContext);
}
function $1910c06f0ca9905e$var$TableHeader(props, ref) {
  let children = (0, $7135fc7d473fd974$export$901dbff4e54a6dd0)({
    children: props.children,
    items: props.columns
  });
  let renderer = typeof props.children === "function" ? props.children : null;
  return (0, import_react49.default).createElement((0, $7135fc7d473fd974$export$4feb769f8ddf26c5).Provider, {
    value: renderer
  }, (0, import_react49.default).createElement("tableheader", {
    ref: (0, $7135fc7d473fd974$export$636783d3732b5559)(props, ref)
  }, children));
}
var $1910c06f0ca9905e$export$f850895b287ef28e = (0, import_react49.forwardRef)($1910c06f0ca9905e$var$TableHeader);
function $1910c06f0ca9905e$var$Column(props, ref) {
  let render = (0, import_react49.useContext)((0, $7135fc7d473fd974$export$4feb769f8ddf26c5));
  let childColumns;
  if (typeof render === "function")
    childColumns = render;
  else if (typeof props.children !== "function")
    childColumns = props.children;
  let children = (0, $7135fc7d473fd974$export$901dbff4e54a6dd0)({
    children: props.title || props.childColumns ? childColumns : null,
    items: props.childColumns
  });
  var _props_title;
  return (0, import_react49.default).createElement("column", {
    ref: (0, $7135fc7d473fd974$export$636783d3732b5559)(props, ref, (_props_title = props.title) !== null && _props_title !== void 0 ? _props_title : props.children)
  }, children);
}
var $1910c06f0ca9905e$export$816b5d811295e6bc = (0, import_react49.forwardRef)($1910c06f0ca9905e$var$Column);
function $1910c06f0ca9905e$var$TableBody(props, ref) {
  let children = (0, $7135fc7d473fd974$export$901dbff4e54a6dd0)(props);
  return (0, import_react49.default).createElement("tablebody", {
    ref: (0, $7135fc7d473fd974$export$636783d3732b5559)(props, ref)
  }, children);
}
var $1910c06f0ca9905e$export$76ccd210b9029917 = (0, import_react49.forwardRef)($1910c06f0ca9905e$var$TableBody);
function $1910c06f0ca9905e$var$Row(props, ref) {
  let children = (0, $7135fc7d473fd974$export$901dbff4e54a6dd0)({
    children: props.children,
    items: props.columns,
    idScope: props.id
  });
  let ctx = (0, import_react49.useMemo)(() => ({
    idScope: props.id
  }), [
    props.id
  ]);
  return (
    // @ts-ignore
    (0, import_react49.default).createElement("item", {
      ref: (0, $7135fc7d473fd974$export$636783d3732b5559)(props, ref)
    }, (0, import_react49.default).createElement((0, $7135fc7d473fd974$export$db36075d98ba73d3).Provider, {
      value: ctx
    }, children))
  );
}
var $1910c06f0ca9905e$export$b59bdbef9ce70de2 = (0, import_react49.forwardRef)($1910c06f0ca9905e$var$Row);
function $1910c06f0ca9905e$var$Cell(props, ref) {
  return (0, import_react49.default).createElement("cell", {
    ref: (0, $7135fc7d473fd974$export$636783d3732b5559)(props, ref, props.children)
  });
}
var $1910c06f0ca9905e$export$f6f0c3fe4ec306ea = (0, import_react49.forwardRef)($1910c06f0ca9905e$var$Cell);
function $1910c06f0ca9905e$var$TableHeaderRowGroup({ collection }) {
  let headerRows = (0, $7135fc7d473fd974$export$727c8fc270210f13)({
    items: collection.headerRows,
    children: (0, import_react49.useCallback)((item) => {
      switch (item.type) {
        case "headerrow":
          return (0, import_react49.default).createElement($1910c06f0ca9905e$var$TableHeaderRow, {
            item
          });
        default:
          throw new Error("Unsupported node type in TableHeader: " + item.type);
      }
    }, [])
  });
  let { rowGroupProps } = (0, $0047e6c294ea075f$export$6fb1613bd7b28198)();
  var _collection_head_props_className;
  return (0, import_react49.default).createElement("thead", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(collection.head.props),
    ...rowGroupProps,
    ref: collection.head.props.ref,
    className: (_collection_head_props_className = collection.head.props.className) !== null && _collection_head_props_className !== void 0 ? _collection_head_props_className : "react-aria-TableHeader",
    style: collection.head.props.style
  }, headerRows);
}
function $1910c06f0ca9905e$var$TableBodyRowGroup({ collection, isDroppable }) {
  let bodyRows = (0, $7135fc7d473fd974$export$727c8fc270210f13)({
    items: collection.rows,
    children: (0, import_react49.useCallback)((item) => {
      switch (item.type) {
        case "item":
          return (0, import_react49.default).createElement($1910c06f0ca9905e$var$TableRow, {
            item
          });
        default:
          throw new Error("Unsupported node type in TableBody: " + item.type);
      }
    }, [])
  });
  let props = collection.body.props;
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    id: void 0,
    children: void 0,
    defaultClassName: "react-aria-TableBody",
    values: {
      isEmpty: collection.size === 0
    }
  });
  let emptyState;
  if (collection.size === 0 && props.renderEmptyState)
    emptyState = (0, import_react49.default).createElement("tr", {
      role: "row"
    }, (0, import_react49.default).createElement("td", {
      role: "gridcell",
      colSpan: collection.columnCount
    }, props.renderEmptyState()));
  let { rowGroupProps } = (0, $0047e6c294ea075f$export$6fb1613bd7b28198)();
  return (0, import_react49.default).createElement("tbody", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props), rowGroupProps),
    ...renderProps,
    ref: collection.body.props.ref,
    "data-empty": collection.size === 0 || void 0
  }, isDroppable && (0, import_react49.default).createElement($1910c06f0ca9905e$var$RootDropIndicator, null), bodyRows, emptyState);
}
function $1910c06f0ca9905e$var$TableHeaderRow({ item }) {
  let ref = (0, import_react49.useRef)(null);
  let { state } = (0, import_react49.useContext)($1910c06f0ca9905e$var$InternalTableContext);
  let { rowProps } = (0, $f917ee10f4c32dab$export$1b95a7d2d517b841)({
    node: item
  }, state, ref);
  let { checkboxProps } = (0, $2a795c53a101c542$export$1003db6a7e384b99)(state);
  let cells = (0, $7135fc7d473fd974$export$727c8fc270210f13)({
    items: state.collection.getChildren(item.key),
    children: (item2) => {
      switch (item2.type) {
        case "column":
          return (0, import_react49.default).createElement($1910c06f0ca9905e$var$TableColumnHeader, {
            column: item2
          });
        default:
          throw new Error("Unsupported node type in Row: " + item2.type);
      }
    }
  });
  return (0, import_react49.default).createElement("tr", {
    ...rowProps,
    ref
  }, (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $bc237834342dbd75$export$b085522c77523c51),
        {
          slots: {
            selection: checkboxProps
          }
        }
      ]
    ]
  }, cells));
}
var $1910c06f0ca9905e$var$ColumnResizerContext = (0, import_react49.createContext)(null);
function $1910c06f0ca9905e$var$TableColumnHeader({ column }) {
  var _state_sortDescriptor;
  let ref = (0, $df56164dff5785e2$export$4338b53315abf666)(column.props.ref);
  let { state } = (0, import_react49.useContext)($1910c06f0ca9905e$var$InternalTableContext);
  let { columnHeaderProps } = (0, $f329116d8ad0aba0$export$9514819a8c81e960)({
    node: column
  }, state, ref);
  let { isFocused, isFocusVisible, focusProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({});
  let { layoutState } = (0, import_react49.useContext)($1910c06f0ca9905e$var$InternalTableContext);
  let isResizing = false;
  if (layoutState)
    isResizing = layoutState.resizingColumn === column.key;
  else {
    for (let prop in [
      "width",
      "defaultWidth",
      "minWidth",
      "maxWidth"
    ])
      if (prop in column.props)
        console.warn(`The ${prop} prop on a <Column> only applies when a <Table> is wrapped in a <ResizableTableContainer>. If you aren't using column resizing, you can set the width of a column with CSS.`);
  }
  let props = column.props;
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    id: void 0,
    children: column.rendered,
    defaultClassName: "react-aria-Column",
    values: {
      isHovered,
      isFocused,
      isFocusVisible,
      allowsSorting: column.props.allowsSorting,
      sortDirection: ((_state_sortDescriptor = state.sortDescriptor) === null || _state_sortDescriptor === void 0 ? void 0 : _state_sortDescriptor.column) === column.key ? state.sortDescriptor.direction : void 0,
      isResizing,
      startResize: () => {
        if (layoutState) {
          layoutState.startResize(column.key);
          state.setKeyboardNavigationDisabled(true);
        } else
          throw new Error("Wrap your <Table> in a <ResizableTableContainer> to enable column resizing");
      },
      sort: (direction) => {
        state.sort(column.key, direction);
      }
    }
  });
  let style = renderProps.style;
  if (layoutState)
    style = {
      ...style,
      width: layoutState.getColumnWidth(column.key)
    };
  return (0, import_react49.default).createElement("th", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props), columnHeaderProps, focusProps, hoverProps),
    ...renderProps,
    style,
    colSpan: column.colspan,
    ref,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-resizing": isResizing || void 0
  }, (0, import_react49.default).createElement($1910c06f0ca9905e$var$ColumnResizerContext.Provider, {
    value: {
      column,
      triggerRef: ref
    }
  }, renderProps.children));
}
function $1910c06f0ca9905e$var$ColumnResizer(props, ref) {
  let { layoutState } = (0, import_react49.useContext)($1910c06f0ca9905e$var$InternalTableContext);
  if (!layoutState)
    throw new Error("Wrap your <Table> in a <ResizableTableContainer> to enable column resizing");
  let { onResizeStart, onResize, onResizeEnd } = (0, import_react49.useContext)($1910c06f0ca9905e$var$ResizableTableContainerContext);
  let { column, triggerRef } = (0, import_react49.useContext)($1910c06f0ca9905e$var$ColumnResizerContext);
  let inputRef = (0, import_react49.useRef)(null);
  let { resizerProps, inputProps, isResizing } = (0, $e91ef4e5004e3774$export$52994e973806c219)({
    column,
    // TODO: translate
    "aria-label": props["aria-label"] || "Resizer",
    onResizeStart,
    onResize,
    onResizeEnd,
    triggerRef
  }, layoutState, inputRef);
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({});
  let isEResizable = layoutState.getColumnMinWidth(column.key) >= layoutState.getColumnWidth(column.key);
  let isWResizable = layoutState.getColumnMaxWidth(column.key) <= layoutState.getColumnWidth(column.key);
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();
  let resizableDirection = "both";
  if (isEResizable)
    resizableDirection = direction === "rtl" ? "right" : "left";
  else if (isWResizable)
    resizableDirection = direction === "rtl" ? "left" : "right";
  else
    resizableDirection = "both";
  let objectRef = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let [cursor, setCursor] = (0, import_react49.useState)("");
  (0, import_react49.useEffect)(() => {
    let style = window.getComputedStyle(objectRef.current);
    setCursor(style.cursor);
  }, [
    objectRef,
    resizableDirection
  ]);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-ColumnResizer",
    values: {
      isFocused,
      isFocusVisible,
      isResizing,
      isHovered,
      resizableDirection
    }
  });
  let [isMouseDown, setMouseDown] = (0, import_react49.useState)(false);
  let onPointerDown = (e) => {
    if (e.pointerType === "mouse")
      setMouseDown(true);
  };
  if (!isResizing && isMouseDown)
    setMouseDown(false);
  return (0, import_react49.default).createElement("div", {
    ref: objectRef,
    role: "presentation",
    ...renderProps,
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(resizerProps, {
      onPointerDown
    }),
    "data-hovered": isHovered || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-resizing": isResizing || void 0,
    "data-resizable-direction": resizableDirection
  }, (0, import_react49.default).createElement("input", {
    ref: inputRef,
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(inputProps, focusProps, hoverProps)
  }), isResizing && isMouseDown && (0, import_react_dom3.default).createPortal((0, import_react49.default).createElement("div", {
    style: {
      position: "fixed",
      top: 0,
      left: 0,
      bottom: 0,
      right: 0,
      cursor
    }
  }), document.body));
}
var $1910c06f0ca9905e$export$ee689e97a7664bfd = (0, import_react49.forwardRef)($1910c06f0ca9905e$var$ColumnResizer);
function $1910c06f0ca9905e$var$TableRow({ item }) {
  let ref = (0, $df56164dff5785e2$export$4338b53315abf666)(item.props.ref);
  let { state, dragAndDropHooks, dragState, dropState } = (0, import_react49.useContext)($1910c06f0ca9905e$var$InternalTableContext);
  let { rowProps, ...states } = (0, $b2db214c022798eb$export$7f2f6ae19e707aa5)({
    node: item,
    shouldSelectOnPressUp: !!dragState
  }, state, ref);
  let { isFocused, isFocusVisible, focusProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    isDisabled: !states.allowsSelection && !states.hasAction
  });
  let { checkboxProps } = (0, $2a795c53a101c542$export$16ea7f650bd7c1bb)({
    key: item.key
  }, state);
  let draggableItem = void 0;
  if (dragState && dragAndDropHooks)
    draggableItem = dragAndDropHooks.useDraggableItem({
      key: item.key,
      hasDragButton: true
    }, dragState);
  let dropIndicator = void 0;
  let dropIndicatorRef = (0, import_react49.useRef)(null);
  let { visuallyHiddenProps } = (0, $5c3e21d68f1c4674$export$a966af930f325cab)();
  if (dropState && dragAndDropHooks)
    dropIndicator = dragAndDropHooks.useDropIndicator({
      target: {
        type: "item",
        key: item.key,
        dropPosition: "on"
      }
    }, dropState, dropIndicatorRef);
  let renderDropIndicator = (dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.renderDropIndicator) || ((target) => (0, import_react49.default).createElement((0, $d8f176866e6dc039$export$62ed72bc21f6b8a6), {
    target
  }));
  let dragButtonRef = (0, import_react49.useRef)(null);
  (0, import_react49.useEffect)(() => {
    if (dragState && !dragButtonRef.current)
      console.warn('Draggable items in a Table must contain a <Button slot="drag"> element so that keyboard and screen reader users can drag them.');
  }, []);
  let props = item.props;
  let isDragging = dragState && dragState.isDragging(item.key);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    id: void 0,
    defaultClassName: "react-aria-Row",
    values: {
      ...states,
      isHovered,
      isFocused,
      isFocusVisible,
      selectionMode: state.selectionManager.selectionMode,
      selectionBehavior: state.selectionManager.selectionBehavior,
      isDragging,
      isDropTarget: dropIndicator === null || dropIndicator === void 0 ? void 0 : dropIndicator.isDropTarget
    }
  });
  let cells = (0, $7135fc7d473fd974$export$727c8fc270210f13)({
    items: state.collection.getChildren(item.key),
    children: (item2) => {
      switch (item2.type) {
        case "cell":
          return (0, import_react49.default).createElement($1910c06f0ca9905e$var$TableCell, {
            cell: item2
          });
        default:
          throw new Error("Unsupported node type in Row: " + item2.type);
      }
    }
  });
  return (0, import_react49.default).createElement((0, import_react49.default).Fragment, null, (dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDropIndicator) && renderDropIndicator({
    type: "item",
    key: item.key,
    dropPosition: "before"
  }), dropIndicator && !dropIndicator.isHidden && (0, import_react49.default).createElement("tr", {
    role: "row",
    style: {
      height: 0
    }
  }, (0, import_react49.default).createElement("td", {
    role: "gridcell",
    colSpan: state.collection.columnCount,
    style: {
      padding: 0
    }
  }, (0, import_react49.default).createElement("div", {
    role: "button",
    ...visuallyHiddenProps,
    ...dropIndicator.dropIndicatorProps,
    ref: dropIndicatorRef
  }))), (0, import_react49.default).createElement("tr", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props), rowProps, focusProps, hoverProps, draggableItem === null || draggableItem === void 0 ? void 0 : draggableItem.dragProps),
    ...renderProps,
    ref,
    "data-hovered": isHovered || void 0,
    "data-focused": states.isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-pressed": states.isPressed || void 0,
    "data-dragging": isDragging || void 0,
    "data-drop-target": (dropIndicator === null || dropIndicator === void 0 ? void 0 : dropIndicator.isDropTarget) || void 0
  }, (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $bc237834342dbd75$export$b085522c77523c51),
        {
          slots: {
            selection: checkboxProps
          }
        }
      ],
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          slots: {
            [(0, $64fa3d84918910a7$export$8e0ef2c5844bfb6b)]: {},
            drag: {
              ...draggableItem === null || draggableItem === void 0 ? void 0 : draggableItem.dragButtonProps,
              ref: dragButtonRef,
              style: {
                pointerEvents: "none"
              }
            }
          }
        }
      ]
    ]
  }, cells)), (dragAndDropHooks === null || dragAndDropHooks === void 0 ? void 0 : dragAndDropHooks.useDropIndicator) && state.collection.getKeyAfter(item.key) == null && renderDropIndicator({
    type: "item",
    key: item.key,
    dropPosition: "after"
  }));
}
function $1910c06f0ca9905e$var$TableCell({ cell }) {
  let ref = (0, $df56164dff5785e2$export$4338b53315abf666)(cell.props.ref);
  let { state, dragState } = (0, import_react49.useContext)($1910c06f0ca9905e$var$InternalTableContext);
  cell.column = state.collection.columns[cell.index];
  let { gridCellProps, isPressed } = (0, $7713593715703b24$export$49571c903d73624c)({
    node: cell,
    shouldSelectOnPressUp: !!dragState
  }, state, ref);
  let { isFocused, isFocusVisible, focusProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({});
  let props = cell.props;
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    id: void 0,
    defaultClassName: "react-aria-Cell",
    values: {
      isFocused,
      isFocusVisible,
      isPressed,
      isHovered
    }
  });
  return (0, import_react49.default).createElement("td", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props), gridCellProps, focusProps, hoverProps),
    ...renderProps,
    ref,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-pressed": isPressed || void 0
  }, renderProps.children);
}
function $1910c06f0ca9905e$var$TableDropIndicatorWrapper(props, ref) {
  ref = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let { dragAndDropHooks, dropState } = (0, import_react49.useContext)($1910c06f0ca9905e$var$InternalTableContext);
  let buttonRef = (0, import_react49.useRef)(null);
  let { dropIndicatorProps, isHidden, isDropTarget } = dragAndDropHooks.useDropIndicator(props, dropState, buttonRef);
  if (isHidden)
    return null;
  return (0, import_react49.default).createElement($1910c06f0ca9905e$var$TableDropIndicatorForwardRef, {
    ...props,
    dropIndicatorProps,
    isDropTarget,
    buttonRef,
    ref
  });
}
function $1910c06f0ca9905e$var$TableDropIndicator(props, ref) {
  let { dropIndicatorProps, isDropTarget, buttonRef, ...otherProps } = props;
  let { state } = (0, import_react49.useContext)($1910c06f0ca9905e$var$InternalTableContext);
  let { visuallyHiddenProps } = (0, $5c3e21d68f1c4674$export$a966af930f325cab)();
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...otherProps,
    defaultClassName: "react-aria-DropIndicator",
    values: {
      isDropTarget
    }
  });
  return (0, import_react49.default).createElement("tr", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...renderProps,
    role: "row",
    ref,
    "data-drop-target": isDropTarget || void 0
  }, (0, import_react49.default).createElement("td", {
    role: "gridcell",
    colSpan: state.collection.columnCount,
    style: {
      padding: 0
    }
  }, (0, import_react49.default).createElement("div", {
    ...visuallyHiddenProps,
    role: "button",
    ...dropIndicatorProps,
    ref: buttonRef
  })));
}
var $1910c06f0ca9905e$var$TableDropIndicatorForwardRef = (0, import_react49.forwardRef)($1910c06f0ca9905e$var$TableDropIndicator);
function $1910c06f0ca9905e$var$RootDropIndicator() {
  let { state, dragAndDropHooks, dropState } = (0, import_react49.useContext)($1910c06f0ca9905e$var$InternalTableContext);
  let ref = (0, import_react49.useRef)(null);
  let { dropIndicatorProps } = dragAndDropHooks.useDropIndicator({
    target: {
      type: "root"
    }
  }, dropState, ref);
  let isDropTarget = dropState.isDropTarget({
    type: "root"
  });
  let { visuallyHiddenProps } = (0, $5c3e21d68f1c4674$export$a966af930f325cab)();
  if (!isDropTarget && dropIndicatorProps["aria-hidden"])
    return null;
  return (0, import_react49.default).createElement("tr", {
    role: "row",
    "aria-hidden": dropIndicatorProps["aria-hidden"],
    style: {
      height: 0
    }
  }, (0, import_react49.default).createElement("td", {
    role: "gridcell",
    colSpan: state.collection.columnCount,
    style: {
      padding: 0
    }
  }, (0, import_react49.default).createElement("div", {
    role: "button",
    ...visuallyHiddenProps,
    ...dropIndicatorProps,
    ref
  })));
}
var $5e8ad37a45e1c704$export$cfa7aa87c26e7d1f = (0, import_react49.createContext)(null);
var $5e8ad37a45e1c704$var$InternalTabsContext = (0, import_react49.createContext)(null);
function $5e8ad37a45e1c704$var$Tabs(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $5e8ad37a45e1c704$export$cfa7aa87c26e7d1f);
  let { orientation = "horizontal", keyboardActivation = "automatic" } = props;
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)({
    within: true
  });
  let { collection, document: document2 } = (0, $7135fc7d473fd974$export$7cd71aa5ddd6dc4e)();
  let state = (0, $76f919a04c5a7d14$export$4ba071daf4e486)({
    ...props,
    collection,
    children: void 0
  });
  let values = (0, import_react49.useMemo)(() => ({
    orientation,
    isFocusWithin: isFocused,
    isFocusVisible,
    state: {
      disabledKeys: state.disabledKeys,
      selectedKey: state.selectedKey,
      setSelectedKey: state.setSelectedKey,
      isDisabled: state.isDisabled
    }
  }), [
    orientation,
    isFocused,
    isFocusVisible,
    state.disabledKeys,
    state.selectedKey,
    state.setSelectedKey,
    state.isDisabled
  ]);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-Tabs",
    values
  });
  return (0, import_react49.default).createElement("div", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...focusProps,
    ...renderProps,
    ref,
    slot: props.slot,
    "data-orientation": orientation,
    "data-focus-visible": isFocusVisible || void 0
  }, (0, import_react49.default).createElement($5e8ad37a45e1c704$var$InternalTabsContext.Provider, {
    value: {
      state,
      document: document2,
      orientation,
      keyboardActivation
    }
  }, renderProps.children));
}
var $5e8ad37a45e1c704$export$b2539bed5023c21c = (0, import_react49.forwardRef)($5e8ad37a45e1c704$var$Tabs);
function $5e8ad37a45e1c704$var$TabList(props, ref) {
  let { state, document: document2, orientation, keyboardActivation } = (0, import_react49.useContext)($5e8ad37a45e1c704$var$InternalTabsContext);
  let objectRef = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let portal = (0, $7135fc7d473fd974$export$ad42d5efb4461b31)(props, document2);
  let { tabListProps } = (0, $58d314389b21fa3f$export$773e389e644c5874)({
    ...props,
    orientation,
    keyboardActivation
  }, state, objectRef);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    children: null,
    defaultClassName: "react-aria-TabList",
    values: {
      orientation,
      state
    }
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  return (0, import_react49.default).createElement((0, import_react49.default).Fragment, null, (0, import_react49.default).createElement("div", {
    ...DOMProps,
    ...tabListProps,
    ref: objectRef,
    ...renderProps
  }, [
    ...state.collection
  ].map((item) => (0, import_react49.default).createElement($5e8ad37a45e1c704$var$TabInner, {
    key: item.key,
    item,
    state
  }))), portal);
}
var $5e8ad37a45e1c704$export$e51a686c67fdaa2d = (0, import_react49.forwardRef)($5e8ad37a45e1c704$var$TabList);
function $5e8ad37a45e1c704$var$Tab(props, ref) {
  return (0, import_react49.default).createElement((0, $7135fc7d473fd974$export$6d08773d2e66f8f2), {
    ...props,
    ref
  });
}
var $5e8ad37a45e1c704$export$3e41faf802a29e71 = (0, import_react49.forwardRef)($5e8ad37a45e1c704$var$Tab);
function $5e8ad37a45e1c704$var$TabInner({ item, state }) {
  let { key } = item;
  let ref = (0, $df56164dff5785e2$export$4338b53315abf666)(item.props.ref);
  let { tabProps, isSelected, isDisabled, isPressed } = (0, $0175d55c2a017ebc$export$fdf4756d5b8ef90a)({
    key
  }, state, ref);
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    isDisabled
  });
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...item.props,
    children: item.rendered,
    defaultClassName: "react-aria-Tab",
    values: {
      isSelected,
      isDisabled,
      isFocused,
      isFocusVisible,
      isPressed,
      isHovered,
      state
    }
  });
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(item.props);
  delete DOMProps.id;
  return (0, import_react49.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(DOMProps, tabProps, focusProps, hoverProps, renderProps),
    ref,
    "data-focus-visible": isFocusVisible || void 0,
    "data-pressed": isPressed || void 0,
    "data-hovered": isHovered || void 0
  });
}
function $5e8ad37a45e1c704$var$TabPanel(props, forwardedRef) {
  const { state } = (0, import_react49.useContext)($5e8ad37a45e1c704$var$InternalTabsContext);
  let ref = (0, $df56164dff5785e2$export$4338b53315abf666)(forwardedRef);
  let { tabPanelProps } = (0, $34bce698202e07cb$export$fae0121b5afe572d)(props, state, ref);
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let isSelected = state.selectedKey === props.id;
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-TabPanel",
    values: {
      isFocused,
      isFocusVisible,
      isInert: !isSelected,
      state
    }
  });
  if (!isSelected && !props.shouldForceMount)
    return null;
  let DOMProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  delete DOMProps.id;
  let domProps = isSelected ? (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(DOMProps, tabPanelProps, focusProps, renderProps) : renderProps;
  return (0, import_react49.default).createElement("div", {
    ...domProps,
    ref,
    "data-focus-visible": isFocusVisible || void 0,
    // @ts-ignore
    inert: !isSelected ? "true" : void 0
  });
}
var $5e8ad37a45e1c704$export$3d96ec278d3efce4 = (0, import_react49.forwardRef)($5e8ad37a45e1c704$var$TabPanel);
var $eaf9e70818b436db$export$5b07b5dd2cbd96e3 = (0, import_react49.createContext)(null);
var $eaf9e70818b436db$var$InternalTagGroupContext = (0, import_react49.createContext)(null);
function $eaf9e70818b436db$var$TagGroup(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $eaf9e70818b436db$export$5b07b5dd2cbd96e3);
  let tagListRef = (0, import_react49.useRef)(null);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)();
  let { collection, document: document2 } = (0, $7135fc7d473fd974$export$7cd71aa5ddd6dc4e)();
  let state = (0, $e72dd72e1c76a225$export$2f645645f7bca764)({
    ...props,
    children: void 0,
    collection
  });
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props);
  let domPropOverrides = Object.fromEntries(Object.entries(domProps).map(([k]) => [
    k,
    void 0
  ]));
  let { gridProps, labelProps, descriptionProps, errorMessageProps } = (0, $d7323bca8d074eeb$export$4f8b5cda58b7e8ff)({
    ...props,
    ...domPropOverrides,
    label
  }, state, tagListRef);
  var _props_className;
  return (0, import_react49.default).createElement("div", {
    ...domProps,
    ref,
    slot: props.slot,
    className: (_props_className = props.className) !== null && _props_className !== void 0 ? _props_className : "react-aria-TagGroup",
    style: props.style
  }, (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          elementType: "span",
          ref: labelRef
        }
      ],
      [
        $eaf9e70818b436db$var$InternalTagGroupContext,
        {
          state,
          document: document2,
          gridProps,
          tagListRef
        }
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps,
            errorMessage: errorMessageProps
          }
        }
      ]
    ]
  }, props.children));
}
var $eaf9e70818b436db$export$67ea30858aaf75e3 = (0, import_react49.forwardRef)($eaf9e70818b436db$var$TagGroup);
function $eaf9e70818b436db$var$TagList(props, forwardedRef) {
  let { state, document: document2, gridProps, tagListRef } = (0, import_react49.useContext)($eaf9e70818b436db$var$InternalTagGroupContext);
  let portal = (0, $7135fc7d473fd974$export$ad42d5efb4461b31)(props, document2);
  let ref = (0, $5dc95899b306f630$export$c9058316764c140e)(tagListRef, forwardedRef);
  let children = (0, $7135fc7d473fd974$export$727c8fc270210f13)({
    items: state.collection,
    children: (item) => {
      switch (item.type) {
        case "item":
          return (0, import_react49.default).createElement($eaf9e70818b436db$var$TagItem, {
            item
          });
        default:
          throw new Error("Unsupported node type in TagList: " + item.type);
      }
    }
  });
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)();
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    className: props.className,
    style: props.style,
    defaultClassName: "react-aria-TagList",
    values: {
      isEmpty: state.collection.size === 0,
      isFocused,
      isFocusVisible
    }
  });
  return (0, import_react49.default).createElement((0, import_react49.default).Fragment, null, (0, import_react49.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(gridProps, focusProps),
    ...renderProps,
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ref,
    "data-empty": state.collection.size === 0 || void 0,
    "data-focused": isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0
  }, state.collection.size === 0 && props.renderEmptyState ? props.renderEmptyState() : children), portal);
}
var $eaf9e70818b436db$export$f9fef0f55402315b = (0, import_react49.forwardRef)($eaf9e70818b436db$var$TagList);
function $eaf9e70818b436db$var$Tag(props, ref) {
  return (0, import_react49.default).createElement((0, $7135fc7d473fd974$export$6d08773d2e66f8f2), {
    ...props,
    ref
  });
}
var $eaf9e70818b436db$export$3288d34c523a1192 = (0, import_react49.forwardRef)($eaf9e70818b436db$var$Tag);
function $eaf9e70818b436db$var$TagItem({ item }) {
  let { state } = (0, import_react49.useContext)($eaf9e70818b436db$var$InternalTagGroupContext);
  let ref = (0, $df56164dff5785e2$export$4338b53315abf666)(item.props.ref);
  let { focusProps, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)({
    within: true
  });
  let { rowProps, gridCellProps, removeButtonProps, ...states } = (0, $fc6126c82a4601f1$export$3f568fff7dff2f03)({
    item
  }, state, ref);
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({
    isDisabled: !states.allowsSelection
  });
  let props = item.props;
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    id: void 0,
    children: item.rendered,
    defaultClassName: "react-aria-Tag",
    values: {
      ...states,
      isFocusVisible,
      isHovered,
      selectionMode: state.selectionManager.selectionMode,
      selectionBehavior: state.selectionManager.selectionBehavior
    }
  });
  (0, import_react49.useEffect)(() => {
    if (!item.textValue)
      console.warn("A `textValue` prop is required for <Tag> elements with non-plain text children for accessibility.");
  }, [
    item.textValue
  ]);
  return (0, import_react49.default).createElement("div", {
    ref,
    ...renderProps,
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)((0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props), rowProps, focusProps, hoverProps),
    "data-hovered": isHovered || void 0,
    "data-focused": states.isFocused || void 0,
    "data-focus-visible": isFocusVisible || void 0,
    "data-pressed": states.isPressed || void 0,
    "data-allows-removing": states.allowsRemoving || void 0
  }, (0, import_react49.default).createElement("div", gridCellProps, (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $d2b4bc8c273e7be6$export$24d547caef80ccd1),
        {
          slots: {
            remove: removeButtonProps
          }
        }
      ]
    ]
  }, renderProps.children)));
}
var $216918bed6669f72$export$2dc6166a7e65358c = (0, import_react49.createContext)({});
function $216918bed6669f72$var$TextArea(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $216918bed6669f72$export$2dc6166a7e65358c);
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)({});
  let { isFocused, isFocusVisible, focusProps } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)({
    isTextInput: true,
    autoFocus: props.autoFocus
  });
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      isHovered,
      isFocused,
      isFocusVisible,
      isDisabled: props.disabled || false
    },
    defaultClassName: "react-aria-TextArea"
  });
  return (0, import_react49.default).createElement("textarea", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(props, focusProps, hoverProps),
    ...renderProps,
    ref,
    "data-hovered": isHovered || void 0,
    "data-focus-visible": isFocusVisible || void 0
  });
}
var $216918bed6669f72$export$f5c9f3c2c4054eec = (0, import_react49.forwardRef)($216918bed6669f72$var$TextArea);
var $bcdf0525bf22703d$export$2129e27b3ef0d483 = (0, import_react49.createContext)(null);
function $bcdf0525bf22703d$var$TextField(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $bcdf0525bf22703d$export$2129e27b3ef0d483);
  let inputRef = (0, import_react49.useRef)(null);
  let [labelRef, label] = (0, $64fa3d84918910a7$export$9d4c57ee4c6ffdd8)();
  let [inputElementType, setInputElementType] = (0, import_react49.useState)("input");
  let { labelProps, inputProps, descriptionProps, errorMessageProps } = (0, $2d73ec29415bd339$export$712718f7aec83d5)({
    ...props,
    inputElementType,
    label
  }, inputRef);
  let inputOrTextAreaRef = (0, import_react49.useCallback)((el) => {
    inputRef.current = el;
    if (el)
      setInputElementType(el instanceof HTMLTextAreaElement ? "textarea" : "input");
  }, []);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      isDisabled: props.isDisabled || false,
      validationState: props.validationState
    },
    defaultClassName: "react-aria-TextField"
  });
  return (0, import_react49.default).createElement("div", {
    ...(0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f)(props),
    ...renderProps,
    ref,
    slot: props.slot,
    "data-disabled": props.isDisabled || void 0,
    "data-validation-state": props.validationState || void 0
  }, (0, import_react49.default).createElement((0, $64fa3d84918910a7$export$2881499e37b75b9a), {
    values: [
      [
        (0, $01b77f81d0f07f68$export$75b6ee27786ba447),
        {
          ...labelProps,
          ref: labelRef
        }
      ],
      [
        (0, $3985021b0ad6602f$export$37fb8590cf2c088c),
        {
          ...inputProps,
          ref: inputOrTextAreaRef
        }
      ],
      [
        (0, $216918bed6669f72$export$2dc6166a7e65358c),
        {
          ...inputProps,
          ref: inputOrTextAreaRef
        }
      ],
      [
        (0, $514c0188e459b4c0$export$9afb8bc826b033ea),
        {
          slots: {
            description: descriptionProps,
            errorMessage: errorMessageProps
          }
        }
      ]
    ]
  }, renderProps.children));
}
var $bcdf0525bf22703d$export$2c73285ae9390cec = (0, import_react49.forwardRef)($bcdf0525bf22703d$var$TextField);
var $efde0372d7a700fe$export$43506d75ebd2e218 = (0, import_react49.createContext)({});
function $efde0372d7a700fe$var$ToggleButton(props, ref) {
  [props, ref] = (0, $64fa3d84918910a7$export$29f1550f4b0d4415)(props, ref, $efde0372d7a700fe$export$43506d75ebd2e218);
  let state = (0, $3017fa7ffdddec74$export$8042c6c013fd5226)(props);
  let { buttonProps, isPressed } = (0, $55f54f7887471b58$export$51e84d46ca0bc451)(props, state, ref);
  let { focusProps, isFocused, isFocusVisible } = (0, $f7dceffc5ad7768b$export$4e328f61c538687f)(props);
  let { hoverProps, isHovered } = (0, $6179b936705e76d3$export$ae780daf29e6d456)(props);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    values: {
      isHovered,
      isPressed,
      isFocused,
      isSelected: state.isSelected,
      isFocusVisible,
      isDisabled: props.isDisabled || false,
      state
    },
    defaultClassName: "react-aria-ToggleButton"
  });
  return (0, import_react49.default).createElement("button", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(buttonProps, focusProps, hoverProps),
    ...renderProps,
    ref,
    slot: props.slot,
    "data-pressed": isPressed || void 0,
    "data-hovered": isHovered || void 0,
    "data-focus-visible": isFocusVisible || void 0
  });
}
var $efde0372d7a700fe$export$d2b052e7b4be1756 = (0, import_react49.forwardRef)($efde0372d7a700fe$var$ToggleButton);
var $4e3b923658d69c60$var$InternalTooltipContext = (0, import_react49.createContext)(null);
function $4e3b923658d69c60$export$8c610744efcf8a1d(props) {
  let state = (0, $8796f90736e175cb$export$4d40659c25ecb50b)(props);
  let ref = (0, import_react49.useRef)(null);
  let { triggerProps, tooltipProps } = (0, $4e1b34546679e357$export$a6da6c504e4bba8b)(props, state, ref);
  return (0, import_react49.default).createElement($4e3b923658d69c60$var$InternalTooltipContext.Provider, {
    value: {
      state,
      triggerRef: ref,
      tooltipProps
    }
  }, (0, import_react49.default).createElement((0, $e6afbd83fe6ebbd2$export$13f3202a3e5ddd5), {
    ...triggerProps,
    ref
  }, props.children));
}
function $4e3b923658d69c60$var$Tooltip(props, ref) {
  let { state } = (0, import_react49.useContext)($4e3b923658d69c60$var$InternalTooltipContext);
  let objectRef = (0, $df56164dff5785e2$export$4338b53315abf666)(ref);
  let isExiting = (0, $64fa3d84918910a7$export$45fda7c47f93fd48)(objectRef, state.isOpen);
  if (!state.isOpen && !isExiting)
    return null;
  return (0, import_react49.default).createElement((0, $f57aed4a881a3485$export$b47c3594eab58386), null, (0, import_react49.default).createElement($4e3b923658d69c60$var$TooltipInner, {
    ...props,
    tooltipRef: objectRef,
    isExiting
  }));
}
var $4e3b923658d69c60$export$28c660c63b792dea = (0, import_react49.forwardRef)($4e3b923658d69c60$var$Tooltip);
function $4e3b923658d69c60$var$TooltipInner(props) {
  let { state, triggerRef, tooltipProps: triggerTooltipProps } = (0, import_react49.useContext)($4e3b923658d69c60$var$InternalTooltipContext);
  let overlayRef = (0, import_react49.useRef)(null);
  let { overlayProps, arrowProps, placement } = (0, $2a41e45df1593e64$export$d39e1813b3bdd0e1)({
    placement: props.placement || "top",
    targetRef: triggerRef,
    overlayRef,
    offset: props.offset,
    crossOffset: props.crossOffset,
    isOpen: state.isOpen
  });
  let isEntering = (0, $64fa3d84918910a7$export$6d3443f2c48bfc20)(overlayRef, !!placement);
  let renderProps = (0, $64fa3d84918910a7$export$4d86445c2cf5e3)({
    ...props,
    defaultClassName: "react-aria-Tooltip",
    values: {
      placement,
      isEntering,
      isExiting: props.isExiting,
      state
    }
  });
  props = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(props, overlayProps);
  let { tooltipProps } = (0, $326e436e94273fe1$export$1c4b08e0eca38426)(props, state);
  return (0, import_react49.default).createElement("div", {
    ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(triggerTooltipProps, tooltipProps),
    ref: (0, $5dc95899b306f630$export$c9058316764c140e)(overlayRef, props.tooltipRef),
    ...renderProps,
    style: {
      ...renderProps.style,
      ...overlayProps.style
    },
    "data-placement": placement,
    "data-entering": isEntering || void 0,
    "data-exiting": props.isExiting || void 0
  }, (0, import_react49.default).createElement((0, $44f671af83e7d9e0$export$2de4954e8ae13b9f).Provider, {
    value: {
      arrowProps,
      placement
    }
  }, renderProps.children));
}
export {
  $778035c5624f61e7$export$2dc68d50d56fbbd as Breadcrumbs,
  $778035c5624f61e7$export$65596d3621b0a4a0 as BreadcrumbsContext,
  $d2b4bc8c273e7be6$export$353f5b6fc5456de1 as Button,
  $d2b4bc8c273e7be6$export$24d547caef80ccd1 as ButtonContext,
  $dfd62f934fc76fed$export$e1aef45b828286de as Calendar,
  $dfd62f934fc76fed$export$5d847498420df57b as CalendarCell,
  $dfd62f934fc76fed$export$3b805cea1f178355 as CalendarContext,
  $dfd62f934fc76fed$export$5bd780d491cfc46c as CalendarGrid,
  $dfd62f934fc76fed$export$e11f8ba65d857bff as CalendarGridBody,
  $dfd62f934fc76fed$export$22e2d15eaa4d2377 as CalendarGridHeader,
  $dfd62f934fc76fed$export$ad2135cac3a11b3d as CalendarHeaderCell,
  $1910c06f0ca9905e$export$f6f0c3fe4ec306ea as Cell,
  $bc237834342dbd75$export$48513f6b9f8ce62d as Checkbox,
  $bc237834342dbd75$export$b085522c77523c51 as CheckboxContext,
  $bc237834342dbd75$export$4aa08d5625cb8ead as CheckboxGroup,
  $bc237834342dbd75$export$baf37c4be89255b8 as CheckboxGroupContext,
  $7135fc7d473fd974$export$fb8073518f34e6ec as Collection,
  $1910c06f0ca9905e$export$816b5d811295e6bc as Column,
  $1910c06f0ca9905e$export$ee689e97a7664bfd as ColumnResizer,
  $d01f2c01039c0eec$export$72b9695b8216309a as ComboBox,
  $d01f2c01039c0eec$export$d414ccceff7063c3 as ComboBoxContext,
  $7252cd45fc48c07c$export$990fced5dfac2637 as DIRECTORY_DRAG_TYPE,
  $40825cdb76e74f70$export$d9781c7894a82487 as DateField,
  $40825cdb76e74f70$export$7b3e670c86da5fe8 as DateFieldContext,
  $40825cdb76e74f70$export$7edc06cf1783b30f as DateInput,
  $06d5b8ec9ee5d538$export$5109c6dd95d8fb00 as DatePicker,
  $06d5b8ec9ee5d538$export$cf316c7f3b44c11e as DatePickerContext,
  $06d5b8ec9ee5d538$export$17334619f3ac2224 as DateRangePicker,
  $06d5b8ec9ee5d538$export$8282edba42ee28a as DateRangePickerContext,
  $40825cdb76e74f70$export$336ab7fa954c4b5f as DateSegment,
  $de32f1b87079253c$export$3ddf2d174ce01153 as Dialog,
  $de32f1b87079253c$export$8b93a07348a7730c as DialogContext,
  $de32f1b87079253c$export$2e1e1122cf0cba88 as DialogTrigger,
  $d8f176866e6dc039$export$62ed72bc21f6b8a6 as DropIndicator,
  $d8f176866e6dc039$export$f55761759794cf55 as DropIndicatorContext,
  $cb088e721efb9218$export$3c6489d84dc98b6 as DropZone,
  $cb088e721efb9218$export$14a72053295ff9a6 as DropZoneContext,
  $1e2864c73f66a4da$export$6fb4a10d2c950550 as FileTrigger,
  $72e60046c03fbe42$export$a7bfbda1311ca015 as GridList,
  $72e60046c03fbe42$export$54fe942636b6416d as GridListContext,
  $a049562f99e7db0e$export$eb2fcfdbd7ba97d4 as Group,
  $a049562f99e7db0e$export$f9c6924e160136d1 as GroupContext,
  $72a5793c14baf454$export$8b251419efc915eb as Header,
  $5cb03073d3f54797$export$a8a3e93435678ff9 as Heading,
  $5cb03073d3f54797$export$d688439359537581 as HeadingContext,
  $3985021b0ad6602f$export$f5b8910cec6cf069 as Input,
  $3985021b0ad6602f$export$37fb8590cf2c088c as InputContext,
  $7135fc7d473fd974$export$6d08773d2e66f8f2 as Item,
  $63df2425e2108aa8$export$16e4d70cc375e707 as Keyboard,
  $63df2425e2108aa8$export$744d98a3b8a94e1c as KeyboardContext,
  $01b77f81d0f07f68$export$b04be29aa201d4f5 as Label,
  $01b77f81d0f07f68$export$75b6ee27786ba447 as LabelContext,
  $4f118338184dc1d9$export$a6c7ac8248d6e38a as Link,
  $4f118338184dc1d9$export$e2509388b49734e7 as LinkContext,
  $eed445e0843c11d0$export$41f133550aa26f48 as ListBox,
  $eed445e0843c11d0$export$7ff8f37d2d81a48d as ListBoxContext,
  $3674c52c6b3c5bce$export$d9b273488cd8ce6f as Menu,
  $3674c52c6b3c5bce$export$c7e742effb1c51e2 as MenuContext,
  $3674c52c6b3c5bce$export$27d2ad3c5815583e as MenuTrigger,
  $c0c9ced265f3594c$export$62e3ae2a4090b879 as Meter,
  $c0c9ced265f3594c$export$8b645da15a96b44f as MeterContext,
  $f3f84453ead64de5$export$2b77a92f1a5ad772 as Modal,
  $f3f84453ead64de5$export$ab57792b9b6974a6 as ModalContext,
  $f3f84453ead64de5$export$8948f78d83984c69 as ModalOverlay,
  $b91743d66a0ed188$export$63c5fa0b2fdccd2e as NumberField,
  $b91743d66a0ed188$export$b414a48cf5dcbc11 as NumberFieldContext,
  $44f671af83e7d9e0$export$746d02f47f4d381 as OverlayArrow,
  $07b14b47974efb58$export$5b6b19405a83ff9d as Popover,
  $07b14b47974efb58$export$9b9a0cd73afb7ca4 as PopoverContext,
  $0393f8ab869a0f1a$export$c17561cb55d4db30 as ProgressBar,
  $0393f8ab869a0f1a$export$e9f3bf65a26ce129 as ProgressBarContext,
  $64fa3d84918910a7$export$2881499e37b75b9a as Provider,
  $b6c3ddc6086f204d$export$d7b12c4107be0d61 as Radio,
  $b6c3ddc6086f204d$export$b118023277d4a5c3 as RadioContext,
  $b6c3ddc6086f204d$export$a98f0dcb43a68a25 as RadioGroup,
  $b6c3ddc6086f204d$export$a79eda4ff50e30b6 as RadioGroupContext,
  $dfd62f934fc76fed$export$a4f5c8b89d277a8d as RangeCalendar,
  $dfd62f934fc76fed$export$233dd9682e1ad64b as RangeCalendarContext,
  $1910c06f0ca9905e$export$7063e69b8a954175 as ResizableTableContainer,
  $1910c06f0ca9905e$export$b59bdbef9ce70de2 as Row,
  $b5e257d569688ac6$export$9f8ac96af4b1b2ae as SSRProvider,
  $440f4836bcb56932$export$b94867ecbd698f21 as SearchField,
  $440f4836bcb56932$export$d1c4e4c63cb03a11 as SearchFieldContext,
  $7135fc7d473fd974$export$6e2c8f0811a474ce as Section,
  $82d7e5349645de74$export$ef9b1a59e592288f as Select,
  $82d7e5349645de74$export$7540cee5be7dc19b as SelectContext,
  $82d7e5349645de74$export$e288731fd71264f0 as SelectValue,
  $431f98aba6844401$export$1ff3c3f08ae963c0 as Separator,
  $431f98aba6844401$export$6615d83f6de245ce as SeparatorContext,
  $6f909507e6374d18$export$472062a354075cee as Slider,
  $6f909507e6374d18$export$e99164f0030f3bff as SliderContext,
  $6f909507e6374d18$export$a590f758a961cb5b as SliderOutput,
  $6f909507e6374d18$export$2c1b491743890dec as SliderThumb,
  $6f909507e6374d18$export$105594979f116971 as SliderTrack,
  $8e59e948500a8fe1$export$b5d5cf8927ab7262 as Switch,
  $8e59e948500a8fe1$export$8699e3b644d5a28a as SwitchContext,
  $5e8ad37a45e1c704$export$3e41faf802a29e71 as Tab,
  $5e8ad37a45e1c704$export$e51a686c67fdaa2d as TabList,
  $5e8ad37a45e1c704$export$3d96ec278d3efce4 as TabPanel,
  $1910c06f0ca9905e$export$54ec01a60f47d33d as Table,
  $1910c06f0ca9905e$export$76ccd210b9029917 as TableBody,
  $1910c06f0ca9905e$export$93e4b0b2cc49b648 as TableContext,
  $1910c06f0ca9905e$export$f850895b287ef28e as TableHeader,
  $5e8ad37a45e1c704$export$b2539bed5023c21c as Tabs,
  $5e8ad37a45e1c704$export$cfa7aa87c26e7d1f as TabsContext,
  $eaf9e70818b436db$export$3288d34c523a1192 as Tag,
  $eaf9e70818b436db$export$67ea30858aaf75e3 as TagGroup,
  $eaf9e70818b436db$export$5b07b5dd2cbd96e3 as TagGroupContext,
  $eaf9e70818b436db$export$f9fef0f55402315b as TagList,
  $514c0188e459b4c0$export$5f1af8db9871e1d6 as Text,
  $216918bed6669f72$export$f5c9f3c2c4054eec as TextArea,
  $216918bed6669f72$export$2dc6166a7e65358c as TextAreaContext,
  $514c0188e459b4c0$export$9afb8bc826b033ea as TextContext,
  $bcdf0525bf22703d$export$2c73285ae9390cec as TextField,
  $bcdf0525bf22703d$export$2129e27b3ef0d483 as TextFieldContext,
  $40825cdb76e74f70$export$5eaee2322dd727eb as TimeField,
  $40825cdb76e74f70$export$8e17ddc448e87c1e as TimeFieldContext,
  $efde0372d7a700fe$export$d2b052e7b4be1756 as ToggleButton,
  $efde0372d7a700fe$export$43506d75ebd2e218 as ToggleButtonContext,
  $4e3b923658d69c60$export$28c660c63b792dea as Tooltip,
  $4e3b923658d69c60$export$8c610744efcf8a1d as TooltipTrigger,
  $7252cd45fc48c07c$export$2b40a62bdbe6b2b0 as isDirectoryDropItem,
  $7252cd45fc48c07c$export$a144e1752ebe0aa as isFileDropItem,
  $7252cd45fc48c07c$export$97fd558bdc44bea1 as isTextDropItem,
  $64fa3d84918910a7$export$29f1550f4b0d4415 as useContextProps,
  $d8f176866e6dc039$export$2cfc5be7a55829f6 as useDragAndDrop,
  $1910c06f0ca9905e$export$fddc468cd8cb4db9 as useTableOptions
};
/*! Bundled license information:

use-sync-external-store/cjs/use-sync-external-store-shim.development.js:
  (**
   * @license React
   * use-sync-external-store-shim.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=react-aria-components.js.map
